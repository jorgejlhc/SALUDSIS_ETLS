// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package rep_diario_recaudo.recaportes_4_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: RecAportes Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status DEV
 */
public class RecAportes implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(PERIODO != null){
				
					this.setProperty("PERIODO", PERIODO.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(db_origen_Sid != null){
				
					this.setProperty("db_origen_Sid", db_origen_Sid.toString());
				
			}
			
			if(db_destino_AdditionalParams != null){
				
					this.setProperty("db_destino_AdditionalParams", db_destino_AdditionalParams.toString());
				
			}
			
			if(db_destino_Login != null){
				
					this.setProperty("db_destino_Login", db_destino_Login.toString());
				
			}
			
			if(db_destino_Password != null){
				
					this.setProperty("db_destino_Password", db_destino_Password.toString());
				
			}
			
			if(db_destino_Port != null){
				
					this.setProperty("db_destino_Port", db_destino_Port.toString());
				
			}
			
			if(db_destino_Schema != null){
				
					this.setProperty("db_destino_Schema", db_destino_Schema.toString());
				
			}
			
			if(db_destino_Server != null){
				
					this.setProperty("db_destino_Server", db_destino_Server.toString());
				
			}
			
			if(db_destino_ServiceName != null){
				
					this.setProperty("db_destino_ServiceName", db_destino_ServiceName.toString());
				
			}
			
			if(db_destino_Sid != null){
				
					this.setProperty("db_destino_Sid", db_destino_Sid.toString());
				
			}
			
			if(ACTUALIZACION_TOTAL != null){
				
					this.setProperty("ACTUALIZACION_TOTAL", ACTUALIZACION_TOTAL.toString());
				
			}
			
			if(BODEGA != null){
				
					this.setProperty("BODEGA", BODEGA.toString());
				
			}
			
			if(CCARGUE_ID != null){
				
					this.setProperty("CCARGUE_ID", CCARGUE_ID.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FANTERIOR != null){
				
					this.setProperty("FANTERIOR", FANTERIOR.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(ID_SOLICITUD != null){
				
					this.setProperty("ID_SOLICITUD", ID_SOLICITUD.toString());
				
			}
			
			if(LAST_DAYS != null){
				
					this.setProperty("LAST_DAYS", LAST_DAYS.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(LOGS_STAT != null){
				
					this.setProperty("LOGS_STAT", LOGS_STAT.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(ULTIMO_PERIODO != null){
				
					this.setProperty("ULTIMO_PERIODO", ULTIMO_PERIODO.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String PERIODO;
public String getPERIODO(){
	return this.PERIODO;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public java.lang.String db_origen_Password;
public java.lang.String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String db_origen_Sid;
public String getDb_origen_Sid(){
	return this.db_origen_Sid;
}
public String db_destino_AdditionalParams;
public String getDb_destino_AdditionalParams(){
	return this.db_destino_AdditionalParams;
}
public String db_destino_Login;
public String getDb_destino_Login(){
	return this.db_destino_Login;
}
public java.lang.String db_destino_Password;
public java.lang.String getDb_destino_Password(){
	return this.db_destino_Password;
}
public String db_destino_Port;
public String getDb_destino_Port(){
	return this.db_destino_Port;
}
public String db_destino_Schema;
public String getDb_destino_Schema(){
	return this.db_destino_Schema;
}
public String db_destino_Server;
public String getDb_destino_Server(){
	return this.db_destino_Server;
}
public String db_destino_ServiceName;
public String getDb_destino_ServiceName(){
	return this.db_destino_ServiceName;
}
public String db_destino_Sid;
public String getDb_destino_Sid(){
	return this.db_destino_Sid;
}
public Boolean ACTUALIZACION_TOTAL;
public Boolean getACTUALIZACION_TOTAL(){
	return this.ACTUALIZACION_TOTAL;
}
public String BODEGA;
public String getBODEGA(){
	return this.BODEGA;
}
public Integer CCARGUE_ID;
public Integer getCCARGUE_ID(){
	return this.CCARGUE_ID;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FANTERIOR;
public String getFANTERIOR(){
	return this.FANTERIOR;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public Integer ID_SOLICITUD;
public Integer getID_SOLICITUD(){
	return this.ID_SOLICITUD;
}
public Integer LAST_DAYS;
public Integer getLAST_DAYS(){
	return this.LAST_DAYS;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String LOGS_STAT;
public String getLOGS_STAT(){
	return this.LOGS_STAT;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public String ULTIMO_PERIODO;
public String getULTIMO_PERIODO(){
	return this.ULTIMO_PERIODO;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "4.1";
	private final String jobName = "RecAportes";
	private final String projectName = "REP_DIARIO_RECAUDO";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();
	StatCatcherUtils tStatCatcher_1 = new StatCatcherUtils("_EX-WgHkjEee1equY2UByPw", "4.1");

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				RecAportes.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(RecAportes.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tOracleInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSplitRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_37_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_37_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_43_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_43_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRunJob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_45_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_42_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_42_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tStatCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tStatCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tStatCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row64_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row65_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row66_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row71_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row72_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_ALL_BENEFICIARIOS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row68_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row84_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row85_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row70_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_6_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_6_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_6_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_4_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_4_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_4_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_5_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_5_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_5_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_5_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_5_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_5_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_11_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_11_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_11_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_6_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_6_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_6_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_10_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_10_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_10_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_2_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_2_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_2_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_8_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_8_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_8_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_2_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_2_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_2_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_3_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_3_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_3_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_4_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_4_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_4_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
							tStatCatcher_1.addMessage("failure",errorComponent, end_Hash.get(errorComponent)-start_Hash.get(errorComponent));
							tStatCatcher_1Process(globalMap);
							
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_28_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_37_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_43_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_38_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_40_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRunJob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_45_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_27_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_42_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tStatCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public static class UpdStruct implements routines.system.IPersistableRow<UpdStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return true;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return null;
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return null;
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "Valor subsidio familiar";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal SALARIO_BASE;

				public BigDecimal getSALARIO_BASE () {
					return this.SALARIO_BASE;
				}

				public Boolean SALARIO_BASEIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASEIsKey(){
				    return false;
				}
				public Integer SALARIO_BASELength(){
				    return 0;
				}
				public Integer SALARIO_BASEPrecision(){
				    return null;
				}
				public String SALARIO_BASEDefault(){
				
					return "";
				
				}
				public String SALARIO_BASEComment(){
				
				    return "";
				
				}
				public String SALARIO_BASEPattern(){
				
					return "";
				
				}
				public String SALARIO_BASEOriginalDbColumnName(){
				
					return "SALARIO_BASE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.AFILIADOS_ID == null) ? 0 : this.AFILIADOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final UpdStruct other = (UpdStruct) obj;
		
						if (this.AFILIADOS_ID == null) {
							if (other.AFILIADOS_ID != null)
								return false;
						
						} else if (!this.AFILIADOS_ID.equals(other.AFILIADOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(UpdStruct other) {

		other.AFILIADOS_ID = this.AFILIADOS_ID;
	            other.SUBSIDIO_FAMILIAR = this.SUBSIDIO_FAMILIAR;
	            other.SALARIO_BASE = this.SALARIO_BASE;
	            
	}

	public void copyKeysDataTo(UpdStruct other) {

		other.AFILIADOS_ID = this.AFILIADOS_ID;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",SALARIO_BASE="+String.valueOf(SALARIO_BASE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(UpdStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.AFILIADOS_ID, other.AFILIADOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row88Struct implements routines.system.IPersistableRow<row88Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal SALARIO_BASE;

				public BigDecimal getSALARIO_BASE () {
					return this.SALARIO_BASE;
				}

				public Boolean SALARIO_BASEIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASEIsKey(){
				    return false;
				}
				public Integer SALARIO_BASELength(){
				    return 0;
				}
				public Integer SALARIO_BASEPrecision(){
				    return null;
				}
				public String SALARIO_BASEDefault(){
				
					return "";
				
				}
				public String SALARIO_BASEComment(){
				
				    return "";
				
				}
				public String SALARIO_BASEPattern(){
				
					return "";
				
				}
				public String SALARIO_BASEOriginalDbColumnName(){
				
					return "SALARIO_BASE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",SALARIO_BASE="+String.valueOf(SALARIO_BASE));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row88Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row87Struct implements routines.system.IPersistableRow<row87Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal SALARIO_BASE;

				public BigDecimal getSALARIO_BASE () {
					return this.SALARIO_BASE;
				}

				public Boolean SALARIO_BASEIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASEIsKey(){
				    return false;
				}
				public Integer SALARIO_BASELength(){
				    return 0;
				}
				public Integer SALARIO_BASEPrecision(){
				    return null;
				}
				public String SALARIO_BASEDefault(){
				
					return "";
				
				}
				public String SALARIO_BASEComment(){
				
				    return "";
				
				}
				public String SALARIO_BASEPattern(){
				
					return "";
				
				}
				public String SALARIO_BASEOriginalDbColumnName(){
				
					return "SALARIO_BASE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",SALARIO_BASE="+String.valueOf(SALARIO_BASE));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row87Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal SALARIO_BASE;

				public BigDecimal getSALARIO_BASE () {
					return this.SALARIO_BASE;
				}

				public Boolean SALARIO_BASEIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASEIsKey(){
				    return false;
				}
				public Integer SALARIO_BASELength(){
				    return 0;
				}
				public Integer SALARIO_BASEPrecision(){
				    return null;
				}
				public String SALARIO_BASEDefault(){
				
					return "";
				
				}
				public String SALARIO_BASEComment(){
				
				    return "";
				
				}
				public String SALARIO_BASEPattern(){
				
					return "";
				
				}
				public String SALARIO_BASEOriginalDbColumnName(){
				
					return "SALARIO_BASE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",SALARIO_BASE="+String.valueOf(SALARIO_BASE));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class XXXStruct implements routines.system.IPersistableRow<XXXStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ENTIDAD_APORTANTE_ID;

				public BigDecimal getENTIDAD_APORTANTE_ID () {
					return this.ENTIDAD_APORTANTE_ID;
				}

				public Boolean ENTIDAD_APORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTIDAD_APORTANTE_IDIsKey(){
				    return false;
				}
				public Integer ENTIDAD_APORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTIDAD_APORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTIDAD_APORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTIDAD_APORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDOriginalDbColumnName(){
				
					return "ENTIDAD_APORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return false;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public BigDecimal AFILIADO_ID;

				public BigDecimal getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return 0;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return "";
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_DOCUENTO;

				public String getNOMBRE_TIPO_DOCUENTO () {
					return this.NOMBRE_TIPO_DOCUENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUENTOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_TIPO_DOCUENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUENTOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_DOCUENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDAD_MILITAR;

				public String getNOMBRE_UNIDAD_MILITAR () {
					return this.NOMBRE_UNIDAD_MILITAR;
				}

				public Boolean NOMBRE_UNIDAD_MILITARIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDAD_MILITARIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDAD_MILITARLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDAD_MILITARPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDAD_MILITARDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDAD_MILITARComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDAD_MILITARPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDAD_MILITAROriginalDbColumnName(){
				
					return "NOMBRE_UNIDAD_MILITAR";
				
				}

				
			    public String NOMBRE_GRADO_MILITAR;

				public String getNOMBRE_GRADO_MILITAR () {
					return this.NOMBRE_GRADO_MILITAR;
				}

				public Boolean NOMBRE_GRADO_MILITARIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADO_MILITARIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADO_MILITARLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADO_MILITARPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADO_MILITARDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADO_MILITARComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADO_MILITARPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADO_MILITAROriginalDbColumnName(){
				
					return "NOMBRE_GRADO_MILITAR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal NUMERO_DIAS;

				public BigDecimal getNUMERO_DIAS () {
					return this.NUMERO_DIAS;
				}

				public Boolean NUMERO_DIASIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DIASIsKey(){
				    return false;
				}
				public Integer NUMERO_DIASLength(){
				    return 0;
				}
				public Integer NUMERO_DIASPrecision(){
				    return null;
				}
				public String NUMERO_DIASDefault(){
				
					return "";
				
				}
				public String NUMERO_DIASComment(){
				
				    return "";
				
				}
				public String NUMERO_DIASPattern(){
				
					return "";
				
				}
				public String NUMERO_DIASOriginalDbColumnName(){
				
					return "NUMERO_DIAS";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDAD_MILITAR = readString(dis);
					
					this.NOMBRE_GRADO_MILITAR = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.NUMERO_DIAS = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDAD_MILITAR = readString(dis);
					
					this.NOMBRE_GRADO_MILITAR = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.NUMERO_DIAS = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADO_MILITAR,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.NUMERO_DIAS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADO_MILITAR,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.NUMERO_DIAS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTIDAD_APORTANTE_ID="+String.valueOf(ENTIDAD_APORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",AFILIADO_ID="+String.valueOf(AFILIADO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_DOCUENTO="+NOMBRE_TIPO_DOCUENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDAD_MILITAR="+NOMBRE_UNIDAD_MILITAR);
		sb.append(",NOMBRE_GRADO_MILITAR="+NOMBRE_GRADO_MILITAR);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",NUMERO_DIAS="+String.valueOf(NUMERO_DIAS));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(XXXStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TOTALES_APORTESStruct implements routines.system.IPersistableRow<TOTALES_APORTESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return null;
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTE;

				public BigDecimal getCANTIDAD_COTIZANTE () {
					return this.CANTIDAD_COTIZANTE;
				}

				public Boolean CANTIDAD_COTIZANTEIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_COTIZANTEIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTELength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTEPrecision(){
				    return null;
				}
				public String CANTIDAD_COTIZANTEDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTEPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TOTALES_APORTESStruct other = (TOTALES_APORTESStruct) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TOTALES_APORTESStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_VINCULACION = this.NOMBRE_VINCULACION;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.CANTIDAD_COTIZANTE = this.CANTIDAD_COTIZANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            
	}

	public void copyKeysDataTo(TOTALES_APORTESStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",CANTIDAD_COTIZANTE="+String.valueOf(CANTIDAD_COTIZANTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TOTALES_APORTESStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return null;
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTE;

				public BigDecimal getCANTIDAD_COTIZANTE () {
					return this.CANTIDAD_COTIZANTE;
				}

				public Boolean CANTIDAD_COTIZANTEIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_COTIZANTEIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTELength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTEPrecision(){
				    return null;
				}
				public String CANTIDAD_COTIZANTEDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTEPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",CANTIDAD_COTIZANTE="+String.valueOf(CANTIDAD_COTIZANTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_5 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_5> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return null;
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTE;

				public BigDecimal getCANTIDAD_COTIZANTE () {
					return this.CANTIDAD_COTIZANTE;
				}

				public Boolean CANTIDAD_COTIZANTEIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_COTIZANTEIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTELength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTEPrecision(){
				    return null;
				}
				public String CANTIDAD_COTIZANTEDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTEPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtAggregateRow_5 other = (OnRowsEndStructtAggregateRow_5) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtAggregateRow_5 other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_VINCULACION = this.NOMBRE_VINCULACION;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.CANTIDAD_COTIZANTE = this.CANTIDAD_COTIZANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtAggregateRow_5 other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",CANTIDAD_COTIZANTE="+String.valueOf(CANTIDAD_COTIZANTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_5 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TOTALES_APORTES_TIPO_RECAUDOStruct implements routines.system.IPersistableRow<TOTALES_APORTES_TIPO_RECAUDOStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return null;
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTE;

				public BigDecimal getCANTIDAD_COTIZANTE () {
					return this.CANTIDAD_COTIZANTE;
				}

				public Boolean CANTIDAD_COTIZANTEIsNullable(){
				    return false;
				}
				public Boolean CANTIDAD_COTIZANTEIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTELength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTEPrecision(){
				    return null;
				}
				public String CANTIDAD_COTIZANTEDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTEPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTEOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TOTALES_APORTES_TIPO_RECAUDOStruct other = (TOTALES_APORTES_TIPO_RECAUDOStruct) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TOTALES_APORTES_TIPO_RECAUDOStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_VINCULACION = this.NOMBRE_VINCULACION;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.CANTIDAD_COTIZANTE = this.CANTIDAD_COTIZANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            
	}

	public void copyKeysDataTo(TOTALES_APORTES_TIPO_RECAUDOStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTE = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",CANTIDAD_COTIZANTE="+String.valueOf(CANTIDAD_COTIZANTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TOTALES_APORTES_TIPO_RECAUDOStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public Integer TIPO_APORTANTE;

				public Integer getTIPO_APORTANTE () {
					return this.TIPO_APORTANTE;
				}

				public Boolean TIPO_APORTANTEIsNullable(){
				    return true;
				}
				public Boolean TIPO_APORTANTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTANTELength(){
				    return null;
				}
				public Integer TIPO_APORTANTEPrecision(){
				    return null;
				}
				public String TIPO_APORTANTEDefault(){
				
					return null;
				
				}
				public String TIPO_APORTANTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTANTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTANTEOriginalDbColumnName(){
				
					return "TIPO_APORTANTE";
				
				}

				
			    public BigDecimal APORTE;

				public BigDecimal getAPORTE () {
					return this.APORTE;
				}

				public Boolean APORTEIsNullable(){
				    return true;
				}
				public Boolean APORTEIsKey(){
				    return false;
				}
				public Integer APORTELength(){
				    return null;
				}
				public Integer APORTEPrecision(){
				    return null;
				}
				public String APORTEDefault(){
				
					return null;
				
				}
				public String APORTEComment(){
				
				    return "";
				
				}
				public String APORTEPattern(){
				
					return "";
				
				}
				public String APORTEOriginalDbColumnName(){
				
					return "APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TIPO_APORTANTE = readInteger(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TIPO_APORTANTE = readInteger(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TIPO_APORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TIPO_APORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TIPO_APORTANTE="+String.valueOf(TIPO_APORTANTE));
		sb.append(",APORTE="+String.valueOf(APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_5 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_5> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_5 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_4> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUENTO;

				public String getNOMBRE_TIPO_DOCUENTO () {
					return this.NOMBRE_TIPO_DOCUENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUENTOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_TIPO_DOCUENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUENTOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_DOCUENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUENTO="+NOMBRE_TIPO_DOCUENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row51Struct implements routines.system.IPersistableRow<row51Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUENTO;

				public String getNOMBRE_TIPO_DOCUENTO () {
					return this.NOMBRE_TIPO_DOCUENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUENTOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_TIPO_DOCUENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUENTOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_DOCUENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUENTO="+NOMBRE_TIPO_DOCUENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row90Struct implements routines.system.IPersistableRow<row90Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row90Struct other = (row90Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row90Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row90Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row90Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row91Struct implements routines.system.IPersistableRow<row91Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row91Struct other = (row91Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row91Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row91Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row91Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row58Struct implements routines.system.IPersistableRow<row58Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row58Struct other = (row58Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row58Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row58Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row62Struct implements routines.system.IPersistableRow<row62Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public Integer TIPO_RECAUDO_ID;

				public Integer getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return true;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return 0;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public BigDecimal TNOVEDAD_ID;

				public BigDecimal getTNOVEDAD_ID () {
					return this.TNOVEDAD_ID;
				}

				public Boolean TNOVEDAD_IDIsNullable(){
				    return true;
				}
				public Boolean TNOVEDAD_IDIsKey(){
				    return true;
				}
				public Integer TNOVEDAD_IDLength(){
				    return 0;
				}
				public Integer TNOVEDAD_IDPrecision(){
				    return null;
				}
				public String TNOVEDAD_IDDefault(){
				
					return "";
				
				}
				public String TNOVEDAD_IDComment(){
				
				    return "";
				
				}
				public String TNOVEDAD_IDPattern(){
				
					return "";
				
				}
				public String TNOVEDAD_IDOriginalDbColumnName(){
				
					return "TNOVEDAD_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_NOVEDAD;

				public String getNOMBRE_NOVEDAD () {
					return this.NOMBRE_NOVEDAD;
				}

				public Boolean NOMBRE_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_NOVEDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_NOVEDADLength(){
				    return 100;
				}
				public Integer NOMBRE_NOVEDADPrecision(){
				    return 0;
				}
				public String NOMBRE_NOVEDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_NOVEDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_NOVEDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_NOVEDADOriginalDbColumnName(){
				
					return "NOMBRE_NOVEDAD";
				
				}

				
			    public BigDecimal CANTIDAD_NOVEDAD;

				public BigDecimal getCANTIDAD_NOVEDAD () {
					return this.CANTIDAD_NOVEDAD;
				}

				public Boolean CANTIDAD_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_NOVEDADIsKey(){
				    return false;
				}
				public Integer CANTIDAD_NOVEDADLength(){
				    return 0;
				}
				public Integer CANTIDAD_NOVEDADPrecision(){
				    return 0;
				}
				public String CANTIDAD_NOVEDADDefault(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADComment(){
				
				    return "";
				
				}
				public String CANTIDAD_NOVEDADPattern(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADOriginalDbColumnName(){
				
					return "CANTIDAD_NOVEDAD";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.TIPO_RECAUDO_ID == null) ? 0 : this.TIPO_RECAUDO_ID.hashCode());
					
						result = prime * result + ((this.TNOVEDAD_ID == null) ? 0 : this.TNOVEDAD_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row62Struct other = (row62Struct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID == null) {
							if (other.TIPO_RECAUDO_ID != null)
								return false;
						
						} else if (!this.TIPO_RECAUDO_ID.equals(other.TIPO_RECAUDO_ID))
						
							return false;
					
						if (this.TNOVEDAD_ID == null) {
							if (other.TNOVEDAD_ID != null)
								return false;
						
						} else if (!this.TNOVEDAD_ID.equals(other.TNOVEDAD_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row62Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.TNOVEDAD_ID = this.TNOVEDAD_ID;
	            other.PERIODO = this.PERIODO;
	            other.NOMBRE_NOVEDAD = this.NOMBRE_NOVEDAD;
	            other.CANTIDAD_NOVEDAD = this.CANTIDAD_NOVEDAD;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            
	}

	public void copyKeysDataTo(row62Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.TNOVEDAD_ID = this.TNOVEDAD_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
						this.TNOVEDAD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_NOVEDAD = readString(dis);
					
						this.CANTIDAD_NOVEDAD = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
						this.TNOVEDAD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_NOVEDAD = readString(dis);
					
						this.CANTIDAD_NOVEDAD = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TNOVEDAD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_NOVEDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_NOVEDAD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TNOVEDAD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_NOVEDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_NOVEDAD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",TNOVEDAD_ID="+String.valueOf(TNOVEDAD_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_NOVEDAD="+NOMBRE_NOVEDAD);
		sb.append(",CANTIDAD_NOVEDAD="+String.valueOf(CANTIDAD_NOVEDAD));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row62Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TNOVEDAD_ID, other.TNOVEDAD_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class CANT_NOVEDADESStruct implements routines.system.IPersistableRow<CANT_NOVEDADESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public Integer TIPO_RECAUDO_ID;

				public Integer getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return true;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return 0;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public BigDecimal TNOVEDAD_ID;

				public BigDecimal getTNOVEDAD_ID () {
					return this.TNOVEDAD_ID;
				}

				public Boolean TNOVEDAD_IDIsNullable(){
				    return true;
				}
				public Boolean TNOVEDAD_IDIsKey(){
				    return true;
				}
				public Integer TNOVEDAD_IDLength(){
				    return 0;
				}
				public Integer TNOVEDAD_IDPrecision(){
				    return null;
				}
				public String TNOVEDAD_IDDefault(){
				
					return "";
				
				}
				public String TNOVEDAD_IDComment(){
				
				    return "";
				
				}
				public String TNOVEDAD_IDPattern(){
				
					return "";
				
				}
				public String TNOVEDAD_IDOriginalDbColumnName(){
				
					return "TNOVEDAD_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_NOVEDAD;

				public String getNOMBRE_NOVEDAD () {
					return this.NOMBRE_NOVEDAD;
				}

				public Boolean NOMBRE_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_NOVEDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_NOVEDADLength(){
				    return 100;
				}
				public Integer NOMBRE_NOVEDADPrecision(){
				    return 0;
				}
				public String NOMBRE_NOVEDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_NOVEDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_NOVEDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_NOVEDADOriginalDbColumnName(){
				
					return "NOMBRE_NOVEDAD";
				
				}

				
			    public BigDecimal CANTIDAD_NOVEDAD;

				public BigDecimal getCANTIDAD_NOVEDAD () {
					return this.CANTIDAD_NOVEDAD;
				}

				public Boolean CANTIDAD_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_NOVEDADIsKey(){
				    return false;
				}
				public Integer CANTIDAD_NOVEDADLength(){
				    return 0;
				}
				public Integer CANTIDAD_NOVEDADPrecision(){
				    return 0;
				}
				public String CANTIDAD_NOVEDADDefault(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADComment(){
				
				    return "";
				
				}
				public String CANTIDAD_NOVEDADPattern(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADOriginalDbColumnName(){
				
					return "CANTIDAD_NOVEDAD";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.TIPO_RECAUDO_ID == null) ? 0 : this.TIPO_RECAUDO_ID.hashCode());
					
						result = prime * result + ((this.TNOVEDAD_ID == null) ? 0 : this.TNOVEDAD_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final CANT_NOVEDADESStruct other = (CANT_NOVEDADESStruct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID == null) {
							if (other.TIPO_RECAUDO_ID != null)
								return false;
						
						} else if (!this.TIPO_RECAUDO_ID.equals(other.TIPO_RECAUDO_ID))
						
							return false;
					
						if (this.TNOVEDAD_ID == null) {
							if (other.TNOVEDAD_ID != null)
								return false;
						
						} else if (!this.TNOVEDAD_ID.equals(other.TNOVEDAD_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(CANT_NOVEDADESStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.TNOVEDAD_ID = this.TNOVEDAD_ID;
	            other.PERIODO = this.PERIODO;
	            other.NOMBRE_NOVEDAD = this.NOMBRE_NOVEDAD;
	            other.CANTIDAD_NOVEDAD = this.CANTIDAD_NOVEDAD;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            
	}

	public void copyKeysDataTo(CANT_NOVEDADESStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.TNOVEDAD_ID = this.TNOVEDAD_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
						this.TNOVEDAD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_NOVEDAD = readString(dis);
					
						this.CANTIDAD_NOVEDAD = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
						this.TNOVEDAD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_NOVEDAD = readString(dis);
					
						this.CANTIDAD_NOVEDAD = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TNOVEDAD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_NOVEDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_NOVEDAD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TNOVEDAD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_NOVEDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_NOVEDAD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",TNOVEDAD_ID="+String.valueOf(TNOVEDAD_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_NOVEDAD="+NOMBRE_NOVEDAD);
		sb.append(",CANTIDAD_NOVEDAD="+String.valueOf(CANTIDAD_NOVEDAD));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(CANT_NOVEDADESStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TNOVEDAD_ID, other.TNOVEDAD_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row60Struct implements routines.system.IPersistableRow<row60Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row60Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row59Struct implements routines.system.IPersistableRow<row59Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row59Struct other = (row59Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row59Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row59Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row59Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row41Struct other = (row41Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row41Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row41Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_6 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_6> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_6 other = (OnRowsEndStructtSortRow_6) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_6 other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_6 other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_6 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIEMPO_PART_APORTEStruct implements routines.system.IPersistableRow<TIEMPO_PART_APORTEStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TIEMPO_PART_APORTEStruct other = (TIEMPO_PART_APORTEStruct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TIEMPO_PART_APORTEStruct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(TIEMPO_PART_APORTEStruct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIEMPO_PART_APORTEStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIEMPO_APORTEStruct implements routines.system.IPersistableRow<TIEMPO_APORTEStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.FECHA = readString(dis);
					
			        this.TIPO_RECAUDO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.FECHA = readString(dis);
					
			        this.TIPO_RECAUDO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",FECHA="+FECHA);
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIEMPO_APORTEStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIPODOC_APORTESStruct implements routines.system.IPersistableRow<TIPODOC_APORTESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUENTO;

				public String getNOMBRE_TIPO_DOCUENTO () {
					return this.NOMBRE_TIPO_DOCUENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUENTOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_TIPO_DOCUENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUENTOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_DOCUENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUENTO="+NOMBRE_TIPO_DOCUENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIPODOC_APORTESStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RECAUDO_APORTE_SALUDStruct implements routines.system.IPersistableRow<RECAUDO_APORTE_SALUDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TCOTIZACION;

				public BigDecimal getTCOTIZACION () {
					return this.TCOTIZACION;
				}

				public Boolean TCOTIZACIONIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACIONIsKey(){
				    return false;
				}
				public Integer TCOTIZACIONLength(){
				    return 50;
				}
				public Integer TCOTIZACIONPrecision(){
				    return 0;
				}
				public String TCOTIZACIONDefault(){
				
					return null;
				
				}
				public String TCOTIZACIONComment(){
				
				    return "";
				
				}
				public String TCOTIZACIONPattern(){
				
					return "";
				
				}
				public String TCOTIZACIONOriginalDbColumnName(){
				
					return "TCOTIZACION";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TCOTIZACION = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TCOTIZACION = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TCOTIZACION="+String.valueOf(TCOTIZACION));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RECAUDO_APORTE_SALUDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class UpdGEN_PERSONASStruct implements routines.system.IPersistableRow<UpdGEN_PERSONASStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal SALARIO_BASE;

				public BigDecimal getSALARIO_BASE () {
					return this.SALARIO_BASE;
				}

				public Boolean SALARIO_BASEIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASEIsKey(){
				    return false;
				}
				public Integer SALARIO_BASELength(){
				    return 0;
				}
				public Integer SALARIO_BASEPrecision(){
				    return null;
				}
				public String SALARIO_BASEDefault(){
				
					return "";
				
				}
				public String SALARIO_BASEComment(){
				
				    return "";
				
				}
				public String SALARIO_BASEPattern(){
				
					return "";
				
				}
				public String SALARIO_BASEOriginalDbColumnName(){
				
					return "SALARIO_BASE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASE = (BigDecimal) dis.readObject();
					
					this.FECHA_INGRESO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASE);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",SALARIO_BASE="+String.valueOf(SALARIO_BASE));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(UpdGEN_PERSONASStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 500;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 4000;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 0;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 0;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 0;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_28Struct implements routines.system.IPersistableRow<after_tOracleInput_28Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 500;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 4000;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 0;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 0;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 0;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 0;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RECAUDO_NOVESPStruct implements routines.system.IPersistableRow<RECAUDO_NOVESPStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return null;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return 0;
				}
				public String AFILIADOS_IDDefault(){
				
					return null;
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return null;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RECAUDO_NOVESPStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return null;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return null;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return null;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return null;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return null;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return null;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return null;
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return null;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return null;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return null;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return null;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return null;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return null;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return null;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return null;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return null;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return null;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return null;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return null;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return null;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return null;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return null;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return null;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RECAUDO_APORTE_ATEPStruct implements routines.system.IPersistableRow<RECAUDO_APORTE_ATEPStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RECAUDO_APORTE_ATEPStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 500;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 4000;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 50;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return 0;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RECAUDO_RETRO_SALUDStruct implements routines.system.IPersistableRow<RECAUDO_RETRO_SALUDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return 0;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return null;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RECAUDO_RETRO_SALUDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return null;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return null;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return null;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return null;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return null;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return null;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return null;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return null;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return null;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return null;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return null;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return null;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return null;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return null;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return null;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return null;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return null;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return null;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return null;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return null;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return null;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return null;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RECAUDO_RETRO_ATEPStruct implements routines.system.IPersistableRow<RECAUDO_RETRO_ATEPStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return false;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return 0;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return 0;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return 0;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return 100;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return 0;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return 100;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return 0;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return 0;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return 0;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return 0;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return 0;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return 0;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return 7;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return 6;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return 9;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return 2;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return 7;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return 6;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String NOVEDADES;

				public String getNOVEDADES () {
					return this.NOVEDADES;
				}

				public Boolean NOVEDADESIsNullable(){
				    return true;
				}
				public Boolean NOVEDADESIsKey(){
				    return false;
				}
				public Integer NOVEDADESLength(){
				    return 4000;
				}
				public Integer NOVEDADESPrecision(){
				    return null;
				}
				public String NOVEDADESDefault(){
				
					return null;
				
				}
				public String NOVEDADESComment(){
				
				    return "";
				
				}
				public String NOVEDADESPattern(){
				
					return "";
				
				}
				public String NOVEDADESOriginalDbColumnName(){
				
					return "NOVEDADES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_RECAUDO = dis.readInt();
					
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
					this.NOVEDADES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// String
				
						writeString(this.NOVEDADES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",NOVEDADES="+NOVEDADES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RECAUDO_RETRO_ATEPStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal CARGUE_ID;

				public BigDecimal getCARGUE_ID () {
					return this.CARGUE_ID;
				}

				public Boolean CARGUE_IDIsNullable(){
				    return true;
				}
				public Boolean CARGUE_IDIsKey(){
				    return false;
				}
				public Integer CARGUE_IDLength(){
				    return null;
				}
				public Integer CARGUE_IDPrecision(){
				    return null;
				}
				public String CARGUE_IDDefault(){
				
					return "";
				
				}
				public String CARGUE_IDComment(){
				
				    return "";
				
				}
				public String CARGUE_IDPattern(){
				
					return "";
				
				}
				public String CARGUE_IDOriginalDbColumnName(){
				
					return "CARGUE_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return null;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return false;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return null;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal SALUD_ID;

				public BigDecimal getSALUD_ID () {
					return this.SALUD_ID;
				}

				public Boolean SALUD_IDIsNullable(){
				    return false;
				}
				public Boolean SALUD_IDIsKey(){
				    return false;
				}
				public Integer SALUD_IDLength(){
				    return null;
				}
				public Integer SALUD_IDPrecision(){
				    return null;
				}
				public String SALUD_IDDefault(){
				
					return "";
				
				}
				public String SALUD_IDComment(){
				
				    return "";
				
				}
				public String SALUD_IDPattern(){
				
					return "";
				
				}
				public String SALUD_IDOriginalDbColumnName(){
				
					return "SALUD_ID";
				
				}

				
			    public BigDecimal AENTIDADES_ID;

				public BigDecimal getAENTIDADES_ID () {
					return this.AENTIDADES_ID;
				}

				public Boolean AENTIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean AENTIDADES_IDIsKey(){
				    return false;
				}
				public Integer AENTIDADES_IDLength(){
				    return null;
				}
				public Integer AENTIDADES_IDPrecision(){
				    return null;
				}
				public String AENTIDADES_IDDefault(){
				
					return "";
				
				}
				public String AENTIDADES_IDComment(){
				
				    return "";
				
				}
				public String AENTIDADES_IDPattern(){
				
					return "";
				
				}
				public String AENTIDADES_IDOriginalDbColumnName(){
				
					return "AENTIDADES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return null;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return null;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return null;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public String NOMBRE_UNIDADMIL;

				public String getNOMBRE_UNIDADMIL () {
					return this.NOMBRE_UNIDADMIL;
				}

				public Boolean NOMBRE_UNIDADMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_UNIDADMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_UNIDADMILLength(){
				    return null;
				}
				public Integer NOMBRE_UNIDADMILPrecision(){
				    return null;
				}
				public String NOMBRE_UNIDADMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_UNIDADMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_UNIDADMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_UNIDADMILOriginalDbColumnName(){
				
					return "NOMBRE_UNIDADMIL";
				
				}

				
			    public String NOMBRE_GRADOMIL;

				public String getNOMBRE_GRADOMIL () {
					return this.NOMBRE_GRADOMIL;
				}

				public Boolean NOMBRE_GRADOMILIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GRADOMILIsKey(){
				    return false;
				}
				public Integer NOMBRE_GRADOMILLength(){
				    return null;
				}
				public Integer NOMBRE_GRADOMILPrecision(){
				    return null;
				}
				public String NOMBRE_GRADOMILDefault(){
				
					return null;
				
				}
				public String NOMBRE_GRADOMILComment(){
				
				    return "";
				
				}
				public String NOMBRE_GRADOMILPattern(){
				
					return "";
				
				}
				public String NOMBRE_GRADOMILOriginalDbColumnName(){
				
					return "NOMBRE_GRADOMIL";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal DIAS_COTIZADOS;

				public BigDecimal getDIAS_COTIZADOS () {
					return this.DIAS_COTIZADOS;
				}

				public Boolean DIAS_COTIZADOSIsNullable(){
				    return true;
				}
				public Boolean DIAS_COTIZADOSIsKey(){
				    return false;
				}
				public Integer DIAS_COTIZADOSLength(){
				    return null;
				}
				public Integer DIAS_COTIZADOSPrecision(){
				    return null;
				}
				public String DIAS_COTIZADOSDefault(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSComment(){
				
				    return "";
				
				}
				public String DIAS_COTIZADOSPattern(){
				
					return "";
				
				}
				public String DIAS_COTIZADOSOriginalDbColumnName(){
				
					return "DIAS_COTIZADOS";
				
				}

				
			    public BigDecimal SALARIO_BASICO;

				public BigDecimal getSALARIO_BASICO () {
					return this.SALARIO_BASICO;
				}

				public Boolean SALARIO_BASICOIsNullable(){
				    return true;
				}
				public Boolean SALARIO_BASICOIsKey(){
				    return false;
				}
				public Integer SALARIO_BASICOLength(){
				    return null;
				}
				public Integer SALARIO_BASICOPrecision(){
				    return null;
				}
				public String SALARIO_BASICODefault(){
				
					return "";
				
				}
				public String SALARIO_BASICOComment(){
				
				    return "";
				
				}
				public String SALARIO_BASICOPattern(){
				
					return "";
				
				}
				public String SALARIO_BASICOOriginalDbColumnName(){
				
					return "SALARIO_BASICO";
				
				}

				
			    public BigDecimal SUBSIDIO_FAMILIAR;

				public BigDecimal getSUBSIDIO_FAMILIAR () {
					return this.SUBSIDIO_FAMILIAR;
				}

				public Boolean SUBSIDIO_FAMILIARIsNullable(){
				    return true;
				}
				public Boolean SUBSIDIO_FAMILIARIsKey(){
				    return false;
				}
				public Integer SUBSIDIO_FAMILIARLength(){
				    return null;
				}
				public Integer SUBSIDIO_FAMILIARPrecision(){
				    return null;
				}
				public String SUBSIDIO_FAMILIARDefault(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIARComment(){
				
				    return "";
				
				}
				public String SUBSIDIO_FAMILIARPattern(){
				
					return "";
				
				}
				public String SUBSIDIO_FAMILIAROriginalDbColumnName(){
				
					return "SUBSIDIO_FAMILIAR";
				
				}

				
			    public BigDecimal IBC;

				public BigDecimal getIBC () {
					return this.IBC;
				}

				public Boolean IBCIsNullable(){
				    return true;
				}
				public Boolean IBCIsKey(){
				    return false;
				}
				public Integer IBCLength(){
				    return null;
				}
				public Integer IBCPrecision(){
				    return null;
				}
				public String IBCDefault(){
				
					return "";
				
				}
				public String IBCComment(){
				
				    return "";
				
				}
				public String IBCPattern(){
				
					return "";
				
				}
				public String IBCOriginalDbColumnName(){
				
					return "IBC";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADO;

				public BigDecimal getPORCENTAJE_EMPLEADO () {
					return this.PORCENTAJE_EMPLEADO;
				}

				public Boolean PORCENTAJE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADOLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADOPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADODefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOOriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return null;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return null;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal PORCENTAJE_EMPLEADOR;

				public BigDecimal getPORCENTAJE_EMPLEADOR () {
					return this.PORCENTAJE_EMPLEADOR;
				}

				public Boolean PORCENTAJE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_EMPLEADORLength(){
				    return null;
				}
				public Integer PORCENTAJE_EMPLEADORPrecision(){
				    return null;
				}
				public String PORCENTAJE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_EMPLEADOROriginalDbColumnName(){
				
					return "PORCENTAJE_EMPLEADOR";
				
				}

				
			    public BigDecimal APORTE_FOSYGA;

				public BigDecimal getAPORTE_FOSYGA () {
					return this.APORTE_FOSYGA;
				}

				public Boolean APORTE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean APORTE_FOSYGAIsKey(){
				    return false;
				}
				public Integer APORTE_FOSYGALength(){
				    return null;
				}
				public Integer APORTE_FOSYGAPrecision(){
				    return null;
				}
				public String APORTE_FOSYGADefault(){
				
					return "";
				
				}
				public String APORTE_FOSYGAComment(){
				
				    return "";
				
				}
				public String APORTE_FOSYGAPattern(){
				
					return "";
				
				}
				public String APORTE_FOSYGAOriginalDbColumnName(){
				
					return "APORTE_FOSYGA";
				
				}

				
			    public BigDecimal PORCENTAJE_FOSYGA;

				public BigDecimal getPORCENTAJE_FOSYGA () {
					return this.PORCENTAJE_FOSYGA;
				}

				public Boolean PORCENTAJE_FOSYGAIsNullable(){
				    return true;
				}
				public Boolean PORCENTAJE_FOSYGAIsKey(){
				    return false;
				}
				public Integer PORCENTAJE_FOSYGALength(){
				    return null;
				}
				public Integer PORCENTAJE_FOSYGAPrecision(){
				    return null;
				}
				public String PORCENTAJE_FOSYGADefault(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAComment(){
				
				    return "";
				
				}
				public String PORCENTAJE_FOSYGAPattern(){
				
					return "";
				
				}
				public String PORCENTAJE_FOSYGAOriginalDbColumnName(){
				
					return "PORCENTAJE_FOSYGA";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return null;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return null;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.CARGUE_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.SALUD_ID = (BigDecimal) dis.readObject();
					
						this.AENTIDADES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.NOMBRE_UNIDADMIL = readString(dis);
					
					this.NOMBRE_GRADOMIL = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.DIAS_COTIZADOS = (BigDecimal) dis.readObject();
					
						this.SALARIO_BASICO = (BigDecimal) dis.readObject();
					
						this.SUBSIDIO_FAMILIAR = (BigDecimal) dis.readObject();
					
						this.IBC = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.APORTE_FOSYGA = (BigDecimal) dis.readObject();
					
						this.PORCENTAJE_FOSYGA = (BigDecimal) dis.readObject();
					
					this.NOMBRE_VINCULACION = readString(dis);
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IBC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARGUE_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALUD_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AENTIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_UNIDADMIL,dos);
					
					// String
				
						writeString(this.NOMBRE_GRADOMIL,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIAS_COTIZADOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALARIO_BASICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBSIDIO_FAMILIAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IBC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_FOSYGA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PORCENTAJE_FOSYGA);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARGUE_ID="+String.valueOf(CARGUE_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",SALUD_ID="+String.valueOf(SALUD_ID));
		sb.append(",AENTIDADES_ID="+String.valueOf(AENTIDADES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",NOMBRE_UNIDADMIL="+NOMBRE_UNIDADMIL);
		sb.append(",NOMBRE_GRADOMIL="+NOMBRE_GRADOMIL);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",DIAS_COTIZADOS="+String.valueOf(DIAS_COTIZADOS));
		sb.append(",SALARIO_BASICO="+String.valueOf(SALARIO_BASICO));
		sb.append(",SUBSIDIO_FAMILIAR="+String.valueOf(SUBSIDIO_FAMILIAR));
		sb.append(",IBC="+String.valueOf(IBC));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",PORCENTAJE_EMPLEADO="+String.valueOf(PORCENTAJE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",PORCENTAJE_EMPLEADOR="+String.valueOf(PORCENTAJE_EMPLEADOR));
		sb.append(",APORTE_FOSYGA="+String.valueOf(APORTE_FOSYGA));
		sb.append(",PORCENTAJE_FOSYGA="+String.valueOf(PORCENTAJE_FOSYGA));
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_33Process(globalMap);
		tOracleInput_7Process(globalMap);
		tOracleInput_14Process(globalMap);
		tOracleInput_32Process(globalMap);

		row2Struct row2 = new row2Struct();
RECAUDO_APORTE_SALUDStruct RECAUDO_APORTE_SALUD = new RECAUDO_APORTE_SALUDStruct();
UpdGEN_PERSONASStruct UpdGEN_PERSONAS = new UpdGEN_PERSONASStruct();
row87Struct row87 = new row87Struct();
row88Struct row88 = new row88Struct();
UpdStruct Upd = new UpdStruct();

		row3Struct row3 = new row3Struct();
RECAUDO_APORTE_ATEPStruct RECAUDO_APORTE_ATEP = new RECAUDO_APORTE_ATEPStruct();

		row5Struct row5 = new row5Struct();
RECAUDO_RETRO_SALUDStruct RECAUDO_RETRO_SALUD = new RECAUDO_RETRO_SALUDStruct();

		row7Struct row7 = new row7Struct();
RECAUDO_RETRO_ATEPStruct RECAUDO_RETRO_ATEP = new RECAUDO_RETRO_ATEPStruct();

		row8Struct row8 = new row8Struct();
RECAUDO_NOVESPStruct RECAUDO_NOVESP = new RECAUDO_NOVESPStruct();

			row6Struct row6 = new row6Struct();
TIEMPO_APORTEStruct TIEMPO_APORTE = new TIEMPO_APORTEStruct();
TIEMPO_PART_APORTEStruct TIEMPO_PART_APORTE = new TIEMPO_PART_APORTEStruct();
row41Struct row41 = new row41Struct();
row60Struct row60 = new row60Struct();
CANT_NOVEDADESStruct CANT_NOVEDADES = new CANT_NOVEDADESStruct();
row62Struct row62 = new row62Struct();
row59Struct row59 = new row59Struct();
row58Struct row58 = new row58Struct();
row90Struct row90 = new row90Struct();
row91Struct row91 = new row91Struct();
TIPODOC_APORTESStruct TIPODOC_APORTES = new TIPODOC_APORTESStruct();
row38Struct row38 = new row38Struct();
row39Struct row39 = new row39Struct();
row40Struct row40 = new row40Struct();
row37Struct row37 = new row37Struct();
TOTALES_APORTES_TIPO_RECAUDOStruct TOTALES_APORTES_TIPO_RECAUDO = new TOTALES_APORTES_TIPO_RECAUDOStruct();
row34Struct row34 = new row34Struct();
TOTALES_APORTESStruct TOTALES_APORTES = new TOTALES_APORTESStruct();
row51Struct row51 = new row51Struct();
XXXStruct XXX = new XXXStruct();






	
	/**
	 * [tSortRow_6_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_6_SortOut", false);
		start_Hash.put("tSortRow_6_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_6_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIEMPO_PART_APORTE");
					}
				
		int tos_count_tSortRow_6_SortOut = 0;
		


class ComparableTIEMPO_PART_APORTEStruct extends TIEMPO_PART_APORTEStruct implements Comparable<ComparableTIEMPO_PART_APORTEStruct> {
	
	public int compareTo(ComparableTIEMPO_PART_APORTEStruct other) {

		if(this.ID == null && other.ID != null){
			return -1;
						
		}else if(this.ID != null && other.ID == null){
			return 1;
						
		}else if(this.ID != null && other.ID != null){
			if(!this.ID.equals(other.ID)){
				return this.ID.compareTo(other.ID);
			}
		}
		if(this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID){
						
				return this.TIPO_RECAUDO_ID > other.TIPO_RECAUDO_ID ? 1 : -1;
							
		}
		return 0;
	}
}

java.util.List<ComparableTIEMPO_PART_APORTEStruct> list_tSortRow_6_SortOut = new java.util.ArrayList<ComparableTIEMPO_PART_APORTEStruct>();


 



/**
 * [tSortRow_6_SortOut begin ] stop
 */



	
	/**
	 * [tMap_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_34", false);
		start_Hash.put("tMap_34", System.currentTimeMillis());
		
	
	currentComponent="tMap_34";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIEMPO_APORTE");
					}
				
		int tos_count_tMap_34 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_34__Struct  {
	int Anio;
	int Mes;
	int Dia;
	java.util.Date FECHA;
}
Var__tMap_34__Struct Var__tMap_34 = new Var__tMap_34__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIEMPO_PART_APORTEStruct TIEMPO_PART_APORTE_tmp = new TIEMPO_PART_APORTEStruct();
// ###############################

        
        



        









 



/**
 * [tMap_34 begin ] stop
 */





	
	/**
	 * [tAggregateRow_4_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGOUT", false);
		start_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tAggregateRow_4_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_4 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_4 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_4 utilClass_tAggregateRow_4 = new UtilClass_tAggregateRow_4();

	

	class AggOperationStruct_tAggregateRow_4 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				int TIPO_RECAUDO;
    				BigDecimal CARGUE_ID;
    				BigDecimal ENTAPORTANTES_ID;
    				BigDecimal REGIMEN_LABORAL_ID;
    				String PERIODO;
    				String NOMBRE_ENTAPORTANTE;
    				String NOMBRE_VINCULACION;int count = 0;
       			int SALUD_ID_clmCount = 0;
           			BigDecimal APORTE_EMPLEADO_sum;
           			BigDecimal APORTE_EMPLEADOR_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
								result = prime * result + (int) this.TIPO_RECAUDO;
							
							result = prime * result + ((this.CARGUE_ID == null) ? 0 : this.CARGUE_ID.hashCode());
							
							result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
							
							result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
							
							result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
							
							result = prime * result + ((this.NOMBRE_ENTAPORTANTE == null) ? 0 : this.NOMBRE_ENTAPORTANTE.hashCode());
							
							result = prime * result + ((this.NOMBRE_VINCULACION == null) ? 0 : this.NOMBRE_VINCULACION.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_4 other = (AggOperationStruct_tAggregateRow_4) obj;
			
							if (this.TIPO_RECAUDO != other.TIPO_RECAUDO) 
								return false;
						
							if (this.CARGUE_ID == null) {
								if (other.CARGUE_ID != null) 
									return false;
							} else if (!this.CARGUE_ID.equals(other.CARGUE_ID)) 
								return false;
						
							if (this.ENTAPORTANTES_ID == null) {
								if (other.ENTAPORTANTES_ID != null) 
									return false;
							} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)) 
								return false;
						
							if (this.REGIMEN_LABORAL_ID == null) {
								if (other.REGIMEN_LABORAL_ID != null) 
									return false;
							} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID)) 
								return false;
						
							if (this.PERIODO == null) {
								if (other.PERIODO != null) 
									return false;
							} else if (!this.PERIODO.equals(other.PERIODO)) 
								return false;
						
							if (this.NOMBRE_ENTAPORTANTE == null) {
								if (other.NOMBRE_ENTAPORTANTE != null) 
									return false;
							} else if (!this.NOMBRE_ENTAPORTANTE.equals(other.NOMBRE_ENTAPORTANTE)) 
								return false;
						
							if (this.NOMBRE_VINCULACION == null) {
								if (other.NOMBRE_VINCULACION != null) 
									return false;
							} else if (!this.NOMBRE_VINCULACION.equals(other.NOMBRE_VINCULACION)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_4 operation_result_tAggregateRow_4 = null;
	AggOperationStruct_tAggregateRow_4 operation_finder_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();
	java.util.Map<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4> hash_tAggregateRow_4 = new java.util.HashMap<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4>();
	

 



/**
 * [tAggregateRow_4_AGGOUT begin ] stop
 */





	
	/**
	 * [tOracleOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_9", false);
		start_Hash.put("tOracleOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"XXX");
					}
				
		int tos_count_tOracleOutput_9 = 0;
		






    
    int nb_line_tOracleOutput_9 = 0;
    int nb_line_update_tOracleOutput_9 = 0;
    int nb_line_inserted_tOracleOutput_9 = 0;
    int nb_line_deleted_tOracleOutput_9 = 0;
    int nb_line_rejected_tOracleOutput_9 = 0;

    int tmp_batchUpdateCount_tOracleOutput_9 = 0;

    int deletedCount_tOracleOutput_9=0;
    int updatedCount_tOracleOutput_9=0;
    int insertedCount_tOracleOutput_9=0;
    int rowsToCommitCount_tOracleOutput_9=0;
    int rejectedCount_tOracleOutput_9=0;

    boolean whetherReject_tOracleOutput_9 = false;

    java.sql.Connection conn_tOracleOutput_9 = null;

    //optional table
    String dbschema_tOracleOutput_9 = null;
    String tableName_tOracleOutput_9 = null;
        dbschema_tOracleOutput_9 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_9=0;

        if(dbschema_tOracleOutput_9 == null || dbschema_tOracleOutput_9.trim().length() == 0) {
            tableName_tOracleOutput_9 = ("BREC_RECAUDOS");
        } else {
            tableName_tOracleOutput_9 = dbschema_tOracleOutput_9 + "." + ("BREC_RECAUDOS");
        }
                String insert_tOracleOutput_9 = "INSERT INTO " + tableName_tOracleOutput_9 + " (ENTIDAD_APORTANTE_ID,TIEMPO_ID,REGIMEN_LABORAL_ID,TIPO_RECAUDO_ID,AFILIADO_ID,NOMBRE_ENTAPORTANTE,NOMBRE_TIPO_DOCUENTO,NUMERO_DOCUMENTO,NOMBRE_COTIZANTE,NOMBRE_UNIDAD_MILITAR,NOMBRE_GRADO_MILITAR,NOMBRE_VINCULACION,FECHA_INGRESO,SALARIO_BASICO,SUBSIDIO_FAMILIAR,IBC,NUMERO_DIAS,APORTE_EMPLEADO,PORCENTAJE_EMPLEADO,APORTE_EMPLEADOR,PORCENTAJE_EMPLEADOR,APORTE_FOSYGA,PORCENTAJE_FOSYGA,PERIODO,TVINCULACIONES_ID,NOVEDADES) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_9 = conn_tOracleOutput_9.prepareStatement(insert_tOracleOutput_9);
                        resourceMap.put("pstmt_tOracleOutput_9", pstmt_tOracleOutput_9);





 



/**
 * [tOracleOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
XXXStruct XXX_tmp = new XXXStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tReplicate_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_2", false);
		start_Hash.put("tReplicate_2", System.currentTimeMillis());
		
	
	currentComponent="tReplicate_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIPODOC_APORTES");
					}
				
		int tos_count_tReplicate_2 = 0;
		

 



/**
 * [tReplicate_2 begin ] stop
 */



	
	/**
	 * [tMap_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_32", false);
		start_Hash.put("tMap_32", System.currentTimeMillis());
		
	
	currentComponent="tMap_32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_32 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
					globalMap.get( "tHash_Lookup_row14" ))
					;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_32__Struct  {
	String var2;
}
Var__tMap_32__Struct Var__tMap_32 = new Var__tMap_32__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIEMPO_APORTEStruct TIEMPO_APORTE_tmp = new TIEMPO_APORTEStruct();
TIPODOC_APORTESStruct TIPODOC_APORTES_tmp = new TIPODOC_APORTESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_32 begin ] stop
 */



	
	/**
	 * [tUnite_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_2", false);
		start_Hash.put("tUnite_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUnite_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUnite_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"RECAUDO_RETRO_ATEP","RECAUDO_RETRO_SALUD","RECAUDO_NOVESP","RECAUDO_APORTE_ATEP","RECAUDO_APORTE_SALUD");
					}
				
		int tos_count_tUnite_2 = 0;
		

int nb_line_tUnite_2 = 0;

 



/**
 * [tUnite_2 begin ] stop
 */


	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"UpdGEN_PERSONAS");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class ComparableUpdGEN_PERSONASStruct extends UpdGEN_PERSONASStruct implements Comparable<ComparableUpdGEN_PERSONASStruct> {
	
	public int compareTo(ComparableUpdGEN_PERSONASStruct other) {

		if(this.AFILIADOS_ID == null && other.AFILIADOS_ID != null){
			return -1;
						
		}else if(this.AFILIADOS_ID != null && other.AFILIADOS_ID == null){
			return 1;
						
		}else if(this.AFILIADOS_ID != null && other.AFILIADOS_ID != null){
			if(!this.AFILIADOS_ID.equals(other.AFILIADOS_ID)){
				return this.AFILIADOS_ID.compareTo(other.AFILIADOS_ID);
			}
		}
		if(this.FECHA_INGRESO == null && other.FECHA_INGRESO != null){
			return -1;
						
		}else if(this.FECHA_INGRESO != null && other.FECHA_INGRESO == null){
			return 1;
						
		}else if(this.FECHA_INGRESO != null && other.FECHA_INGRESO != null){
			if(!this.FECHA_INGRESO.equals(other.FECHA_INGRESO)){
				return this.FECHA_INGRESO.compareTo(other.FECHA_INGRESO);
			}
		}
		return 0;
	}
}

java.util.List<ComparableUpdGEN_PERSONASStruct> list_tSortRow_1_SortOut = new java.util.ArrayList<ComparableUpdGEN_PERSONASStruct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
	int TIPO_RECAUDO;
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
RECAUDO_APORTE_SALUDStruct RECAUDO_APORTE_SALUD_tmp = new RECAUDO_APORTE_SALUDStruct();
UpdGEN_PERSONASStruct UpdGEN_PERSONAS_tmp = new UpdGEN_PERSONASStruct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tOracleInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_28", false);
		start_Hash.put("tOracleInput_28", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_28");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_28";
	
	
		int tos_count_tOracleInput_28 = 0;
		
	


	
		    int nb_line_tOracleInput_28 = 0;
		    java.sql.Connection conn_tOracleInput_28 = null;
				conn_tOracleInput_28 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_28 = false;
				boolean isConnectionWrapped_tOracleInput_28 = !(conn_tOracleInput_28 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_28.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_28 = null;
                if (isConnectionWrapped_tOracleInput_28) {
					unwrappedOraConn_tOracleInput_28 = conn_tOracleInput_28.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_28 != null) {
                        isTimeZoneNull_tOracleInput_28 = (unwrappedOraConn_tOracleInput_28.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_28 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_28).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_28) {
					java.sql.Statement stmtGetTZ_tOracleInput_28 = conn_tOracleInput_28.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_28 = stmtGetTZ_tOracleInput_28.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_28 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_28.next()) {
						sessionTimezone_tOracleInput_28 = rsGetTZ_tOracleInput_28.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_28 && unwrappedOraConn_tOracleInput_28 != null) {
                        unwrappedOraConn_tOracleInput_28.setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_28).setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_28 = conn_tOracleInput_28.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_28.setFetchSize(1000);


		    String dbquery_tOracleInput_28 = "SELECT \n  cr.ID CARGUE_ID, cr.PERIODO, cr.ENTAPORTANTES_ID, TV.ID REGIMEN_LABORAL_ID, DS.ID SALUD_ID,\n  DS.AENTIDADES"
+"_ID,\n  DS.AFILIADOS_ID,\n  DS.TDOCUMENTOS_ID, DS.DOCUMENTO, \n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBRE, DS.SEGUNDO"
+"_NOMBRE, DS.PRIMER_APELLIDO,\n  DS.SEGUNDO_APELLIDO) NOMBRE_COTIZANTE,\n  UM.NOMBRE NOMBRE_UNIDADMIL, \n  GM.NOMBRE NOMB"
+"RE_GRADOMIL, \n  DS.FECHA_INGRESO, \n  DS.DIAS_COTIZADOS_EPS DIAS_COTIZADOS, \n  DS.SALARIO_BASICO, DS.SUBSIDIO_FAMILIAR"
+", DS.IBC, \n  DS.COTIZACION_EMPLEADO_EPS APORTE_EMPLEADO, \n  DS.POR_EMPLEADO_EPS PORCENTAJE_EMPLEADO,  \n  DS.COTIZACIO"
+"N_EMPLEADOR_EPS APORTE_EMPLEADOR,    \n  DS.PORC_EMPLEADOR_EPS PORCENTAJE_EMPLEADOR,  \n  (CASE \n     WHEN DS.PAGO_INFF"
+"OSYGA = 0 \n     THEN DS.IBC * ( CASE \n                     WHEN NVL(REC.fnc_GetPorcentajeCotizacion('porc_aporte_fosyg"
+"a_empleador',\n                     TV.SIGLA, REC.fnc_PeriodoToDate(cr.PERIODO, 0), cr.ENTAPORTANTES_ID), 0) = 0\n      "
+"               THEN \n                         CASE\n                         WHEN SUBSTR(TV.SIGLA, 1, 1) = 'P' \n      "
+"                   THEN 0.01\n                         ELSE 0.015\n                         END\n                     EL"
+"SE NVL(REC.fnc_GetPorcentajeCotizacion('porc_aporte_fosyga_empleador',\n                     TV.SIGLA, REC.fnc_PeriodoTo"
+"Date(cr.PERIODO, 0), cr.ENTAPORTANTES_ID), 0)\n                     END)    \n     ELSE DS.PAGO_INFFOSYGA\n     END) APO"
+"RTE_FOSYGA, \n     (CASE \n         WHEN DS.PAGO_INFFOSYGA = 0\n         THEN \n             CASE \n             WHEN NV"
+"L(REC.fnc_GetPorcentajeCotizacion('porc_aporte_fosyga_empleador', TV.SIGLA,\n             REC.fnc_PeriodoToDate(cr.PERIO"
+"DO, 0), cr.ENTAPORTANTES_ID), 0) = 0\n             THEN \n                 CASE\n                 WHEN SUBSTR(TV.SIGLA, "
+"1, 1) = 'P' \n                 THEN 0.01\n                 ELSE 0.015\n                 END\n             ELSE NVL(REC.f"
+"nc_GetPorcentajeCotizacion('porc_aporte_fosyga_empleador', TV.SIGLA,\n             REC.fnc_PeriodoToDate(cr.PERIODO, 0),"
+" cr.ENTAPORTANTES_ID), 0)\n             END\n         ELSE DS.PORC_INFFOSYGA\n         END) PORCENTAJE_FOSYGA,\n  TV.NOM"
+"BRE NOMBRE_VINCULACION,\n  DS.TVINCULACIONES_ID AS TVINCULACIONES_ID,\n  NVL((SELECT LISTAGG(TNOVEDADES.SIGLA,\n  '; ') "
+"WITHIN GROUP(ORDER BY TNOVEDADES.SIGLA) NOVEDADES\n                     FROM REC_NOVEDADES NOVEDADES\n                  "
+"  INNER JOIN GEN_TNOVEDADES TNOVEDADES\n                       ON TNOVEDADES.ID = NOVEDADES.TNOVEDADES_ID\n             "
+"       WHERE NOVEDADES.DSALUD_ID = DS.ID),\n                   'APO') AS NOVEDADES\nFROM VM_REC_CONSOLIDADO cr\nINNER JO"
+"IN REC_DSALUD DS ON DS.id = cr.ds_id\nLEFT JOIN AFI_TVINCULACIONES TV ON TV.ID = DS.TVINCULACIONES_ID  AND TV.TVINCULACI"
+"ONES = 'RC' \nLEFT JOIN GEN_GRDMILITARES GM ON GM.ID = DS.GRDMILITARES_ID \nLEFT JOIN GEN_UMILITARES UM ON UM.ID = DS.UM"
+"ILITARES_ID  \nWHERE\n cr.TPLANILLAS_ID = 1 \n AND cr.TARCHIVOS_ID = 1\n AND cr.PERIODO = '" + context.PERIODO + "'\n ORDER BY cr.PERIODO, cr.ENTAPORTANTES_ID, DS.AENTIDADES_ID";
		    

		    globalMap.put("tOracleInput_28_QUERY",dbquery_tOracleInput_28);

		    java.sql.ResultSet rs_tOracleInput_28 = null;

		    try {
		    	rs_tOracleInput_28 = stmt_tOracleInput_28.executeQuery(dbquery_tOracleInput_28);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_28 = rs_tOracleInput_28.getMetaData();
		    	int colQtyInRs_tOracleInput_28 = rsmd_tOracleInput_28.getColumnCount();

		    String tmpContent_tOracleInput_28 = null;
		    
		    
		    while (rs_tOracleInput_28.next()) {
		        nb_line_tOracleInput_28++;
		        
							if(colQtyInRs_tOracleInput_28 < 1) {
								row2.CARGUE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(1) != null) {
						row2.CARGUE_ID = rs_tOracleInput_28.getBigDecimal(1);
					} else {
				
						row2.CARGUE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 2) {
								row2.PERIODO = null;
							} else {
	                         		
        	row2.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 3) {
								row2.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(3) != null) {
						row2.ENTAPORTANTES_ID = rs_tOracleInput_28.getBigDecimal(3);
					} else {
				
						row2.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 4) {
								row2.REGIMEN_LABORAL_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(4) != null) {
						row2.REGIMEN_LABORAL_ID = rs_tOracleInput_28.getBigDecimal(4);
					} else {
				
						row2.REGIMEN_LABORAL_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 5) {
								row2.SALUD_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(5) != null) {
						row2.SALUD_ID = rs_tOracleInput_28.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 6) {
								row2.AENTIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(6) != null) {
						row2.AENTIDADES_ID = rs_tOracleInput_28.getBigDecimal(6);
					} else {
				
						row2.AENTIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 7) {
								row2.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(7) != null) {
						row2.AFILIADOS_ID = rs_tOracleInput_28.getBigDecimal(7);
					} else {
				
						row2.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 8) {
								row2.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(8) != null) {
						row2.TDOCUMENTOS_ID = rs_tOracleInput_28.getBigDecimal(8);
					} else {
				
						row2.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 9) {
								row2.DOCUMENTO = null;
							} else {
	                         		
        	row2.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 10) {
								row2.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row2.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 11) {
								row2.NOMBRE_UNIDADMIL = null;
							} else {
	                         		
        	row2.NOMBRE_UNIDADMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 12) {
								row2.NOMBRE_GRADOMIL = null;
							} else {
	                         		
        	row2.NOMBRE_GRADOMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 13) {
								row2.FECHA_INGRESO = null;
							} else {
										
			row2.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_28, 13);
		                    }
							if(colQtyInRs_tOracleInput_28 < 14) {
								row2.DIAS_COTIZADOS = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(14) != null) {
						row2.DIAS_COTIZADOS = rs_tOracleInput_28.getBigDecimal(14);
					} else {
				
						row2.DIAS_COTIZADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 15) {
								row2.SALARIO_BASICO = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(15) != null) {
						row2.SALARIO_BASICO = rs_tOracleInput_28.getBigDecimal(15);
					} else {
				
						row2.SALARIO_BASICO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 16) {
								row2.SUBSIDIO_FAMILIAR = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(16) != null) {
						row2.SUBSIDIO_FAMILIAR = rs_tOracleInput_28.getBigDecimal(16);
					} else {
				
						row2.SUBSIDIO_FAMILIAR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 17) {
								row2.IBC = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(17) != null) {
						row2.IBC = rs_tOracleInput_28.getBigDecimal(17);
					} else {
				
						row2.IBC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 18) {
								row2.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(18) != null) {
						row2.APORTE_EMPLEADO = rs_tOracleInput_28.getBigDecimal(18);
					} else {
				
						row2.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 19) {
								row2.PORCENTAJE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(19) != null) {
						row2.PORCENTAJE_EMPLEADO = rs_tOracleInput_28.getBigDecimal(19);
					} else {
				
						row2.PORCENTAJE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 20) {
								row2.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(20) != null) {
						row2.APORTE_EMPLEADOR = rs_tOracleInput_28.getBigDecimal(20);
					} else {
				
						row2.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 21) {
								row2.PORCENTAJE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(21) != null) {
						row2.PORCENTAJE_EMPLEADOR = rs_tOracleInput_28.getBigDecimal(21);
					} else {
				
						row2.PORCENTAJE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 22) {
								row2.APORTE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(22) != null) {
						row2.APORTE_FOSYGA = rs_tOracleInput_28.getBigDecimal(22);
					} else {
				
						row2.APORTE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 23) {
								row2.PORCENTAJE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(23) != null) {
						row2.PORCENTAJE_FOSYGA = rs_tOracleInput_28.getBigDecimal(23);
					} else {
				
						row2.PORCENTAJE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 24) {
								row2.NOMBRE_VINCULACION = null;
							} else {
	                         		
        	row2.NOMBRE_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 25) {
								row2.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(25) != null) {
						row2.TVINCULACIONES_ID = rs_tOracleInput_28.getBigDecimal(25);
					} else {
				
						row2.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 26) {
								row2.NOVEDADES = null;
							} else {
	                         		
        	row2.NOVEDADES = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 26, false);
		                    }
					




 



/**
 * [tOracleInput_28 begin ] stop
 */
	
	/**
	 * [tOracleInput_28 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 


	tos_count_tOracleInput_28++;

/**
 * [tOracleInput_28 main ] stop
 */
	
	/**
	 * [tOracleInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;
Var.TIPO_RECAUDO = 1;// ###############################
        // ###############################
        // # Output tables

RECAUDO_APORTE_SALUD = null;
UpdGEN_PERSONAS = null;


// # Output table : 'RECAUDO_APORTE_SALUD'
RECAUDO_APORTE_SALUD_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RECAUDO_APORTE_SALUD_tmp.CARGUE_ID = row2.CARGUE_ID ;
RECAUDO_APORTE_SALUD_tmp.PERIODO = row2.PERIODO ;
RECAUDO_APORTE_SALUD_tmp.ENTAPORTANTES_ID = row2.ENTAPORTANTES_ID ;
RECAUDO_APORTE_SALUD_tmp.REGIMEN_LABORAL_ID = row2.REGIMEN_LABORAL_ID ;
RECAUDO_APORTE_SALUD_tmp.SALUD_ID = row2.SALUD_ID ;
RECAUDO_APORTE_SALUD_tmp.AENTIDADES_ID = row2.AENTIDADES_ID ;
RECAUDO_APORTE_SALUD_tmp.AFILIADOS_ID = row2.AFILIADOS_ID ;
RECAUDO_APORTE_SALUD_tmp.TDOCUMENTOS_ID = row2.TDOCUMENTOS_ID ;
RECAUDO_APORTE_SALUD_tmp.DOCUMENTO = row2.DOCUMENTO ;
RECAUDO_APORTE_SALUD_tmp.NOMBRE_COTIZANTE = row2.NOMBRE_COTIZANTE ;
RECAUDO_APORTE_SALUD_tmp.NOMBRE_UNIDADMIL = row2.NOMBRE_UNIDADMIL ;
RECAUDO_APORTE_SALUD_tmp.NOMBRE_GRADOMIL = row2.NOMBRE_GRADOMIL ;
RECAUDO_APORTE_SALUD_tmp.FECHA_INGRESO = row2.FECHA_INGRESO ;
RECAUDO_APORTE_SALUD_tmp.DIAS_COTIZADOS = row2.DIAS_COTIZADOS ;
RECAUDO_APORTE_SALUD_tmp.SALARIO_BASICO = row2.SALARIO_BASICO ;
RECAUDO_APORTE_SALUD_tmp.SUBSIDIO_FAMILIAR = row2.SUBSIDIO_FAMILIAR ;
RECAUDO_APORTE_SALUD_tmp.IBC = row2.IBC ;
RECAUDO_APORTE_SALUD_tmp.APORTE_EMPLEADO = row2.APORTE_EMPLEADO ;
RECAUDO_APORTE_SALUD_tmp.PORCENTAJE_EMPLEADO = row2.PORCENTAJE_EMPLEADO ;
RECAUDO_APORTE_SALUD_tmp.APORTE_EMPLEADOR = row2.APORTE_EMPLEADOR ;
RECAUDO_APORTE_SALUD_tmp.PORCENTAJE_EMPLEADOR = row2.PORCENTAJE_EMPLEADOR ;
RECAUDO_APORTE_SALUD_tmp.APORTE_FOSYGA = row2.APORTE_FOSYGA ;
RECAUDO_APORTE_SALUD_tmp.PORCENTAJE_FOSYGA = row2.PORCENTAJE_FOSYGA ;
RECAUDO_APORTE_SALUD_tmp.NOMBRE_VINCULACION = row2.NOMBRE_VINCULACION ;
RECAUDO_APORTE_SALUD_tmp.TCOTIZACION = row2.TVINCULACIONES_ID ;
RECAUDO_APORTE_SALUD_tmp.NOVEDADES = row2.NOVEDADES ;
RECAUDO_APORTE_SALUD = RECAUDO_APORTE_SALUD_tmp;

// # Output table : 'UpdGEN_PERSONAS'
// # Filter conditions 
if( 

row2.CARGUE_ID.intValue() == context.CCARGUE_ID

 ) {
UpdGEN_PERSONAS_tmp.AFILIADOS_ID = row2.AFILIADOS_ID ;
UpdGEN_PERSONAS_tmp.SUBSIDIO_FAMILIAR = row2.SUBSIDIO_FAMILIAR ;
UpdGEN_PERSONAS_tmp.SALARIO_BASE = row2.SALARIO_BASICO ;
UpdGEN_PERSONAS_tmp.FECHA_INGRESO = row2.FECHA_INGRESO ;
UpdGEN_PERSONAS = UpdGEN_PERSONAS_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "RECAUDO_APORTE_SALUD"
if(RECAUDO_APORTE_SALUD != null) { 



	
	/**
	 * [tUnite_2 main ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RECAUDO_APORTE_SALUD"
									
							);
						}
						
//////////
 

// for output
			row6 = new row6Struct();
								
			row6.TIPO_RECAUDO = RECAUDO_APORTE_SALUD.TIPO_RECAUDO;								
			row6.CARGUE_ID = RECAUDO_APORTE_SALUD.CARGUE_ID;								
			row6.PERIODO = RECAUDO_APORTE_SALUD.PERIODO;								
			row6.ENTAPORTANTES_ID = RECAUDO_APORTE_SALUD.ENTAPORTANTES_ID;								
			row6.REGIMEN_LABORAL_ID = RECAUDO_APORTE_SALUD.REGIMEN_LABORAL_ID;								
			row6.SALUD_ID = RECAUDO_APORTE_SALUD.SALUD_ID;								
			row6.AENTIDADES_ID = RECAUDO_APORTE_SALUD.AENTIDADES_ID;								
			row6.AFILIADOS_ID = RECAUDO_APORTE_SALUD.AFILIADOS_ID;								
			row6.TDOCUMENTOS_ID = RECAUDO_APORTE_SALUD.TDOCUMENTOS_ID;								
			row6.DOCUMENTO = RECAUDO_APORTE_SALUD.DOCUMENTO;								
			row6.NOMBRE_COTIZANTE = RECAUDO_APORTE_SALUD.NOMBRE_COTIZANTE;								
			row6.NOMBRE_UNIDADMIL = RECAUDO_APORTE_SALUD.NOMBRE_UNIDADMIL;								
			row6.NOMBRE_GRADOMIL = RECAUDO_APORTE_SALUD.NOMBRE_GRADOMIL;								
			row6.FECHA_INGRESO = RECAUDO_APORTE_SALUD.FECHA_INGRESO;								
			row6.DIAS_COTIZADOS = RECAUDO_APORTE_SALUD.DIAS_COTIZADOS;								
			row6.SALARIO_BASICO = RECAUDO_APORTE_SALUD.SALARIO_BASICO;								
			row6.SUBSIDIO_FAMILIAR = RECAUDO_APORTE_SALUD.SUBSIDIO_FAMILIAR;								
			row6.IBC = RECAUDO_APORTE_SALUD.IBC;								
			row6.APORTE_EMPLEADO = RECAUDO_APORTE_SALUD.APORTE_EMPLEADO;								
			row6.PORCENTAJE_EMPLEADO = RECAUDO_APORTE_SALUD.PORCENTAJE_EMPLEADO;								
			row6.APORTE_EMPLEADOR = RECAUDO_APORTE_SALUD.APORTE_EMPLEADOR;								
			row6.PORCENTAJE_EMPLEADOR = RECAUDO_APORTE_SALUD.PORCENTAJE_EMPLEADOR;								
			row6.APORTE_FOSYGA = RECAUDO_APORTE_SALUD.APORTE_FOSYGA;								
			row6.PORCENTAJE_FOSYGA = RECAUDO_APORTE_SALUD.PORCENTAJE_FOSYGA;								
			row6.NOMBRE_VINCULACION = RECAUDO_APORTE_SALUD.NOMBRE_VINCULACION;								
			row6.TVINCULACIONES_ID = RECAUDO_APORTE_SALUD.TCOTIZACION;								
			row6.NOVEDADES = RECAUDO_APORTE_SALUD.NOVEDADES;			

			nb_line_tUnite_2++;

//////////
 


	tos_count_tUnite_2++;

/**
 * [tUnite_2 main ] stop
 */
	
	/**
	 * [tUnite_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		
						row14Struct row14 = null;
					
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_32 = false;
		boolean mainRowRejected_tMap_32 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row14HashKey.ID = row6.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.ID = '" + row14HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row13HashKey.ID = row6.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.ID = '" + row13HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;
Var.var2 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row6.PERIODO + "-01")))) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_APORTE = null;
TIPODOC_APORTES = null;


// # Output table : 'TIEMPO_APORTE'
TIEMPO_APORTE_tmp.SALUD_ID = row6.CARGUE_ID ;
TIEMPO_APORTE_tmp.PERIODO = row6.PERIODO ;
TIEMPO_APORTE_tmp.FECHA = Var.var2 ;
TIEMPO_APORTE_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIEMPO_APORTE = TIEMPO_APORTE_tmp;

// # Output table : 'TIPODOC_APORTES'
TIPODOC_APORTES_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIPODOC_APORTES_tmp.CARGUE_ID = row6.CARGUE_ID ;
TIPODOC_APORTES_tmp.ENTAPORTANTES_ID = row6.ENTAPORTANTES_ID ;
TIPODOC_APORTES_tmp.REGIMEN_LABORAL_ID = row6.REGIMEN_LABORAL_ID ;
TIPODOC_APORTES_tmp.PERIODO = row6.PERIODO ;
TIPODOC_APORTES_tmp.NOMBRE_ENTAPORTANTE = row13.NOMBRE ;
TIPODOC_APORTES_tmp.DOCUMENTO_ENTAPORTANTE = row13.DOCUMENTO ;
TIPODOC_APORTES_tmp.SALUD_ID = row6.SALUD_ID ;
TIPODOC_APORTES_tmp.AENTIDADES_ID = row6.AENTIDADES_ID ;
TIPODOC_APORTES_tmp.AFILIADOS_ID = row6.AFILIADOS_ID ;
TIPODOC_APORTES_tmp.NOMBRE_TIPO_DOCUENTO = row14.SIGLA ;
TIPODOC_APORTES_tmp.DOCUMENTO = row6.DOCUMENTO ;
TIPODOC_APORTES_tmp.NOMBRE_COTIZANTE = row6.NOMBRE_COTIZANTE ;
TIPODOC_APORTES_tmp.NOMBRE_UNIDADMIL = row6.NOMBRE_UNIDADMIL ;
TIPODOC_APORTES_tmp.NOMBRE_GRADOMIL = row6.NOMBRE_GRADOMIL ;
TIPODOC_APORTES_tmp.FECHA_INGRESO = row6.FECHA_INGRESO ;
TIPODOC_APORTES_tmp.DIAS_COTIZADOS = row6.DIAS_COTIZADOS ;
TIPODOC_APORTES_tmp.SALARIO_BASICO = row6.SALARIO_BASICO ;
TIPODOC_APORTES_tmp.SUBSIDIO_FAMILIAR = row6.SUBSIDIO_FAMILIAR ;
TIPODOC_APORTES_tmp.IBC = row6.IBC ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADO = row6.APORTE_EMPLEADO ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADO = row6.PORCENTAJE_EMPLEADO ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADOR = row6.APORTE_EMPLEADOR ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADOR = row6.PORCENTAJE_EMPLEADOR ;
TIPODOC_APORTES_tmp.APORTE_FOSYGA = row6.APORTE_FOSYGA ;
TIPODOC_APORTES_tmp.PORCENTAJE_FOSYGA = row6.PORCENTAJE_FOSYGA ;
TIPODOC_APORTES_tmp.NOMBRE_VINCULACION = row6.NOMBRE_VINCULACION ;
TIPODOC_APORTES_tmp.TVINCULACIONES_ID = row6.TVINCULACIONES_ID ;
TIPODOC_APORTES_tmp.NOVEDADES = row6.NOVEDADES ;
TIPODOC_APORTES = TIPODOC_APORTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "TIEMPO_APORTE"
if(TIEMPO_APORTE != null) { 



	
	/**
	 * [tMap_34 main ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_APORTE"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_34 = false;
		boolean mainRowRejected_tMap_34 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_34__Struct Var = Var__tMap_34;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_APORTE = null;


// # Output table : 'TIEMPO_PART_APORTE'
TIEMPO_PART_APORTE_tmp.ID = TIEMPO_APORTE.SALUD_ID ;
TIEMPO_PART_APORTE_tmp.TIPO_RECAUDO_ID = TIEMPO_APORTE.TIPO_RECAUDO ;
TIEMPO_PART_APORTE_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_APORTE_tmp.PERIODO = TIEMPO_APORTE.PERIODO ;
TIEMPO_PART_APORTE_tmp.Anio = Var.Anio ;
TIEMPO_PART_APORTE_tmp.Mes = Var.Mes ;
TIEMPO_PART_APORTE_tmp.Dia = Var.Dia ;
TIEMPO_PART_APORTE = TIEMPO_PART_APORTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_34 = false;










 


	tos_count_tMap_34++;

/**
 * [tMap_34 main ] stop
 */
	
	/**
	 * [tMap_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_APORTE"
if(TIEMPO_PART_APORTE != null) { 



	
	/**
	 * [tSortRow_6_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_APORTE"
						
						);
					}
					



	ComparableTIEMPO_PART_APORTEStruct arrayRowtSortRow_6_SortOut = new ComparableTIEMPO_PART_APORTEStruct();

	arrayRowtSortRow_6_SortOut.ID = TIEMPO_PART_APORTE.ID;
	arrayRowtSortRow_6_SortOut.TIPO_RECAUDO_ID = TIEMPO_PART_APORTE.TIPO_RECAUDO_ID;
	arrayRowtSortRow_6_SortOut.FECHA = TIEMPO_PART_APORTE.FECHA;
	arrayRowtSortRow_6_SortOut.PERIODO = TIEMPO_PART_APORTE.PERIODO;
	arrayRowtSortRow_6_SortOut.Anio = TIEMPO_PART_APORTE.Anio;
	arrayRowtSortRow_6_SortOut.Mes = TIEMPO_PART_APORTE.Mes;
	arrayRowtSortRow_6_SortOut.Dia = TIEMPO_PART_APORTE.Dia;	
	list_tSortRow_6_SortOut.add(arrayRowtSortRow_6_SortOut);

 


	tos_count_tSortRow_6_SortOut++;

/**
 * [tSortRow_6_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_APORTE"




	
	/**
	 * [tMap_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_end ] stop
 */

} // End of branch "TIEMPO_APORTE"




// Start of branch "TIPODOC_APORTES"
if(TIPODOC_APORTES != null) { 



	
	/**
	 * [tReplicate_2 main ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_APORTES"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row38.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row38.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row38.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row38.PERIODO = TIPODOC_APORTES.PERIODO;								
	row38.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row38.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row38.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row38.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row38.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row38.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row38.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row38.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row38.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row38.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row38.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row38.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row38.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row38.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row38.IBC = TIPODOC_APORTES.IBC;								
	row38.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row38.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row38.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row38.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row38.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row38.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row38.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row38.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row38.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			
	row51 = new row51Struct();
						
	row51.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row51.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row51.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row51.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row51.PERIODO = TIPODOC_APORTES.PERIODO;								
	row51.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row51.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row51.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row51.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row51.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row51.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row51.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row51.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row51.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row51.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row51.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row51.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row51.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row51.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row51.IBC = TIPODOC_APORTES.IBC;								
	row51.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row51.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row51.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row51.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row51.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row51.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row51.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row51.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row51.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			


 


	tos_count_tReplicate_2++;

/**
 * [tReplicate_2 main ] stop
 */
	
	/**
	 * [tReplicate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.TIPO_RECAUDO = row38.TIPO_RECAUDO;
			operation_finder_tAggregateRow_4.CARGUE_ID = row38.CARGUE_ID;
			operation_finder_tAggregateRow_4.ENTAPORTANTES_ID = row38.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID = row38.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_4.PERIODO = row38.PERIODO;
			operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE = row38.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_4.NOMBRE_VINCULACION = row38.NOMBRE_VINCULACION;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.TIPO_RECAUDO = operation_finder_tAggregateRow_4.TIPO_RECAUDO;
				operation_result_tAggregateRow_4.CARGUE_ID = operation_finder_tAggregateRow_4.CARGUE_ID;
				operation_result_tAggregateRow_4.ENTAPORTANTES_ID = operation_finder_tAggregateRow_4.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_4.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_4.PERIODO = operation_finder_tAggregateRow_4.PERIODO;
				operation_result_tAggregateRow_4.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_4.NOMBRE_VINCULACION = operation_finder_tAggregateRow_4.NOMBRE_VINCULACION;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				if(row38.SALUD_ID != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.SALUD_ID_clmCount++;
				operation_result_tAggregateRow_4.count++;
				
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADO != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADO
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADOR != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADOR
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

XXX = null;


// # Output table : 'XXX'
// # Filter conditions 
if( 

row51.REGIMEN_LABORAL_ID != null

 ) {
XXX_tmp.ENTIDAD_APORTANTE_ID = row51.ENTAPORTANTES_ID ;
XXX_tmp.TIEMPO_ID = row51.CARGUE_ID ;
XXX_tmp.REGIMEN_LABORAL_ID = row51.REGIMEN_LABORAL_ID ;
XXX_tmp.TIPO_RECAUDO_ID = row51.TIPO_RECAUDO ;
XXX_tmp.AFILIADO_ID = row51.AFILIADOS_ID ;
XXX_tmp.NOMBRE_ENTAPORTANTE = row51.NOMBRE_ENTAPORTANTE ;
XXX_tmp.NOMBRE_TIPO_DOCUENTO = row51.NOMBRE_TIPO_DOCUENTO ;
XXX_tmp.NUMERO_DOCUMENTO = row51.DOCUMENTO ;
XXX_tmp.NOMBRE_COTIZANTE = row51.NOMBRE_COTIZANTE ;
XXX_tmp.NOMBRE_UNIDAD_MILITAR = row51.NOMBRE_UNIDADMIL ;
XXX_tmp.NOMBRE_GRADO_MILITAR = row51.NOMBRE_GRADOMIL ;
XXX_tmp.NOMBRE_VINCULACION = row51.NOMBRE_VINCULACION ;
XXX_tmp.FECHA_INGRESO = row51.FECHA_INGRESO ;
XXX_tmp.SALARIO_BASICO = row51.SALARIO_BASICO ;
XXX_tmp.SUBSIDIO_FAMILIAR = row51.SUBSIDIO_FAMILIAR ;
XXX_tmp.IBC = row51.IBC ;
XXX_tmp.NUMERO_DIAS = row51.DIAS_COTIZADOS ;
XXX_tmp.APORTE_EMPLEADO = row51.APORTE_EMPLEADO ;
XXX_tmp.PORCENTAJE_EMPLEADO = row51.PORCENTAJE_EMPLEADO ;
XXX_tmp.APORTE_EMPLEADOR = row51.APORTE_EMPLEADOR ;
XXX_tmp.PORCENTAJE_EMPLEADOR = row51.PORCENTAJE_EMPLEADOR ;
XXX_tmp.APORTE_FOSYGA = row51.APORTE_FOSYGA ;
XXX_tmp.PORCENTAJE_FOSYGA = row51.PORCENTAJE_FOSYGA ;
XXX_tmp.PERIODO = row51.PERIODO ;
XXX_tmp.TVINCULACIONES_ID = row51.TVINCULACIONES_ID ;
XXX_tmp.NOVEDADES = row51.NOVEDADES ;
XXX = XXX_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "XXX"
if(XXX != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"XXX"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                        pstmt_tOracleOutput_9.setBigDecimal(1, XXX.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(2, XXX.TIEMPO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(3, XXX.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_9.setInt(4, XXX.TIPO_RECAUDO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(5, XXX.AFILIADO_ID);

                        if(XXX.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_9.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(6, XXX.NOMBRE_ENTAPORTANTE);
}

                        if(XXX.NOMBRE_TIPO_DOCUENTO == null) {
pstmt_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(7, XXX.NOMBRE_TIPO_DOCUENTO);
}

                        if(XXX.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(8, XXX.NUMERO_DOCUMENTO);
}

                        if(XXX.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(9, XXX.NOMBRE_COTIZANTE);
}

                        if(XXX.NOMBRE_UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(10, XXX.NOMBRE_UNIDAD_MILITAR);
}

                        if(XXX.NOMBRE_GRADO_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(11, XXX.NOMBRE_GRADO_MILITAR);
}

                        if(XXX.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(12, XXX.NOMBRE_VINCULACION);
}

                        if(XXX.FECHA_INGRESO != null) {
pstmt_tOracleOutput_9.setObject(13, new java.sql.Timestamp(XXX.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_9.setNull(13, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_9.setBigDecimal(14, XXX.SALARIO_BASICO);

                        pstmt_tOracleOutput_9.setBigDecimal(15, XXX.SUBSIDIO_FAMILIAR);

                        pstmt_tOracleOutput_9.setBigDecimal(16, XXX.IBC);

                        pstmt_tOracleOutput_9.setBigDecimal(17, XXX.NUMERO_DIAS);

                        pstmt_tOracleOutput_9.setBigDecimal(18, XXX.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(19, XXX.PORCENTAJE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(20, XXX.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(21, XXX.PORCENTAJE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(22, XXX.APORTE_FOSYGA);

                        pstmt_tOracleOutput_9.setBigDecimal(23, XXX.PORCENTAJE_FOSYGA);

                        if(XXX.PERIODO == null) {
pstmt_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(24, XXX.PERIODO);
}

                        pstmt_tOracleOutput_9.setBigDecimal(25, XXX.TVINCULACIONES_ID);

                        if(XXX.NOVEDADES == null) {
pstmt_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(26, XXX.NOVEDADES);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "XXX"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_end ] stop
 */

} // End of branch "TIPODOC_APORTES"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tUnite_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_end ] stop
 */

} // End of branch "RECAUDO_APORTE_SALUD"




// Start of branch "UpdGEN_PERSONAS"
if(UpdGEN_PERSONAS != null) { 



	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"UpdGEN_PERSONAS"
						
						);
					}
					



	ComparableUpdGEN_PERSONASStruct arrayRowtSortRow_1_SortOut = new ComparableUpdGEN_PERSONASStruct();

	arrayRowtSortRow_1_SortOut.AFILIADOS_ID = UpdGEN_PERSONAS.AFILIADOS_ID;
	arrayRowtSortRow_1_SortOut.SUBSIDIO_FAMILIAR = UpdGEN_PERSONAS.SUBSIDIO_FAMILIAR;
	arrayRowtSortRow_1_SortOut.SALARIO_BASE = UpdGEN_PERSONAS.SALARIO_BASE;
	arrayRowtSortRow_1_SortOut.FECHA_INGRESO = UpdGEN_PERSONAS.FECHA_INGRESO;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */

} // End of branch "UpdGEN_PERSONAS"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_28 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

}
}finally{
	if (rs_tOracleInput_28 != null) {
		rs_tOracleInput_28.close();
	}
	if (stmt_tOracleInput_28 != null) {
		stmt_tOracleInput_28.close();
	}
}

globalMap.put("tOracleInput_28_NB_LINE",nb_line_tOracleInput_28);
 

ok_Hash.put("tOracleInput_28", true);
end_Hash.put("tOracleInput_28", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_28", end_Hash.get("tOracleInput_28")-start_Hash.get("tOracleInput_28"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_28 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

UpdGEN_PERSONASStruct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new ComparableUpdGEN_PERSONASStruct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"UpdGEN_PERSONAS");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */




	
	/**
	 * [tOracleOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_11", false);
		start_Hash.put("tOracleOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Upd");
					}
				
		int tos_count_tOracleOutput_11 = 0;
		






        int updateKeyCount_tOracleOutput_11 = 1;
        if(updateKeyCount_tOracleOutput_11 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_11 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_11 = 0;
    int nb_line_update_tOracleOutput_11 = 0;
    int nb_line_inserted_tOracleOutput_11 = 0;
    int nb_line_deleted_tOracleOutput_11 = 0;
    int nb_line_rejected_tOracleOutput_11 = 0;

    int tmp_batchUpdateCount_tOracleOutput_11 = 0;

    int deletedCount_tOracleOutput_11=0;
    int updatedCount_tOracleOutput_11=0;
    int insertedCount_tOracleOutput_11=0;
    int rowsToCommitCount_tOracleOutput_11=0;
    int rejectedCount_tOracleOutput_11=0;

    boolean whetherReject_tOracleOutput_11 = false;

    java.sql.Connection conn_tOracleOutput_11 = null;

    //optional table
    String dbschema_tOracleOutput_11 = null;
    String tableName_tOracleOutput_11 = null;
        dbschema_tOracleOutput_11 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_11=0;

        if(dbschema_tOracleOutput_11 == null || dbschema_tOracleOutput_11.trim().length() == 0) {
            tableName_tOracleOutput_11 = ("BGEN_PERSONAS");
        } else {
            tableName_tOracleOutput_11 = dbschema_tOracleOutput_11 + "." + ("BGEN_PERSONAS");
        }
                String update_tOracleOutput_11 = "UPDATE " + tableName_tOracleOutput_11 + " SET SUBSIDIO_FAMILIAR = ?,SALARIO_BASE = ? WHERE AFILIADOS_ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_11 = conn_tOracleOutput_11.prepareStatement(update_tOracleOutput_11);
                resourceMap.put("pstmt_tOracleOutput_11", pstmt_tOracleOutput_11);





 



/**
 * [tOracleOutput_11 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row88");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
UpdStruct Upd_tmp = new UpdStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tUniqRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_6", false);
		start_Hash.put("tUniqRow_6", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row87");
					}
				
		int tos_count_tUniqRow_6 = 0;
		

	
		class KeyStruct_tUniqRow_6 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal AFILIADOS_ID;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.AFILIADOS_ID == null) ? 0 : this.AFILIADOS_ID.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_6 other = (KeyStruct_tUniqRow_6) obj;
				
									if (this.AFILIADOS_ID == null) {
										if (other.AFILIADOS_ID != null) 
											return false;
								
									} else if (!this.AFILIADOS_ID.equals(other.AFILIADOS_ID))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_6 = 0;
int nb_duplicates_tUniqRow_6 = 0;
KeyStruct_tUniqRow_6 finder_tUniqRow_6 = new KeyStruct_tUniqRow_6();
java.util.Set<KeyStruct_tUniqRow_6> keystUniqRow_6 = new java.util.HashSet<KeyStruct_tUniqRow_6>(); 

 



/**
 * [tUniqRow_6 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


UpdGEN_PERSONASStruct[] array_tSortRow_1_SortIn = (UpdGEN_PERSONASStruct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

UpdGEN_PERSONASStruct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row87.AFILIADOS_ID = current_tSortRow_1_SortIn.AFILIADOS_ID;
	row87.SUBSIDIO_FAMILIAR = current_tSortRow_1_SortIn.SUBSIDIO_FAMILIAR;
	row87.SALARIO_BASE = current_tSortRow_1_SortIn.SALARIO_BASE;
	row87.FECHA_INGRESO = current_tSortRow_1_SortIn.FECHA_INGRESO;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_6 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row87"
						
						);
					}
					
row88 = null;			
finder_tUniqRow_6.AFILIADOS_ID = row87.AFILIADOS_ID;	
finder_tUniqRow_6.hashCodeDirty = true;
if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
		KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

		
new_tUniqRow_6.AFILIADOS_ID = row87.AFILIADOS_ID;
		
		keystUniqRow_6.add(new_tUniqRow_6);if(row88 == null){ 
	
	row88 = new row88Struct();
}row88.AFILIADOS_ID = row87.AFILIADOS_ID;			row88.SUBSIDIO_FAMILIAR = row87.SUBSIDIO_FAMILIAR;			row88.SALARIO_BASE = row87.SALARIO_BASE;			row88.FECHA_INGRESO = row87.FECHA_INGRESO;					
		nb_uniques_tUniqRow_6++;
	} else {
	  nb_duplicates_tUniqRow_6++;
	}

 


	tos_count_tUniqRow_6++;

/**
 * [tUniqRow_6 main ] stop
 */
	
	/**
	 * [tUniqRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";
	
	

 



/**
 * [tUniqRow_6 process_data_begin ] stop
 */
// Start of branch "row88"
if(row88 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row88"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

Upd = null;


// # Output table : 'Upd'
Upd_tmp.AFILIADOS_ID = row88.AFILIADOS_ID ;
Upd_tmp.SUBSIDIO_FAMILIAR = row88.SUBSIDIO_FAMILIAR ;
Upd_tmp.SALARIO_BASE = row88.SALARIO_BASE ;
Upd = Upd_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "Upd"
if(Upd != null) { 



	
	/**
	 * [tOracleOutput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Upd"
						
						);
					}
					



        whetherReject_tOracleOutput_11 = false;
                    pstmt_tOracleOutput_11.setBigDecimal(1, Upd.SUBSIDIO_FAMILIAR);

                    pstmt_tOracleOutput_11.setBigDecimal(2, Upd.SALARIO_BASE);


                    pstmt_tOracleOutput_11.setBigDecimal(3 + count_tOracleOutput_11, Upd.AFILIADOS_ID);

                try {
                    nb_line_tOracleOutput_11++;
                    int processedCount_tOracleOutput_11 = pstmt_tOracleOutput_11.executeUpdate();
                    updatedCount_tOracleOutput_11 += processedCount_tOracleOutput_11;
                    rowsToCommitCount_tOracleOutput_11 += processedCount_tOracleOutput_11;
                } catch(java.lang.Exception e_tOracleOutput_11) {
globalMap.put("tOracleOutput_11_ERROR_MESSAGE",e_tOracleOutput_11.getMessage());
                    whetherReject_tOracleOutput_11 = true;
                            System.err.print(e_tOracleOutput_11.getMessage());
                }

 


	tos_count_tOracleOutput_11++;

/**
 * [tOracleOutput_11 main ] stop
 */
	
	/**
	 * [tOracleOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	

 



/**
 * [tOracleOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	

 



/**
 * [tOracleOutput_11 process_data_end ] stop
 */

} // End of branch "Upd"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row88"




	
	/**
	 * [tUniqRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";
	
	

 



/**
 * [tUniqRow_6 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tUniqRow_6 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";
	
	

globalMap.put("tUniqRow_6_NB_UNIQUES",nb_uniques_tUniqRow_6);
globalMap.put("tUniqRow_6_NB_DUPLICATES",nb_duplicates_tUniqRow_6);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row87");
			  	}
			  	
 

ok_Hash.put("tUniqRow_6", true);
end_Hash.put("tUniqRow_6", System.currentTimeMillis());




/**
 * [tUniqRow_6 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row88");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tOracleOutput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	
	



	
        if(pstmt_tOracleOutput_11 != null) {
			
				pstmt_tOracleOutput_11.close();
				resourceMap.remove("pstmt_tOracleOutput_11");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_11", true);

	
	nb_line_deleted_tOracleOutput_11=nb_line_deleted_tOracleOutput_11+ deletedCount_tOracleOutput_11;
	nb_line_update_tOracleOutput_11=nb_line_update_tOracleOutput_11 + updatedCount_tOracleOutput_11;
	nb_line_inserted_tOracleOutput_11=nb_line_inserted_tOracleOutput_11 + insertedCount_tOracleOutput_11;
	nb_line_rejected_tOracleOutput_11=nb_line_rejected_tOracleOutput_11 + rejectedCount_tOracleOutput_11;
	
        globalMap.put("tOracleOutput_11_NB_LINE",nb_line_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_UPDATED",nb_line_update_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_11);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Upd");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_11", true);
end_Hash.put("tOracleOutput_11", System.currentTimeMillis());




/**
 * [tOracleOutput_11 end ] stop
 */



















	
	/**
	 * [tMap_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_24", false);
		start_Hash.put("tMap_24", System.currentTimeMillis());
		
	
	currentComponent="tMap_24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_24 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_24__Struct  {
	int TIPO_RECAUDO;
}
Var__tMap_24__Struct Var__tMap_24 = new Var__tMap_24__Struct();
// ###############################

// ###############################
// # Outputs initialization
RECAUDO_APORTE_ATEPStruct RECAUDO_APORTE_ATEP_tmp = new RECAUDO_APORTE_ATEPStruct();
// ###############################

        
        



        









 



/**
 * [tMap_24 begin ] stop
 */



	
	/**
	 * [tOracleInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_29", false);
		start_Hash.put("tOracleInput_29", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_29");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_29";
	
	
		int tos_count_tOracleInput_29 = 0;
		
	


	
		    int nb_line_tOracleInput_29 = 0;
		    java.sql.Connection conn_tOracleInput_29 = null;
				conn_tOracleInput_29 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_29 = false;
				boolean isConnectionWrapped_tOracleInput_29 = !(conn_tOracleInput_29 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_29.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_29 = null;
                if (isConnectionWrapped_tOracleInput_29) {
					unwrappedOraConn_tOracleInput_29 = conn_tOracleInput_29.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_29 != null) {
                        isTimeZoneNull_tOracleInput_29 = (unwrappedOraConn_tOracleInput_29.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_29 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_29).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_29) {
					java.sql.Statement stmtGetTZ_tOracleInput_29 = conn_tOracleInput_29.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_29 = stmtGetTZ_tOracleInput_29.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_29 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_29.next()) {
						sessionTimezone_tOracleInput_29 = rsGetTZ_tOracleInput_29.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_29 && unwrappedOraConn_tOracleInput_29 != null) {
                        unwrappedOraConn_tOracleInput_29.setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_29).setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_29 = conn_tOracleInput_29.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_29.setFetchSize(1000);


		    String dbquery_tOracleInput_29 = "SELECT CG.ID CARGUE_ID, CG.PERIODO, CG.ENTAPORTANTES_ID, TV.ID REGIMEN_LABORAL_ID, DS.ID SALUD_ID, DS.AENTIDADES_ID,\n "
+" DS.AFILIADOS_ID,\n  DS.TDOCUMENTOS_ID, DS.DOCUMENTO, \n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBRE, DS.SEGUNDO_NOMBRE"
+", DS.PRIMER_APELLIDO,\n  DS.SEGUNDO_APELLIDO) NOMBRE_COTIZANTE, \n  UM.NOMBRE NOMBRE_UNIDADMIL, \n  GM.NOMBRE NOMBRE_GRA"
+"DOMIL, \n  DS.FECHA_INGRESO, \n  DS.DIAS_COTIZADOS_ARL DIAS_COTIZADOS, \n  DS.SALARIO_BASICO, DS.SUBSIDIO_FAMILIAR, DS.I"
+"BC, \n  DS.COTIZACION_EMPLEADO_EPS APORTE_EMPLEADO, \n  DS.POR_EMPLEADO_EPS PORCENTAJE_EMPLEADO,  \n  DS.COTIZACION_EMPL"
+"EADOR_ARL APORTE_EMPLEADOR,    \n  DS.PORC_EMPLEADOR_ARL PORCENTAJE_EMPLEADOR,  \n  DS.PAGO_INFFOSYGA APORTE_FOSYGA, \n "
+" DS.PORC_INFFOSYGA PORCENTAJE_FOSYGA,   \n  TV.NOMBRE NOMBRE_VINCULACION,\n  DS.TVINCULACIONES_ID AS TVINCULACIONES_ID,"
+"\n  NVL((SELECT LISTAGG(TNOVEDADES.SIGLA,\n  '; ') WITHIN GROUP(ORDER BY TNOVEDADES.SIGLA) NOVEDADES\n                   "
+"  FROM REC_NOVEDADES NOVEDADES\n                    INNER JOIN GEN_TNOVEDADES TNOVEDADES\n                       ON TNOV"
+"EDADES.ID = NOVEDADES.TNOVEDADES_ID\n                    WHERE NOVEDADES.DSALUD_ID = DS.ID),\n                   'APO') "
+"AS NOVEDADES\nFROM VM_REC_CONSOLIDADO CG\nINNER JOIN REC_DSALUD DS ON DS.id = CG.Ds_Id\nLEFT JOIN AFI_TVINCULACIONES TV "
+"ON TV.ID = DS.TVINCULACIONES_ID AND TV.TVINCULACIONES = 'RC' AND TV.ESTREGISTRO_ID = 1\nLEFT JOIN GEN_GRDMILITARES GM ON"
+" GM.ID = DS.GRDMILITARES_ID AND GM.ESTREGISTRO_ID = 1\nLEFT JOIN GEN_UMILITARES UM ON UM.ID = DS.UMILITARES_ID AND UM.ES"
+"TREGISTRO_ID = 1\nWHERE\nCG.TPLANILLAS_ID = 1\nAND CG.TARCHIVOS_ID = 2\nAND DS.ESTREGISTRO_ID = 1\nAND CG.PERIODO = '" + context.PERIODO+ "'\nORDER BY CG.PERIODO, CG.ENTAPORTANTES_ID, DS.AENTIDADES_ID";
		    

		    globalMap.put("tOracleInput_29_QUERY",dbquery_tOracleInput_29);

		    java.sql.ResultSet rs_tOracleInput_29 = null;

		    try {
		    	rs_tOracleInput_29 = stmt_tOracleInput_29.executeQuery(dbquery_tOracleInput_29);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_29 = rs_tOracleInput_29.getMetaData();
		    	int colQtyInRs_tOracleInput_29 = rsmd_tOracleInput_29.getColumnCount();

		    String tmpContent_tOracleInput_29 = null;
		    
		    
		    while (rs_tOracleInput_29.next()) {
		        nb_line_tOracleInput_29++;
		        
							if(colQtyInRs_tOracleInput_29 < 1) {
								row3.CARGUE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(1) != null) {
						row3.CARGUE_ID = rs_tOracleInput_29.getBigDecimal(1);
					} else {
				
						row3.CARGUE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 2) {
								row3.PERIODO = null;
							} else {
	                         		
        	row3.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 3) {
								row3.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(3) != null) {
						row3.ENTAPORTANTES_ID = rs_tOracleInput_29.getBigDecimal(3);
					} else {
				
						row3.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 4) {
								row3.REGIMEN_LABORAL_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(4) != null) {
						row3.REGIMEN_LABORAL_ID = rs_tOracleInput_29.getBigDecimal(4);
					} else {
				
						row3.REGIMEN_LABORAL_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 5) {
								row3.SALUD_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(5) != null) {
						row3.SALUD_ID = rs_tOracleInput_29.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 6) {
								row3.AENTIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(6) != null) {
						row3.AENTIDADES_ID = rs_tOracleInput_29.getBigDecimal(6);
					} else {
				
						row3.AENTIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 7) {
								row3.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(7) != null) {
						row3.AFILIADOS_ID = rs_tOracleInput_29.getBigDecimal(7);
					} else {
				
						row3.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 8) {
								row3.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(8) != null) {
						row3.TDOCUMENTOS_ID = rs_tOracleInput_29.getBigDecimal(8);
					} else {
				
						row3.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 9) {
								row3.DOCUMENTO = null;
							} else {
	                         		
        	row3.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 10) {
								row3.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row3.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 11) {
								row3.NOMBRE_UNIDADMIL = null;
							} else {
	                         		
        	row3.NOMBRE_UNIDADMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 12) {
								row3.NOMBRE_GRADOMIL = null;
							} else {
	                         		
        	row3.NOMBRE_GRADOMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 13) {
								row3.FECHA_INGRESO = null;
							} else {
										
			row3.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_29, 13);
		                    }
							if(colQtyInRs_tOracleInput_29 < 14) {
								row3.DIAS_COTIZADOS = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(14) != null) {
						row3.DIAS_COTIZADOS = rs_tOracleInput_29.getBigDecimal(14);
					} else {
				
						row3.DIAS_COTIZADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 15) {
								row3.SALARIO_BASICO = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(15) != null) {
						row3.SALARIO_BASICO = rs_tOracleInput_29.getBigDecimal(15);
					} else {
				
						row3.SALARIO_BASICO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 16) {
								row3.SUBSIDIO_FAMILIAR = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(16) != null) {
						row3.SUBSIDIO_FAMILIAR = rs_tOracleInput_29.getBigDecimal(16);
					} else {
				
						row3.SUBSIDIO_FAMILIAR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 17) {
								row3.IBC = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(17) != null) {
						row3.IBC = rs_tOracleInput_29.getBigDecimal(17);
					} else {
				
						row3.IBC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 18) {
								row3.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(18) != null) {
						row3.APORTE_EMPLEADO = rs_tOracleInput_29.getBigDecimal(18);
					} else {
				
						row3.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 19) {
								row3.PORCENTAJE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(19) != null) {
						row3.PORCENTAJE_EMPLEADO = rs_tOracleInput_29.getBigDecimal(19);
					} else {
				
						row3.PORCENTAJE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 20) {
								row3.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(20) != null) {
						row3.APORTE_EMPLEADOR = rs_tOracleInput_29.getBigDecimal(20);
					} else {
				
						row3.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 21) {
								row3.PORCENTAJE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(21) != null) {
						row3.PORCENTAJE_EMPLEADOR = rs_tOracleInput_29.getBigDecimal(21);
					} else {
				
						row3.PORCENTAJE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 22) {
								row3.APORTE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(22) != null) {
						row3.APORTE_FOSYGA = rs_tOracleInput_29.getBigDecimal(22);
					} else {
				
						row3.APORTE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 23) {
								row3.PORCENTAJE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(23) != null) {
						row3.PORCENTAJE_FOSYGA = rs_tOracleInput_29.getBigDecimal(23);
					} else {
				
						row3.PORCENTAJE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 24) {
								row3.NOMBRE_VINCULACION = null;
							} else {
	                         		
        	row3.NOMBRE_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 25) {
								row3.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(25) != null) {
						row3.TVINCULACIONES_ID = rs_tOracleInput_29.getBigDecimal(25);
					} else {
				
						row3.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 26) {
								row3.NOVEDADES = null;
							} else {
	                         		
        	row3.NOVEDADES = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 26, false);
		                    }
					




 



/**
 * [tOracleInput_29 begin ] stop
 */
	
	/**
	 * [tOracleInput_29 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 


	tos_count_tOracleInput_29++;

/**
 * [tOracleInput_29 main ] stop
 */
	
	/**
	 * [tOracleInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tMap_24 main ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_24 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_24 = false;
		boolean mainRowRejected_tMap_24 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_24__Struct Var = Var__tMap_24;
Var.TIPO_RECAUDO = 2;// ###############################
        // ###############################
        // # Output tables

RECAUDO_APORTE_ATEP = null;


// # Output table : 'RECAUDO_APORTE_ATEP'
RECAUDO_APORTE_ATEP_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RECAUDO_APORTE_ATEP_tmp.CARGUE_ID = row3.CARGUE_ID ;
RECAUDO_APORTE_ATEP_tmp.PERIODO = row3.PERIODO ;
RECAUDO_APORTE_ATEP_tmp.ENTAPORTANTES_ID = row3.ENTAPORTANTES_ID ;
RECAUDO_APORTE_ATEP_tmp.REGIMEN_LABORAL_ID = row3.REGIMEN_LABORAL_ID ;
RECAUDO_APORTE_ATEP_tmp.SALUD_ID = row3.SALUD_ID ;
RECAUDO_APORTE_ATEP_tmp.AENTIDADES_ID = row3.AENTIDADES_ID ;
RECAUDO_APORTE_ATEP_tmp.AFILIADOS_ID = row3.AFILIADOS_ID ;
RECAUDO_APORTE_ATEP_tmp.TDOCUMENTOS_ID = row3.TDOCUMENTOS_ID ;
RECAUDO_APORTE_ATEP_tmp.DOCUMENTO = row3.DOCUMENTO ;
RECAUDO_APORTE_ATEP_tmp.NOMBRE_COTIZANTE = row3.NOMBRE_COTIZANTE ;
RECAUDO_APORTE_ATEP_tmp.NOMBRE_UNIDADMIL = row3.NOMBRE_UNIDADMIL ;
RECAUDO_APORTE_ATEP_tmp.NOMBRE_GRADOMIL = row3.NOMBRE_GRADOMIL ;
RECAUDO_APORTE_ATEP_tmp.FECHA_INGRESO = row3.FECHA_INGRESO ;
RECAUDO_APORTE_ATEP_tmp.DIAS_COTIZADOS = row3.DIAS_COTIZADOS ;
RECAUDO_APORTE_ATEP_tmp.SALARIO_BASICO = row3.SALARIO_BASICO ;
RECAUDO_APORTE_ATEP_tmp.SUBSIDIO_FAMILIAR = row3.SUBSIDIO_FAMILIAR ;
RECAUDO_APORTE_ATEP_tmp.IBC = row3.IBC ;
RECAUDO_APORTE_ATEP_tmp.APORTE_EMPLEADO = row3.APORTE_EMPLEADO ;
RECAUDO_APORTE_ATEP_tmp.PORCENTAJE_EMPLEADO = row3.PORCENTAJE_EMPLEADO ;
RECAUDO_APORTE_ATEP_tmp.APORTE_EMPLEADOR = row3.APORTE_EMPLEADOR ;
RECAUDO_APORTE_ATEP_tmp.PORCENTAJE_EMPLEADOR = row3.PORCENTAJE_EMPLEADOR ;
RECAUDO_APORTE_ATEP_tmp.APORTE_FOSYGA = row3.APORTE_FOSYGA ;
RECAUDO_APORTE_ATEP_tmp.PORCENTAJE_FOSYGA = row3.PORCENTAJE_FOSYGA ;
RECAUDO_APORTE_ATEP_tmp.NOMBRE_VINCULACION = row3.NOMBRE_VINCULACION ;
RECAUDO_APORTE_ATEP_tmp.TVINCULACIONES_ID = row3.TVINCULACIONES_ID ;
RECAUDO_APORTE_ATEP = RECAUDO_APORTE_ATEP_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_24 = false;










 


	tos_count_tMap_24++;

/**
 * [tMap_24 main ] stop
 */
	
	/**
	 * [tMap_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 process_data_begin ] stop
 */
// Start of branch "RECAUDO_APORTE_ATEP"
if(RECAUDO_APORTE_ATEP != null) { 



	
	/**
	 * [tUnite_2 main ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RECAUDO_APORTE_ATEP"
									
							);
						}
						
//////////
 

// for output
			row6 = new row6Struct();
								
			row6.TIPO_RECAUDO = RECAUDO_APORTE_ATEP.TIPO_RECAUDO;								
			row6.CARGUE_ID = RECAUDO_APORTE_ATEP.CARGUE_ID;								
			row6.PERIODO = RECAUDO_APORTE_ATEP.PERIODO;								
			row6.ENTAPORTANTES_ID = RECAUDO_APORTE_ATEP.ENTAPORTANTES_ID;								
			row6.REGIMEN_LABORAL_ID = RECAUDO_APORTE_ATEP.REGIMEN_LABORAL_ID;								
			row6.SALUD_ID = RECAUDO_APORTE_ATEP.SALUD_ID;								
			row6.AENTIDADES_ID = RECAUDO_APORTE_ATEP.AENTIDADES_ID;								
			row6.AFILIADOS_ID = RECAUDO_APORTE_ATEP.AFILIADOS_ID;								
			row6.TDOCUMENTOS_ID = RECAUDO_APORTE_ATEP.TDOCUMENTOS_ID;								
			row6.DOCUMENTO = RECAUDO_APORTE_ATEP.DOCUMENTO;								
			row6.NOMBRE_COTIZANTE = RECAUDO_APORTE_ATEP.NOMBRE_COTIZANTE;								
			row6.NOMBRE_UNIDADMIL = RECAUDO_APORTE_ATEP.NOMBRE_UNIDADMIL;								
			row6.NOMBRE_GRADOMIL = RECAUDO_APORTE_ATEP.NOMBRE_GRADOMIL;								
			row6.FECHA_INGRESO = RECAUDO_APORTE_ATEP.FECHA_INGRESO;								
			row6.DIAS_COTIZADOS = RECAUDO_APORTE_ATEP.DIAS_COTIZADOS;								
			row6.SALARIO_BASICO = RECAUDO_APORTE_ATEP.SALARIO_BASICO;								
			row6.SUBSIDIO_FAMILIAR = RECAUDO_APORTE_ATEP.SUBSIDIO_FAMILIAR;								
			row6.IBC = RECAUDO_APORTE_ATEP.IBC;								
			row6.APORTE_EMPLEADO = RECAUDO_APORTE_ATEP.APORTE_EMPLEADO;								
			row6.PORCENTAJE_EMPLEADO = RECAUDO_APORTE_ATEP.PORCENTAJE_EMPLEADO;								
			row6.APORTE_EMPLEADOR = RECAUDO_APORTE_ATEP.APORTE_EMPLEADOR;								
			row6.PORCENTAJE_EMPLEADOR = RECAUDO_APORTE_ATEP.PORCENTAJE_EMPLEADOR;								
			row6.APORTE_FOSYGA = RECAUDO_APORTE_ATEP.APORTE_FOSYGA;								
			row6.PORCENTAJE_FOSYGA = RECAUDO_APORTE_ATEP.PORCENTAJE_FOSYGA;								
			row6.NOMBRE_VINCULACION = RECAUDO_APORTE_ATEP.NOMBRE_VINCULACION;								
			row6.TVINCULACIONES_ID = RECAUDO_APORTE_ATEP.TVINCULACIONES_ID;			

			nb_line_tUnite_2++;

//////////
 


	tos_count_tUnite_2++;

/**
 * [tUnite_2 main ] stop
 */
	
	/**
	 * [tUnite_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		
						row14Struct row14 = null;
					
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_32 = false;
		boolean mainRowRejected_tMap_32 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row14HashKey.ID = row6.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.ID = '" + row14HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row13HashKey.ID = row6.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.ID = '" + row13HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;
Var.var2 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row6.PERIODO + "-01")))) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_APORTE = null;
TIPODOC_APORTES = null;


// # Output table : 'TIEMPO_APORTE'
TIEMPO_APORTE_tmp.SALUD_ID = row6.CARGUE_ID ;
TIEMPO_APORTE_tmp.PERIODO = row6.PERIODO ;
TIEMPO_APORTE_tmp.FECHA = Var.var2 ;
TIEMPO_APORTE_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIEMPO_APORTE = TIEMPO_APORTE_tmp;

// # Output table : 'TIPODOC_APORTES'
TIPODOC_APORTES_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIPODOC_APORTES_tmp.CARGUE_ID = row6.CARGUE_ID ;
TIPODOC_APORTES_tmp.ENTAPORTANTES_ID = row6.ENTAPORTANTES_ID ;
TIPODOC_APORTES_tmp.REGIMEN_LABORAL_ID = row6.REGIMEN_LABORAL_ID ;
TIPODOC_APORTES_tmp.PERIODO = row6.PERIODO ;
TIPODOC_APORTES_tmp.NOMBRE_ENTAPORTANTE = row13.NOMBRE ;
TIPODOC_APORTES_tmp.DOCUMENTO_ENTAPORTANTE = row13.DOCUMENTO ;
TIPODOC_APORTES_tmp.SALUD_ID = row6.SALUD_ID ;
TIPODOC_APORTES_tmp.AENTIDADES_ID = row6.AENTIDADES_ID ;
TIPODOC_APORTES_tmp.AFILIADOS_ID = row6.AFILIADOS_ID ;
TIPODOC_APORTES_tmp.NOMBRE_TIPO_DOCUENTO = row14.SIGLA ;
TIPODOC_APORTES_tmp.DOCUMENTO = row6.DOCUMENTO ;
TIPODOC_APORTES_tmp.NOMBRE_COTIZANTE = row6.NOMBRE_COTIZANTE ;
TIPODOC_APORTES_tmp.NOMBRE_UNIDADMIL = row6.NOMBRE_UNIDADMIL ;
TIPODOC_APORTES_tmp.NOMBRE_GRADOMIL = row6.NOMBRE_GRADOMIL ;
TIPODOC_APORTES_tmp.FECHA_INGRESO = row6.FECHA_INGRESO ;
TIPODOC_APORTES_tmp.DIAS_COTIZADOS = row6.DIAS_COTIZADOS ;
TIPODOC_APORTES_tmp.SALARIO_BASICO = row6.SALARIO_BASICO ;
TIPODOC_APORTES_tmp.SUBSIDIO_FAMILIAR = row6.SUBSIDIO_FAMILIAR ;
TIPODOC_APORTES_tmp.IBC = row6.IBC ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADO = row6.APORTE_EMPLEADO ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADO = row6.PORCENTAJE_EMPLEADO ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADOR = row6.APORTE_EMPLEADOR ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADOR = row6.PORCENTAJE_EMPLEADOR ;
TIPODOC_APORTES_tmp.APORTE_FOSYGA = row6.APORTE_FOSYGA ;
TIPODOC_APORTES_tmp.PORCENTAJE_FOSYGA = row6.PORCENTAJE_FOSYGA ;
TIPODOC_APORTES_tmp.NOMBRE_VINCULACION = row6.NOMBRE_VINCULACION ;
TIPODOC_APORTES_tmp.TVINCULACIONES_ID = row6.TVINCULACIONES_ID ;
TIPODOC_APORTES_tmp.NOVEDADES = row6.NOVEDADES ;
TIPODOC_APORTES = TIPODOC_APORTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "TIEMPO_APORTE"
if(TIEMPO_APORTE != null) { 



	
	/**
	 * [tMap_34 main ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_APORTE"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_34 = false;
		boolean mainRowRejected_tMap_34 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_34__Struct Var = Var__tMap_34;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_APORTE = null;


// # Output table : 'TIEMPO_PART_APORTE'
TIEMPO_PART_APORTE_tmp.ID = TIEMPO_APORTE.SALUD_ID ;
TIEMPO_PART_APORTE_tmp.TIPO_RECAUDO_ID = TIEMPO_APORTE.TIPO_RECAUDO ;
TIEMPO_PART_APORTE_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_APORTE_tmp.PERIODO = TIEMPO_APORTE.PERIODO ;
TIEMPO_PART_APORTE_tmp.Anio = Var.Anio ;
TIEMPO_PART_APORTE_tmp.Mes = Var.Mes ;
TIEMPO_PART_APORTE_tmp.Dia = Var.Dia ;
TIEMPO_PART_APORTE = TIEMPO_PART_APORTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_34 = false;










 


	tos_count_tMap_34++;

/**
 * [tMap_34 main ] stop
 */
	
	/**
	 * [tMap_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_APORTE"
if(TIEMPO_PART_APORTE != null) { 



	
	/**
	 * [tSortRow_6_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_APORTE"
						
						);
					}
					



	ComparableTIEMPO_PART_APORTEStruct arrayRowtSortRow_6_SortOut = new ComparableTIEMPO_PART_APORTEStruct();

	arrayRowtSortRow_6_SortOut.ID = TIEMPO_PART_APORTE.ID;
	arrayRowtSortRow_6_SortOut.TIPO_RECAUDO_ID = TIEMPO_PART_APORTE.TIPO_RECAUDO_ID;
	arrayRowtSortRow_6_SortOut.FECHA = TIEMPO_PART_APORTE.FECHA;
	arrayRowtSortRow_6_SortOut.PERIODO = TIEMPO_PART_APORTE.PERIODO;
	arrayRowtSortRow_6_SortOut.Anio = TIEMPO_PART_APORTE.Anio;
	arrayRowtSortRow_6_SortOut.Mes = TIEMPO_PART_APORTE.Mes;
	arrayRowtSortRow_6_SortOut.Dia = TIEMPO_PART_APORTE.Dia;	
	list_tSortRow_6_SortOut.add(arrayRowtSortRow_6_SortOut);

 


	tos_count_tSortRow_6_SortOut++;

/**
 * [tSortRow_6_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_APORTE"




	
	/**
	 * [tMap_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_end ] stop
 */

} // End of branch "TIEMPO_APORTE"




// Start of branch "TIPODOC_APORTES"
if(TIPODOC_APORTES != null) { 



	
	/**
	 * [tReplicate_2 main ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_APORTES"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row38.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row38.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row38.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row38.PERIODO = TIPODOC_APORTES.PERIODO;								
	row38.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row38.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row38.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row38.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row38.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row38.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row38.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row38.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row38.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row38.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row38.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row38.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row38.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row38.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row38.IBC = TIPODOC_APORTES.IBC;								
	row38.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row38.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row38.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row38.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row38.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row38.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row38.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row38.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row38.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			
	row51 = new row51Struct();
						
	row51.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row51.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row51.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row51.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row51.PERIODO = TIPODOC_APORTES.PERIODO;								
	row51.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row51.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row51.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row51.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row51.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row51.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row51.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row51.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row51.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row51.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row51.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row51.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row51.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row51.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row51.IBC = TIPODOC_APORTES.IBC;								
	row51.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row51.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row51.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row51.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row51.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row51.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row51.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row51.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row51.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			


 


	tos_count_tReplicate_2++;

/**
 * [tReplicate_2 main ] stop
 */
	
	/**
	 * [tReplicate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.TIPO_RECAUDO = row38.TIPO_RECAUDO;
			operation_finder_tAggregateRow_4.CARGUE_ID = row38.CARGUE_ID;
			operation_finder_tAggregateRow_4.ENTAPORTANTES_ID = row38.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID = row38.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_4.PERIODO = row38.PERIODO;
			operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE = row38.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_4.NOMBRE_VINCULACION = row38.NOMBRE_VINCULACION;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.TIPO_RECAUDO = operation_finder_tAggregateRow_4.TIPO_RECAUDO;
				operation_result_tAggregateRow_4.CARGUE_ID = operation_finder_tAggregateRow_4.CARGUE_ID;
				operation_result_tAggregateRow_4.ENTAPORTANTES_ID = operation_finder_tAggregateRow_4.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_4.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_4.PERIODO = operation_finder_tAggregateRow_4.PERIODO;
				operation_result_tAggregateRow_4.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_4.NOMBRE_VINCULACION = operation_finder_tAggregateRow_4.NOMBRE_VINCULACION;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				if(row38.SALUD_ID != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.SALUD_ID_clmCount++;
				operation_result_tAggregateRow_4.count++;
				
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADO != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADO
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADOR != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADOR
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

XXX = null;


// # Output table : 'XXX'
// # Filter conditions 
if( 

row51.REGIMEN_LABORAL_ID != null

 ) {
XXX_tmp.ENTIDAD_APORTANTE_ID = row51.ENTAPORTANTES_ID ;
XXX_tmp.TIEMPO_ID = row51.CARGUE_ID ;
XXX_tmp.REGIMEN_LABORAL_ID = row51.REGIMEN_LABORAL_ID ;
XXX_tmp.TIPO_RECAUDO_ID = row51.TIPO_RECAUDO ;
XXX_tmp.AFILIADO_ID = row51.AFILIADOS_ID ;
XXX_tmp.NOMBRE_ENTAPORTANTE = row51.NOMBRE_ENTAPORTANTE ;
XXX_tmp.NOMBRE_TIPO_DOCUENTO = row51.NOMBRE_TIPO_DOCUENTO ;
XXX_tmp.NUMERO_DOCUMENTO = row51.DOCUMENTO ;
XXX_tmp.NOMBRE_COTIZANTE = row51.NOMBRE_COTIZANTE ;
XXX_tmp.NOMBRE_UNIDAD_MILITAR = row51.NOMBRE_UNIDADMIL ;
XXX_tmp.NOMBRE_GRADO_MILITAR = row51.NOMBRE_GRADOMIL ;
XXX_tmp.NOMBRE_VINCULACION = row51.NOMBRE_VINCULACION ;
XXX_tmp.FECHA_INGRESO = row51.FECHA_INGRESO ;
XXX_tmp.SALARIO_BASICO = row51.SALARIO_BASICO ;
XXX_tmp.SUBSIDIO_FAMILIAR = row51.SUBSIDIO_FAMILIAR ;
XXX_tmp.IBC = row51.IBC ;
XXX_tmp.NUMERO_DIAS = row51.DIAS_COTIZADOS ;
XXX_tmp.APORTE_EMPLEADO = row51.APORTE_EMPLEADO ;
XXX_tmp.PORCENTAJE_EMPLEADO = row51.PORCENTAJE_EMPLEADO ;
XXX_tmp.APORTE_EMPLEADOR = row51.APORTE_EMPLEADOR ;
XXX_tmp.PORCENTAJE_EMPLEADOR = row51.PORCENTAJE_EMPLEADOR ;
XXX_tmp.APORTE_FOSYGA = row51.APORTE_FOSYGA ;
XXX_tmp.PORCENTAJE_FOSYGA = row51.PORCENTAJE_FOSYGA ;
XXX_tmp.PERIODO = row51.PERIODO ;
XXX_tmp.TVINCULACIONES_ID = row51.TVINCULACIONES_ID ;
XXX_tmp.NOVEDADES = row51.NOVEDADES ;
XXX = XXX_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "XXX"
if(XXX != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"XXX"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                        pstmt_tOracleOutput_9.setBigDecimal(1, XXX.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(2, XXX.TIEMPO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(3, XXX.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_9.setInt(4, XXX.TIPO_RECAUDO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(5, XXX.AFILIADO_ID);

                        if(XXX.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_9.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(6, XXX.NOMBRE_ENTAPORTANTE);
}

                        if(XXX.NOMBRE_TIPO_DOCUENTO == null) {
pstmt_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(7, XXX.NOMBRE_TIPO_DOCUENTO);
}

                        if(XXX.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(8, XXX.NUMERO_DOCUMENTO);
}

                        if(XXX.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(9, XXX.NOMBRE_COTIZANTE);
}

                        if(XXX.NOMBRE_UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(10, XXX.NOMBRE_UNIDAD_MILITAR);
}

                        if(XXX.NOMBRE_GRADO_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(11, XXX.NOMBRE_GRADO_MILITAR);
}

                        if(XXX.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(12, XXX.NOMBRE_VINCULACION);
}

                        if(XXX.FECHA_INGRESO != null) {
pstmt_tOracleOutput_9.setObject(13, new java.sql.Timestamp(XXX.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_9.setNull(13, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_9.setBigDecimal(14, XXX.SALARIO_BASICO);

                        pstmt_tOracleOutput_9.setBigDecimal(15, XXX.SUBSIDIO_FAMILIAR);

                        pstmt_tOracleOutput_9.setBigDecimal(16, XXX.IBC);

                        pstmt_tOracleOutput_9.setBigDecimal(17, XXX.NUMERO_DIAS);

                        pstmt_tOracleOutput_9.setBigDecimal(18, XXX.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(19, XXX.PORCENTAJE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(20, XXX.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(21, XXX.PORCENTAJE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(22, XXX.APORTE_FOSYGA);

                        pstmt_tOracleOutput_9.setBigDecimal(23, XXX.PORCENTAJE_FOSYGA);

                        if(XXX.PERIODO == null) {
pstmt_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(24, XXX.PERIODO);
}

                        pstmt_tOracleOutput_9.setBigDecimal(25, XXX.TVINCULACIONES_ID);

                        if(XXX.NOVEDADES == null) {
pstmt_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(26, XXX.NOVEDADES);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "XXX"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_end ] stop
 */

} // End of branch "TIPODOC_APORTES"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tUnite_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_end ] stop
 */

} // End of branch "RECAUDO_APORTE_ATEP"




	
	/**
	 * [tMap_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_29 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

}
}finally{
	if (rs_tOracleInput_29 != null) {
		rs_tOracleInput_29.close();
	}
	if (stmt_tOracleInput_29 != null) {
		stmt_tOracleInput_29.close();
	}
}

globalMap.put("tOracleInput_29_NB_LINE",nb_line_tOracleInput_29);
 

ok_Hash.put("tOracleInput_29", true);
end_Hash.put("tOracleInput_29", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_29", end_Hash.get("tOracleInput_29")-start_Hash.get("tOracleInput_29"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_29 end ] stop
 */

	
	/**
	 * [tMap_24 end ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_24", true);
end_Hash.put("tMap_24", System.currentTimeMillis());




/**
 * [tMap_24 end ] stop
 */




	
	/**
	 * [tMap_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_30", false);
		start_Hash.put("tMap_30", System.currentTimeMillis());
		
	
	currentComponent="tMap_30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_30 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_30__Struct  {
	int TIPO_RECAUDO;
}
Var__tMap_30__Struct Var__tMap_30 = new Var__tMap_30__Struct();
// ###############################

// ###############################
// # Outputs initialization
RECAUDO_RETRO_SALUDStruct RECAUDO_RETRO_SALUD_tmp = new RECAUDO_RETRO_SALUDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_30 begin ] stop
 */



	
	/**
	 * [tOracleInput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_30", false);
		start_Hash.put("tOracleInput_30", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_30");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_30";
	
	
		int tos_count_tOracleInput_30 = 0;
		
	


	
		    int nb_line_tOracleInput_30 = 0;
		    java.sql.Connection conn_tOracleInput_30 = null;
				conn_tOracleInput_30 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_30 = false;
				boolean isConnectionWrapped_tOracleInput_30 = !(conn_tOracleInput_30 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_30.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_30 = null;
                if (isConnectionWrapped_tOracleInput_30) {
					unwrappedOraConn_tOracleInput_30 = conn_tOracleInput_30.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_30 != null) {
                        isTimeZoneNull_tOracleInput_30 = (unwrappedOraConn_tOracleInput_30.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_30 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_30).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_30) {
					java.sql.Statement stmtGetTZ_tOracleInput_30 = conn_tOracleInput_30.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_30 = stmtGetTZ_tOracleInput_30.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_30 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_30.next()) {
						sessionTimezone_tOracleInput_30 = rsGetTZ_tOracleInput_30.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_30 && unwrappedOraConn_tOracleInput_30 != null) {
                        unwrappedOraConn_tOracleInput_30.setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_30).setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_30 = conn_tOracleInput_30.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_30.setFetchSize(1000);


		    String dbquery_tOracleInput_30 = "SELECT CG.ID CARGUE_ID, CG.PERIODO, CG.ENTAPORTANTES_ID, TV.ID REGIMEN_LABORAL_ID, DS.ID SALUD_ID, DS.AENTIDADES_ID,\n "
+" DS.AFILIADOS_ID,\n  DS.TDOCUMENTOS_ID, DS.DOCUMENTO, \n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBRE, DS.SEGUNDO_NOMBRE"
+", DS.PRIMER_APELLIDO,\n  DS.SEGUNDO_APELLIDO) NOMBRE_COTIZANTE, \n  '' NOMBRE_UNIDADMIL, \n  '' NOMBRE_GRADOMIL, \n  NUL"
+"L FECHA_INGRESO, \n  (DS.NUM_MESES * 30) DIAS_COTIZADOS, \n  0 SALARIO_BASICO, 0 SUBSIDIO_FAMILIAR, DS.DELTA_IBC IBC, \n"
+"  DS.COTIZACION_EMPLEADO_EPS APORTE_EMPLEADO, \n  DS.POR_EMPLEADO_EPS PORCENTAJE_EMPLEADO,  \n  DS.COTIZACION_EMPLEADOR_"
+"EPS APORTE_EMPLEADOR,    \n  DS.PORC_EMPLEADOR_EPS PORCENTAJE_EMPLEADOR,  \n(DS.DELTA_IBC * (CASE WHEN NVL(REC.fnc_GetPo"
+"rcentajeCotizacion('porc_aporte_fosyga_empleador', TV.SIGLA,\n  REC.fnc_PeriodoToDate(CG.PERIODO, 0), CG.ENTAPORTANTES_I"
+"D), 0) = 0\n             THEN \n                 CASE\n                 WHEN SUBSTR(TV.SIGLA, 1, 1) = 'P' \n            "
+"     THEN 0.01\n                 ELSE 0.015\n                 END\n             ELSE NVL(REC.fnc_GetPorcentajeCotizacion"
+"('porc_aporte_fosyga_empleador', TV.SIGLA,\n             REC.fnc_PeriodoToDate(CG.PERIODO, 0), CG.ENTAPORTANTES_ID), 0)"
+"\n             END)) APORTE_FOSYGA, \n             (CASE WHEN NVL(REC.fnc_GetPorcentajeCotizacion('porc_aporte_fosyga_emp"
+"leador', TV.SIGLA,\n             REC.fnc_PeriodoToDate(CG.PERIODO, 0), CG.ENTAPORTANTES_ID), 0) = 0\n             THEN "
+"\n                 CASE\n                 WHEN SUBSTR(TV.SIGLA, 1, 1) = 'P' \n                 THEN 0.01\n               "
+"  ELSE 0.015\n                 END\n             ELSE NVL(REC.fnc_GetPorcentajeCotizacion('porc_aporte_fosyga_empleador'"
+", TV.SIGLA,\n             REC.fnc_PeriodoToDate(CG.PERIODO, 0), CG.ENTAPORTANTES_ID), 0)\n             END) PORCENTAJE_F"
+"OSYGA,\n  TV.NOMBRE NOMBRE_VINCULACION,\n  DS.TVINCULACIONES_ID AS TVINCULACIONES_ID\n  \nFROM VM_REC_CONSOLIDADO CG\nIN"
+"NER JOIN REC_DRETROACTIVO DS ON DS.ID = CG.RDSR_ID\nLEFT JOIN AFI_TVINCULACIONES TV ON TV.ID = DS.TVINCULACIONES_ID AND "
+"TV.TVINCULACIONES = 'RC' \nWHERE  CG.TPLANILLAS_ID = 2 \nAND CG.TARCHIVOS_ID =  1\nAND CG.PERIODO = '" + context.PERIODO+ "' \nORDER BY CG.PERIODO, CG.ENTAPORTANTES_ID, DS.AENTIDADES_ID";
		    

		    globalMap.put("tOracleInput_30_QUERY",dbquery_tOracleInput_30);

		    java.sql.ResultSet rs_tOracleInput_30 = null;

		    try {
		    	rs_tOracleInput_30 = stmt_tOracleInput_30.executeQuery(dbquery_tOracleInput_30);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_30 = rs_tOracleInput_30.getMetaData();
		    	int colQtyInRs_tOracleInput_30 = rsmd_tOracleInput_30.getColumnCount();

		    String tmpContent_tOracleInput_30 = null;
		    
		    
		    while (rs_tOracleInput_30.next()) {
		        nb_line_tOracleInput_30++;
		        
							if(colQtyInRs_tOracleInput_30 < 1) {
								row5.CARGUE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(1) != null) {
						row5.CARGUE_ID = rs_tOracleInput_30.getBigDecimal(1);
					} else {
				
						row5.CARGUE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 2) {
								row5.PERIODO = null;
							} else {
	                         		
        	row5.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 3) {
								row5.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(3) != null) {
						row5.ENTAPORTANTES_ID = rs_tOracleInput_30.getBigDecimal(3);
					} else {
				
						row5.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 4) {
								row5.REGIMEN_LABORAL_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(4) != null) {
						row5.REGIMEN_LABORAL_ID = rs_tOracleInput_30.getBigDecimal(4);
					} else {
				
						row5.REGIMEN_LABORAL_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 5) {
								row5.SALUD_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(5) != null) {
						row5.SALUD_ID = rs_tOracleInput_30.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 6) {
								row5.AENTIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(6) != null) {
						row5.AENTIDADES_ID = rs_tOracleInput_30.getBigDecimal(6);
					} else {
				
						row5.AENTIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 7) {
								row5.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(7) != null) {
						row5.AFILIADOS_ID = rs_tOracleInput_30.getBigDecimal(7);
					} else {
				
						row5.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 8) {
								row5.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(8) != null) {
						row5.TDOCUMENTOS_ID = rs_tOracleInput_30.getBigDecimal(8);
					} else {
				
						row5.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 9) {
								row5.DOCUMENTO = null;
							} else {
	                         		
        	row5.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 10) {
								row5.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row5.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 11) {
								row5.NOMBRE_UNIDADMIL = null;
							} else {
	                         		
        	row5.NOMBRE_UNIDADMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 12) {
								row5.NOMBRE_GRADOMIL = null;
							} else {
	                         		
        	row5.NOMBRE_GRADOMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 13) {
								row5.FECHA_INGRESO = null;
							} else {
										
			row5.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_30, 13);
		                    }
							if(colQtyInRs_tOracleInput_30 < 14) {
								row5.DIAS_COTIZADOS = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(14) != null) {
						row5.DIAS_COTIZADOS = rs_tOracleInput_30.getBigDecimal(14);
					} else {
				
						row5.DIAS_COTIZADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 15) {
								row5.SALARIO_BASICO = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(15) != null) {
						row5.SALARIO_BASICO = rs_tOracleInput_30.getBigDecimal(15);
					} else {
				
						row5.SALARIO_BASICO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 16) {
								row5.SUBSIDIO_FAMILIAR = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(16) != null) {
						row5.SUBSIDIO_FAMILIAR = rs_tOracleInput_30.getBigDecimal(16);
					} else {
				
						row5.SUBSIDIO_FAMILIAR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 17) {
								row5.IBC = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(17) != null) {
						row5.IBC = rs_tOracleInput_30.getBigDecimal(17);
					} else {
				
						row5.IBC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 18) {
								row5.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(18) != null) {
						row5.APORTE_EMPLEADO = rs_tOracleInput_30.getBigDecimal(18);
					} else {
				
						row5.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 19) {
								row5.PORCENTAJE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(19) != null) {
						row5.PORCENTAJE_EMPLEADO = rs_tOracleInput_30.getBigDecimal(19);
					} else {
				
						row5.PORCENTAJE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 20) {
								row5.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(20) != null) {
						row5.APORTE_EMPLEADOR = rs_tOracleInput_30.getBigDecimal(20);
					} else {
				
						row5.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 21) {
								row5.PORCENTAJE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(21) != null) {
						row5.PORCENTAJE_EMPLEADOR = rs_tOracleInput_30.getBigDecimal(21);
					} else {
				
						row5.PORCENTAJE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 22) {
								row5.APORTE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(22) != null) {
						row5.APORTE_FOSYGA = rs_tOracleInput_30.getBigDecimal(22);
					} else {
				
						row5.APORTE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 23) {
								row5.PORCENTAJE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(23) != null) {
						row5.PORCENTAJE_FOSYGA = rs_tOracleInput_30.getBigDecimal(23);
					} else {
				
						row5.PORCENTAJE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 24) {
								row5.NOMBRE_VINCULACION = null;
							} else {
	                         		
        	row5.NOMBRE_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 25) {
								row5.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(25) != null) {
						row5.TVINCULACIONES_ID = rs_tOracleInput_30.getBigDecimal(25);
					} else {
				
						row5.TVINCULACIONES_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_30 begin ] stop
 */
	
	/**
	 * [tOracleInput_30 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 


	tos_count_tOracleInput_30++;

/**
 * [tOracleInput_30 main ] stop
 */
	
	/**
	 * [tOracleInput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_begin ] stop
 */

	
	/**
	 * [tMap_30 main ] start
	 */

	

	
	
	currentComponent="tMap_30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_30 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_30 = false;
		boolean mainRowRejected_tMap_30 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_30__Struct Var = Var__tMap_30;
Var.TIPO_RECAUDO = 3;// ###############################
        // ###############################
        // # Output tables

RECAUDO_RETRO_SALUD = null;


// # Output table : 'RECAUDO_RETRO_SALUD'
RECAUDO_RETRO_SALUD_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RECAUDO_RETRO_SALUD_tmp.CARGUE_ID = row5.CARGUE_ID ;
RECAUDO_RETRO_SALUD_tmp.PERIODO = row5.PERIODO ;
RECAUDO_RETRO_SALUD_tmp.ENTAPORTANTES_ID = row5.ENTAPORTANTES_ID ;
RECAUDO_RETRO_SALUD_tmp.REGIMEN_LABORAL_ID = row5.REGIMEN_LABORAL_ID ;
RECAUDO_RETRO_SALUD_tmp.SALUD_ID = row5.SALUD_ID ;
RECAUDO_RETRO_SALUD_tmp.AENTIDADES_ID = row5.AENTIDADES_ID ;
RECAUDO_RETRO_SALUD_tmp.AFILIADOS_ID = row5.AFILIADOS_ID ;
RECAUDO_RETRO_SALUD_tmp.TDOCUMENTOS_ID = row5.TDOCUMENTOS_ID ;
RECAUDO_RETRO_SALUD_tmp.DOCUMENTO = row5.DOCUMENTO ;
RECAUDO_RETRO_SALUD_tmp.NOMBRE_COTIZANTE = row5.NOMBRE_COTIZANTE ;
RECAUDO_RETRO_SALUD_tmp.NOMBRE_UNIDADMIL = row5.NOMBRE_UNIDADMIL ;
RECAUDO_RETRO_SALUD_tmp.NOMBRE_GRADOMIL = row5.NOMBRE_GRADOMIL ;
RECAUDO_RETRO_SALUD_tmp.FECHA_INGRESO = row5.FECHA_INGRESO ;
RECAUDO_RETRO_SALUD_tmp.DIAS_COTIZADOS = row5.DIAS_COTIZADOS ;
RECAUDO_RETRO_SALUD_tmp.SALARIO_BASICO = row5.SALARIO_BASICO ;
RECAUDO_RETRO_SALUD_tmp.SUBSIDIO_FAMILIAR = row5.SUBSIDIO_FAMILIAR ;
RECAUDO_RETRO_SALUD_tmp.IBC = row5.IBC ;
RECAUDO_RETRO_SALUD_tmp.APORTE_EMPLEADO = row5.APORTE_EMPLEADO ;
RECAUDO_RETRO_SALUD_tmp.PORCENTAJE_EMPLEADO = row5.PORCENTAJE_EMPLEADO ;
RECAUDO_RETRO_SALUD_tmp.APORTE_EMPLEADOR = row5.APORTE_EMPLEADOR ;
RECAUDO_RETRO_SALUD_tmp.PORCENTAJE_EMPLEADOR = row5.PORCENTAJE_EMPLEADOR ;
RECAUDO_RETRO_SALUD_tmp.APORTE_FOSYGA = row5.APORTE_FOSYGA ;
RECAUDO_RETRO_SALUD_tmp.PORCENTAJE_FOSYGA = row5.PORCENTAJE_FOSYGA ;
RECAUDO_RETRO_SALUD_tmp.NOMBRE_VINCULACION = row5.NOMBRE_VINCULACION ;
RECAUDO_RETRO_SALUD_tmp.TVINCULACIONES_ID = row5.TVINCULACIONES_ID ;
RECAUDO_RETRO_SALUD_tmp.NOVEDADES = null;
RECAUDO_RETRO_SALUD = RECAUDO_RETRO_SALUD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_30 = false;










 


	tos_count_tMap_30++;

/**
 * [tMap_30 main ] stop
 */
	
	/**
	 * [tMap_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_30";
	
	

 



/**
 * [tMap_30 process_data_begin ] stop
 */
// Start of branch "RECAUDO_RETRO_SALUD"
if(RECAUDO_RETRO_SALUD != null) { 



	
	/**
	 * [tUnite_2 main ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RECAUDO_RETRO_SALUD"
									
							);
						}
						
//////////
 

// for output
			row6 = new row6Struct();
								
			row6.TIPO_RECAUDO = RECAUDO_RETRO_SALUD.TIPO_RECAUDO;								
			row6.CARGUE_ID = RECAUDO_RETRO_SALUD.CARGUE_ID;								
			row6.PERIODO = RECAUDO_RETRO_SALUD.PERIODO;								
			row6.ENTAPORTANTES_ID = RECAUDO_RETRO_SALUD.ENTAPORTANTES_ID;								
			row6.REGIMEN_LABORAL_ID = RECAUDO_RETRO_SALUD.REGIMEN_LABORAL_ID;								
			row6.SALUD_ID = RECAUDO_RETRO_SALUD.SALUD_ID;								
			row6.AENTIDADES_ID = RECAUDO_RETRO_SALUD.AENTIDADES_ID;								
			row6.AFILIADOS_ID = RECAUDO_RETRO_SALUD.AFILIADOS_ID;								
			row6.TDOCUMENTOS_ID = RECAUDO_RETRO_SALUD.TDOCUMENTOS_ID;								
			row6.DOCUMENTO = RECAUDO_RETRO_SALUD.DOCUMENTO;								
			row6.NOMBRE_COTIZANTE = RECAUDO_RETRO_SALUD.NOMBRE_COTIZANTE;								
			row6.NOMBRE_UNIDADMIL = RECAUDO_RETRO_SALUD.NOMBRE_UNIDADMIL;								
			row6.NOMBRE_GRADOMIL = RECAUDO_RETRO_SALUD.NOMBRE_GRADOMIL;								
			row6.FECHA_INGRESO = RECAUDO_RETRO_SALUD.FECHA_INGRESO;								
			row6.DIAS_COTIZADOS = RECAUDO_RETRO_SALUD.DIAS_COTIZADOS;								
			row6.SALARIO_BASICO = RECAUDO_RETRO_SALUD.SALARIO_BASICO;								
			row6.SUBSIDIO_FAMILIAR = RECAUDO_RETRO_SALUD.SUBSIDIO_FAMILIAR;								
			row6.IBC = RECAUDO_RETRO_SALUD.IBC;								
			row6.APORTE_EMPLEADO = RECAUDO_RETRO_SALUD.APORTE_EMPLEADO;								
			row6.PORCENTAJE_EMPLEADO = RECAUDO_RETRO_SALUD.PORCENTAJE_EMPLEADO;								
			row6.APORTE_EMPLEADOR = RECAUDO_RETRO_SALUD.APORTE_EMPLEADOR;								
			row6.PORCENTAJE_EMPLEADOR = RECAUDO_RETRO_SALUD.PORCENTAJE_EMPLEADOR;								
			row6.APORTE_FOSYGA = RECAUDO_RETRO_SALUD.APORTE_FOSYGA;								
			row6.PORCENTAJE_FOSYGA = RECAUDO_RETRO_SALUD.PORCENTAJE_FOSYGA;								
			row6.NOMBRE_VINCULACION = RECAUDO_RETRO_SALUD.NOMBRE_VINCULACION;								
			row6.TVINCULACIONES_ID = RECAUDO_RETRO_SALUD.TVINCULACIONES_ID;								
			row6.NOVEDADES = RECAUDO_RETRO_SALUD.NOVEDADES;			

			nb_line_tUnite_2++;

//////////
 


	tos_count_tUnite_2++;

/**
 * [tUnite_2 main ] stop
 */
	
	/**
	 * [tUnite_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		
						row14Struct row14 = null;
					
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_32 = false;
		boolean mainRowRejected_tMap_32 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row14HashKey.ID = row6.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.ID = '" + row14HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row13HashKey.ID = row6.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.ID = '" + row13HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;
Var.var2 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row6.PERIODO + "-01")))) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_APORTE = null;
TIPODOC_APORTES = null;


// # Output table : 'TIEMPO_APORTE'
TIEMPO_APORTE_tmp.SALUD_ID = row6.CARGUE_ID ;
TIEMPO_APORTE_tmp.PERIODO = row6.PERIODO ;
TIEMPO_APORTE_tmp.FECHA = Var.var2 ;
TIEMPO_APORTE_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIEMPO_APORTE = TIEMPO_APORTE_tmp;

// # Output table : 'TIPODOC_APORTES'
TIPODOC_APORTES_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIPODOC_APORTES_tmp.CARGUE_ID = row6.CARGUE_ID ;
TIPODOC_APORTES_tmp.ENTAPORTANTES_ID = row6.ENTAPORTANTES_ID ;
TIPODOC_APORTES_tmp.REGIMEN_LABORAL_ID = row6.REGIMEN_LABORAL_ID ;
TIPODOC_APORTES_tmp.PERIODO = row6.PERIODO ;
TIPODOC_APORTES_tmp.NOMBRE_ENTAPORTANTE = row13.NOMBRE ;
TIPODOC_APORTES_tmp.DOCUMENTO_ENTAPORTANTE = row13.DOCUMENTO ;
TIPODOC_APORTES_tmp.SALUD_ID = row6.SALUD_ID ;
TIPODOC_APORTES_tmp.AENTIDADES_ID = row6.AENTIDADES_ID ;
TIPODOC_APORTES_tmp.AFILIADOS_ID = row6.AFILIADOS_ID ;
TIPODOC_APORTES_tmp.NOMBRE_TIPO_DOCUENTO = row14.SIGLA ;
TIPODOC_APORTES_tmp.DOCUMENTO = row6.DOCUMENTO ;
TIPODOC_APORTES_tmp.NOMBRE_COTIZANTE = row6.NOMBRE_COTIZANTE ;
TIPODOC_APORTES_tmp.NOMBRE_UNIDADMIL = row6.NOMBRE_UNIDADMIL ;
TIPODOC_APORTES_tmp.NOMBRE_GRADOMIL = row6.NOMBRE_GRADOMIL ;
TIPODOC_APORTES_tmp.FECHA_INGRESO = row6.FECHA_INGRESO ;
TIPODOC_APORTES_tmp.DIAS_COTIZADOS = row6.DIAS_COTIZADOS ;
TIPODOC_APORTES_tmp.SALARIO_BASICO = row6.SALARIO_BASICO ;
TIPODOC_APORTES_tmp.SUBSIDIO_FAMILIAR = row6.SUBSIDIO_FAMILIAR ;
TIPODOC_APORTES_tmp.IBC = row6.IBC ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADO = row6.APORTE_EMPLEADO ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADO = row6.PORCENTAJE_EMPLEADO ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADOR = row6.APORTE_EMPLEADOR ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADOR = row6.PORCENTAJE_EMPLEADOR ;
TIPODOC_APORTES_tmp.APORTE_FOSYGA = row6.APORTE_FOSYGA ;
TIPODOC_APORTES_tmp.PORCENTAJE_FOSYGA = row6.PORCENTAJE_FOSYGA ;
TIPODOC_APORTES_tmp.NOMBRE_VINCULACION = row6.NOMBRE_VINCULACION ;
TIPODOC_APORTES_tmp.TVINCULACIONES_ID = row6.TVINCULACIONES_ID ;
TIPODOC_APORTES_tmp.NOVEDADES = row6.NOVEDADES ;
TIPODOC_APORTES = TIPODOC_APORTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "TIEMPO_APORTE"
if(TIEMPO_APORTE != null) { 



	
	/**
	 * [tMap_34 main ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_APORTE"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_34 = false;
		boolean mainRowRejected_tMap_34 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_34__Struct Var = Var__tMap_34;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_APORTE = null;


// # Output table : 'TIEMPO_PART_APORTE'
TIEMPO_PART_APORTE_tmp.ID = TIEMPO_APORTE.SALUD_ID ;
TIEMPO_PART_APORTE_tmp.TIPO_RECAUDO_ID = TIEMPO_APORTE.TIPO_RECAUDO ;
TIEMPO_PART_APORTE_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_APORTE_tmp.PERIODO = TIEMPO_APORTE.PERIODO ;
TIEMPO_PART_APORTE_tmp.Anio = Var.Anio ;
TIEMPO_PART_APORTE_tmp.Mes = Var.Mes ;
TIEMPO_PART_APORTE_tmp.Dia = Var.Dia ;
TIEMPO_PART_APORTE = TIEMPO_PART_APORTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_34 = false;










 


	tos_count_tMap_34++;

/**
 * [tMap_34 main ] stop
 */
	
	/**
	 * [tMap_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_APORTE"
if(TIEMPO_PART_APORTE != null) { 



	
	/**
	 * [tSortRow_6_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_APORTE"
						
						);
					}
					



	ComparableTIEMPO_PART_APORTEStruct arrayRowtSortRow_6_SortOut = new ComparableTIEMPO_PART_APORTEStruct();

	arrayRowtSortRow_6_SortOut.ID = TIEMPO_PART_APORTE.ID;
	arrayRowtSortRow_6_SortOut.TIPO_RECAUDO_ID = TIEMPO_PART_APORTE.TIPO_RECAUDO_ID;
	arrayRowtSortRow_6_SortOut.FECHA = TIEMPO_PART_APORTE.FECHA;
	arrayRowtSortRow_6_SortOut.PERIODO = TIEMPO_PART_APORTE.PERIODO;
	arrayRowtSortRow_6_SortOut.Anio = TIEMPO_PART_APORTE.Anio;
	arrayRowtSortRow_6_SortOut.Mes = TIEMPO_PART_APORTE.Mes;
	arrayRowtSortRow_6_SortOut.Dia = TIEMPO_PART_APORTE.Dia;	
	list_tSortRow_6_SortOut.add(arrayRowtSortRow_6_SortOut);

 


	tos_count_tSortRow_6_SortOut++;

/**
 * [tSortRow_6_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_APORTE"




	
	/**
	 * [tMap_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_end ] stop
 */

} // End of branch "TIEMPO_APORTE"




// Start of branch "TIPODOC_APORTES"
if(TIPODOC_APORTES != null) { 



	
	/**
	 * [tReplicate_2 main ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_APORTES"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row38.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row38.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row38.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row38.PERIODO = TIPODOC_APORTES.PERIODO;								
	row38.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row38.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row38.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row38.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row38.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row38.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row38.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row38.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row38.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row38.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row38.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row38.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row38.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row38.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row38.IBC = TIPODOC_APORTES.IBC;								
	row38.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row38.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row38.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row38.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row38.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row38.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row38.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row38.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row38.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			
	row51 = new row51Struct();
						
	row51.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row51.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row51.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row51.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row51.PERIODO = TIPODOC_APORTES.PERIODO;								
	row51.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row51.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row51.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row51.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row51.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row51.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row51.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row51.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row51.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row51.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row51.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row51.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row51.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row51.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row51.IBC = TIPODOC_APORTES.IBC;								
	row51.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row51.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row51.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row51.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row51.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row51.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row51.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row51.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row51.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			


 


	tos_count_tReplicate_2++;

/**
 * [tReplicate_2 main ] stop
 */
	
	/**
	 * [tReplicate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.TIPO_RECAUDO = row38.TIPO_RECAUDO;
			operation_finder_tAggregateRow_4.CARGUE_ID = row38.CARGUE_ID;
			operation_finder_tAggregateRow_4.ENTAPORTANTES_ID = row38.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID = row38.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_4.PERIODO = row38.PERIODO;
			operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE = row38.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_4.NOMBRE_VINCULACION = row38.NOMBRE_VINCULACION;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.TIPO_RECAUDO = operation_finder_tAggregateRow_4.TIPO_RECAUDO;
				operation_result_tAggregateRow_4.CARGUE_ID = operation_finder_tAggregateRow_4.CARGUE_ID;
				operation_result_tAggregateRow_4.ENTAPORTANTES_ID = operation_finder_tAggregateRow_4.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_4.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_4.PERIODO = operation_finder_tAggregateRow_4.PERIODO;
				operation_result_tAggregateRow_4.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_4.NOMBRE_VINCULACION = operation_finder_tAggregateRow_4.NOMBRE_VINCULACION;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				if(row38.SALUD_ID != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.SALUD_ID_clmCount++;
				operation_result_tAggregateRow_4.count++;
				
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADO != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADO
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADOR != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADOR
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

XXX = null;


// # Output table : 'XXX'
// # Filter conditions 
if( 

row51.REGIMEN_LABORAL_ID != null

 ) {
XXX_tmp.ENTIDAD_APORTANTE_ID = row51.ENTAPORTANTES_ID ;
XXX_tmp.TIEMPO_ID = row51.CARGUE_ID ;
XXX_tmp.REGIMEN_LABORAL_ID = row51.REGIMEN_LABORAL_ID ;
XXX_tmp.TIPO_RECAUDO_ID = row51.TIPO_RECAUDO ;
XXX_tmp.AFILIADO_ID = row51.AFILIADOS_ID ;
XXX_tmp.NOMBRE_ENTAPORTANTE = row51.NOMBRE_ENTAPORTANTE ;
XXX_tmp.NOMBRE_TIPO_DOCUENTO = row51.NOMBRE_TIPO_DOCUENTO ;
XXX_tmp.NUMERO_DOCUMENTO = row51.DOCUMENTO ;
XXX_tmp.NOMBRE_COTIZANTE = row51.NOMBRE_COTIZANTE ;
XXX_tmp.NOMBRE_UNIDAD_MILITAR = row51.NOMBRE_UNIDADMIL ;
XXX_tmp.NOMBRE_GRADO_MILITAR = row51.NOMBRE_GRADOMIL ;
XXX_tmp.NOMBRE_VINCULACION = row51.NOMBRE_VINCULACION ;
XXX_tmp.FECHA_INGRESO = row51.FECHA_INGRESO ;
XXX_tmp.SALARIO_BASICO = row51.SALARIO_BASICO ;
XXX_tmp.SUBSIDIO_FAMILIAR = row51.SUBSIDIO_FAMILIAR ;
XXX_tmp.IBC = row51.IBC ;
XXX_tmp.NUMERO_DIAS = row51.DIAS_COTIZADOS ;
XXX_tmp.APORTE_EMPLEADO = row51.APORTE_EMPLEADO ;
XXX_tmp.PORCENTAJE_EMPLEADO = row51.PORCENTAJE_EMPLEADO ;
XXX_tmp.APORTE_EMPLEADOR = row51.APORTE_EMPLEADOR ;
XXX_tmp.PORCENTAJE_EMPLEADOR = row51.PORCENTAJE_EMPLEADOR ;
XXX_tmp.APORTE_FOSYGA = row51.APORTE_FOSYGA ;
XXX_tmp.PORCENTAJE_FOSYGA = row51.PORCENTAJE_FOSYGA ;
XXX_tmp.PERIODO = row51.PERIODO ;
XXX_tmp.TVINCULACIONES_ID = row51.TVINCULACIONES_ID ;
XXX_tmp.NOVEDADES = row51.NOVEDADES ;
XXX = XXX_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "XXX"
if(XXX != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"XXX"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                        pstmt_tOracleOutput_9.setBigDecimal(1, XXX.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(2, XXX.TIEMPO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(3, XXX.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_9.setInt(4, XXX.TIPO_RECAUDO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(5, XXX.AFILIADO_ID);

                        if(XXX.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_9.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(6, XXX.NOMBRE_ENTAPORTANTE);
}

                        if(XXX.NOMBRE_TIPO_DOCUENTO == null) {
pstmt_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(7, XXX.NOMBRE_TIPO_DOCUENTO);
}

                        if(XXX.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(8, XXX.NUMERO_DOCUMENTO);
}

                        if(XXX.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(9, XXX.NOMBRE_COTIZANTE);
}

                        if(XXX.NOMBRE_UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(10, XXX.NOMBRE_UNIDAD_MILITAR);
}

                        if(XXX.NOMBRE_GRADO_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(11, XXX.NOMBRE_GRADO_MILITAR);
}

                        if(XXX.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(12, XXX.NOMBRE_VINCULACION);
}

                        if(XXX.FECHA_INGRESO != null) {
pstmt_tOracleOutput_9.setObject(13, new java.sql.Timestamp(XXX.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_9.setNull(13, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_9.setBigDecimal(14, XXX.SALARIO_BASICO);

                        pstmt_tOracleOutput_9.setBigDecimal(15, XXX.SUBSIDIO_FAMILIAR);

                        pstmt_tOracleOutput_9.setBigDecimal(16, XXX.IBC);

                        pstmt_tOracleOutput_9.setBigDecimal(17, XXX.NUMERO_DIAS);

                        pstmt_tOracleOutput_9.setBigDecimal(18, XXX.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(19, XXX.PORCENTAJE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(20, XXX.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(21, XXX.PORCENTAJE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(22, XXX.APORTE_FOSYGA);

                        pstmt_tOracleOutput_9.setBigDecimal(23, XXX.PORCENTAJE_FOSYGA);

                        if(XXX.PERIODO == null) {
pstmt_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(24, XXX.PERIODO);
}

                        pstmt_tOracleOutput_9.setBigDecimal(25, XXX.TVINCULACIONES_ID);

                        if(XXX.NOVEDADES == null) {
pstmt_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(26, XXX.NOVEDADES);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "XXX"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_end ] stop
 */

} // End of branch "TIPODOC_APORTES"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tUnite_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_end ] stop
 */

} // End of branch "RECAUDO_RETRO_SALUD"




	
	/**
	 * [tMap_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_30";
	
	

 



/**
 * [tMap_30 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_30 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

}
}finally{
	if (rs_tOracleInput_30 != null) {
		rs_tOracleInput_30.close();
	}
	if (stmt_tOracleInput_30 != null) {
		stmt_tOracleInput_30.close();
	}
}

globalMap.put("tOracleInput_30_NB_LINE",nb_line_tOracleInput_30);
 

ok_Hash.put("tOracleInput_30", true);
end_Hash.put("tOracleInput_30", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_30", end_Hash.get("tOracleInput_30")-start_Hash.get("tOracleInput_30"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_30 end ] stop
 */

	
	/**
	 * [tMap_30 end ] start
	 */

	

	
	
	currentComponent="tMap_30";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_30", true);
end_Hash.put("tMap_30", System.currentTimeMillis());




/**
 * [tMap_30 end ] stop
 */




	
	/**
	 * [tMap_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_33", false);
		start_Hash.put("tMap_33", System.currentTimeMillis());
		
	
	currentComponent="tMap_33";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_33 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_33__Struct  {
	int TIPO_RECAUDO;
}
Var__tMap_33__Struct Var__tMap_33 = new Var__tMap_33__Struct();
// ###############################

// ###############################
// # Outputs initialization
RECAUDO_RETRO_ATEPStruct RECAUDO_RETRO_ATEP_tmp = new RECAUDO_RETRO_ATEPStruct();
// ###############################

        
        



        









 



/**
 * [tMap_33 begin ] stop
 */



	
	/**
	 * [tOracleInput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_31", false);
		start_Hash.put("tOracleInput_31", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_31");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_31";
	
	
		int tos_count_tOracleInput_31 = 0;
		
	


	
		    int nb_line_tOracleInput_31 = 0;
		    java.sql.Connection conn_tOracleInput_31 = null;
				conn_tOracleInput_31 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_31 = false;
				boolean isConnectionWrapped_tOracleInput_31 = !(conn_tOracleInput_31 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_31.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_31 = null;
                if (isConnectionWrapped_tOracleInput_31) {
					unwrappedOraConn_tOracleInput_31 = conn_tOracleInput_31.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_31 != null) {
                        isTimeZoneNull_tOracleInput_31 = (unwrappedOraConn_tOracleInput_31.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_31 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_31).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_31) {
					java.sql.Statement stmtGetTZ_tOracleInput_31 = conn_tOracleInput_31.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_31 = stmtGetTZ_tOracleInput_31.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_31 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_31.next()) {
						sessionTimezone_tOracleInput_31 = rsGetTZ_tOracleInput_31.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_31 && unwrappedOraConn_tOracleInput_31 != null) {
                        unwrappedOraConn_tOracleInput_31.setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_31).setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_31 = conn_tOracleInput_31.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_31.setFetchSize(1000);


		    String dbquery_tOracleInput_31 = "SELECT \n  CG.ID CARGUE_ID, \n  CG.PERIODO, \n  CG.ENTAPORTANTES_ID, \n  TV.ID REGIMEN_LABORAL_ID, \n  DS.ID SALUD_ID, "
+"DS.AENTIDADES_ID,\n  DS.AFILIADOS_ID,\n  DS.TDOCUMENTOS_ID, DS.DOCUMENTO, \n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBR"
+"E, DS.SEGUNDO_NOMBRE, DS.PRIMER_APELLIDO,\n  DS.SEGUNDO_APELLIDO) NOMBRE_COTIZANTE, \n  '' NOMBRE_UNIDADMIL, \n  '' NOMB"
+"RE_GRADOMIL, \n  NULL FECHA_INGRESO, \n  (DS.NUM_MESES * 30) DIAS_COTIZADOS, \n  0 SALARIO_BASICO, 0 SUBSIDIO_FAMILIAR, "
+"DS.DELTA_IBC IBC, \n  0 APORTE_EMPLEADO, \n  0 PORCENTAJE_EMPLEADO,  \n  DS.COTIZACION_EMPLEADOR_ARL APORTE_EMPLEADOR,  "
+"  \n  DS.PORC_EMPLEADOR_ARL PORCENTAJE_EMPLEADOR,  \n  0 APORTE_FOSYGA, \n  0 PORCENTAJE_FOSYGA,   \n  TV.NOMBRE NOMBRE_"
+"VINCULACION,\n  DS.TVINCULACIONES_ID AS TVINCULACIONES_ID\nFROM VM_REC_CONSOLIDADO CG\nINNER JOIN REC_DRETROACTIVO DS ON"
+" DS.ID = CG.RDSR_ID\nLEFT JOIN AFI_TVINCULACIONES TV ON TV.ID = DS.TVINCULACIONES_ID    AND TV.TVINCULACIONES = 'RC' \nW"
+"HERE CG.TPLANILLAS_ID = 2 \nAND CG.TARCHIVOS_ID =  2\nAND CG.PERIODO = '" + context.PERIODO + "'\nORDER BY CG.PERIODO, CG.ENTAPORTANTES_ID, DS.AENTIDADES_ID";
		    

		    globalMap.put("tOracleInput_31_QUERY",dbquery_tOracleInput_31);

		    java.sql.ResultSet rs_tOracleInput_31 = null;

		    try {
		    	rs_tOracleInput_31 = stmt_tOracleInput_31.executeQuery(dbquery_tOracleInput_31);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_31 = rs_tOracleInput_31.getMetaData();
		    	int colQtyInRs_tOracleInput_31 = rsmd_tOracleInput_31.getColumnCount();

		    String tmpContent_tOracleInput_31 = null;
		    
		    
		    while (rs_tOracleInput_31.next()) {
		        nb_line_tOracleInput_31++;
		        
							if(colQtyInRs_tOracleInput_31 < 1) {
								row7.CARGUE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(1) != null) {
						row7.CARGUE_ID = rs_tOracleInput_31.getBigDecimal(1);
					} else {
				
						row7.CARGUE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 2) {
								row7.PERIODO = null;
							} else {
	                         		
        	row7.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 3) {
								row7.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(3) != null) {
						row7.ENTAPORTANTES_ID = rs_tOracleInput_31.getBigDecimal(3);
					} else {
				
						row7.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 4) {
								row7.REGIMEN_LABORAL_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(4) != null) {
						row7.REGIMEN_LABORAL_ID = rs_tOracleInput_31.getBigDecimal(4);
					} else {
				
						row7.REGIMEN_LABORAL_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 5) {
								row7.SALUD_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(5) != null) {
						row7.SALUD_ID = rs_tOracleInput_31.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 6) {
								row7.AENTIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(6) != null) {
						row7.AENTIDADES_ID = rs_tOracleInput_31.getBigDecimal(6);
					} else {
				
						row7.AENTIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 7) {
								row7.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(7) != null) {
						row7.AFILIADOS_ID = rs_tOracleInput_31.getBigDecimal(7);
					} else {
				
						row7.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 8) {
								row7.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(8) != null) {
						row7.TDOCUMENTOS_ID = rs_tOracleInput_31.getBigDecimal(8);
					} else {
				
						row7.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 9) {
								row7.DOCUMENTO = null;
							} else {
	                         		
        	row7.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 10) {
								row7.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row7.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 11) {
								row7.NOMBRE_UNIDADMIL = null;
							} else {
	                         		
        	row7.NOMBRE_UNIDADMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 12) {
								row7.NOMBRE_GRADOMIL = null;
							} else {
	                         		
        	row7.NOMBRE_GRADOMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 13) {
								row7.FECHA_INGRESO = null;
							} else {
										
			row7.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_31, 13);
		                    }
							if(colQtyInRs_tOracleInput_31 < 14) {
								row7.DIAS_COTIZADOS = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(14) != null) {
						row7.DIAS_COTIZADOS = rs_tOracleInput_31.getBigDecimal(14);
					} else {
				
						row7.DIAS_COTIZADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 15) {
								row7.SALARIO_BASICO = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(15) != null) {
						row7.SALARIO_BASICO = rs_tOracleInput_31.getBigDecimal(15);
					} else {
				
						row7.SALARIO_BASICO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 16) {
								row7.SUBSIDIO_FAMILIAR = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(16) != null) {
						row7.SUBSIDIO_FAMILIAR = rs_tOracleInput_31.getBigDecimal(16);
					} else {
				
						row7.SUBSIDIO_FAMILIAR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 17) {
								row7.IBC = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(17) != null) {
						row7.IBC = rs_tOracleInput_31.getBigDecimal(17);
					} else {
				
						row7.IBC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 18) {
								row7.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(18) != null) {
						row7.APORTE_EMPLEADO = rs_tOracleInput_31.getBigDecimal(18);
					} else {
				
						row7.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 19) {
								row7.PORCENTAJE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(19) != null) {
						row7.PORCENTAJE_EMPLEADO = rs_tOracleInput_31.getBigDecimal(19);
					} else {
				
						row7.PORCENTAJE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 20) {
								row7.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(20) != null) {
						row7.APORTE_EMPLEADOR = rs_tOracleInput_31.getBigDecimal(20);
					} else {
				
						row7.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 21) {
								row7.PORCENTAJE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(21) != null) {
						row7.PORCENTAJE_EMPLEADOR = rs_tOracleInput_31.getBigDecimal(21);
					} else {
				
						row7.PORCENTAJE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 22) {
								row7.APORTE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(22) != null) {
						row7.APORTE_FOSYGA = rs_tOracleInput_31.getBigDecimal(22);
					} else {
				
						row7.APORTE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 23) {
								row7.PORCENTAJE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(23) != null) {
						row7.PORCENTAJE_FOSYGA = rs_tOracleInput_31.getBigDecimal(23);
					} else {
				
						row7.PORCENTAJE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 24) {
								row7.NOMBRE_VINCULACION = null;
							} else {
	                         		
        	row7.NOMBRE_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 25) {
								row7.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(25) != null) {
						row7.TVINCULACIONES_ID = rs_tOracleInput_31.getBigDecimal(25);
					} else {
				
						row7.TVINCULACIONES_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_31 begin ] stop
 */
	
	/**
	 * [tOracleInput_31 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 


	tos_count_tOracleInput_31++;

/**
 * [tOracleInput_31 main ] stop
 */
	
	/**
	 * [tOracleInput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_begin ] stop
 */

	
	/**
	 * [tMap_33 main ] start
	 */

	

	
	
	currentComponent="tMap_33";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_33 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_33 = false;
		boolean mainRowRejected_tMap_33 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_33__Struct Var = Var__tMap_33;
Var.TIPO_RECAUDO = 4;// ###############################
        // ###############################
        // # Output tables

RECAUDO_RETRO_ATEP = null;


// # Output table : 'RECAUDO_RETRO_ATEP'
RECAUDO_RETRO_ATEP_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RECAUDO_RETRO_ATEP_tmp.CARGUE_ID = row7.CARGUE_ID ;
RECAUDO_RETRO_ATEP_tmp.PERIODO = row7.PERIODO ;
RECAUDO_RETRO_ATEP_tmp.ENTAPORTANTES_ID = row7.ENTAPORTANTES_ID ;
RECAUDO_RETRO_ATEP_tmp.REGIMEN_LABORAL_ID = row7.REGIMEN_LABORAL_ID ;
RECAUDO_RETRO_ATEP_tmp.SALUD_ID = row7.SALUD_ID ;
RECAUDO_RETRO_ATEP_tmp.AENTIDADES_ID = row7.AENTIDADES_ID ;
RECAUDO_RETRO_ATEP_tmp.AFILIADOS_ID = row7.AFILIADOS_ID ;
RECAUDO_RETRO_ATEP_tmp.TDOCUMENTOS_ID = row7.TDOCUMENTOS_ID ;
RECAUDO_RETRO_ATEP_tmp.DOCUMENTO = row7.DOCUMENTO ;
RECAUDO_RETRO_ATEP_tmp.NOMBRE_COTIZANTE = row7.NOMBRE_COTIZANTE ;
RECAUDO_RETRO_ATEP_tmp.NOMBRE_UNIDADMIL = row7.NOMBRE_UNIDADMIL ;
RECAUDO_RETRO_ATEP_tmp.NOMBRE_GRADOMIL = row7.NOMBRE_GRADOMIL ;
RECAUDO_RETRO_ATEP_tmp.FECHA_INGRESO = row7.FECHA_INGRESO ;
RECAUDO_RETRO_ATEP_tmp.DIAS_COTIZADOS = row7.DIAS_COTIZADOS ;
RECAUDO_RETRO_ATEP_tmp.SALARIO_BASICO = row7.SALARIO_BASICO ;
RECAUDO_RETRO_ATEP_tmp.SUBSIDIO_FAMILIAR = row7.SUBSIDIO_FAMILIAR ;
RECAUDO_RETRO_ATEP_tmp.IBC = row7.IBC ;
RECAUDO_RETRO_ATEP_tmp.APORTE_EMPLEADO = row7.APORTE_EMPLEADO ;
RECAUDO_RETRO_ATEP_tmp.PORCENTAJE_EMPLEADO = row7.PORCENTAJE_EMPLEADO ;
RECAUDO_RETRO_ATEP_tmp.APORTE_EMPLEADOR = row7.APORTE_EMPLEADOR ;
RECAUDO_RETRO_ATEP_tmp.PORCENTAJE_EMPLEADOR = row7.PORCENTAJE_EMPLEADOR ;
RECAUDO_RETRO_ATEP_tmp.APORTE_FOSYGA = row7.APORTE_FOSYGA ;
RECAUDO_RETRO_ATEP_tmp.PORCENTAJE_FOSYGA = row7.PORCENTAJE_FOSYGA ;
RECAUDO_RETRO_ATEP_tmp.NOMBRE_VINCULACION = row7.NOMBRE_VINCULACION ;
RECAUDO_RETRO_ATEP_tmp.TVINCULACIONES_ID = row7.TVINCULACIONES_ID ;
RECAUDO_RETRO_ATEP_tmp.NOVEDADES = null;
RECAUDO_RETRO_ATEP = RECAUDO_RETRO_ATEP_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_33 = false;










 


	tos_count_tMap_33++;

/**
 * [tMap_33 main ] stop
 */
	
	/**
	 * [tMap_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_33";
	
	

 



/**
 * [tMap_33 process_data_begin ] stop
 */
// Start of branch "RECAUDO_RETRO_ATEP"
if(RECAUDO_RETRO_ATEP != null) { 



	
	/**
	 * [tUnite_2 main ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RECAUDO_RETRO_ATEP"
									
							);
						}
						
//////////
 

// for output
			row6 = new row6Struct();
								
			row6.TIPO_RECAUDO = RECAUDO_RETRO_ATEP.TIPO_RECAUDO;								
			row6.CARGUE_ID = RECAUDO_RETRO_ATEP.CARGUE_ID;								
			row6.PERIODO = RECAUDO_RETRO_ATEP.PERIODO;								
			row6.ENTAPORTANTES_ID = RECAUDO_RETRO_ATEP.ENTAPORTANTES_ID;								
			row6.REGIMEN_LABORAL_ID = RECAUDO_RETRO_ATEP.REGIMEN_LABORAL_ID;								
			row6.SALUD_ID = RECAUDO_RETRO_ATEP.SALUD_ID;								
			row6.AENTIDADES_ID = RECAUDO_RETRO_ATEP.AENTIDADES_ID;								
			row6.AFILIADOS_ID = RECAUDO_RETRO_ATEP.AFILIADOS_ID;								
			row6.TDOCUMENTOS_ID = RECAUDO_RETRO_ATEP.TDOCUMENTOS_ID;								
			row6.DOCUMENTO = RECAUDO_RETRO_ATEP.DOCUMENTO;								
			row6.NOMBRE_COTIZANTE = RECAUDO_RETRO_ATEP.NOMBRE_COTIZANTE;								
			row6.NOMBRE_UNIDADMIL = RECAUDO_RETRO_ATEP.NOMBRE_UNIDADMIL;								
			row6.NOMBRE_GRADOMIL = RECAUDO_RETRO_ATEP.NOMBRE_GRADOMIL;								
			row6.FECHA_INGRESO = RECAUDO_RETRO_ATEP.FECHA_INGRESO;								
			row6.DIAS_COTIZADOS = RECAUDO_RETRO_ATEP.DIAS_COTIZADOS;								
			row6.SALARIO_BASICO = RECAUDO_RETRO_ATEP.SALARIO_BASICO;								
			row6.SUBSIDIO_FAMILIAR = RECAUDO_RETRO_ATEP.SUBSIDIO_FAMILIAR;								
			row6.IBC = RECAUDO_RETRO_ATEP.IBC;								
			row6.APORTE_EMPLEADO = RECAUDO_RETRO_ATEP.APORTE_EMPLEADO;								
			row6.PORCENTAJE_EMPLEADO = RECAUDO_RETRO_ATEP.PORCENTAJE_EMPLEADO;								
			row6.APORTE_EMPLEADOR = RECAUDO_RETRO_ATEP.APORTE_EMPLEADOR;								
			row6.PORCENTAJE_EMPLEADOR = RECAUDO_RETRO_ATEP.PORCENTAJE_EMPLEADOR;								
			row6.APORTE_FOSYGA = RECAUDO_RETRO_ATEP.APORTE_FOSYGA;								
			row6.PORCENTAJE_FOSYGA = RECAUDO_RETRO_ATEP.PORCENTAJE_FOSYGA;								
			row6.NOMBRE_VINCULACION = RECAUDO_RETRO_ATEP.NOMBRE_VINCULACION;								
			row6.TVINCULACIONES_ID = RECAUDO_RETRO_ATEP.TVINCULACIONES_ID;								
			row6.NOVEDADES = RECAUDO_RETRO_ATEP.NOVEDADES;			

			nb_line_tUnite_2++;

//////////
 


	tos_count_tUnite_2++;

/**
 * [tUnite_2 main ] stop
 */
	
	/**
	 * [tUnite_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		
						row14Struct row14 = null;
					
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_32 = false;
		boolean mainRowRejected_tMap_32 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row14HashKey.ID = row6.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.ID = '" + row14HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row13HashKey.ID = row6.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.ID = '" + row13HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;
Var.var2 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row6.PERIODO + "-01")))) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_APORTE = null;
TIPODOC_APORTES = null;


// # Output table : 'TIEMPO_APORTE'
TIEMPO_APORTE_tmp.SALUD_ID = row6.CARGUE_ID ;
TIEMPO_APORTE_tmp.PERIODO = row6.PERIODO ;
TIEMPO_APORTE_tmp.FECHA = Var.var2 ;
TIEMPO_APORTE_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIEMPO_APORTE = TIEMPO_APORTE_tmp;

// # Output table : 'TIPODOC_APORTES'
TIPODOC_APORTES_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIPODOC_APORTES_tmp.CARGUE_ID = row6.CARGUE_ID ;
TIPODOC_APORTES_tmp.ENTAPORTANTES_ID = row6.ENTAPORTANTES_ID ;
TIPODOC_APORTES_tmp.REGIMEN_LABORAL_ID = row6.REGIMEN_LABORAL_ID ;
TIPODOC_APORTES_tmp.PERIODO = row6.PERIODO ;
TIPODOC_APORTES_tmp.NOMBRE_ENTAPORTANTE = row13.NOMBRE ;
TIPODOC_APORTES_tmp.DOCUMENTO_ENTAPORTANTE = row13.DOCUMENTO ;
TIPODOC_APORTES_tmp.SALUD_ID = row6.SALUD_ID ;
TIPODOC_APORTES_tmp.AENTIDADES_ID = row6.AENTIDADES_ID ;
TIPODOC_APORTES_tmp.AFILIADOS_ID = row6.AFILIADOS_ID ;
TIPODOC_APORTES_tmp.NOMBRE_TIPO_DOCUENTO = row14.SIGLA ;
TIPODOC_APORTES_tmp.DOCUMENTO = row6.DOCUMENTO ;
TIPODOC_APORTES_tmp.NOMBRE_COTIZANTE = row6.NOMBRE_COTIZANTE ;
TIPODOC_APORTES_tmp.NOMBRE_UNIDADMIL = row6.NOMBRE_UNIDADMIL ;
TIPODOC_APORTES_tmp.NOMBRE_GRADOMIL = row6.NOMBRE_GRADOMIL ;
TIPODOC_APORTES_tmp.FECHA_INGRESO = row6.FECHA_INGRESO ;
TIPODOC_APORTES_tmp.DIAS_COTIZADOS = row6.DIAS_COTIZADOS ;
TIPODOC_APORTES_tmp.SALARIO_BASICO = row6.SALARIO_BASICO ;
TIPODOC_APORTES_tmp.SUBSIDIO_FAMILIAR = row6.SUBSIDIO_FAMILIAR ;
TIPODOC_APORTES_tmp.IBC = row6.IBC ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADO = row6.APORTE_EMPLEADO ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADO = row6.PORCENTAJE_EMPLEADO ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADOR = row6.APORTE_EMPLEADOR ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADOR = row6.PORCENTAJE_EMPLEADOR ;
TIPODOC_APORTES_tmp.APORTE_FOSYGA = row6.APORTE_FOSYGA ;
TIPODOC_APORTES_tmp.PORCENTAJE_FOSYGA = row6.PORCENTAJE_FOSYGA ;
TIPODOC_APORTES_tmp.NOMBRE_VINCULACION = row6.NOMBRE_VINCULACION ;
TIPODOC_APORTES_tmp.TVINCULACIONES_ID = row6.TVINCULACIONES_ID ;
TIPODOC_APORTES_tmp.NOVEDADES = row6.NOVEDADES ;
TIPODOC_APORTES = TIPODOC_APORTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "TIEMPO_APORTE"
if(TIEMPO_APORTE != null) { 



	
	/**
	 * [tMap_34 main ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_APORTE"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_34 = false;
		boolean mainRowRejected_tMap_34 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_34__Struct Var = Var__tMap_34;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_APORTE = null;


// # Output table : 'TIEMPO_PART_APORTE'
TIEMPO_PART_APORTE_tmp.ID = TIEMPO_APORTE.SALUD_ID ;
TIEMPO_PART_APORTE_tmp.TIPO_RECAUDO_ID = TIEMPO_APORTE.TIPO_RECAUDO ;
TIEMPO_PART_APORTE_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_APORTE_tmp.PERIODO = TIEMPO_APORTE.PERIODO ;
TIEMPO_PART_APORTE_tmp.Anio = Var.Anio ;
TIEMPO_PART_APORTE_tmp.Mes = Var.Mes ;
TIEMPO_PART_APORTE_tmp.Dia = Var.Dia ;
TIEMPO_PART_APORTE = TIEMPO_PART_APORTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_34 = false;










 


	tos_count_tMap_34++;

/**
 * [tMap_34 main ] stop
 */
	
	/**
	 * [tMap_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_APORTE"
if(TIEMPO_PART_APORTE != null) { 



	
	/**
	 * [tSortRow_6_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_APORTE"
						
						);
					}
					



	ComparableTIEMPO_PART_APORTEStruct arrayRowtSortRow_6_SortOut = new ComparableTIEMPO_PART_APORTEStruct();

	arrayRowtSortRow_6_SortOut.ID = TIEMPO_PART_APORTE.ID;
	arrayRowtSortRow_6_SortOut.TIPO_RECAUDO_ID = TIEMPO_PART_APORTE.TIPO_RECAUDO_ID;
	arrayRowtSortRow_6_SortOut.FECHA = TIEMPO_PART_APORTE.FECHA;
	arrayRowtSortRow_6_SortOut.PERIODO = TIEMPO_PART_APORTE.PERIODO;
	arrayRowtSortRow_6_SortOut.Anio = TIEMPO_PART_APORTE.Anio;
	arrayRowtSortRow_6_SortOut.Mes = TIEMPO_PART_APORTE.Mes;
	arrayRowtSortRow_6_SortOut.Dia = TIEMPO_PART_APORTE.Dia;	
	list_tSortRow_6_SortOut.add(arrayRowtSortRow_6_SortOut);

 


	tos_count_tSortRow_6_SortOut++;

/**
 * [tSortRow_6_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_APORTE"




	
	/**
	 * [tMap_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_end ] stop
 */

} // End of branch "TIEMPO_APORTE"




// Start of branch "TIPODOC_APORTES"
if(TIPODOC_APORTES != null) { 



	
	/**
	 * [tReplicate_2 main ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_APORTES"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row38.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row38.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row38.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row38.PERIODO = TIPODOC_APORTES.PERIODO;								
	row38.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row38.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row38.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row38.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row38.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row38.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row38.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row38.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row38.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row38.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row38.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row38.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row38.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row38.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row38.IBC = TIPODOC_APORTES.IBC;								
	row38.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row38.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row38.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row38.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row38.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row38.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row38.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row38.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row38.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			
	row51 = new row51Struct();
						
	row51.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row51.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row51.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row51.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row51.PERIODO = TIPODOC_APORTES.PERIODO;								
	row51.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row51.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row51.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row51.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row51.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row51.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row51.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row51.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row51.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row51.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row51.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row51.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row51.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row51.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row51.IBC = TIPODOC_APORTES.IBC;								
	row51.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row51.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row51.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row51.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row51.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row51.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row51.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row51.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row51.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			


 


	tos_count_tReplicate_2++;

/**
 * [tReplicate_2 main ] stop
 */
	
	/**
	 * [tReplicate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.TIPO_RECAUDO = row38.TIPO_RECAUDO;
			operation_finder_tAggregateRow_4.CARGUE_ID = row38.CARGUE_ID;
			operation_finder_tAggregateRow_4.ENTAPORTANTES_ID = row38.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID = row38.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_4.PERIODO = row38.PERIODO;
			operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE = row38.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_4.NOMBRE_VINCULACION = row38.NOMBRE_VINCULACION;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.TIPO_RECAUDO = operation_finder_tAggregateRow_4.TIPO_RECAUDO;
				operation_result_tAggregateRow_4.CARGUE_ID = operation_finder_tAggregateRow_4.CARGUE_ID;
				operation_result_tAggregateRow_4.ENTAPORTANTES_ID = operation_finder_tAggregateRow_4.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_4.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_4.PERIODO = operation_finder_tAggregateRow_4.PERIODO;
				operation_result_tAggregateRow_4.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_4.NOMBRE_VINCULACION = operation_finder_tAggregateRow_4.NOMBRE_VINCULACION;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				if(row38.SALUD_ID != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.SALUD_ID_clmCount++;
				operation_result_tAggregateRow_4.count++;
				
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADO != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADO
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADOR != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADOR
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

XXX = null;


// # Output table : 'XXX'
// # Filter conditions 
if( 

row51.REGIMEN_LABORAL_ID != null

 ) {
XXX_tmp.ENTIDAD_APORTANTE_ID = row51.ENTAPORTANTES_ID ;
XXX_tmp.TIEMPO_ID = row51.CARGUE_ID ;
XXX_tmp.REGIMEN_LABORAL_ID = row51.REGIMEN_LABORAL_ID ;
XXX_tmp.TIPO_RECAUDO_ID = row51.TIPO_RECAUDO ;
XXX_tmp.AFILIADO_ID = row51.AFILIADOS_ID ;
XXX_tmp.NOMBRE_ENTAPORTANTE = row51.NOMBRE_ENTAPORTANTE ;
XXX_tmp.NOMBRE_TIPO_DOCUENTO = row51.NOMBRE_TIPO_DOCUENTO ;
XXX_tmp.NUMERO_DOCUMENTO = row51.DOCUMENTO ;
XXX_tmp.NOMBRE_COTIZANTE = row51.NOMBRE_COTIZANTE ;
XXX_tmp.NOMBRE_UNIDAD_MILITAR = row51.NOMBRE_UNIDADMIL ;
XXX_tmp.NOMBRE_GRADO_MILITAR = row51.NOMBRE_GRADOMIL ;
XXX_tmp.NOMBRE_VINCULACION = row51.NOMBRE_VINCULACION ;
XXX_tmp.FECHA_INGRESO = row51.FECHA_INGRESO ;
XXX_tmp.SALARIO_BASICO = row51.SALARIO_BASICO ;
XXX_tmp.SUBSIDIO_FAMILIAR = row51.SUBSIDIO_FAMILIAR ;
XXX_tmp.IBC = row51.IBC ;
XXX_tmp.NUMERO_DIAS = row51.DIAS_COTIZADOS ;
XXX_tmp.APORTE_EMPLEADO = row51.APORTE_EMPLEADO ;
XXX_tmp.PORCENTAJE_EMPLEADO = row51.PORCENTAJE_EMPLEADO ;
XXX_tmp.APORTE_EMPLEADOR = row51.APORTE_EMPLEADOR ;
XXX_tmp.PORCENTAJE_EMPLEADOR = row51.PORCENTAJE_EMPLEADOR ;
XXX_tmp.APORTE_FOSYGA = row51.APORTE_FOSYGA ;
XXX_tmp.PORCENTAJE_FOSYGA = row51.PORCENTAJE_FOSYGA ;
XXX_tmp.PERIODO = row51.PERIODO ;
XXX_tmp.TVINCULACIONES_ID = row51.TVINCULACIONES_ID ;
XXX_tmp.NOVEDADES = row51.NOVEDADES ;
XXX = XXX_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "XXX"
if(XXX != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"XXX"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                        pstmt_tOracleOutput_9.setBigDecimal(1, XXX.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(2, XXX.TIEMPO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(3, XXX.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_9.setInt(4, XXX.TIPO_RECAUDO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(5, XXX.AFILIADO_ID);

                        if(XXX.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_9.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(6, XXX.NOMBRE_ENTAPORTANTE);
}

                        if(XXX.NOMBRE_TIPO_DOCUENTO == null) {
pstmt_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(7, XXX.NOMBRE_TIPO_DOCUENTO);
}

                        if(XXX.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(8, XXX.NUMERO_DOCUMENTO);
}

                        if(XXX.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(9, XXX.NOMBRE_COTIZANTE);
}

                        if(XXX.NOMBRE_UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(10, XXX.NOMBRE_UNIDAD_MILITAR);
}

                        if(XXX.NOMBRE_GRADO_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(11, XXX.NOMBRE_GRADO_MILITAR);
}

                        if(XXX.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(12, XXX.NOMBRE_VINCULACION);
}

                        if(XXX.FECHA_INGRESO != null) {
pstmt_tOracleOutput_9.setObject(13, new java.sql.Timestamp(XXX.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_9.setNull(13, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_9.setBigDecimal(14, XXX.SALARIO_BASICO);

                        pstmt_tOracleOutput_9.setBigDecimal(15, XXX.SUBSIDIO_FAMILIAR);

                        pstmt_tOracleOutput_9.setBigDecimal(16, XXX.IBC);

                        pstmt_tOracleOutput_9.setBigDecimal(17, XXX.NUMERO_DIAS);

                        pstmt_tOracleOutput_9.setBigDecimal(18, XXX.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(19, XXX.PORCENTAJE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(20, XXX.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(21, XXX.PORCENTAJE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(22, XXX.APORTE_FOSYGA);

                        pstmt_tOracleOutput_9.setBigDecimal(23, XXX.PORCENTAJE_FOSYGA);

                        if(XXX.PERIODO == null) {
pstmt_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(24, XXX.PERIODO);
}

                        pstmt_tOracleOutput_9.setBigDecimal(25, XXX.TVINCULACIONES_ID);

                        if(XXX.NOVEDADES == null) {
pstmt_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(26, XXX.NOVEDADES);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "XXX"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_end ] stop
 */

} // End of branch "TIPODOC_APORTES"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tUnite_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_end ] stop
 */

} // End of branch "RECAUDO_RETRO_ATEP"




	
	/**
	 * [tMap_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_33";
	
	

 



/**
 * [tMap_33 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_31 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

}
}finally{
	if (rs_tOracleInput_31 != null) {
		rs_tOracleInput_31.close();
	}
	if (stmt_tOracleInput_31 != null) {
		stmt_tOracleInput_31.close();
	}
}

globalMap.put("tOracleInput_31_NB_LINE",nb_line_tOracleInput_31);
 

ok_Hash.put("tOracleInput_31", true);
end_Hash.put("tOracleInput_31", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_31", end_Hash.get("tOracleInput_31")-start_Hash.get("tOracleInput_31"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_31 end ] stop
 */

	
	/**
	 * [tMap_33 end ] start
	 */

	

	
	
	currentComponent="tMap_33";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_33", true);
end_Hash.put("tMap_33", System.currentTimeMillis());




/**
 * [tMap_33 end ] stop
 */




	
	/**
	 * [tMap_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_36", false);
		start_Hash.put("tMap_36", System.currentTimeMillis());
		
	
	currentComponent="tMap_36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_36 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_36__Struct  {
	int TIPO_RECAUDO;
}
Var__tMap_36__Struct Var__tMap_36 = new Var__tMap_36__Struct();
// ###############################

// ###############################
// # Outputs initialization
RECAUDO_NOVESPStruct RECAUDO_NOVESP_tmp = new RECAUDO_NOVESPStruct();
// ###############################

        
        



        









 



/**
 * [tMap_36 begin ] stop
 */



	
	/**
	 * [tOracleInput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_34", false);
		start_Hash.put("tOracleInput_34", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_34");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_34";
	
	
		int tos_count_tOracleInput_34 = 0;
		
	


	
		    int nb_line_tOracleInput_34 = 0;
		    java.sql.Connection conn_tOracleInput_34 = null;
				conn_tOracleInput_34 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_34 = false;
				boolean isConnectionWrapped_tOracleInput_34 = !(conn_tOracleInput_34 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_34.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_34 = null;
                if (isConnectionWrapped_tOracleInput_34) {
					unwrappedOraConn_tOracleInput_34 = conn_tOracleInput_34.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_34 != null) {
                        isTimeZoneNull_tOracleInput_34 = (unwrappedOraConn_tOracleInput_34.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_34 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_34).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_34) {
					java.sql.Statement stmtGetTZ_tOracleInput_34 = conn_tOracleInput_34.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_34 = stmtGetTZ_tOracleInput_34.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_34 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_34.next()) {
						sessionTimezone_tOracleInput_34 = rsGetTZ_tOracleInput_34.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_34 && unwrappedOraConn_tOracleInput_34 != null) {
                        unwrappedOraConn_tOracleInput_34.setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_34).setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_34 = conn_tOracleInput_34.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_34.setFetchSize(1000);


		    String dbquery_tOracleInput_34 = "SELECT CG.ID CARGUE_ID, CG.PERIODO, CG.ENTAPORTANTES_ID, TV.ID REGIMEN_LABORAL_ID, DS.ID SALUD_ID, DS.AENTIDADES_ID,\n "
+" NULL AFILIADOS_ID,\n  DS.TDOCUMENTOS_ID, DS.DOCUMENTO, \n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBRE, DS.SEGUNDO_NOMB"
+"RE, DS.PRIMER_APELLIDO,\n  DS.SEGUNDO_APELLIDO) NOMBRE_COTIZANTE, \n  UM.NOMBRE NOMBRE_UNIDADMIL, \n  GM.NOMBRE NOMBRE_G"
+"RADOMIL, \n  DS.FECHA_INGRESO FECHA_INGRESO, \n  0 DIAS_COTIZADOS, \n  0 SALARIO_BASICO, 0 SUBSIDIO_FAMILIAR, 0 IBC, \n "
+" 0 APORTE_EMPLEADO, \n  0 PORCENTAJE_EMPLEADO,  \n  DS.VALOR_APORTE APORTE_EMPLEADOR,    \n  0 PORCENTAJE_EMPLEADOR,  \n"
+"  0 APORTE_FOSYGA, \n  0 PORCENTAJE_FOSYGA,   \n  TV.NOMBRE NOMBRE_VINCULACION,\n  DS.TVINCULACIONES_ID AS TVINCULACIONE"
+"S_ID\n\nFROM VM_REC_CONSOLIDADO CG\nINNER JOIN REC_DNOVEDADESP DS ON DS.ID = CG.RDSD_ID\nLEFT JOIN AFI_TVINCULACIONES TV"
+" ON TV.ID = DS.TVINCULACIONES_ID AND TV.TVINCULACIONES = 'RC'\nLEFT JOIN GEN_GRDMILITARES GM ON GM.ID = DS.GRDMILITARES_"
+"ID \nLEFT JOIN GEN_UMILITARES UM ON UM.ID = DS.UMILITARES_ID    \nWHERE CG.TPLANILLAS_ID = 3 \nAND CG.TARCHIVOS_ID = 1\n"
+"AND CG.PERIODO = '" + context.PERIODO+ "'\nORDER BY CG.PERIODO, CG.ENTAPORTANTES_ID, DS.AENTIDADES_ID";
		    

		    globalMap.put("tOracleInput_34_QUERY",dbquery_tOracleInput_34);

		    java.sql.ResultSet rs_tOracleInput_34 = null;

		    try {
		    	rs_tOracleInput_34 = stmt_tOracleInput_34.executeQuery(dbquery_tOracleInput_34);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_34 = rs_tOracleInput_34.getMetaData();
		    	int colQtyInRs_tOracleInput_34 = rsmd_tOracleInput_34.getColumnCount();

		    String tmpContent_tOracleInput_34 = null;
		    
		    
		    while (rs_tOracleInput_34.next()) {
		        nb_line_tOracleInput_34++;
		        
							if(colQtyInRs_tOracleInput_34 < 1) {
								row8.CARGUE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(1) != null) {
						row8.CARGUE_ID = rs_tOracleInput_34.getBigDecimal(1);
					} else {
				
						row8.CARGUE_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 2) {
								row8.PERIODO = null;
							} else {
	                         		
        	row8.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 3) {
								row8.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(3) != null) {
						row8.ENTAPORTANTES_ID = rs_tOracleInput_34.getBigDecimal(3);
					} else {
				
						row8.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 4) {
								row8.REGIMEN_LABORAL_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(4) != null) {
						row8.REGIMEN_LABORAL_ID = rs_tOracleInput_34.getBigDecimal(4);
					} else {
				
						row8.REGIMEN_LABORAL_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 5) {
								row8.SALUD_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(5) != null) {
						row8.SALUD_ID = rs_tOracleInput_34.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 6) {
								row8.AENTIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(6) != null) {
						row8.AENTIDADES_ID = rs_tOracleInput_34.getBigDecimal(6);
					} else {
				
						row8.AENTIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 7) {
								row8.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(7) != null) {
						row8.AFILIADOS_ID = rs_tOracleInput_34.getBigDecimal(7);
					} else {
				
						row8.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 8) {
								row8.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(8) != null) {
						row8.TDOCUMENTOS_ID = rs_tOracleInput_34.getBigDecimal(8);
					} else {
				
						row8.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 9) {
								row8.DOCUMENTO = null;
							} else {
	                         		
        	row8.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 10) {
								row8.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row8.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 11) {
								row8.NOMBRE_UNIDADMIL = null;
							} else {
	                         		
        	row8.NOMBRE_UNIDADMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 12) {
								row8.NOMBRE_GRADOMIL = null;
							} else {
	                         		
        	row8.NOMBRE_GRADOMIL = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 13) {
								row8.FECHA_INGRESO = null;
							} else {
										
			row8.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_34, 13);
		                    }
							if(colQtyInRs_tOracleInput_34 < 14) {
								row8.DIAS_COTIZADOS = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(14) != null) {
						row8.DIAS_COTIZADOS = rs_tOracleInput_34.getBigDecimal(14);
					} else {
				
						row8.DIAS_COTIZADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 15) {
								row8.SALARIO_BASICO = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(15) != null) {
						row8.SALARIO_BASICO = rs_tOracleInput_34.getBigDecimal(15);
					} else {
				
						row8.SALARIO_BASICO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 16) {
								row8.SUBSIDIO_FAMILIAR = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(16) != null) {
						row8.SUBSIDIO_FAMILIAR = rs_tOracleInput_34.getBigDecimal(16);
					} else {
				
						row8.SUBSIDIO_FAMILIAR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 17) {
								row8.IBC = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(17) != null) {
						row8.IBC = rs_tOracleInput_34.getBigDecimal(17);
					} else {
				
						row8.IBC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 18) {
								row8.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(18) != null) {
						row8.APORTE_EMPLEADO = rs_tOracleInput_34.getBigDecimal(18);
					} else {
				
						row8.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 19) {
								row8.PORCENTAJE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(19) != null) {
						row8.PORCENTAJE_EMPLEADO = rs_tOracleInput_34.getBigDecimal(19);
					} else {
				
						row8.PORCENTAJE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 20) {
								row8.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(20) != null) {
						row8.APORTE_EMPLEADOR = rs_tOracleInput_34.getBigDecimal(20);
					} else {
				
						row8.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 21) {
								row8.PORCENTAJE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(21) != null) {
						row8.PORCENTAJE_EMPLEADOR = rs_tOracleInput_34.getBigDecimal(21);
					} else {
				
						row8.PORCENTAJE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 22) {
								row8.APORTE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(22) != null) {
						row8.APORTE_FOSYGA = rs_tOracleInput_34.getBigDecimal(22);
					} else {
				
						row8.APORTE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 23) {
								row8.PORCENTAJE_FOSYGA = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(23) != null) {
						row8.PORCENTAJE_FOSYGA = rs_tOracleInput_34.getBigDecimal(23);
					} else {
				
						row8.PORCENTAJE_FOSYGA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 24) {
								row8.NOMBRE_VINCULACION = null;
							} else {
	                         		
        	row8.NOMBRE_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 25) {
								row8.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(25) != null) {
						row8.TVINCULACIONES_ID = rs_tOracleInput_34.getBigDecimal(25);
					} else {
				
						row8.TVINCULACIONES_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_34 begin ] stop
 */
	
	/**
	 * [tOracleInput_34 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 


	tos_count_tOracleInput_34++;

/**
 * [tOracleInput_34 main ] stop
 */
	
	/**
	 * [tOracleInput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_begin ] stop
 */

	
	/**
	 * [tMap_36 main ] start
	 */

	

	
	
	currentComponent="tMap_36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_36 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_36 = false;
		boolean mainRowRejected_tMap_36 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_36__Struct Var = Var__tMap_36;
Var.TIPO_RECAUDO = 5;// ###############################
        // ###############################
        // # Output tables

RECAUDO_NOVESP = null;


// # Output table : 'RECAUDO_NOVESP'
RECAUDO_NOVESP_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RECAUDO_NOVESP_tmp.CARGUE_ID = row8.CARGUE_ID ;
RECAUDO_NOVESP_tmp.PERIODO = row8.PERIODO ;
RECAUDO_NOVESP_tmp.ENTAPORTANTES_ID = row8.ENTAPORTANTES_ID ;
RECAUDO_NOVESP_tmp.REGIMEN_LABORAL_ID = row8.REGIMEN_LABORAL_ID ;
RECAUDO_NOVESP_tmp.SALUD_ID = row8.SALUD_ID ;
RECAUDO_NOVESP_tmp.AENTIDADES_ID = row8.AENTIDADES_ID ;
RECAUDO_NOVESP_tmp.AFILIADOS_ID = row8.AFILIADOS_ID ;
RECAUDO_NOVESP_tmp.TDOCUMENTOS_ID = row8.TDOCUMENTOS_ID ;
RECAUDO_NOVESP_tmp.DOCUMENTO = row8.DOCUMENTO ;
RECAUDO_NOVESP_tmp.NOMBRE_COTIZANTE = row8.NOMBRE_COTIZANTE ;
RECAUDO_NOVESP_tmp.NOMBRE_UNIDADMIL = row8.NOMBRE_UNIDADMIL ;
RECAUDO_NOVESP_tmp.NOMBRE_GRADOMIL = row8.NOMBRE_GRADOMIL ;
RECAUDO_NOVESP_tmp.FECHA_INGRESO = row8.FECHA_INGRESO ;
RECAUDO_NOVESP_tmp.DIAS_COTIZADOS = row8.DIAS_COTIZADOS ;
RECAUDO_NOVESP_tmp.SALARIO_BASICO = row8.SALARIO_BASICO ;
RECAUDO_NOVESP_tmp.SUBSIDIO_FAMILIAR = row8.SUBSIDIO_FAMILIAR ;
RECAUDO_NOVESP_tmp.IBC = row8.IBC ;
RECAUDO_NOVESP_tmp.APORTE_EMPLEADO = row8.APORTE_EMPLEADO ;
RECAUDO_NOVESP_tmp.PORCENTAJE_EMPLEADO = row8.PORCENTAJE_EMPLEADO ;
RECAUDO_NOVESP_tmp.APORTE_EMPLEADOR = row8.APORTE_EMPLEADOR ;
RECAUDO_NOVESP_tmp.PORCENTAJE_EMPLEADOR = row8.PORCENTAJE_EMPLEADOR ;
RECAUDO_NOVESP_tmp.APORTE_FOSYGA = row8.APORTE_FOSYGA ;
RECAUDO_NOVESP_tmp.PORCENTAJE_FOSYGA = row8.PORCENTAJE_FOSYGA ;
RECAUDO_NOVESP_tmp.NOMBRE_VINCULACION = row8.NOMBRE_VINCULACION ;
RECAUDO_NOVESP_tmp.TVINCULACIONES_ID = row8.TVINCULACIONES_ID ;
RECAUDO_NOVESP_tmp.NOVEDADES = null;
RECAUDO_NOVESP = RECAUDO_NOVESP_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_36 = false;










 


	tos_count_tMap_36++;

/**
 * [tMap_36 main ] stop
 */
	
	/**
	 * [tMap_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_36";
	
	

 



/**
 * [tMap_36 process_data_begin ] stop
 */
// Start of branch "RECAUDO_NOVESP"
if(RECAUDO_NOVESP != null) { 



	
	/**
	 * [tUnite_2 main ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RECAUDO_NOVESP"
									
							);
						}
						
//////////
 

// for output
			row6 = new row6Struct();
								
			row6.TIPO_RECAUDO = RECAUDO_NOVESP.TIPO_RECAUDO;								
			row6.CARGUE_ID = RECAUDO_NOVESP.CARGUE_ID;								
			row6.PERIODO = RECAUDO_NOVESP.PERIODO;								
			row6.ENTAPORTANTES_ID = RECAUDO_NOVESP.ENTAPORTANTES_ID;								
			row6.REGIMEN_LABORAL_ID = RECAUDO_NOVESP.REGIMEN_LABORAL_ID;								
			row6.SALUD_ID = RECAUDO_NOVESP.SALUD_ID;								
			row6.AENTIDADES_ID = RECAUDO_NOVESP.AENTIDADES_ID;								
			row6.AFILIADOS_ID = RECAUDO_NOVESP.AFILIADOS_ID;								
			row6.TDOCUMENTOS_ID = RECAUDO_NOVESP.TDOCUMENTOS_ID;								
			row6.DOCUMENTO = RECAUDO_NOVESP.DOCUMENTO;								
			row6.NOMBRE_COTIZANTE = RECAUDO_NOVESP.NOMBRE_COTIZANTE;								
			row6.NOMBRE_UNIDADMIL = RECAUDO_NOVESP.NOMBRE_UNIDADMIL;								
			row6.NOMBRE_GRADOMIL = RECAUDO_NOVESP.NOMBRE_GRADOMIL;								
			row6.FECHA_INGRESO = RECAUDO_NOVESP.FECHA_INGRESO;								
			row6.DIAS_COTIZADOS = RECAUDO_NOVESP.DIAS_COTIZADOS;								
			row6.SALARIO_BASICO = RECAUDO_NOVESP.SALARIO_BASICO;								
			row6.SUBSIDIO_FAMILIAR = RECAUDO_NOVESP.SUBSIDIO_FAMILIAR;								
			row6.IBC = RECAUDO_NOVESP.IBC;								
			row6.APORTE_EMPLEADO = RECAUDO_NOVESP.APORTE_EMPLEADO;								
			row6.PORCENTAJE_EMPLEADO = RECAUDO_NOVESP.PORCENTAJE_EMPLEADO;								
			row6.APORTE_EMPLEADOR = RECAUDO_NOVESP.APORTE_EMPLEADOR;								
			row6.PORCENTAJE_EMPLEADOR = RECAUDO_NOVESP.PORCENTAJE_EMPLEADOR;								
			row6.APORTE_FOSYGA = RECAUDO_NOVESP.APORTE_FOSYGA;								
			row6.PORCENTAJE_FOSYGA = RECAUDO_NOVESP.PORCENTAJE_FOSYGA;								
			row6.NOMBRE_VINCULACION = RECAUDO_NOVESP.NOMBRE_VINCULACION;								
			row6.TVINCULACIONES_ID = RECAUDO_NOVESP.TVINCULACIONES_ID;								
			row6.NOVEDADES = RECAUDO_NOVESP.NOVEDADES;			

			nb_line_tUnite_2++;

//////////
 


	tos_count_tUnite_2++;

/**
 * [tUnite_2 main ] stop
 */
	
	/**
	 * [tUnite_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_32 main ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;
		
						row14Struct row14 = null;
					
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_32 = false;
		boolean mainRowRejected_tMap_32 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row14HashKey.ID = row6.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.ID = '" + row14HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_32) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_32 = false;
								
                        		    		    row13HashKey.ID = row6.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.ID = '" + row13HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_32__Struct Var = Var__tMap_32;
Var.var2 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row6.PERIODO + "-01")))) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_APORTE = null;
TIPODOC_APORTES = null;


// # Output table : 'TIEMPO_APORTE'
TIEMPO_APORTE_tmp.SALUD_ID = row6.CARGUE_ID ;
TIEMPO_APORTE_tmp.PERIODO = row6.PERIODO ;
TIEMPO_APORTE_tmp.FECHA = Var.var2 ;
TIEMPO_APORTE_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIEMPO_APORTE = TIEMPO_APORTE_tmp;

// # Output table : 'TIPODOC_APORTES'
TIPODOC_APORTES_tmp.TIPO_RECAUDO = row6.TIPO_RECAUDO ;
TIPODOC_APORTES_tmp.CARGUE_ID = row6.CARGUE_ID ;
TIPODOC_APORTES_tmp.ENTAPORTANTES_ID = row6.ENTAPORTANTES_ID ;
TIPODOC_APORTES_tmp.REGIMEN_LABORAL_ID = row6.REGIMEN_LABORAL_ID ;
TIPODOC_APORTES_tmp.PERIODO = row6.PERIODO ;
TIPODOC_APORTES_tmp.NOMBRE_ENTAPORTANTE = row13.NOMBRE ;
TIPODOC_APORTES_tmp.DOCUMENTO_ENTAPORTANTE = row13.DOCUMENTO ;
TIPODOC_APORTES_tmp.SALUD_ID = row6.SALUD_ID ;
TIPODOC_APORTES_tmp.AENTIDADES_ID = row6.AENTIDADES_ID ;
TIPODOC_APORTES_tmp.AFILIADOS_ID = row6.AFILIADOS_ID ;
TIPODOC_APORTES_tmp.NOMBRE_TIPO_DOCUENTO = row14.SIGLA ;
TIPODOC_APORTES_tmp.DOCUMENTO = row6.DOCUMENTO ;
TIPODOC_APORTES_tmp.NOMBRE_COTIZANTE = row6.NOMBRE_COTIZANTE ;
TIPODOC_APORTES_tmp.NOMBRE_UNIDADMIL = row6.NOMBRE_UNIDADMIL ;
TIPODOC_APORTES_tmp.NOMBRE_GRADOMIL = row6.NOMBRE_GRADOMIL ;
TIPODOC_APORTES_tmp.FECHA_INGRESO = row6.FECHA_INGRESO ;
TIPODOC_APORTES_tmp.DIAS_COTIZADOS = row6.DIAS_COTIZADOS ;
TIPODOC_APORTES_tmp.SALARIO_BASICO = row6.SALARIO_BASICO ;
TIPODOC_APORTES_tmp.SUBSIDIO_FAMILIAR = row6.SUBSIDIO_FAMILIAR ;
TIPODOC_APORTES_tmp.IBC = row6.IBC ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADO = row6.APORTE_EMPLEADO ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADO = row6.PORCENTAJE_EMPLEADO ;
TIPODOC_APORTES_tmp.APORTE_EMPLEADOR = row6.APORTE_EMPLEADOR ;
TIPODOC_APORTES_tmp.PORCENTAJE_EMPLEADOR = row6.PORCENTAJE_EMPLEADOR ;
TIPODOC_APORTES_tmp.APORTE_FOSYGA = row6.APORTE_FOSYGA ;
TIPODOC_APORTES_tmp.PORCENTAJE_FOSYGA = row6.PORCENTAJE_FOSYGA ;
TIPODOC_APORTES_tmp.NOMBRE_VINCULACION = row6.NOMBRE_VINCULACION ;
TIPODOC_APORTES_tmp.TVINCULACIONES_ID = row6.TVINCULACIONES_ID ;
TIPODOC_APORTES_tmp.NOVEDADES = row6.NOVEDADES ;
TIPODOC_APORTES = TIPODOC_APORTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_32 = false;










 


	tos_count_tMap_32++;

/**
 * [tMap_32 main ] stop
 */
	
	/**
	 * [tMap_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_begin ] stop
 */
// Start of branch "TIEMPO_APORTE"
if(TIEMPO_APORTE != null) { 



	
	/**
	 * [tMap_34 main ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_APORTE"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_34 = false;
		boolean mainRowRejected_tMap_34 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_34__Struct Var = Var__tMap_34;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_APORTE.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_APORTE = null;


// # Output table : 'TIEMPO_PART_APORTE'
TIEMPO_PART_APORTE_tmp.ID = TIEMPO_APORTE.SALUD_ID ;
TIEMPO_PART_APORTE_tmp.TIPO_RECAUDO_ID = TIEMPO_APORTE.TIPO_RECAUDO ;
TIEMPO_PART_APORTE_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_APORTE_tmp.PERIODO = TIEMPO_APORTE.PERIODO ;
TIEMPO_PART_APORTE_tmp.Anio = Var.Anio ;
TIEMPO_PART_APORTE_tmp.Mes = Var.Mes ;
TIEMPO_PART_APORTE_tmp.Dia = Var.Dia ;
TIEMPO_PART_APORTE = TIEMPO_PART_APORTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_34 = false;










 


	tos_count_tMap_34++;

/**
 * [tMap_34 main ] stop
 */
	
	/**
	 * [tMap_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_APORTE"
if(TIEMPO_PART_APORTE != null) { 



	
	/**
	 * [tSortRow_6_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_APORTE"
						
						);
					}
					



	ComparableTIEMPO_PART_APORTEStruct arrayRowtSortRow_6_SortOut = new ComparableTIEMPO_PART_APORTEStruct();

	arrayRowtSortRow_6_SortOut.ID = TIEMPO_PART_APORTE.ID;
	arrayRowtSortRow_6_SortOut.TIPO_RECAUDO_ID = TIEMPO_PART_APORTE.TIPO_RECAUDO_ID;
	arrayRowtSortRow_6_SortOut.FECHA = TIEMPO_PART_APORTE.FECHA;
	arrayRowtSortRow_6_SortOut.PERIODO = TIEMPO_PART_APORTE.PERIODO;
	arrayRowtSortRow_6_SortOut.Anio = TIEMPO_PART_APORTE.Anio;
	arrayRowtSortRow_6_SortOut.Mes = TIEMPO_PART_APORTE.Mes;
	arrayRowtSortRow_6_SortOut.Dia = TIEMPO_PART_APORTE.Dia;	
	list_tSortRow_6_SortOut.add(arrayRowtSortRow_6_SortOut);

 


	tos_count_tSortRow_6_SortOut++;

/**
 * [tSortRow_6_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_APORTE"




	
	/**
	 * [tMap_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 process_data_end ] stop
 */

} // End of branch "TIEMPO_APORTE"




// Start of branch "TIPODOC_APORTES"
if(TIPODOC_APORTES != null) { 



	
	/**
	 * [tReplicate_2 main ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_APORTES"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row38.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row38.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row38.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row38.PERIODO = TIPODOC_APORTES.PERIODO;								
	row38.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row38.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row38.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row38.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row38.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row38.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row38.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row38.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row38.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row38.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row38.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row38.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row38.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row38.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row38.IBC = TIPODOC_APORTES.IBC;								
	row38.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row38.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row38.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row38.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row38.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row38.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row38.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row38.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row38.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			
	row51 = new row51Struct();
						
	row51.TIPO_RECAUDO = TIPODOC_APORTES.TIPO_RECAUDO;								
	row51.CARGUE_ID = TIPODOC_APORTES.CARGUE_ID;								
	row51.ENTAPORTANTES_ID = TIPODOC_APORTES.ENTAPORTANTES_ID;								
	row51.REGIMEN_LABORAL_ID = TIPODOC_APORTES.REGIMEN_LABORAL_ID;								
	row51.PERIODO = TIPODOC_APORTES.PERIODO;								
	row51.NOMBRE_ENTAPORTANTE = TIPODOC_APORTES.NOMBRE_ENTAPORTANTE;								
	row51.DOCUMENTO_ENTAPORTANTE = TIPODOC_APORTES.DOCUMENTO_ENTAPORTANTE;								
	row51.SALUD_ID = TIPODOC_APORTES.SALUD_ID;								
	row51.AENTIDADES_ID = TIPODOC_APORTES.AENTIDADES_ID;								
	row51.AFILIADOS_ID = TIPODOC_APORTES.AFILIADOS_ID;								
	row51.NOMBRE_TIPO_DOCUENTO = TIPODOC_APORTES.NOMBRE_TIPO_DOCUENTO;								
	row51.DOCUMENTO = TIPODOC_APORTES.DOCUMENTO;								
	row51.NOMBRE_COTIZANTE = TIPODOC_APORTES.NOMBRE_COTIZANTE;								
	row51.NOMBRE_UNIDADMIL = TIPODOC_APORTES.NOMBRE_UNIDADMIL;								
	row51.NOMBRE_GRADOMIL = TIPODOC_APORTES.NOMBRE_GRADOMIL;								
	row51.FECHA_INGRESO = TIPODOC_APORTES.FECHA_INGRESO;								
	row51.DIAS_COTIZADOS = TIPODOC_APORTES.DIAS_COTIZADOS;								
	row51.SALARIO_BASICO = TIPODOC_APORTES.SALARIO_BASICO;								
	row51.SUBSIDIO_FAMILIAR = TIPODOC_APORTES.SUBSIDIO_FAMILIAR;								
	row51.IBC = TIPODOC_APORTES.IBC;								
	row51.APORTE_EMPLEADO = TIPODOC_APORTES.APORTE_EMPLEADO;								
	row51.PORCENTAJE_EMPLEADO = TIPODOC_APORTES.PORCENTAJE_EMPLEADO;								
	row51.APORTE_EMPLEADOR = TIPODOC_APORTES.APORTE_EMPLEADOR;								
	row51.PORCENTAJE_EMPLEADOR = TIPODOC_APORTES.PORCENTAJE_EMPLEADOR;								
	row51.APORTE_FOSYGA = TIPODOC_APORTES.APORTE_FOSYGA;								
	row51.PORCENTAJE_FOSYGA = TIPODOC_APORTES.PORCENTAJE_FOSYGA;								
	row51.NOMBRE_VINCULACION = TIPODOC_APORTES.NOMBRE_VINCULACION;								
	row51.TVINCULACIONES_ID = TIPODOC_APORTES.TVINCULACIONES_ID;								
	row51.NOVEDADES = TIPODOC_APORTES.NOVEDADES;			


 


	tos_count_tReplicate_2++;

/**
 * [tReplicate_2 main ] stop
 */
	
	/**
	 * [tReplicate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.TIPO_RECAUDO = row38.TIPO_RECAUDO;
			operation_finder_tAggregateRow_4.CARGUE_ID = row38.CARGUE_ID;
			operation_finder_tAggregateRow_4.ENTAPORTANTES_ID = row38.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID = row38.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_4.PERIODO = row38.PERIODO;
			operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE = row38.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_4.NOMBRE_VINCULACION = row38.NOMBRE_VINCULACION;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.TIPO_RECAUDO = operation_finder_tAggregateRow_4.TIPO_RECAUDO;
				operation_result_tAggregateRow_4.CARGUE_ID = operation_finder_tAggregateRow_4.CARGUE_ID;
				operation_result_tAggregateRow_4.ENTAPORTANTES_ID = operation_finder_tAggregateRow_4.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_4.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_4.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_4.PERIODO = operation_finder_tAggregateRow_4.PERIODO;
				operation_result_tAggregateRow_4.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_4.NOMBRE_VINCULACION = operation_finder_tAggregateRow_4.NOMBRE_VINCULACION;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				if(row38.SALUD_ID != null) { // G_OutMain_AggR_546
				
				operation_result_tAggregateRow_4.SALUD_ID_clmCount++;
				operation_result_tAggregateRow_4.count++;
				
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADO != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADO
							)
						)
					);
					
				} // G_OutMain_AggR_546
				
				if(row38.APORTE_EMPLEADOR != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_4.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row38.APORTE_EMPLEADOR
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

XXX = null;


// # Output table : 'XXX'
// # Filter conditions 
if( 

row51.REGIMEN_LABORAL_ID != null

 ) {
XXX_tmp.ENTIDAD_APORTANTE_ID = row51.ENTAPORTANTES_ID ;
XXX_tmp.TIEMPO_ID = row51.CARGUE_ID ;
XXX_tmp.REGIMEN_LABORAL_ID = row51.REGIMEN_LABORAL_ID ;
XXX_tmp.TIPO_RECAUDO_ID = row51.TIPO_RECAUDO ;
XXX_tmp.AFILIADO_ID = row51.AFILIADOS_ID ;
XXX_tmp.NOMBRE_ENTAPORTANTE = row51.NOMBRE_ENTAPORTANTE ;
XXX_tmp.NOMBRE_TIPO_DOCUENTO = row51.NOMBRE_TIPO_DOCUENTO ;
XXX_tmp.NUMERO_DOCUMENTO = row51.DOCUMENTO ;
XXX_tmp.NOMBRE_COTIZANTE = row51.NOMBRE_COTIZANTE ;
XXX_tmp.NOMBRE_UNIDAD_MILITAR = row51.NOMBRE_UNIDADMIL ;
XXX_tmp.NOMBRE_GRADO_MILITAR = row51.NOMBRE_GRADOMIL ;
XXX_tmp.NOMBRE_VINCULACION = row51.NOMBRE_VINCULACION ;
XXX_tmp.FECHA_INGRESO = row51.FECHA_INGRESO ;
XXX_tmp.SALARIO_BASICO = row51.SALARIO_BASICO ;
XXX_tmp.SUBSIDIO_FAMILIAR = row51.SUBSIDIO_FAMILIAR ;
XXX_tmp.IBC = row51.IBC ;
XXX_tmp.NUMERO_DIAS = row51.DIAS_COTIZADOS ;
XXX_tmp.APORTE_EMPLEADO = row51.APORTE_EMPLEADO ;
XXX_tmp.PORCENTAJE_EMPLEADO = row51.PORCENTAJE_EMPLEADO ;
XXX_tmp.APORTE_EMPLEADOR = row51.APORTE_EMPLEADOR ;
XXX_tmp.PORCENTAJE_EMPLEADOR = row51.PORCENTAJE_EMPLEADOR ;
XXX_tmp.APORTE_FOSYGA = row51.APORTE_FOSYGA ;
XXX_tmp.PORCENTAJE_FOSYGA = row51.PORCENTAJE_FOSYGA ;
XXX_tmp.PERIODO = row51.PERIODO ;
XXX_tmp.TVINCULACIONES_ID = row51.TVINCULACIONES_ID ;
XXX_tmp.NOVEDADES = row51.NOVEDADES ;
XXX = XXX_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "XXX"
if(XXX != null) { 



	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"XXX"
						
						);
					}
					



        whetherReject_tOracleOutput_9 = false;
                        pstmt_tOracleOutput_9.setBigDecimal(1, XXX.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(2, XXX.TIEMPO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(3, XXX.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_9.setInt(4, XXX.TIPO_RECAUDO_ID);

                        pstmt_tOracleOutput_9.setBigDecimal(5, XXX.AFILIADO_ID);

                        if(XXX.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_9.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(6, XXX.NOMBRE_ENTAPORTANTE);
}

                        if(XXX.NOMBRE_TIPO_DOCUENTO == null) {
pstmt_tOracleOutput_9.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(7, XXX.NOMBRE_TIPO_DOCUENTO);
}

                        if(XXX.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(8, XXX.NUMERO_DOCUMENTO);
}

                        if(XXX.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_9.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(9, XXX.NOMBRE_COTIZANTE);
}

                        if(XXX.NOMBRE_UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(10, XXX.NOMBRE_UNIDAD_MILITAR);
}

                        if(XXX.NOMBRE_GRADO_MILITAR == null) {
pstmt_tOracleOutput_9.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(11, XXX.NOMBRE_GRADO_MILITAR);
}

                        if(XXX.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_9.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(12, XXX.NOMBRE_VINCULACION);
}

                        if(XXX.FECHA_INGRESO != null) {
pstmt_tOracleOutput_9.setObject(13, new java.sql.Timestamp(XXX.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_9.setNull(13, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_9.setBigDecimal(14, XXX.SALARIO_BASICO);

                        pstmt_tOracleOutput_9.setBigDecimal(15, XXX.SUBSIDIO_FAMILIAR);

                        pstmt_tOracleOutput_9.setBigDecimal(16, XXX.IBC);

                        pstmt_tOracleOutput_9.setBigDecimal(17, XXX.NUMERO_DIAS);

                        pstmt_tOracleOutput_9.setBigDecimal(18, XXX.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(19, XXX.PORCENTAJE_EMPLEADO);

                        pstmt_tOracleOutput_9.setBigDecimal(20, XXX.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(21, XXX.PORCENTAJE_EMPLEADOR);

                        pstmt_tOracleOutput_9.setBigDecimal(22, XXX.APORTE_FOSYGA);

                        pstmt_tOracleOutput_9.setBigDecimal(23, XXX.PORCENTAJE_FOSYGA);

                        if(XXX.PERIODO == null) {
pstmt_tOracleOutput_9.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(24, XXX.PERIODO);
}

                        pstmt_tOracleOutput_9.setBigDecimal(25, XXX.TVINCULACIONES_ID);

                        if(XXX.NOVEDADES == null) {
pstmt_tOracleOutput_9.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(26, XXX.NOVEDADES);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */

} // End of branch "XXX"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 process_data_end ] stop
 */

} // End of branch "TIPODOC_APORTES"




	
	/**
	 * [tMap_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 process_data_end ] stop
 */



	
	/**
	 * [tUnite_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 process_data_end ] stop
 */

} // End of branch "RECAUDO_NOVESP"




	
	/**
	 * [tMap_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_36";
	
	

 



/**
 * [tMap_36 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_34 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

}
}finally{
	if (rs_tOracleInput_34 != null) {
		rs_tOracleInput_34.close();
	}
	if (stmt_tOracleInput_34 != null) {
		stmt_tOracleInput_34.close();
	}
}

globalMap.put("tOracleInput_34_NB_LINE",nb_line_tOracleInput_34);
 

ok_Hash.put("tOracleInput_34", true);
end_Hash.put("tOracleInput_34", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_34", end_Hash.get("tOracleInput_34")-start_Hash.get("tOracleInput_34"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_34 end ] stop
 */

	
	/**
	 * [tMap_36 end ] start
	 */

	

	
	
	currentComponent="tMap_36";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_36", true);
end_Hash.put("tMap_36", System.currentTimeMillis());




/**
 * [tMap_36 end ] stop
 */



	
	/**
	 * [tUnite_2 end ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

globalMap.put("tUnite_2_NB_LINE", nb_line_tUnite_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"RECAUDO_RETRO_ATEP","RECAUDO_RETRO_SALUD","RECAUDO_NOVESP","RECAUDO_APORTE_ATEP","RECAUDO_APORTE_SALUD");
			  	}
			  	
 

ok_Hash.put("tUnite_2", true);
end_Hash.put("tUnite_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUnite_2", end_Hash.get("tUnite_2")-start_Hash.get("tUnite_2"));
tStatCatcher_1Process(globalMap);



/**
 * [tUnite_2 end ] stop
 */

	
	/**
	 * [tMap_32 end ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_32", true);
end_Hash.put("tMap_32", System.currentTimeMillis());




/**
 * [tMap_32 end ] stop
 */

	
	/**
	 * [tMap_34 end ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIEMPO_APORTE");
			  	}
			  	
 

ok_Hash.put("tMap_34", true);
end_Hash.put("tMap_34", System.currentTimeMillis());




/**
 * [tMap_34 end ] stop
 */

	
	/**
	 * [tSortRow_6_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

TIEMPO_PART_APORTEStruct[] array_tSortRow_6_SortOut = list_tSortRow_6_SortOut.toArray(new ComparableTIEMPO_PART_APORTEStruct[0]);

java.util.Arrays.sort(array_tSortRow_6_SortOut);

globalMap.put("tSortRow_6",array_tSortRow_6_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIEMPO_PART_APORTE");
			  	}
			  	
 

ok_Hash.put("tSortRow_6_SortOut", true);
end_Hash.put("tSortRow_6_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_6_SortOut", end_Hash.get("tSortRow_6_SortOut")-start_Hash.get("tSortRow_6_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_6_SortOut end ] stop
 */





	
	/**
	 * [tOracleOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_16", false);
		start_Hash.put("tOracleOutput_16", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_16");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row62");
					}
				
		int tos_count_tOracleOutput_16 = 0;
		






        int updateKeyCount_tOracleOutput_16 = 6;
        if(updateKeyCount_tOracleOutput_16 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_16 == 8 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_16 = 0;
    int nb_line_update_tOracleOutput_16 = 0;
    int nb_line_inserted_tOracleOutput_16 = 0;
    int nb_line_deleted_tOracleOutput_16 = 0;
    int nb_line_rejected_tOracleOutput_16 = 0;

    int tmp_batchUpdateCount_tOracleOutput_16 = 0;

    int deletedCount_tOracleOutput_16=0;
    int updatedCount_tOracleOutput_16=0;
    int insertedCount_tOracleOutput_16=0;
    int rowsToCommitCount_tOracleOutput_16=0;
    int rejectedCount_tOracleOutput_16=0;

    boolean whetherReject_tOracleOutput_16 = false;

    java.sql.Connection conn_tOracleOutput_16 = null;

    //optional table
    String dbschema_tOracleOutput_16 = null;
    String tableName_tOracleOutput_16 = null;
                    String driverClass_tOracleOutput_16 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_16);
                String url_tOracleOutput_16 = null;
                    url_tOracleOutput_16 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_16 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_16 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_16 = decryptedPassword_tOracleOutput_16;
                dbschema_tOracleOutput_16 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_16 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_16.put("user",dbUser_tOracleOutput_16);
                    atnParamsPrope_tOracleOutput_16.put("password",dbPwd_tOracleOutput_16);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_16.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_16 = java.sql.DriverManager.getConnection(url_tOracleOutput_16, atnParamsPrope_tOracleOutput_16);
        resourceMap.put("conn_tOracleOutput_16", conn_tOracleOutput_16);
            conn_tOracleOutput_16.setAutoCommit(false);
            int commitEvery_tOracleOutput_16 = 1000;
            int commitCounter_tOracleOutput_16 = 0;
        int count_tOracleOutput_16=0;

        if(dbschema_tOracleOutput_16 == null || dbschema_tOracleOutput_16.trim().length() == 0) {
            tableName_tOracleOutput_16 = ("BREC_NOVEDAD");
        } else {
            tableName_tOracleOutput_16 = dbschema_tOracleOutput_16 + "." + ("BREC_NOVEDAD");
        }
                java.sql.PreparedStatement pstmt_tOracleOutput_16 = conn_tOracleOutput_16.prepareStatement("SELECT COUNT(1) FROM " + tableName_tOracleOutput_16 + " WHERE TIEMPO_ID = ? AND TIPO_RECAUDO_ID = ? AND TNOVEDAD_ID = ? AND PERIODO = ? AND REGIMEN_LABORAL_ID = ? AND ENTAPORTANTE_ID = ?");
                resourceMap.put("pstmt_tOracleOutput_16", pstmt_tOracleOutput_16);
                String insert_tOracleOutput_16 = "INSERT INTO " + tableName_tOracleOutput_16 + " (TIEMPO_ID,TIPO_RECAUDO_ID,TNOVEDAD_ID,PERIODO,NOMBRE_NOVEDAD,CANTIDAD_NOVEDAD,REGIMEN_LABORAL_ID,ENTAPORTANTE_ID) VALUES (?,?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_16 = conn_tOracleOutput_16.prepareStatement(insert_tOracleOutput_16);
                resourceMap.put("pstmtInsert_tOracleOutput_16", pstmtInsert_tOracleOutput_16);
                String update_tOracleOutput_16 = "UPDATE " + tableName_tOracleOutput_16 + " SET NOMBRE_NOVEDAD = ?,CANTIDAD_NOVEDAD = ? WHERE TIEMPO_ID = ? AND TIPO_RECAUDO_ID = ? AND TNOVEDAD_ID = ? AND PERIODO = ? AND REGIMEN_LABORAL_ID = ? AND ENTAPORTANTE_ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_16 = conn_tOracleOutput_16.prepareStatement(update_tOracleOutput_16);
                resourceMap.put("pstmtUpdate_tOracleOutput_16", pstmtUpdate_tOracleOutput_16);





 



/**
 * [tOracleOutput_16 begin ] stop
 */



	
	/**
	 * [tUniqRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_5", false);
		start_Hash.put("tUniqRow_5", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_5");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"CANT_NOVEDADES");
					}
				
		int tos_count_tUniqRow_5 = 0;
		

	
		class KeyStruct_tUniqRow_5 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal TIEMPO_ID;
					Integer TIPO_RECAUDO_ID;
					BigDecimal TNOVEDAD_ID;
					String PERIODO;
					BigDecimal REGIMEN_LABORAL_ID;
					BigDecimal ENTAPORTANTE_ID;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
								
								result = prime * result + ((this.TIPO_RECAUDO_ID == null) ? 0 : this.TIPO_RECAUDO_ID.hashCode());
								
								result = prime * result + ((this.TNOVEDAD_ID == null) ? 0 : this.TNOVEDAD_ID.hashCode());
								
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
								result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
								
								result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_5 other = (KeyStruct_tUniqRow_5) obj;
				
									if (this.TIEMPO_ID == null) {
										if (other.TIEMPO_ID != null) 
											return false;
								
									} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
								 
										return false;
								
									if (this.TIPO_RECAUDO_ID == null) {
										if (other.TIPO_RECAUDO_ID != null) 
											return false;
								
									} else if (!this.TIPO_RECAUDO_ID.equals(other.TIPO_RECAUDO_ID))
								 
										return false;
								
									if (this.TNOVEDAD_ID == null) {
										if (other.TNOVEDAD_ID != null) 
											return false;
								
									} else if (!this.TNOVEDAD_ID.equals(other.TNOVEDAD_ID))
								 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
									if (this.REGIMEN_LABORAL_ID == null) {
										if (other.REGIMEN_LABORAL_ID != null) 
											return false;
								
									} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
								 
										return false;
								
									if (this.ENTAPORTANTE_ID == null) {
										if (other.ENTAPORTANTE_ID != null) 
											return false;
								
									} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_5 = 0;
int nb_duplicates_tUniqRow_5 = 0;
KeyStruct_tUniqRow_5 finder_tUniqRow_5 = new KeyStruct_tUniqRow_5();
java.util.Set<KeyStruct_tUniqRow_5> keystUniqRow_5 = new java.util.HashSet<KeyStruct_tUniqRow_5>();
java.util.Set<KeyStruct_tUniqRow_5> keysForDuplicatedtUniqRow_5 = new java.util.HashSet<KeyStruct_tUniqRow_5>(); 

 



/**
 * [tUniqRow_5 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row60");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
					globalMap.get( "tHash_Lookup_row42" ))
					;					
					
	

row42Struct row42HashKey = new row42Struct();
row42Struct row42Default = new row42Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
CANT_NOVEDADESStruct CANT_NOVEDADES_tmp = new CANT_NOVEDADESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */






	
	/**
	 * [tOracleOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_8", false);
		start_Hash.put("tOracleOutput_8", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_8");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row90");
					}
				
		int tos_count_tOracleOutput_8 = 0;
		






    
    int nb_line_tOracleOutput_8 = 0;
    int nb_line_update_tOracleOutput_8 = 0;
    int nb_line_inserted_tOracleOutput_8 = 0;
    int nb_line_deleted_tOracleOutput_8 = 0;
    int nb_line_rejected_tOracleOutput_8 = 0;

    int tmp_batchUpdateCount_tOracleOutput_8 = 0;

    int deletedCount_tOracleOutput_8=0;
    int updatedCount_tOracleOutput_8=0;
    int insertedCount_tOracleOutput_8=0;
    int rowsToCommitCount_tOracleOutput_8=0;
    int rejectedCount_tOracleOutput_8=0;

    boolean whetherReject_tOracleOutput_8 = false;

    java.sql.Connection conn_tOracleOutput_8 = null;

    //optional table
    String dbschema_tOracleOutput_8 = null;
    String tableName_tOracleOutput_8 = null;
        dbschema_tOracleOutput_8 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_8=0;

        if(dbschema_tOracleOutput_8 == null || dbschema_tOracleOutput_8.trim().length() == 0) {
            tableName_tOracleOutput_8 = ("BREC_TIEMPO");
        } else {
            tableName_tOracleOutput_8 = dbschema_tOracleOutput_8 + "." + ("BREC_TIEMPO");
        }
                String insert_tOracleOutput_8 = "INSERT INTO " + tableName_tOracleOutput_8 + " (ID,TIPO_RECAUDO_ID,FECHA,PERIODO,Anio,Mes,Dia) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_8 = conn_tOracleOutput_8.prepareStatement(insert_tOracleOutput_8);
                        resourceMap.put("pstmt_tOracleOutput_8", pstmt_tOracleOutput_8);





 



/**
 * [tOracleOutput_8 begin ] stop
 */




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row91");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row91Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_RecAportes_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row91Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tReplicate_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_5", false);
		start_Hash.put("tReplicate_5", System.currentTimeMillis());
		
	
	currentComponent="tReplicate_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tReplicate_5 = 0;
		

 



/**
 * [tReplicate_5 begin ] stop
 */



	
	/**
	 * [tUniqRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_4", false);
		start_Hash.put("tUniqRow_4", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_4");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row59");
					}
				
		int tos_count_tUniqRow_4 = 0;
		

	
		class KeyStruct_tUniqRow_4 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal ID;
					int TIPO_RECAUDO_ID;
					String PERIODO;
					int Anio;
					int Mes;
					int Dia;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
									result = prime * result + (int) this.TIPO_RECAUDO_ID;
									
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
									result = prime * result + (int) this.Anio;
									
									result = prime * result + (int) this.Mes;
									
									result = prime * result + (int) this.Dia;
									
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;
				
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
								
									} else if (!this.ID.equals(other.ID))
								 
										return false;
								
									if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID) 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
									if (this.Anio != other.Anio) 
										return false;
								
									if (this.Mes != other.Mes) 
										return false;
								
									if (this.Dia != other.Dia) 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_4 = 0;
int nb_duplicates_tUniqRow_4 = 0;
KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>(); 

 



/**
 * [tUniqRow_4 begin ] stop
 */



	
	/**
	 * [tReplicate_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_3", false);
		start_Hash.put("tReplicate_3", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tReplicate_3");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tReplicate_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tReplicate_3 = 0;
		

 



/**
 * [tReplicate_3 begin ] stop
 */



	
	/**
	 * [tSortRow_6_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_6_SortIn", false);
		start_Hash.put("tSortRow_6_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_6_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	
		int tos_count_tSortRow_6_SortIn = 0;
		


TIEMPO_PART_APORTEStruct[] array_tSortRow_6_SortIn = (TIEMPO_PART_APORTEStruct[]) globalMap.remove("tSortRow_6");

int nb_line_tSortRow_6_SortIn = 0;

TIEMPO_PART_APORTEStruct current_tSortRow_6_SortIn = null;

for(int i_tSortRow_6_SortIn = 0; i_tSortRow_6_SortIn < array_tSortRow_6_SortIn.length; i_tSortRow_6_SortIn++){
	current_tSortRow_6_SortIn = array_tSortRow_6_SortIn[i_tSortRow_6_SortIn];
	row41.ID = current_tSortRow_6_SortIn.ID;
	row41.TIPO_RECAUDO_ID = current_tSortRow_6_SortIn.TIPO_RECAUDO_ID;
	row41.FECHA = current_tSortRow_6_SortIn.FECHA;
	row41.PERIODO = current_tSortRow_6_SortIn.PERIODO;
	row41.Anio = current_tSortRow_6_SortIn.Anio;
	row41.Mes = current_tSortRow_6_SortIn.Mes;
	row41.Dia = current_tSortRow_6_SortIn.Dia;
	// increase number of line sorted
	nb_line_tSortRow_6_SortIn++;

 



/**
 * [tSortRow_6_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_6_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	

 


	tos_count_tSortRow_6_SortIn++;

/**
 * [tSortRow_6_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_6_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	

 



/**
 * [tSortRow_6_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tReplicate_3 main ] start
	 */

	

	
	
	currentComponent="tReplicate_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					


	row60 = new row60Struct();
						
	row60.ID = row41.ID;								
	row60.TIPO_RECAUDO_ID = row41.TIPO_RECAUDO_ID;								
	row60.FECHA = row41.FECHA;								
	row60.PERIODO = row41.PERIODO;								
	row60.Anio = row41.Anio;								
	row60.Mes = row41.Mes;								
	row60.Dia = row41.Dia;			
	row59 = new row59Struct();
						
	row59.ID = row41.ID;								
	row59.TIPO_RECAUDO_ID = row41.TIPO_RECAUDO_ID;								
	row59.FECHA = row41.FECHA;								
	row59.PERIODO = row41.PERIODO;								
	row59.Anio = row41.Anio;								
	row59.Mes = row41.Mes;								
	row59.Dia = row41.Dia;			


 


	tos_count_tReplicate_3++;

/**
 * [tReplicate_3 main ] stop
 */
	
	/**
	 * [tReplicate_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_3";
	
	

 



/**
 * [tReplicate_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row60"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
						row42Struct row42 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row42" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow42 = false;
       		  	    	
       		  	    	
 							row42Struct row42ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_13) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_13 = false;
								
                        		    		    row42HashKey.TIEMPO_ID = row60.ID ;
                        		    		
                        		    		    row42HashKey.TIPO_RECAUDO_ID = row60.TIPO_RECAUDO_ID ;
                        		    		
                        		    		    row42HashKey.PERIODO = row60.PERIODO ;
                        		    		

								
		                        	row42HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row42.lookup( row42HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row42.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_13 = true;
	  								
						
									
	
		  								forceLooprow42 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow42 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row42 != null && tHash_Lookup_row42.hasNext()) || forceLooprow42) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row42'
									
                    		  	 
							   
                    		  	 
	       		  	    	row42Struct fromLookup_row42 = null;
							row42 = row42Default;
										 
							
								
								if(!forceLooprow42) { // G 46
								
							
								 
							
								
								fromLookup_row42 = tHash_Lookup_row42.next();

							

							if(fromLookup_row42 != null) {
								row42 = fromLookup_row42;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow42 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

CANT_NOVEDADES = null;

if(!rejectedInnerJoin_tMap_13 ) {

// # Output table : 'CANT_NOVEDADES'
// # Filter conditions 
if( 

row42.TVINCULACIONES_ID != null

 ) {
CANT_NOVEDADES_tmp.TIEMPO_ID = row42.TIEMPO_ID ;
CANT_NOVEDADES_tmp.TIPO_RECAUDO_ID = row42.TIPO_RECAUDO_ID ;
CANT_NOVEDADES_tmp.TNOVEDAD_ID = row42.TNOVEDADES_ID ;
CANT_NOVEDADES_tmp.PERIODO = row42.PERIODO ;
CANT_NOVEDADES_tmp.NOMBRE_NOVEDAD = row42.NOMBRE_NOVEDAD ;
CANT_NOVEDADES_tmp.CANTIDAD_NOVEDAD = row42.CANTIDAD_NOVEDAD ;
CANT_NOVEDADES_tmp.REGIMEN_LABORAL_ID = row42.TVINCULACIONES_ID ;
CANT_NOVEDADES_tmp.ENTAPORTANTE_ID = row42.ENTAPORTANTES_ID ;
CANT_NOVEDADES = CANT_NOVEDADES_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "CANT_NOVEDADES"
if(CANT_NOVEDADES != null) { 



	
	/**
	 * [tUniqRow_5 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"CANT_NOVEDADES"
						
						);
					}
					
row62 = null;			
finder_tUniqRow_5.TIEMPO_ID = CANT_NOVEDADES.TIEMPO_ID;
finder_tUniqRow_5.TIPO_RECAUDO_ID = CANT_NOVEDADES.TIPO_RECAUDO_ID;
finder_tUniqRow_5.TNOVEDAD_ID = CANT_NOVEDADES.TNOVEDAD_ID;
if(CANT_NOVEDADES.PERIODO == null){
	finder_tUniqRow_5.PERIODO = null;
}else{
	finder_tUniqRow_5.PERIODO = CANT_NOVEDADES.PERIODO.toLowerCase();
}
finder_tUniqRow_5.REGIMEN_LABORAL_ID = CANT_NOVEDADES.REGIMEN_LABORAL_ID;
finder_tUniqRow_5.ENTAPORTANTE_ID = CANT_NOVEDADES.ENTAPORTANTE_ID;	
finder_tUniqRow_5.hashCodeDirty = true;
if (!keystUniqRow_5.contains(finder_tUniqRow_5)) {
		KeyStruct_tUniqRow_5 new_tUniqRow_5 = new KeyStruct_tUniqRow_5();

		
new_tUniqRow_5.TIEMPO_ID = CANT_NOVEDADES.TIEMPO_ID;
new_tUniqRow_5.TIPO_RECAUDO_ID = CANT_NOVEDADES.TIPO_RECAUDO_ID;
new_tUniqRow_5.TNOVEDAD_ID = CANT_NOVEDADES.TNOVEDAD_ID;
if(CANT_NOVEDADES.PERIODO == null){
	new_tUniqRow_5.PERIODO = null;
}else{
	new_tUniqRow_5.PERIODO = CANT_NOVEDADES.PERIODO.toLowerCase();
}
new_tUniqRow_5.REGIMEN_LABORAL_ID = CANT_NOVEDADES.REGIMEN_LABORAL_ID;
new_tUniqRow_5.ENTAPORTANTE_ID = CANT_NOVEDADES.ENTAPORTANTE_ID;
		
		keystUniqRow_5.add(new_tUniqRow_5);if(row62 == null){ 
	
	row62 = new row62Struct();
}row62.TIEMPO_ID = CANT_NOVEDADES.TIEMPO_ID;			row62.TIPO_RECAUDO_ID = CANT_NOVEDADES.TIPO_RECAUDO_ID;			row62.TNOVEDAD_ID = CANT_NOVEDADES.TNOVEDAD_ID;			row62.PERIODO = CANT_NOVEDADES.PERIODO;			row62.NOMBRE_NOVEDAD = CANT_NOVEDADES.NOMBRE_NOVEDAD;			row62.CANTIDAD_NOVEDAD = CANT_NOVEDADES.CANTIDAD_NOVEDAD;			row62.REGIMEN_LABORAL_ID = CANT_NOVEDADES.REGIMEN_LABORAL_ID;			row62.ENTAPORTANTE_ID = CANT_NOVEDADES.ENTAPORTANTE_ID;					
		nb_uniques_tUniqRow_5++;
	} else {
	  nb_duplicates_tUniqRow_5++;
	}

 


	tos_count_tUniqRow_5++;

/**
 * [tUniqRow_5 main ] stop
 */
	
	/**
	 * [tUniqRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";
	
	

 



/**
 * [tUniqRow_5 process_data_begin ] stop
 */
// Start of branch "row62"
if(row62 != null) { 



	
	/**
	 * [tOracleOutput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row62"
						
						);
					}
					



        whetherReject_tOracleOutput_16 = false;
                    pstmt_tOracleOutput_16.setBigDecimal(1, row62.TIEMPO_ID);

                    if(row62.TIPO_RECAUDO_ID == null) {
pstmt_tOracleOutput_16.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_16.setInt(2, row62.TIPO_RECAUDO_ID);
}

                    pstmt_tOracleOutput_16.setBigDecimal(3, row62.TNOVEDAD_ID);

                    if(row62.PERIODO == null) {
pstmt_tOracleOutput_16.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_16.setString(4, row62.PERIODO);
}

                    pstmt_tOracleOutput_16.setBigDecimal(5, row62.REGIMEN_LABORAL_ID);

                    pstmt_tOracleOutput_16.setBigDecimal(6, row62.ENTAPORTANTE_ID);

            int checkCount_tOracleOutput_16 = -1;
            try (java.sql.ResultSet rs_tOracleOutput_16 = pstmt_tOracleOutput_16.executeQuery()) {
                while(rs_tOracleOutput_16.next()) {
                    checkCount_tOracleOutput_16 = rs_tOracleOutput_16.getInt(1);
                }
            }
            if(checkCount_tOracleOutput_16 > 0) {
                        if(row62.NOMBRE_NOVEDAD == null) {
pstmtUpdate_tOracleOutput_16.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_16.setString(1, row62.NOMBRE_NOVEDAD);
}

                        pstmtUpdate_tOracleOutput_16.setBigDecimal(2, row62.CANTIDAD_NOVEDAD);

                        pstmtUpdate_tOracleOutput_16.setBigDecimal(3 + count_tOracleOutput_16, row62.TIEMPO_ID);

                        if(row62.TIPO_RECAUDO_ID == null) {
pstmtUpdate_tOracleOutput_16.setNull(4 + count_tOracleOutput_16, java.sql.Types.INTEGER);
} else {pstmtUpdate_tOracleOutput_16.setInt(4 + count_tOracleOutput_16, row62.TIPO_RECAUDO_ID);
}

                        pstmtUpdate_tOracleOutput_16.setBigDecimal(5 + count_tOracleOutput_16, row62.TNOVEDAD_ID);

                        if(row62.PERIODO == null) {
pstmtUpdate_tOracleOutput_16.setNull(6 + count_tOracleOutput_16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_16.setString(6 + count_tOracleOutput_16, row62.PERIODO);
}

                        pstmtUpdate_tOracleOutput_16.setBigDecimal(7 + count_tOracleOutput_16, row62.REGIMEN_LABORAL_ID);

                        pstmtUpdate_tOracleOutput_16.setBigDecimal(8 + count_tOracleOutput_16, row62.ENTAPORTANTE_ID);

                try {
                    int processedCount_tOracleOutput_16 = pstmtUpdate_tOracleOutput_16.executeUpdate();
                    updatedCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                    rowsToCommitCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                    nb_line_tOracleOutput_16++;
                } catch(java.lang.Exception e_tOracleOutput_16) {
globalMap.put("tOracleOutput_16_ERROR_MESSAGE",e_tOracleOutput_16.getMessage());
                    whetherReject_tOracleOutput_16 = true;
                        nb_line_tOracleOutput_16++;
                            System.err.print(e_tOracleOutput_16.getMessage());
                }
            } else {
                        pstmtInsert_tOracleOutput_16.setBigDecimal(1, row62.TIEMPO_ID);

                        if(row62.TIPO_RECAUDO_ID == null) {
pstmtInsert_tOracleOutput_16.setNull(2, java.sql.Types.INTEGER);
} else {pstmtInsert_tOracleOutput_16.setInt(2, row62.TIPO_RECAUDO_ID);
}

                        pstmtInsert_tOracleOutput_16.setBigDecimal(3, row62.TNOVEDAD_ID);

                        if(row62.PERIODO == null) {
pstmtInsert_tOracleOutput_16.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_16.setString(4, row62.PERIODO);
}

                        if(row62.NOMBRE_NOVEDAD == null) {
pstmtInsert_tOracleOutput_16.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_16.setString(5, row62.NOMBRE_NOVEDAD);
}

                        pstmtInsert_tOracleOutput_16.setBigDecimal(6, row62.CANTIDAD_NOVEDAD);

                        pstmtInsert_tOracleOutput_16.setBigDecimal(7, row62.REGIMEN_LABORAL_ID);

                        pstmtInsert_tOracleOutput_16.setBigDecimal(8, row62.ENTAPORTANTE_ID);

                try {
                    int processedCount_tOracleOutput_16 = pstmtInsert_tOracleOutput_16.executeUpdate();
                    insertedCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                    rowsToCommitCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                    nb_line_tOracleOutput_16++;
                } catch(java.lang.Exception e_tOracleOutput_16) {
globalMap.put("tOracleOutput_16_ERROR_MESSAGE",e_tOracleOutput_16.getMessage());
                    whetherReject_tOracleOutput_16 = true;
                        nb_line_tOracleOutput_16++;
                            System.err.print(e_tOracleOutput_16.getMessage());
                }
            }
                commitCounter_tOracleOutput_16++;
                if(commitEvery_tOracleOutput_16 <= commitCounter_tOracleOutput_16) {
                    if(rowsToCommitCount_tOracleOutput_16 != 0){
                    	
                    }
                    conn_tOracleOutput_16.commit();
                    if(rowsToCommitCount_tOracleOutput_16 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_16 = 0;
                    }
                    commitCounter_tOracleOutput_16=0;
                }

 


	tos_count_tOracleOutput_16++;

/**
 * [tOracleOutput_16 main ] stop
 */
	
	/**
	 * [tOracleOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	

 



/**
 * [tOracleOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	

 



/**
 * [tOracleOutput_16 process_data_end ] stop
 */

} // End of branch "row62"




	
	/**
	 * [tUniqRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";
	
	

 



/**
 * [tUniqRow_5 process_data_end ] stop
 */

} // End of branch "CANT_NOVEDADES"



	
		} // close loop of lookup 'row42' // G_TM_M_043
	
	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */




	
	/**
	 * [tUniqRow_4 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row59"
						
						);
					}
					
row58 = null;			
finder_tUniqRow_4.ID = row59.ID;
finder_tUniqRow_4.TIPO_RECAUDO_ID = row59.TIPO_RECAUDO_ID;
if(row59.PERIODO == null){
	finder_tUniqRow_4.PERIODO = null;
}else{
	finder_tUniqRow_4.PERIODO = row59.PERIODO.toLowerCase();
}
finder_tUniqRow_4.Anio = row59.Anio;
finder_tUniqRow_4.Mes = row59.Mes;
finder_tUniqRow_4.Dia = row59.Dia;	
finder_tUniqRow_4.hashCodeDirty = true;
if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
		KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

		
new_tUniqRow_4.ID = row59.ID;
new_tUniqRow_4.TIPO_RECAUDO_ID = row59.TIPO_RECAUDO_ID;
if(row59.PERIODO == null){
	new_tUniqRow_4.PERIODO = null;
}else{
	new_tUniqRow_4.PERIODO = row59.PERIODO.toLowerCase();
}
new_tUniqRow_4.Anio = row59.Anio;
new_tUniqRow_4.Mes = row59.Mes;
new_tUniqRow_4.Dia = row59.Dia;
		
		keystUniqRow_4.add(new_tUniqRow_4);if(row58 == null){ 
	
	row58 = new row58Struct();
}row58.ID = row59.ID;			row58.TIPO_RECAUDO_ID = row59.TIPO_RECAUDO_ID;			row58.FECHA = row59.FECHA;			row58.PERIODO = row59.PERIODO;			row58.Anio = row59.Anio;			row58.Mes = row59.Mes;			row58.Dia = row59.Dia;					
		nb_uniques_tUniqRow_4++;
	} else {
	  nb_duplicates_tUniqRow_4++;
	}

 


	tos_count_tUniqRow_4++;

/**
 * [tUniqRow_4 main ] stop
 */
	
	/**
	 * [tUniqRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_begin ] stop
 */
// Start of branch "row58"
if(row58 != null) { 



	
	/**
	 * [tReplicate_5 main ] start
	 */

	

	
	
	currentComponent="tReplicate_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					


	row90 = new row90Struct();
						
	row90.ID = row58.ID;								
	row90.TIPO_RECAUDO_ID = row58.TIPO_RECAUDO_ID;								
	row90.FECHA = row58.FECHA;								
	row90.PERIODO = row58.PERIODO;								
	row90.Anio = row58.Anio;								
	row90.Mes = row58.Mes;								
	row90.Dia = row58.Dia;			
	row91 = new row91Struct();
						
	row91.ID = row58.ID;								
	row91.TIPO_RECAUDO_ID = row58.TIPO_RECAUDO_ID;								
	row91.FECHA = row58.FECHA;								
	row91.PERIODO = row58.PERIODO;								
	row91.Anio = row58.Anio;								
	row91.Mes = row58.Mes;								
	row91.Dia = row58.Dia;			


 


	tos_count_tReplicate_5++;

/**
 * [tReplicate_5 main ] stop
 */
	
	/**
	 * [tReplicate_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_5";
	
	

 



/**
 * [tReplicate_5 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row90"
						
						);
					}
					



        whetherReject_tOracleOutput_8 = false;
                        pstmt_tOracleOutput_8.setBigDecimal(1, row90.ID);

                        pstmt_tOracleOutput_8.setInt(2, row90.TIPO_RECAUDO_ID);

                        if(row90.FECHA != null) {
pstmt_tOracleOutput_8.setObject(3, new java.sql.Timestamp(row90.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_8.setNull(3, java.sql.Types.DATE);
}

                        if(row90.PERIODO == null) {
pstmt_tOracleOutput_8.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_8.setString(4, row90.PERIODO);
}

                        pstmt_tOracleOutput_8.setInt(5, row90.Anio);

                        pstmt_tOracleOutput_8.setInt(6, row90.Mes);

                        pstmt_tOracleOutput_8.setInt(7, row90.Dia);

                try {
                    nb_line_tOracleOutput_8++;
                    int processedCount_tOracleOutput_8 = pstmt_tOracleOutput_8.executeUpdate();
                    insertedCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    rowsToCommitCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                } catch(java.lang.Exception e_tOracleOutput_8) {
globalMap.put("tOracleOutput_8_ERROR_MESSAGE",e_tOracleOutput_8.getMessage());
                    whetherReject_tOracleOutput_8 = true;
                            System.err.print(e_tOracleOutput_8.getMessage());
                }

 


	tos_count_tOracleOutput_8++;

/**
 * [tOracleOutput_8 main ] stop
 */
	
	/**
	 * [tOracleOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_end ] stop
 */




	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row91"
						
						);
					}
					



    
		row91Struct oneRow_tHashOutput_5 = new row91Struct();
				
					oneRow_tHashOutput_5.ID = row91.ID;
					oneRow_tHashOutput_5.TIPO_RECAUDO_ID = row91.TIPO_RECAUDO_ID;
					oneRow_tHashOutput_5.FECHA = row91.FECHA;
					oneRow_tHashOutput_5.PERIODO = row91.PERIODO;
					oneRow_tHashOutput_5.Anio = row91.Anio;
					oneRow_tHashOutput_5.Mes = row91.Mes;
					oneRow_tHashOutput_5.Dia = row91.Dia;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_5";
	
	

 



/**
 * [tReplicate_5 process_data_end ] stop
 */

} // End of branch "row58"




	
	/**
	 * [tUniqRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_3";
	
	

 



/**
 * [tReplicate_3 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_6_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	

 



/**
 * [tSortRow_6_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_6_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	


}

globalMap.put("tSortRow_6_SortIn_NB_LINE",nb_line_tSortRow_6_SortIn);

 

ok_Hash.put("tSortRow_6_SortIn", true);
end_Hash.put("tSortRow_6_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_6_SortIn", end_Hash.get("tSortRow_6_SortIn")-start_Hash.get("tSortRow_6_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_6_SortIn end ] stop
 */

	
	/**
	 * [tReplicate_3 end ] start
	 */

	

	
	
	currentComponent="tReplicate_3";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tReplicate_3", true);
end_Hash.put("tReplicate_3", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tReplicate_3", end_Hash.get("tReplicate_3")-start_Hash.get("tReplicate_3"));
tStatCatcher_1Process(globalMap);



/**
 * [tReplicate_3 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row42 != null) {
						tHash_Lookup_row42.endGet();
					}
					globalMap.remove( "tHash_Lookup_row42" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row60");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tUniqRow_5 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";
	
	

globalMap.put("tUniqRow_5_NB_UNIQUES",nb_uniques_tUniqRow_5);
globalMap.put("tUniqRow_5_NB_DUPLICATES",nb_duplicates_tUniqRow_5);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"CANT_NOVEDADES");
			  	}
			  	
 

ok_Hash.put("tUniqRow_5", true);
end_Hash.put("tUniqRow_5", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_5", end_Hash.get("tUniqRow_5")-start_Hash.get("tUniqRow_5"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_5 end ] stop
 */

	
	/**
	 * [tOracleOutput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_16 != null){
            pstmtUpdate_tOracleOutput_16.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_16");
        }
        if(pstmtInsert_tOracleOutput_16 != null){
            pstmtInsert_tOracleOutput_16.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_16");
        }
        if(pstmt_tOracleOutput_16 != null) {
            pstmt_tOracleOutput_16.close();
            resourceMap.remove("pstmt_tOracleOutput_16");
        }
    resourceMap.put("statementClosed_tOracleOutput_16", true);
		if(commitCounter_tOracleOutput_16 > 0 && rowsToCommitCount_tOracleOutput_16 != 0) {
			
		}
		conn_tOracleOutput_16.commit();
		if(commitCounter_tOracleOutput_16 > 0 && rowsToCommitCount_tOracleOutput_16 != 0) {
			
			rowsToCommitCount_tOracleOutput_16 = 0;
		}
		commitCounter_tOracleOutput_16 = 0;
		
		
		conn_tOracleOutput_16 .close();
		
		resourceMap.put("finish_tOracleOutput_16", true);
   	

	
	nb_line_deleted_tOracleOutput_16=nb_line_deleted_tOracleOutput_16+ deletedCount_tOracleOutput_16;
	nb_line_update_tOracleOutput_16=nb_line_update_tOracleOutput_16 + updatedCount_tOracleOutput_16;
	nb_line_inserted_tOracleOutput_16=nb_line_inserted_tOracleOutput_16 + insertedCount_tOracleOutput_16;
	nb_line_rejected_tOracleOutput_16=nb_line_rejected_tOracleOutput_16 + rejectedCount_tOracleOutput_16;
	
        globalMap.put("tOracleOutput_16_NB_LINE",nb_line_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_UPDATED",nb_line_update_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_16);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row62");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_16", true);
end_Hash.put("tOracleOutput_16", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_16", end_Hash.get("tOracleOutput_16")-start_Hash.get("tOracleOutput_16"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_16 end ] stop
 */










	
	/**
	 * [tUniqRow_4 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

globalMap.put("tUniqRow_4_NB_UNIQUES",nb_uniques_tUniqRow_4);
globalMap.put("tUniqRow_4_NB_DUPLICATES",nb_duplicates_tUniqRow_4);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row59");
			  	}
			  	
 

ok_Hash.put("tUniqRow_4", true);
end_Hash.put("tUniqRow_4", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_4", end_Hash.get("tUniqRow_4")-start_Hash.get("tUniqRow_4"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_4 end ] stop
 */

	
	/**
	 * [tReplicate_5 end ] start
	 */

	

	
	
	currentComponent="tReplicate_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tReplicate_5", true);
end_Hash.put("tReplicate_5", System.currentTimeMillis());




/**
 * [tReplicate_5 end ] stop
 */

	
	/**
	 * [tOracleOutput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
	



	
        if(pstmt_tOracleOutput_8 != null) {
			
				pstmt_tOracleOutput_8.close();
				resourceMap.remove("pstmt_tOracleOutput_8");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_8", true);

	
	nb_line_deleted_tOracleOutput_8=nb_line_deleted_tOracleOutput_8+ deletedCount_tOracleOutput_8;
	nb_line_update_tOracleOutput_8=nb_line_update_tOracleOutput_8 + updatedCount_tOracleOutput_8;
	nb_line_inserted_tOracleOutput_8=nb_line_inserted_tOracleOutput_8 + insertedCount_tOracleOutput_8;
	nb_line_rejected_tOracleOutput_8=nb_line_rejected_tOracleOutput_8 + rejectedCount_tOracleOutput_8;
	
        globalMap.put("tOracleOutput_8_NB_LINE",nb_line_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_UPDATED",nb_line_update_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_8);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row90");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_8", true);
end_Hash.put("tOracleOutput_8", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_8", end_Hash.get("tOracleOutput_8")-start_Hash.get("tOracleOutput_8"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_8 end ] stop
 */




	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row91");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */






















	
	/**
	 * [tReplicate_2 end ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIPODOC_APORTES");
			  	}
			  	
 

ok_Hash.put("tReplicate_2", true);
end_Hash.put("tReplicate_2", System.currentTimeMillis());




/**
 * [tReplicate_2 end ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_4_AGGOUT", true);
end_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGOUT end ] stop
 */


	
	/**
	 * [tSortRow_5_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_5_SortOut", false);
		start_Hash.put("tSortRow_5_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tSortRow_5_SortOut = 0;
		


class Comparablerow39Struct extends row39Struct implements Comparable<Comparablerow39Struct> {
	
	public int compareTo(Comparablerow39Struct other) {

		if(this.TIPO_RECAUDO != other.TIPO_RECAUDO){
						
				return this.TIPO_RECAUDO > other.TIPO_RECAUDO ? 1 : -1;
							
		}
		if(this.CARGUE_ID == null && other.CARGUE_ID != null){
			return -1;
						
		}else if(this.CARGUE_ID != null && other.CARGUE_ID == null){
			return 1;
						
		}else if(this.CARGUE_ID != null && other.CARGUE_ID != null){
			if(!this.CARGUE_ID.equals(other.CARGUE_ID)){
				return this.CARGUE_ID.compareTo(other.CARGUE_ID);
			}
		}
		if(this.ENTAPORTANTES_ID == null && other.ENTAPORTANTES_ID != null){
			return -1;
						
		}else if(this.ENTAPORTANTES_ID != null && other.ENTAPORTANTES_ID == null){
			return 1;
						
		}else if(this.ENTAPORTANTES_ID != null && other.ENTAPORTANTES_ID != null){
			if(!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)){
				return this.ENTAPORTANTES_ID.compareTo(other.ENTAPORTANTES_ID);
			}
		}
		if(this.REGIMEN_LABORAL_ID == null && other.REGIMEN_LABORAL_ID != null){
			return -1;
						
		}else if(this.REGIMEN_LABORAL_ID != null && other.REGIMEN_LABORAL_ID == null){
			return 1;
						
		}else if(this.REGIMEN_LABORAL_ID != null && other.REGIMEN_LABORAL_ID != null){
			if(!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID)){
				return this.REGIMEN_LABORAL_ID.compareTo(other.REGIMEN_LABORAL_ID);
			}
		}
		if(this.PERIODO == null && other.PERIODO != null){
			return -1;
						
		}else if(this.PERIODO != null && other.PERIODO == null){
			return 1;
						
		}else if(this.PERIODO != null && other.PERIODO != null){
			if(!this.PERIODO.equals(other.PERIODO)){
				return this.PERIODO.compareTo(other.PERIODO);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow39Struct> list_tSortRow_5_SortOut = new java.util.ArrayList<Comparablerow39Struct>();


 



/**
 * [tSortRow_5_SortOut begin ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGIN", false);
		start_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	
		int tos_count_tAggregateRow_4_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_4> values_tAggregateRow_4 = hash_tAggregateRow_4.values();

globalMap.put("tAggregateRow_4_NB_LINE", values_tAggregateRow_4.size());

for(AggOperationStruct_tAggregateRow_4 aggregated_row_tAggregateRow_4 : values_tAggregateRow_4) { // G_AggR_600



 



/**
 * [tAggregateRow_4_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

            				    row39.TIPO_RECAUDO = aggregated_row_tAggregateRow_4.TIPO_RECAUDO;
            				    
            				    row39.CARGUE_ID = aggregated_row_tAggregateRow_4.CARGUE_ID;
            				    
            				    row39.ENTAPORTANTES_ID = aggregated_row_tAggregateRow_4.ENTAPORTANTES_ID;
            				    
            				    row39.REGIMEN_LABORAL_ID = aggregated_row_tAggregateRow_4.REGIMEN_LABORAL_ID;
            				    
            				    row39.PERIODO = aggregated_row_tAggregateRow_4.PERIODO;
            				    
            				    row39.NOMBRE_ENTAPORTANTE = aggregated_row_tAggregateRow_4.NOMBRE_ENTAPORTANTE;
            				    
									row39.SALUD_ID = new BigDecimal(aggregated_row_tAggregateRow_4.count);
    								row39.SALUD_ID = new BigDecimal(aggregated_row_tAggregateRow_4.SALUD_ID_clmCount);
								row39.APORTE_EMPLEADO = aggregated_row_tAggregateRow_4.APORTE_EMPLEADO_sum;
                                	row39.APORTE_EMPLEADOR = aggregated_row_tAggregateRow_4.APORTE_EMPLEADOR_sum;
                                	
            				    row39.NOMBRE_VINCULACION = aggregated_row_tAggregateRow_4.NOMBRE_VINCULACION;
            				    

 


	tos_count_tAggregateRow_4_AGGIN++;

/**
 * [tAggregateRow_4_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_5_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					



	Comparablerow39Struct arrayRowtSortRow_5_SortOut = new Comparablerow39Struct();

	arrayRowtSortRow_5_SortOut.TIPO_RECAUDO = row39.TIPO_RECAUDO;
	arrayRowtSortRow_5_SortOut.CARGUE_ID = row39.CARGUE_ID;
	arrayRowtSortRow_5_SortOut.ENTAPORTANTES_ID = row39.ENTAPORTANTES_ID;
	arrayRowtSortRow_5_SortOut.REGIMEN_LABORAL_ID = row39.REGIMEN_LABORAL_ID;
	arrayRowtSortRow_5_SortOut.PERIODO = row39.PERIODO;
	arrayRowtSortRow_5_SortOut.NOMBRE_ENTAPORTANTE = row39.NOMBRE_ENTAPORTANTE;
	arrayRowtSortRow_5_SortOut.SALUD_ID = row39.SALUD_ID;
	arrayRowtSortRow_5_SortOut.APORTE_EMPLEADO = row39.APORTE_EMPLEADO;
	arrayRowtSortRow_5_SortOut.APORTE_EMPLEADOR = row39.APORTE_EMPLEADOR;
	arrayRowtSortRow_5_SortOut.NOMBRE_VINCULACION = row39.NOMBRE_VINCULACION;	
	list_tSortRow_5_SortOut.add(arrayRowtSortRow_5_SortOut);

 


	tos_count_tSortRow_5_SortOut++;

/**
 * [tSortRow_5_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_5_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	

 



/**
 * [tSortRow_5_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_5_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	

 



/**
 * [tSortRow_5_SortOut process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_4_AGGIN", true);
end_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGIN end ] stop
 */

	
	/**
	 * [tSortRow_5_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	

row39Struct[] array_tSortRow_5_SortOut = list_tSortRow_5_SortOut.toArray(new Comparablerow39Struct[0]);

java.util.Arrays.sort(array_tSortRow_5_SortOut);

globalMap.put("tSortRow_5",array_tSortRow_5_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tSortRow_5_SortOut", true);
end_Hash.put("tSortRow_5_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_5_SortOut end ] stop
 */




	
	/**
	 * [tAggregateRow_5_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGOUT", false);
		start_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TOTALES_APORTES_TIPO_RECAUDO");
					}
				
		int tos_count_tAggregateRow_5_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_5 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_5 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_5 utilClass_tAggregateRow_5 = new UtilClass_tAggregateRow_5();

	

	class AggOperationStruct_tAggregateRow_5 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal ENTAPORTANTE_ID;
    				BigDecimal TIEMPO_ID;
    				BigDecimal REGIMEN_LABORAL_ID;
    				int TIPO_RECAUDO_ID;
    				String PERIODO;
    				String NOMBRE_ENTAPORTANTE;
    				String NOMBRE_VINCULACION;
    				String NOMBRE_TIPO_RECAUDO;BigDecimal TOTAL_APORTE_sum;
           			
         			BigDecimal CANTIDAD_COTIZANTE_first;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
							
							result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
							
							result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
							
								result = prime * result + (int) this.TIPO_RECAUDO_ID;
							
							result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
							
							result = prime * result + ((this.NOMBRE_ENTAPORTANTE == null) ? 0 : this.NOMBRE_ENTAPORTANTE.hashCode());
							
							result = prime * result + ((this.NOMBRE_VINCULACION == null) ? 0 : this.NOMBRE_VINCULACION.hashCode());
							
							result = prime * result + ((this.NOMBRE_TIPO_RECAUDO == null) ? 0 : this.NOMBRE_TIPO_RECAUDO.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_5 other = (AggOperationStruct_tAggregateRow_5) obj;
			
							if (this.ENTAPORTANTE_ID == null) {
								if (other.ENTAPORTANTE_ID != null) 
									return false;
							} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID)) 
								return false;
						
							if (this.TIEMPO_ID == null) {
								if (other.TIEMPO_ID != null) 
									return false;
							} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID)) 
								return false;
						
							if (this.REGIMEN_LABORAL_ID == null) {
								if (other.REGIMEN_LABORAL_ID != null) 
									return false;
							} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID)) 
								return false;
						
							if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID) 
								return false;
						
							if (this.PERIODO == null) {
								if (other.PERIODO != null) 
									return false;
							} else if (!this.PERIODO.equals(other.PERIODO)) 
								return false;
						
							if (this.NOMBRE_ENTAPORTANTE == null) {
								if (other.NOMBRE_ENTAPORTANTE != null) 
									return false;
							} else if (!this.NOMBRE_ENTAPORTANTE.equals(other.NOMBRE_ENTAPORTANTE)) 
								return false;
						
							if (this.NOMBRE_VINCULACION == null) {
								if (other.NOMBRE_VINCULACION != null) 
									return false;
							} else if (!this.NOMBRE_VINCULACION.equals(other.NOMBRE_VINCULACION)) 
								return false;
						
							if (this.NOMBRE_TIPO_RECAUDO == null) {
								if (other.NOMBRE_TIPO_RECAUDO != null) 
									return false;
							} else if (!this.NOMBRE_TIPO_RECAUDO.equals(other.NOMBRE_TIPO_RECAUDO)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_5 operation_result_tAggregateRow_5 = null;
	AggOperationStruct_tAggregateRow_5 operation_finder_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();
	java.util.Map<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5> hash_tAggregateRow_5 = new java.util.HashMap<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5>();
	

 



/**
 * [tAggregateRow_5_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_35", false);
		start_Hash.put("tMap_35", System.currentTimeMillis());
		
	
	currentComponent="tMap_35";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tMap_35 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
					globalMap.get( "tHash_Lookup_row35" ))
					;					
					
	

row35Struct row35HashKey = new row35Struct();
row35Struct row35Default = new row35Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_35__Struct  {
	String DESCRIPCION_RECAUDO;
}
Var__tMap_35__Struct Var__tMap_35 = new Var__tMap_35__Struct();
// ###############################

// ###############################
// # Outputs initialization
TOTALES_APORTES_TIPO_RECAUDOStruct TOTALES_APORTES_TIPO_RECAUDO_tmp = new TOTALES_APORTES_TIPO_RECAUDOStruct();
// ###############################

        
        



        









 



/**
 * [tMap_35 begin ] stop
 */



	
	/**
	 * [tSplitRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tSplitRow_2", false);
		start_Hash.put("tSplitRow_2", System.currentTimeMillis());
		
	
	currentComponent="tSplitRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tSplitRow_2 = 0;
		
int nb_line_tSplitRow_2 = 0;
 



/**
 * [tSplitRow_2 begin ] stop
 */



	
	/**
	 * [tSortRow_5_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_5_SortIn", false);
		start_Hash.put("tSortRow_5_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	
		int tos_count_tSortRow_5_SortIn = 0;
		


row39Struct[] array_tSortRow_5_SortIn = (row39Struct[]) globalMap.remove("tSortRow_5");

int nb_line_tSortRow_5_SortIn = 0;

row39Struct current_tSortRow_5_SortIn = null;

for(int i_tSortRow_5_SortIn = 0; i_tSortRow_5_SortIn < array_tSortRow_5_SortIn.length; i_tSortRow_5_SortIn++){
	current_tSortRow_5_SortIn = array_tSortRow_5_SortIn[i_tSortRow_5_SortIn];
	row40.TIPO_RECAUDO = current_tSortRow_5_SortIn.TIPO_RECAUDO;
	row40.CARGUE_ID = current_tSortRow_5_SortIn.CARGUE_ID;
	row40.ENTAPORTANTES_ID = current_tSortRow_5_SortIn.ENTAPORTANTES_ID;
	row40.REGIMEN_LABORAL_ID = current_tSortRow_5_SortIn.REGIMEN_LABORAL_ID;
	row40.PERIODO = current_tSortRow_5_SortIn.PERIODO;
	row40.NOMBRE_ENTAPORTANTE = current_tSortRow_5_SortIn.NOMBRE_ENTAPORTANTE;
	row40.SALUD_ID = current_tSortRow_5_SortIn.SALUD_ID;
	row40.APORTE_EMPLEADO = current_tSortRow_5_SortIn.APORTE_EMPLEADO;
	row40.APORTE_EMPLEADOR = current_tSortRow_5_SortIn.APORTE_EMPLEADOR;
	row40.NOMBRE_VINCULACION = current_tSortRow_5_SortIn.NOMBRE_VINCULACION;
	// increase number of line sorted
	nb_line_tSortRow_5_SortIn++;

 



/**
 * [tSortRow_5_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_5_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	

 


	tos_count_tSortRow_5_SortIn++;

/**
 * [tSortRow_5_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_5_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	

 



/**
 * [tSortRow_5_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tSplitRow_2 main ] start
	 */

	

	
	
	currentComponent="tSplitRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					
  java.util.List<row37Struct> rows_tSplitRow_2 = new java.util.ArrayList<row37Struct>(2);
  row37Struct rowTmp_tSplitRow_2 = null;

  // cache output rows for the loop
    rowTmp_tSplitRow_2 = new row37Struct();

      rowTmp_tSplitRow_2.TIPO_RECAUDO = row40.TIPO_RECAUDO;
      rowTmp_tSplitRow_2.CARGUE_ID = row40.CARGUE_ID;
      rowTmp_tSplitRow_2.ENTAPORTANTES_ID = row40.ENTAPORTANTES_ID;
      rowTmp_tSplitRow_2.REGIMEN_LABORAL_ID = row40.REGIMEN_LABORAL_ID;
      rowTmp_tSplitRow_2.PERIODO = row40.PERIODO;
      rowTmp_tSplitRow_2.NOMBRE_ENTAPORTANTE = row40.NOMBRE_ENTAPORTANTE;
      rowTmp_tSplitRow_2.SALUD_ID = row40.SALUD_ID;
      rowTmp_tSplitRow_2.APORTE_EMPLEADO = row40.APORTE_EMPLEADO;
      rowTmp_tSplitRow_2.APORTE_EMPLEADOR = row40.APORTE_EMPLEADOR;
      rowTmp_tSplitRow_2.NOMBRE_VINCULACION = row40.NOMBRE_VINCULACION;
      rowTmp_tSplitRow_2.TIPO_APORTANTE = 1;
      rowTmp_tSplitRow_2.APORTE = row40.APORTE_EMPLEADO;
    rows_tSplitRow_2.add(rowTmp_tSplitRow_2);
    nb_line_tSplitRow_2++;
    rowTmp_tSplitRow_2 = new row37Struct();

      rowTmp_tSplitRow_2.TIPO_RECAUDO = row40.TIPO_RECAUDO;
      rowTmp_tSplitRow_2.CARGUE_ID = row40.CARGUE_ID;
      rowTmp_tSplitRow_2.ENTAPORTANTES_ID = row40.ENTAPORTANTES_ID;
      rowTmp_tSplitRow_2.REGIMEN_LABORAL_ID = row40.REGIMEN_LABORAL_ID;
      rowTmp_tSplitRow_2.PERIODO = row40.PERIODO;
      rowTmp_tSplitRow_2.NOMBRE_ENTAPORTANTE = row40.NOMBRE_ENTAPORTANTE;
      rowTmp_tSplitRow_2.SALUD_ID = row40.SALUD_ID;
      rowTmp_tSplitRow_2.APORTE_EMPLEADO = row40.APORTE_EMPLEADO;
      rowTmp_tSplitRow_2.APORTE_EMPLEADOR = row40.APORTE_EMPLEADOR;
      rowTmp_tSplitRow_2.NOMBRE_VINCULACION = row40.NOMBRE_VINCULACION;
      rowTmp_tSplitRow_2.TIPO_APORTANTE = 2;
      rowTmp_tSplitRow_2.APORTE = row40.APORTE_EMPLEADOR;
    rows_tSplitRow_2.add(rowTmp_tSplitRow_2);
    nb_line_tSplitRow_2++;

  for (row37Struct row_tSplitRow_2 : rows_tSplitRow_2) {// C_01
    row37 = row_tSplitRow_2; 
 


	tos_count_tSplitRow_2++;

/**
 * [tSplitRow_2 main ] stop
 */
	
	/**
	 * [tSplitRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSplitRow_2";
	
	

 



/**
 * [tSplitRow_2 process_data_begin ] stop
 */
// Start of branch "row37"
if(row37 != null) { 



	
	/**
	 * [tMap_35 main ] start
	 */

	

	
	
	currentComponent="tMap_35";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_35 = false;
		
						row35Struct row35 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_35 = false;
		boolean mainRowRejected_tMap_35 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row35" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow35 = false;
       		  	    	
       		  	    	
 							row35Struct row35ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_35) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_35 = false;
								
                        		    		    row35HashKey.ID = row37.REGIMEN_LABORAL_ID ;
                        		    		

								
		                        	row35HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row35.lookup( row35HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row35 != null && tHash_Lookup_row35.getCount(row35HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row35' and it contains more one result from keys :  row35.ID = '" + row35HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row35Struct fromLookup_row35 = null;
							row35 = row35Default;
										 
							
								 
							
							
								if (tHash_Lookup_row35 !=null && tHash_Lookup_row35.hasNext()) { // G 099
								
							
								
								fromLookup_row35 = tHash_Lookup_row35.next();

							
							
								} // G 099
							
							

							if(fromLookup_row35 != null) {
								row35 = fromLookup_row35;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_35__Struct Var = Var__tMap_35;
Var.DESCRIPCION_RECAUDO = ((row37.TIPO_APORTANTE == 2 && (row37.TIPO_RECAUDO == 1 || row37.TIPO_RECAUDO == 3 || row37.TIPO_RECAUDO == 5)) ? "APORTE COTIZANTE" : ((row37.TIPO_APORTANTE == 2 && (row37.TIPO_RECAUDO == 2 || row37.TIPO_RECAUDO == 4)) ? "APORTE ATEP" : ((row37.TIPO_APORTANTE == 1) ? "APORTE COTIZANTE" : ""))) ;// ###############################
        // ###############################
        // # Output tables

TOTALES_APORTES_TIPO_RECAUDO = null;


// # Output table : 'TOTALES_APORTES_TIPO_RECAUDO'
// # Filter conditions 
if( 

Var.DESCRIPCION_RECAUDO  != "" && row37.APORTE != BigDecimal.valueOf(0)

 ) {
TOTALES_APORTES_TIPO_RECAUDO_tmp.ENTAPORTANTE_ID = row37.ENTAPORTANTES_ID ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.TIEMPO_ID = row37.CARGUE_ID ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.REGIMEN_LABORAL_ID = row37.REGIMEN_LABORAL_ID ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.TIPO_RECAUDO_ID = row37.TIPO_RECAUDO ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.PERIODO = row37.PERIODO ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.NOMBRE_ENTAPORTANTE = row37.NOMBRE_ENTAPORTANTE ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.NOMBRE_VINCULACION = row35.NOMBRE ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.TOTAL_APORTE = row37.APORTE ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.CANTIDAD_COTIZANTE = row37.SALUD_ID ;
TOTALES_APORTES_TIPO_RECAUDO_tmp.NOMBRE_TIPO_RECAUDO = Var.DESCRIPCION_RECAUDO ;
TOTALES_APORTES_TIPO_RECAUDO = TOTALES_APORTES_TIPO_RECAUDO_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_35 = false;










 


	tos_count_tMap_35++;

/**
 * [tMap_35 main ] stop
 */
	
	/**
	 * [tMap_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_35";
	
	

 



/**
 * [tMap_35 process_data_begin ] stop
 */
// Start of branch "TOTALES_APORTES_TIPO_RECAUDO"
if(TOTALES_APORTES_TIPO_RECAUDO != null) { 



	
	/**
	 * [tAggregateRow_5_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TOTALES_APORTES_TIPO_RECAUDO"
						
						);
					}
					
	
operation_finder_tAggregateRow_5.ENTAPORTANTE_ID = TOTALES_APORTES_TIPO_RECAUDO.ENTAPORTANTE_ID;
			operation_finder_tAggregateRow_5.TIEMPO_ID = TOTALES_APORTES_TIPO_RECAUDO.TIEMPO_ID;
			operation_finder_tAggregateRow_5.REGIMEN_LABORAL_ID = TOTALES_APORTES_TIPO_RECAUDO.REGIMEN_LABORAL_ID;
			operation_finder_tAggregateRow_5.TIPO_RECAUDO_ID = TOTALES_APORTES_TIPO_RECAUDO.TIPO_RECAUDO_ID;
			operation_finder_tAggregateRow_5.PERIODO = TOTALES_APORTES_TIPO_RECAUDO.PERIODO;
			operation_finder_tAggregateRow_5.NOMBRE_ENTAPORTANTE = TOTALES_APORTES_TIPO_RECAUDO.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_5.NOMBRE_VINCULACION = TOTALES_APORTES_TIPO_RECAUDO.NOMBRE_VINCULACION;
			operation_finder_tAggregateRow_5.NOMBRE_TIPO_RECAUDO = TOTALES_APORTES_TIPO_RECAUDO.NOMBRE_TIPO_RECAUDO;
			

	operation_finder_tAggregateRow_5.hashCodeDirty = true;
	
	operation_result_tAggregateRow_5 = hash_tAggregateRow_5.get(operation_finder_tAggregateRow_5);

	
		boolean isFirstAdd_tAggregateRow_5 = false;
	

	if(operation_result_tAggregateRow_5 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();

		operation_result_tAggregateRow_5.ENTAPORTANTE_ID = operation_finder_tAggregateRow_5.ENTAPORTANTE_ID;
				operation_result_tAggregateRow_5.TIEMPO_ID = operation_finder_tAggregateRow_5.TIEMPO_ID;
				operation_result_tAggregateRow_5.REGIMEN_LABORAL_ID = operation_finder_tAggregateRow_5.REGIMEN_LABORAL_ID;
				operation_result_tAggregateRow_5.TIPO_RECAUDO_ID = operation_finder_tAggregateRow_5.TIPO_RECAUDO_ID;
				operation_result_tAggregateRow_5.PERIODO = operation_finder_tAggregateRow_5.PERIODO;
				operation_result_tAggregateRow_5.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_5.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_5.NOMBRE_VINCULACION = operation_finder_tAggregateRow_5.NOMBRE_VINCULACION;
				operation_result_tAggregateRow_5.NOMBRE_TIPO_RECAUDO = operation_finder_tAggregateRow_5.NOMBRE_TIPO_RECAUDO;
				
		
		
			isFirstAdd_tAggregateRow_5 = true;
		

		hash_tAggregateRow_5.put(operation_result_tAggregateRow_5, operation_result_tAggregateRow_5);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_5.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_5.TOTAL_APORTE_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_5.TOTAL_APORTE_sum = operation_result_tAggregateRow_5.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								TOTALES_APORTES_TIPO_RECAUDO.TOTAL_APORTE
							)
						)
					);
					
				if(isFirstAdd_tAggregateRow_5 ) {
					operation_result_tAggregateRow_5.CANTIDAD_COTIZANTE_first = TOTALES_APORTES_TIPO_RECAUDO.CANTIDAD_COTIZANTE;
				}
				


 


	tos_count_tAggregateRow_5_AGGOUT++;

/**
 * [tAggregateRow_5_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_end ] stop
 */

} // End of branch "TOTALES_APORTES_TIPO_RECAUDO"




	
	/**
	 * [tMap_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_35";
	
	

 



/**
 * [tMap_35 process_data_end ] stop
 */

} // End of branch "row37"



	
		} // C_01
	
	
	/**
	 * [tSplitRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSplitRow_2";
	
	

 



/**
 * [tSplitRow_2 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_5_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	

 



/**
 * [tSortRow_5_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_5_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	


}

globalMap.put("tSortRow_5_SortIn_NB_LINE",nb_line_tSortRow_5_SortIn);

 

ok_Hash.put("tSortRow_5_SortIn", true);
end_Hash.put("tSortRow_5_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_5_SortIn end ] stop
 */

	
	/**
	 * [tSplitRow_2 end ] start
	 */

	

	
	
	currentComponent="tSplitRow_2";
	
	
globalMap.put("tSplitRow_2_NB_LINE", nb_line_tSplitRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tSplitRow_2", true);
end_Hash.put("tSplitRow_2", System.currentTimeMillis());




/**
 * [tSplitRow_2 end ] stop
 */

	
	/**
	 * [tMap_35 end ] start
	 */

	

	
	
	currentComponent="tMap_35";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row35 != null) {
						tHash_Lookup_row35.endGet();
					}
					globalMap.remove( "tHash_Lookup_row35" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tMap_35", true);
end_Hash.put("tMap_35", System.currentTimeMillis());




/**
 * [tMap_35 end ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TOTALES_APORTES_TIPO_RECAUDO");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_5_AGGOUT", true);
end_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGOUT end ] stop
 */



	
	/**
	 * [tOracleOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_6", false);
		start_Hash.put("tOracleOutput_6", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_6");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TOTALES_APORTES");
					}
				
		int tos_count_tOracleOutput_6 = 0;
		






    
    int nb_line_tOracleOutput_6 = 0;
    int nb_line_update_tOracleOutput_6 = 0;
    int nb_line_inserted_tOracleOutput_6 = 0;
    int nb_line_deleted_tOracleOutput_6 = 0;
    int nb_line_rejected_tOracleOutput_6 = 0;

    int tmp_batchUpdateCount_tOracleOutput_6 = 0;

    int deletedCount_tOracleOutput_6=0;
    int updatedCount_tOracleOutput_6=0;
    int insertedCount_tOracleOutput_6=0;
    int rowsToCommitCount_tOracleOutput_6=0;
    int rejectedCount_tOracleOutput_6=0;

    boolean whetherReject_tOracleOutput_6 = false;

    java.sql.Connection conn_tOracleOutput_6 = null;

    //optional table
    String dbschema_tOracleOutput_6 = null;
    String tableName_tOracleOutput_6 = null;
        dbschema_tOracleOutput_6 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_6=0;

        if(dbschema_tOracleOutput_6 == null || dbschema_tOracleOutput_6.trim().length() == 0) {
            tableName_tOracleOutput_6 = ("BREC_TOTALESAPORTRECAUDO");
        } else {
            tableName_tOracleOutput_6 = dbschema_tOracleOutput_6 + "." + ("BREC_TOTALESAPORTRECAUDO");
        }
                String insert_tOracleOutput_6 = "INSERT INTO " + tableName_tOracleOutput_6 + " (ENTAPORTANTE_ID,TIEMPO_ID,REGIMEN_LABORAL_ID,TIPO_RECAUDO_ID,PERIODO,NOMBRE_ENTAPORTANTE,NOMBRE_VINCULACION,TOTAL_APORTE,CANTIDAD_COTIZANTE,NOMBRE_TIPO_RECAUDO) VALUES (?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_6 = conn_tOracleOutput_6.prepareStatement(insert_tOracleOutput_6);
                        resourceMap.put("pstmt_tOracleOutput_6", pstmt_tOracleOutput_6);





 



/**
 * [tOracleOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
TOTALES_APORTESStruct TOTALES_APORTES_tmp = new TOTALES_APORTESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGIN", false);
		start_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	
		int tos_count_tAggregateRow_5_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_5> values_tAggregateRow_5 = hash_tAggregateRow_5.values();

globalMap.put("tAggregateRow_5_NB_LINE", values_tAggregateRow_5.size());

for(AggOperationStruct_tAggregateRow_5 aggregated_row_tAggregateRow_5 : values_tAggregateRow_5) { // G_AggR_600



 



/**
 * [tAggregateRow_5_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

            				    row34.ENTAPORTANTE_ID = aggregated_row_tAggregateRow_5.ENTAPORTANTE_ID;
            				    
            				    row34.TIEMPO_ID = aggregated_row_tAggregateRow_5.TIEMPO_ID;
            				    
            				    row34.REGIMEN_LABORAL_ID = aggregated_row_tAggregateRow_5.REGIMEN_LABORAL_ID;
            				    
            				    row34.TIPO_RECAUDO_ID = aggregated_row_tAggregateRow_5.TIPO_RECAUDO_ID;
            				    
            				    row34.PERIODO = aggregated_row_tAggregateRow_5.PERIODO;
            				    
            				    row34.NOMBRE_ENTAPORTANTE = aggregated_row_tAggregateRow_5.NOMBRE_ENTAPORTANTE;
            				    
            				    row34.NOMBRE_VINCULACION = aggregated_row_tAggregateRow_5.NOMBRE_VINCULACION;
            				    row34.TOTAL_APORTE = aggregated_row_tAggregateRow_5.TOTAL_APORTE_sum;
                                	
                                row34.CANTIDAD_COTIZANTE = aggregated_row_tAggregateRow_5.CANTIDAD_COTIZANTE_first;
            				    row34.NOMBRE_TIPO_RECAUDO = aggregated_row_tAggregateRow_5.NOMBRE_TIPO_RECAUDO;
            				    

 


	tos_count_tAggregateRow_5_AGGIN++;

/**
 * [tAggregateRow_5_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

TOTALES_APORTES = null;


// # Output table : 'TOTALES_APORTES'
// # Filter conditions 
if( 

row34.REGIMEN_LABORAL_ID != null

 ) {
TOTALES_APORTES_tmp.ENTAPORTANTE_ID = row34.ENTAPORTANTE_ID ;
TOTALES_APORTES_tmp.TIEMPO_ID = row34.TIEMPO_ID ;
TOTALES_APORTES_tmp.REGIMEN_LABORAL_ID = row34.REGIMEN_LABORAL_ID ;
TOTALES_APORTES_tmp.TIPO_RECAUDO_ID = row34.TIPO_RECAUDO_ID ;
TOTALES_APORTES_tmp.PERIODO = row34.PERIODO ;
TOTALES_APORTES_tmp.NOMBRE_ENTAPORTANTE = row34.NOMBRE_ENTAPORTANTE ;
TOTALES_APORTES_tmp.NOMBRE_VINCULACION = row34.NOMBRE_VINCULACION ;
TOTALES_APORTES_tmp.TOTAL_APORTE = row34.TOTAL_APORTE ;
TOTALES_APORTES_tmp.CANTIDAD_COTIZANTE = row34.CANTIDAD_COTIZANTE ;
TOTALES_APORTES_tmp.NOMBRE_TIPO_RECAUDO = row34.NOMBRE_TIPO_RECAUDO ;
TOTALES_APORTES = TOTALES_APORTES_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "TOTALES_APORTES"
if(TOTALES_APORTES != null) { 



	
	/**
	 * [tOracleOutput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TOTALES_APORTES"
						
						);
					}
					



        whetherReject_tOracleOutput_6 = false;
                        pstmt_tOracleOutput_6.setBigDecimal(1, TOTALES_APORTES.ENTAPORTANTE_ID);

                        pstmt_tOracleOutput_6.setBigDecimal(2, TOTALES_APORTES.TIEMPO_ID);

                        pstmt_tOracleOutput_6.setBigDecimal(3, TOTALES_APORTES.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_6.setInt(4, TOTALES_APORTES.TIPO_RECAUDO_ID);

                        if(TOTALES_APORTES.PERIODO == null) {
pstmt_tOracleOutput_6.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(5, TOTALES_APORTES.PERIODO);
}

                        if(TOTALES_APORTES.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_6.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(6, TOTALES_APORTES.NOMBRE_ENTAPORTANTE);
}

                        if(TOTALES_APORTES.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_6.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(7, TOTALES_APORTES.NOMBRE_VINCULACION);
}

                        pstmt_tOracleOutput_6.setBigDecimal(8, TOTALES_APORTES.TOTAL_APORTE);

                        pstmt_tOracleOutput_6.setBigDecimal(9, TOTALES_APORTES.CANTIDAD_COTIZANTE);

                        if(TOTALES_APORTES.NOMBRE_TIPO_RECAUDO == null) {
pstmt_tOracleOutput_6.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(10, TOTALES_APORTES.NOMBRE_TIPO_RECAUDO);
}

                try {
                    nb_line_tOracleOutput_6++;
                    int processedCount_tOracleOutput_6 = pstmt_tOracleOutput_6.executeUpdate();
                    insertedCount_tOracleOutput_6 += processedCount_tOracleOutput_6;
                    rowsToCommitCount_tOracleOutput_6 += processedCount_tOracleOutput_6;
                } catch(java.lang.Exception e_tOracleOutput_6) {
globalMap.put("tOracleOutput_6_ERROR_MESSAGE",e_tOracleOutput_6.getMessage());
                    whetherReject_tOracleOutput_6 = true;
                            System.err.print(e_tOracleOutput_6.getMessage());
                }

 


	tos_count_tOracleOutput_6++;

/**
 * [tOracleOutput_6 main ] stop
 */
	
	/**
	 * [tOracleOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	

 



/**
 * [tOracleOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	

 



/**
 * [tOracleOutput_6 process_data_end ] stop
 */

} // End of branch "TOTALES_APORTES"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_5_AGGIN", true);
end_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGIN end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tOracleOutput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	
	



	
        if(pstmt_tOracleOutput_6 != null) {
			
				pstmt_tOracleOutput_6.close();
				resourceMap.remove("pstmt_tOracleOutput_6");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_6", true);

	
	nb_line_deleted_tOracleOutput_6=nb_line_deleted_tOracleOutput_6+ deletedCount_tOracleOutput_6;
	nb_line_update_tOracleOutput_6=nb_line_update_tOracleOutput_6 + updatedCount_tOracleOutput_6;
	nb_line_inserted_tOracleOutput_6=nb_line_inserted_tOracleOutput_6 + insertedCount_tOracleOutput_6;
	nb_line_rejected_tOracleOutput_6=nb_line_rejected_tOracleOutput_6 + rejectedCount_tOracleOutput_6;
	
        globalMap.put("tOracleOutput_6_NB_LINE",nb_line_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_UPDATED",nb_line_update_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_6);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TOTALES_APORTES");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_6", true);
end_Hash.put("tOracleOutput_6", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_6", end_Hash.get("tOracleOutput_6")-start_Hash.get("tOracleOutput_6"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_6 end ] stop
 */































	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
	



	
        if(pstmt_tOracleOutput_9 != null) {
			
				pstmt_tOracleOutput_9.close();
				resourceMap.remove("pstmt_tOracleOutput_9");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_9", true);

	
	nb_line_deleted_tOracleOutput_9=nb_line_deleted_tOracleOutput_9+ deletedCount_tOracleOutput_9;
	nb_line_update_tOracleOutput_9=nb_line_update_tOracleOutput_9 + updatedCount_tOracleOutput_9;
	nb_line_inserted_tOracleOutput_9=nb_line_inserted_tOracleOutput_9 + insertedCount_tOracleOutput_9;
	nb_line_rejected_tOracleOutput_9=nb_line_rejected_tOracleOutput_9 + rejectedCount_tOracleOutput_9;
	
        globalMap.put("tOracleOutput_9_NB_LINE",nb_line_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_UPDATED",nb_line_update_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_9);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"XXX");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_9", true);
end_Hash.put("tOracleOutput_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tJava_3Process(globalMap);



/**
 * [tOracleOutput_9 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
							//free memory for "tAggregateRow_5_AGGIN"
							globalMap.remove("tAggregateRow_5");
						
					     			//free memory for "tMap_35"
					     			globalMap.remove("tHash_Lookup_row35"); 
				     			
							//free memory for "tSortRow_5_SortIn"
							globalMap.remove("tSortRow_5");
						
							//free memory for "tAggregateRow_4_AGGIN"
							globalMap.remove("tAggregateRow_4");
						
					     			//free memory for "tMap_13"
					     			globalMap.remove("tHash_Lookup_row42"); 
				     			
							//free memory for "tSortRow_6_SortIn"
							globalMap.remove("tSortRow_6");
						
					     			//free memory for "tMap_32"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
					     			//free memory for "tMap_32"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_28 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tUniqRow_6 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";
	
	

 



/**
 * [tUniqRow_6 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tOracleOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_11") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_11 = null;
                if ((pstmtToClose_tOracleOutput_11 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_11")) != null) {
                    pstmtToClose_tOracleOutput_11.close();
                }
    }
 



/**
 * [tOracleOutput_11 finally ] stop
 */


















	
	/**
	 * [tOracleInput_29 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 finally ] stop
 */

	
	/**
	 * [tMap_24 finally ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 finally ] stop
 */



	
	/**
	 * [tOracleInput_30 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 finally ] stop
 */

	
	/**
	 * [tMap_30 finally ] start
	 */

	

	
	
	currentComponent="tMap_30";
	
	

 



/**
 * [tMap_30 finally ] stop
 */



	
	/**
	 * [tOracleInput_31 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 finally ] stop
 */

	
	/**
	 * [tMap_33 finally ] start
	 */

	

	
	
	currentComponent="tMap_33";
	
	

 



/**
 * [tMap_33 finally ] stop
 */



	
	/**
	 * [tOracleInput_34 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 finally ] stop
 */

	
	/**
	 * [tMap_36 finally ] start
	 */

	

	
	
	currentComponent="tMap_36";
	
	

 



/**
 * [tMap_36 finally ] stop
 */



	
	/**
	 * [tUnite_2 finally ] start
	 */

	

	
	
	currentComponent="tUnite_2";
	
	

 



/**
 * [tUnite_2 finally ] stop
 */

	
	/**
	 * [tMap_32 finally ] start
	 */

	

	
	
	currentComponent="tMap_32";
	
	

 



/**
 * [tMap_32 finally ] stop
 */

	
	/**
	 * [tMap_34 finally ] start
	 */

	

	
	
	currentComponent="tMap_34";
	
	

 



/**
 * [tMap_34 finally ] stop
 */

	
	/**
	 * [tSortRow_6_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortOut";
	
	

 



/**
 * [tSortRow_6_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_6_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_6";
	
	currentComponent="tSortRow_6_SortIn";
	
	

 



/**
 * [tSortRow_6_SortIn finally ] stop
 */

	
	/**
	 * [tReplicate_3 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_3";
	
	

 



/**
 * [tReplicate_3 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tUniqRow_5 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";
	
	

 



/**
 * [tUniqRow_5 finally ] stop
 */

	
	/**
	 * [tOracleOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_16") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_16 = null;
                if ((pstmtUpdateToClose_tOracleOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_16")) != null) {
                    pstmtUpdateToClose_tOracleOutput_16.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_16 = null;
                if ((pstmtInsertToClose_tOracleOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_16")) != null) {
                    pstmtInsertToClose_tOracleOutput_16.close();
                }
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_16 = null;
                if ((pstmtToClose_tOracleOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_16")) != null) {
                    pstmtToClose_tOracleOutput_16.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_16") == null){
            java.sql.Connection ctn_tOracleOutput_16 = null;
            if((ctn_tOracleOutput_16 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_16")) != null){
                try {
                    ctn_tOracleOutput_16.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_16) {
                    String errorMessage_tOracleOutput_16 = "failed to close the connection in tOracleOutput_16 :" + sqlEx_tOracleOutput_16.getMessage();
                    System.err.println(errorMessage_tOracleOutput_16);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_16 finally ] stop
 */










	
	/**
	 * [tUniqRow_4 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 finally ] stop
 */

	
	/**
	 * [tReplicate_5 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_5";
	
	

 



/**
 * [tReplicate_5 finally ] stop
 */

	
	/**
	 * [tOracleOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_8") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_8 = null;
                if ((pstmtToClose_tOracleOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_8")) != null) {
                    pstmtToClose_tOracleOutput_8.close();
                }
    }
 



/**
 * [tOracleOutput_8 finally ] stop
 */




	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */






















	
	/**
	 * [tReplicate_2 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_2";
	
	

 



/**
 * [tReplicate_2 finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN finally ] stop
 */

	
	/**
	 * [tSortRow_5_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortOut";
	
	

 



/**
 * [tSortRow_5_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_5_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_5";
	
	currentComponent="tSortRow_5_SortIn";
	
	

 



/**
 * [tSortRow_5_SortIn finally ] stop
 */

	
	/**
	 * [tSplitRow_2 finally ] start
	 */

	

	
	
	currentComponent="tSplitRow_2";
	
	

 



/**
 * [tSplitRow_2 finally ] stop
 */

	
	/**
	 * [tMap_35 finally ] start
	 */

	

	
	
	currentComponent="tMap_35";
	
	

 



/**
 * [tMap_35 finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tOracleOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_6") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_6 = null;
                if ((pstmtToClose_tOracleOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_6")) != null) {
                    pstmtToClose_tOracleOutput_6.close();
                }
    }
 



/**
 * [tOracleOutput_6 finally ] stop
 */































	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_9") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_9 = null;
                if ((pstmtToClose_tOracleOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_9")) != null) {
                    pstmtToClose_tOracleOutput_9.close();
                }
    }
 



/**
 * [tOracleOutput_9 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


System.out.println(TalendDate.getCurrentDate());
System.out.println("--> End Aportes, Retroactivos, Novedades especiales (Salud, ATEP)");

 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tOracleInput_37Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row55Struct other = (row55Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row55Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            
	}

	public void copyKeysDataTo(row55Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_37Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_RecAportes_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_37 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_37", false);
		start_Hash.put("tOracleInput_37", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_37");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_37";
	
	
		int tos_count_tOracleInput_37 = 0;
		
	


	
		    int nb_line_tOracleInput_37 = 0;
		    java.sql.Connection conn_tOracleInput_37 = null;
				conn_tOracleInput_37 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_37 = false;
				boolean isConnectionWrapped_tOracleInput_37 = !(conn_tOracleInput_37 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_37.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_37 = null;
                if (isConnectionWrapped_tOracleInput_37) {
					unwrappedOraConn_tOracleInput_37 = conn_tOracleInput_37.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_37 != null) {
                        isTimeZoneNull_tOracleInput_37 = (unwrappedOraConn_tOracleInput_37.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_37 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_37).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_37) {
					java.sql.Statement stmtGetTZ_tOracleInput_37 = conn_tOracleInput_37.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_37 = stmtGetTZ_tOracleInput_37.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_37 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_37.next()) {
						sessionTimezone_tOracleInput_37 = rsGetTZ_tOracleInput_37.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_37 && unwrappedOraConn_tOracleInput_37 != null) {
                        unwrappedOraConn_tOracleInput_37.setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_37).setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_37 = conn_tOracleInput_37.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_37.setFetchSize(1000);


		    String dbquery_tOracleInput_37 = "SELECT GRUPO_ETAREO_ID, GRUPO_ETAREO FROM (\nSELECT ROWNUM AS SECUENCIA, ID AS GRUPO_ETAREO_ID, GRUPO_ETAREO FROM (\nSE"
+"LECT DGETAREOS.ID, DGETAREOS.RANGOI || ' - ' || DGETAREOS.RANDOS || ' años' AS GRUPO_ETAREO\nFROM AFI_GETAREOS GETAREOS"
+"\nINNER JOIN AFI_DGETAREOS DGETAREOS\n  ON DGETAREOS.GETAREOS_ID = GETAREOS.ID AND DGETAREOS.ESTADO = 'Activo'\nLEFT JOIN"
+" GEN_SEXOS GS ON GS.ID = DGETAREOS.SEXOS_ID\nWHERE GETAREOS.ESTADO = 'Activo'\n AND GETAREOS.VIGENCIA = TO_NUMBER(TO_CHA"
+"R(sysdate, 'YYYY'))\n AND ( DGETAREOS.SEXOS_ID is NULL OR GS.SIGLA = 'M' )\n ORDER BY TO_NUMBER(DGETAREOS.RANGOI) ASC, T"
+"O_NUMBER(DGETAREOS.RANDOS) ASC\n )\nUNION \nSELECT NULL, 0, 'No Registra' FROM DUAL\n)";
		    

		    globalMap.put("tOracleInput_37_QUERY",dbquery_tOracleInput_37);

		    java.sql.ResultSet rs_tOracleInput_37 = null;

		    try {
		    	rs_tOracleInput_37 = stmt_tOracleInput_37.executeQuery(dbquery_tOracleInput_37);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_37 = rs_tOracleInput_37.getMetaData();
		    	int colQtyInRs_tOracleInput_37 = rsmd_tOracleInput_37.getColumnCount();

		    String tmpContent_tOracleInput_37 = null;
		    
		    
		    while (rs_tOracleInput_37.next()) {
		        nb_line_tOracleInput_37++;
		        
							if(colQtyInRs_tOracleInput_37 < 1) {
								row55.GRUPO_ETAREO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(1) != null) {
						row55.GRUPO_ETAREO_ID = rs_tOracleInput_37.getBigDecimal(1);
					} else {
				
						row55.GRUPO_ETAREO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 2) {
								row55.GRUPO_ETAREO = null;
							} else {
	                         		
        	row55.GRUPO_ETAREO = routines.system.JDBCUtil.getString(rs_tOracleInput_37, 2, false);
		                    }
					




 



/**
 * [tOracleInput_37 begin ] stop
 */
	
	/**
	 * [tOracleInput_37 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 


	tos_count_tOracleInput_37++;

/**
 * [tOracleInput_37 main ] stop
 */
	
	/**
	 * [tOracleInput_37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					



    
		row55Struct oneRow_tHashOutput_4 = new row55Struct();
				
					oneRow_tHashOutput_4.GRUPO_ETAREO_ID = row55.GRUPO_ETAREO_ID;
					oneRow_tHashOutput_4.GRUPO_ETAREO = row55.GRUPO_ETAREO;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_37 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_37 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

}
}finally{
	if (rs_tOracleInput_37 != null) {
		rs_tOracleInput_37.close();
	}
	if (stmt_tOracleInput_37 != null) {
		stmt_tOracleInput_37.close();
	}
}

globalMap.put("tOracleInput_37_NB_LINE",nb_line_tOracleInput_37);
 

ok_Hash.put("tOracleInput_37", true);
end_Hash.put("tOracleInput_37", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_37", end_Hash.get("tOracleInput_37")-start_Hash.get("tOracleInput_37"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_37 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk15", 0, "ok");
				}
				tOracleInput_43Process(globalMap);



/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_37 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 1);
	}
	


public static class row61Struct implements routines.system.IPersistableRow<row61Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return 0;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return false;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return 0;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row61Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_43Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_43_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row61Struct row61 = new row61Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row61");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row61Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_RecAportes_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row61Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_43 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_43", false);
		start_Hash.put("tOracleInput_43", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_43");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_43";
	
	
		int tos_count_tOracleInput_43 = 0;
		
	


	
		    int nb_line_tOracleInput_43 = 0;
		    java.sql.Connection conn_tOracleInput_43 = null;
				conn_tOracleInput_43 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_43 = false;
				boolean isConnectionWrapped_tOracleInput_43 = !(conn_tOracleInput_43 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_43.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_43 = null;
                if (isConnectionWrapped_tOracleInput_43) {
					unwrappedOraConn_tOracleInput_43 = conn_tOracleInput_43.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_43 != null) {
                        isTimeZoneNull_tOracleInput_43 = (unwrappedOraConn_tOracleInput_43.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_43 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_43).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_43) {
					java.sql.Statement stmtGetTZ_tOracleInput_43 = conn_tOracleInput_43.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_43 = stmtGetTZ_tOracleInput_43.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_43 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_43.next()) {
						sessionTimezone_tOracleInput_43 = rsGetTZ_tOracleInput_43.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_43 && unwrappedOraConn_tOracleInput_43 != null) {
                        unwrappedOraConn_tOracleInput_43.setSessionTimeZone(sessionTimezone_tOracleInput_43);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_43).setSessionTimeZone(sessionTimezone_tOracleInput_43);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_43 = conn_tOracleInput_43.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_43.setFetchSize(1000);


		    String dbquery_tOracleInput_43 = "SELECT MIN(CG.ID) ID, MIN(CG.ENTAPORTANTES_ID) ENTAPORTANTES_ID, MIN(DS.TVINCULACIONES_ID) TVINCULACIONES_ID, MIN(TCOTI"
+"ZACION.ID) TCOTIZACION_ID, CG.PERIODO\nFROM   VM_REC_CONSOLIDADO CG \n  INNER JOIN REC_DSALUD DS\n     ON DS.id = CG.Ds_"
+"Id\n  INNER JOIN AFI_TVINCULACIONES TVINCULACIONES\n    ON TVINCULACIONES.ID = DS.TVINCULACIONES_ID  \n  INNER JOIN AFI_"
+"TCOTIZACION TCOTIZACION\n     ON TCOTIZACION.ID = TVINCULACIONES.TCOTIZACION_ID                                         "
+"  \n  LEFT JOIN GEN_PERSONAS PERSONAS \n     ON PERSONAS.DOCUMENTO = TO_CHAR(DS.DOCUMENTO)\n    AND PERSONAS.TDOCUMENTOS"
+"_ID = DS.TDOCUMENTOS_ID  \nWHERE CG.TPLANILLAS_ID = 1\n  AND CG.TARCHIVOS_ID = 1\n  AND TO_DATE(CG.PERIODO, 'YYYY-MM') B"
+"ETWEEN to_date('" + context.PERIODO + "', 'YYYY-MM') AND to_date('" + context.PERIODO + "', 'YYYY-MM')\nGROUP BY CG.PERIODO, CG.ID";
		    

		    globalMap.put("tOracleInput_43_QUERY",dbquery_tOracleInput_43);

		    java.sql.ResultSet rs_tOracleInput_43 = null;

		    try {
		    	rs_tOracleInput_43 = stmt_tOracleInput_43.executeQuery(dbquery_tOracleInput_43);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_43 = rs_tOracleInput_43.getMetaData();
		    	int colQtyInRs_tOracleInput_43 = rsmd_tOracleInput_43.getColumnCount();

		    String tmpContent_tOracleInput_43 = null;
		    
		    
		    while (rs_tOracleInput_43.next()) {
		        nb_line_tOracleInput_43++;
		        
							if(colQtyInRs_tOracleInput_43 < 1) {
								row61.ID = null;
							} else {
		                          
					if(rs_tOracleInput_43.getObject(1) != null) {
						row61.ID = rs_tOracleInput_43.getBigDecimal(1);
					} else {
				
						row61.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_43 < 2) {
								row61.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_43.getObject(2) != null) {
						row61.ENTAPORTANTES_ID = rs_tOracleInput_43.getBigDecimal(2);
					} else {
				
						row61.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_43 < 3) {
								row61.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_43.getObject(3) != null) {
						row61.TVINCULACIONES_ID = rs_tOracleInput_43.getBigDecimal(3);
					} else {
				
						row61.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_43 < 4) {
								row61.TCOTIZACION_ID = null;
							} else {
		                          
					if(rs_tOracleInput_43.getObject(4) != null) {
						row61.TCOTIZACION_ID = rs_tOracleInput_43.getBigDecimal(4);
					} else {
				
						row61.TCOTIZACION_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_43 < 5) {
								row61.PERIODO = null;
							} else {
	                         		
        	row61.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_43, 5, false);
		                    }
					




 



/**
 * [tOracleInput_43 begin ] stop
 */
	
	/**
	 * [tOracleInput_43 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 


	tos_count_tOracleInput_43++;

/**
 * [tOracleInput_43 main ] stop
 */
	
	/**
	 * [tOracleInput_43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row61"
						
						);
					}
					



    
		row61Struct oneRow_tHashOutput_1 = new row61Struct();
				
					oneRow_tHashOutput_1.ID = row61.ID;
					oneRow_tHashOutput_1.ENTAPORTANTES_ID = row61.ENTAPORTANTES_ID;
					oneRow_tHashOutput_1.TVINCULACIONES_ID = row61.TVINCULACIONES_ID;
					oneRow_tHashOutput_1.TCOTIZACION_ID = row61.TCOTIZACION_ID;
					oneRow_tHashOutput_1.PERIODO = row61.PERIODO;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_43 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_43 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

}
}finally{
	if (rs_tOracleInput_43 != null) {
		rs_tOracleInput_43.close();
	}
	if (stmt_tOracleInput_43 != null) {
		stmt_tOracleInput_43.close();
	}
}

globalMap.put("tOracleInput_43_NB_LINE",nb_line_tOracleInput_43);
 

ok_Hash.put("tOracleInput_43", true);
end_Hash.put("tOracleInput_43", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_43", end_Hash.get("tOracleInput_43")-start_Hash.get("tOracleInput_43"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_43 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row61");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk21", 0, "ok");
				}
				tOracleInput_38Process(globalMap);



/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_43 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_43_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row78Struct other = (row78Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row78Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            
	}

	public void copyKeysDataTo(row78Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_38Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row78Struct row78 = new row78Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_RecAportes_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_38 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_38", false);
		start_Hash.put("tOracleInput_38", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_38");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_38";
	
	
		int tos_count_tOracleInput_38 = 0;
		
	


	
		    int nb_line_tOracleInput_38 = 0;
		    java.sql.Connection conn_tOracleInput_38 = null;
				conn_tOracleInput_38 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_38 = false;
				boolean isConnectionWrapped_tOracleInput_38 = !(conn_tOracleInput_38 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_38.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_38 = null;
                if (isConnectionWrapped_tOracleInput_38) {
					unwrappedOraConn_tOracleInput_38 = conn_tOracleInput_38.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_38 != null) {
                        isTimeZoneNull_tOracleInput_38 = (unwrappedOraConn_tOracleInput_38.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_38 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_38).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_38) {
					java.sql.Statement stmtGetTZ_tOracleInput_38 = conn_tOracleInput_38.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_38 = stmtGetTZ_tOracleInput_38.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_38 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_38.next()) {
						sessionTimezone_tOracleInput_38 = rsGetTZ_tOracleInput_38.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_38 && unwrappedOraConn_tOracleInput_38 != null) {
                        unwrappedOraConn_tOracleInput_38.setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_38).setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_38 = conn_tOracleInput_38.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_38.setFetchSize(1000);


		    String dbquery_tOracleInput_38 = "SELECT TablaX.GRUPO_ETAREO_ID, TablaX.GRUPO_ETAREO, TablaY.ID, TablaY.ENTAPORTANTES_ID, TablaY.TVINCULACIONES_ID, Tabla"
+"Y.TCOTIZACION_ID, TablaY.PERIODO, \n    SUM(NVL(TablaY.APORTE_EMPLEADO, 0)) APORTE_EMPLEADO, \n    SUM(NVL(TablaY.APORTE"
+"_EMPLEADOR, 0)) APORTE_EMPLEADOR, \n    SUM(NVL(TablaY.CANTIDAD_COTIZANTES, 0)) CANTIDAD_COTIZANTES \nFROM (\n	SELECT GR"
+"UPO_ETAREO_ID, GRUPO_ETAREO FROM (\n	  SELECT ROWNUM AS SECUENCIA, ID AS GRUPO_ETAREO_ID, GRUPO_ETAREO \n	  FROM (\n	   "
+" SELECT DGETAREOS.ID, DGETAREOS.RANGOI || ' - ' || DGETAREOS.RANDOS || ' años' AS GRUPO_ETAREO\n	    FROM AFI_GETAREOS G"
+"ETAREOS\n	    INNER JOIN AFI_DGETAREOS DGETAREOS ON DGETAREOS.GETAREOS_ID = GETAREOS.ID AND DGETAREOS.ESTADO = 'Activo'"
+"\n	    LEFT JOIN GEN_SEXOS GS ON GS.ID = DGETAREOS.SEXOS_ID\n	    WHERE GETAREOS.ESTADO = 'Activo'\n	    AND GETAREOS.VIG"
+"ENCIA = TO_NUMBER(TO_CHAR(sysdate, 'YYYY'))\n	    AND ( DGETAREOS.SEXOS_ID is NULL OR GS.SIGLA = 'M' )\n	    ORDER BY TO"
+"_NUMBER(DGETAREOS.RANGOI) ASC, TO_NUMBER(DGETAREOS.RANDOS) ASC\n	 )\n	UNION \n	SELECT NULL, 0, 'No Registra' FROM DUAL\n"
+"	)\n) TablaX\nLEFT JOIN (SELECT TablaRec.ID, NVL(TablaGE.GRUPO_ETAREO, 'No Registra') GRUPO_ETAREO, TablaRec.ENTAPORTANT"
+"ES_ID, TablaRec.TVINCULACIONES_ID, \n    TablaRec.TCOTIZACION_ID, TablaRec.PERIODO, TablaRec.APORTE_EMPLEADO, TablaRec.A"
+"PORTE_EMPLEADOR, TablaRec.CANTIDAD_COTIZANTES\nFROM (SELECT CG.ID, CG.ENTAPORTANTES_ID, DS.TVINCULACIONES_ID, TCOTIZACIO"
+"N.ID TCOTIZACION_ID, CG.PERIODO, \n       SUM(DS.COTIZACION_EMPLEADO_EPS) APORTE_EMPLEADO, SUM(DS.COTIZACION_EMPLEADOR_E"
+"PS) APORTE_EMPLEADOR, \n       NVL(FLOOR(TO_NUMBER(MONTHS_BETWEEN(SYSDATE, PERSONAS.FECHA_NACIMIENTO) / 12)), -1) EDAD, "
+"\n       COUNT(DISTINCT DS.DOCUMENTO) CANTIDAD_COTIZANTES\nFROM VM_REC_CONSOLIDADO CG \n  INNER JOIN REC_DSALUD DS\n    "
+" ON DS.id = CG.Ds_Id\n  INNER JOIN AFI_TVINCULACIONES TVINCULACIONES\n    ON TVINCULACIONES.ID = DS.TVINCULACIONES_ID  "
+"\n  INNER JOIN AFI_TCOTIZACION TCOTIZACION\n     ON TCOTIZACION.ID = TVINCULACIONES.TCOTIZACION_ID                       "
+"                    \n  LEFT JOIN GEN_PERSONAS PERSONAS \n     ON PERSONAS.DOCUMENTO = TO_CHAR(DS.DOCUMENTO) AND PERSONA"
+"S.TDOCUMENTOS_ID = DS.TDOCUMENTOS_ID AND PERSONAS.ESTREGISTRO_ID = 1\nWHERE CG.TPLANILLAS_ID = 1\n  AND CG.TARCHIVOS_ID "
+"= 1\n  AND TO_DATE(CG.PERIODO, 'YYYY-MM') BETWEEN to_date('" + context.PERIODO + "', 'YYYY-MM') AND to_date('" + context.PERIODO + "', 'YYYY-MM')                                  \nGROUP BY CG.ID, CG.ENTAPORTANTES_ID, DS.TVINCULACIONES_ID, TCOTIZACION"
+".ID, \n      CG.PERIODO, NVL(FLOOR(TO_NUMBER(MONTHS_BETWEEN(SYSDATE, PERSONAS.FECHA_NACIMIENTO) / 12)), -1)) TablaRec\nL"
+"EFT JOIN (\n		SELECT (DGETAREOS.RANGOI || ' - ' || DGETAREOS.RANDOS || ' años') AS GRUPO_ETAREO, \n                 TO_N"
+"UMBER(DGETAREOS.RANGOI) RANGOI, TO_NUMBER(DGETAREOS.RANDOS) RANDOS\n              FROM AFI_GETAREOS GETAREOS\n          "
+"    INNER JOIN AFI_DGETAREOS DGETAREOS ON DGETAREOS.GETAREOS_ID = GETAREOS.ID and DGETAREOS.ESTADO = 'Activo'\n         "
+"      LEFT JOIN GEN_SEXOS GS ON GS.ID = DGETAREOS.SEXOS_ID\n               WHERE GETAREOS.ESTADO = 'Activo'\n           "
+"          AND GETAREOS.VIGENCIA = TO_NUMBER(TO_CHAR(sysdate, 'YYYY'))\n                     AND ( DGETAREOS.SEXOS_ID is "
+"NULL OR GS.SIGLA = 'M' )\n) TablaGE                   \n     ON NVL(TablaRec.EDAD, -1) BETWEEN TablaGE.RANGOI AND TablaG"
+"E.RANDOS) TablaY\nON TablaX.GRUPO_ETAREO = TablaY.GRUPO_ETAREO\nGROUP BY TablaX.GRUPO_ETAREO_ID, TablaX.GRUPO_ETAREO, Ta"
+"blaY.ID, TablaY.ENTAPORTANTES_ID, TablaY.TVINCULACIONES_ID, TablaY.TCOTIZACION_ID, TablaY.PERIODO";
		    

		    globalMap.put("tOracleInput_38_QUERY",dbquery_tOracleInput_38);

		    java.sql.ResultSet rs_tOracleInput_38 = null;

		    try {
		    	rs_tOracleInput_38 = stmt_tOracleInput_38.executeQuery(dbquery_tOracleInput_38);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_38 = rs_tOracleInput_38.getMetaData();
		    	int colQtyInRs_tOracleInput_38 = rsmd_tOracleInput_38.getColumnCount();

		    String tmpContent_tOracleInput_38 = null;
		    
		    
		    while (rs_tOracleInput_38.next()) {
		        nb_line_tOracleInput_38++;
		        
							if(colQtyInRs_tOracleInput_38 < 1) {
								row78.GRUPO_ETAREO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(1) != null) {
						row78.GRUPO_ETAREO_ID = rs_tOracleInput_38.getBigDecimal(1);
					} else {
				
						row78.GRUPO_ETAREO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 2) {
								row78.GRUPO_ETAREO = null;
							} else {
	                         		
        	row78.GRUPO_ETAREO = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 3) {
								row78.ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(3) != null) {
						row78.ID = rs_tOracleInput_38.getBigDecimal(3);
					} else {
				
						row78.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 4) {
								row78.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(4) != null) {
						row78.ENTAPORTANTES_ID = rs_tOracleInput_38.getBigDecimal(4);
					} else {
				
						row78.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 5) {
								row78.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(5) != null) {
						row78.TVINCULACIONES_ID = rs_tOracleInput_38.getBigDecimal(5);
					} else {
				
						row78.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 6) {
								row78.TCOTIZACION_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(6) != null) {
						row78.TCOTIZACION_ID = rs_tOracleInput_38.getBigDecimal(6);
					} else {
				
						row78.TCOTIZACION_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 7) {
								row78.PERIODO = null;
							} else {
	                         		
        	row78.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 8) {
								row78.APORTE_EMPLEADO = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(8) != null) {
						row78.APORTE_EMPLEADO = rs_tOracleInput_38.getBigDecimal(8);
					} else {
				
						row78.APORTE_EMPLEADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 9) {
								row78.APORTE_EMPLEADOR = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(9) != null) {
						row78.APORTE_EMPLEADOR = rs_tOracleInput_38.getBigDecimal(9);
					} else {
				
						row78.APORTE_EMPLEADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_38 < 10) {
								row78.CANTIDAD_COTIZANTES = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(10) != null) {
						row78.CANTIDAD_COTIZANTES = rs_tOracleInput_38.getBigDecimal(10);
					} else {
				
						row78.CANTIDAD_COTIZANTES = null;
					}
		                    }
					




 



/**
 * [tOracleInput_38 begin ] stop
 */
	
	/**
	 * [tOracleInput_38 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 


	tos_count_tOracleInput_38++;

/**
 * [tOracleInput_38 main ] stop
 */
	
	/**
	 * [tOracleInput_38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					



    
		row78Struct oneRow_tHashOutput_2 = new row78Struct();
				
					oneRow_tHashOutput_2.GRUPO_ETAREO_ID = row78.GRUPO_ETAREO_ID;
					oneRow_tHashOutput_2.GRUPO_ETAREO = row78.GRUPO_ETAREO;
					oneRow_tHashOutput_2.ID = row78.ID;
					oneRow_tHashOutput_2.ENTAPORTANTES_ID = row78.ENTAPORTANTES_ID;
					oneRow_tHashOutput_2.TVINCULACIONES_ID = row78.TVINCULACIONES_ID;
					oneRow_tHashOutput_2.TCOTIZACION_ID = row78.TCOTIZACION_ID;
					oneRow_tHashOutput_2.PERIODO = row78.PERIODO;
					oneRow_tHashOutput_2.APORTE_EMPLEADO = row78.APORTE_EMPLEADO;
					oneRow_tHashOutput_2.APORTE_EMPLEADOR = row78.APORTE_EMPLEADOR;
					oneRow_tHashOutput_2.CANTIDAD_COTIZANTES = row78.CANTIDAD_COTIZANTES;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_38 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_38 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

}
}finally{
	if (rs_tOracleInput_38 != null) {
		rs_tOracleInput_38.close();
	}
	if (stmt_tOracleInput_38 != null) {
		stmt_tOracleInput_38.close();
	}
}

globalMap.put("tOracleInput_38_NB_LINE",nb_line_tOracleInput_38);
 

ok_Hash.put("tOracleInput_38", true);
end_Hash.put("tOracleInput_38", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_38", end_Hash.get("tOracleInput_38")-start_Hash.get("tOracleInput_38"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_38 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk22", 0, "ok");
				}
				tOracleInput_40Process(globalMap);



/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_38 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 1);
	}
	


public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row79Struct other = (row79Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row79Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(row79Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_40Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row79Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_RecAportes_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row79Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_40", false);
		start_Hash.put("tOracleInput_40", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_40");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_40";
	
	
		int tos_count_tOracleInput_40 = 0;
		
	


	
		    int nb_line_tOracleInput_40 = 0;
		    java.sql.Connection conn_tOracleInput_40 = null;
				conn_tOracleInput_40 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_40 = false;
				boolean isConnectionWrapped_tOracleInput_40 = !(conn_tOracleInput_40 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_40.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_40 = null;
                if (isConnectionWrapped_tOracleInput_40) {
					unwrappedOraConn_tOracleInput_40 = conn_tOracleInput_40.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_40 != null) {
                        isTimeZoneNull_tOracleInput_40 = (unwrappedOraConn_tOracleInput_40.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_40 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_40).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_40) {
					java.sql.Statement stmtGetTZ_tOracleInput_40 = conn_tOracleInput_40.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_40 = stmtGetTZ_tOracleInput_40.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_40 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_40.next()) {
						sessionTimezone_tOracleInput_40 = rsGetTZ_tOracleInput_40.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_40 && unwrappedOraConn_tOracleInput_40 != null) {
                        unwrappedOraConn_tOracleInput_40.setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_40).setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_40 = conn_tOracleInput_40.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_40.setFetchSize(1000);


		    String dbquery_tOracleInput_40 = "SELECT TablaX.GRUPO_ETAREO_ID, TablaX.GRUPO_ETAREO, TablaY.ID, TablaY.ENTAPORTANTES_ID, TablaY.TVINCULACIONES_ID, \n   "
+" TablaY.TCOTIZACION_ID, TablaY.PERIODO, SUM(NVL(TablaY.CANTIDAD_BENEFICIARIOS, 0)) CANTIDAD_BENEFICIARIOS\nFROM (\n	SELE"
+"CT GRUPO_ETAREO_ID, GRUPO_ETAREO FROM (\n	  SELECT ROWNUM AS SECUENCIA, ID AS GRUPO_ETAREO_ID, GRUPO_ETAREO \n	  FROM ("
+"\n	    SELECT DGETAREOS.ID, DGETAREOS.RANGOI || ' - ' || DGETAREOS.RANDOS || ' años' AS GRUPO_ETAREO\n	    FROM AFI_GETAR"
+"EOS GETAREOS\n	    INNER JOIN AFI_DGETAREOS DGETAREOS ON DGETAREOS.GETAREOS_ID = GETAREOS.ID AND DGETAREOS.ESTADO = 'Act"
+"ivo'\n	    LEFT JOIN GEN_SEXOS GS ON GS.ID = DGETAREOS.SEXOS_ID\n	    WHERE GETAREOS.ESTADO = 'Activo'\n	    AND GETAREO"
+"S.VIGENCIA = TO_NUMBER(TO_CHAR(sysdate, 'YYYY'))\n	    AND ( DGETAREOS.SEXOS_ID is NULL OR GS.SIGLA = 'M' )\n	    ORDER "
+"BY TO_NUMBER(DGETAREOS.RANGOI) ASC, TO_NUMBER(DGETAREOS.RANDOS) ASC\n	 )\n	UNION \n	SELECT NULL, 0, 'No Registra' FROM D"
+"UAL\n	)\n) TablaX\nLEFT JOIN (SELECT TablaRec.ID, NVL(TablaGE.GRUPO_ETAREO, 'No Registra') GRUPO_ETAREO, TablaRec.ENTAPO"
+"RTANTES_ID, TablaRec.TVINCULACIONES_ID, \n    TablaRec.TCOTIZACION_ID, TablaRec.PERIODO, TablaRec.CANTIDAD_BENEFICIARIOS"
+"\nFROM (SELECT CG.ID, CG.ENTAPORTANTES_ID, DS.TVINCULACIONES_ID, TCOTIZACION.ID TCOTIZACION_ID, CG.PERIODO, \n       NVL"
+"(FLOOR(TO_NUMBER(MONTHS_BETWEEN(SYSDATE, PER_BENEFI.FECHA_NACIMIENTO) / 12)), -1) EDAD, \n       COUNT(DISTINCT PER_BENE"
+"FI.DOCUMENTO) CANTIDAD_BENEFICIARIOS\nFROM VM_REC_CONSOLIDADO CG \n  INNER JOIN REC_DSALUD DS\n     ON DS.id = CG.Ds_Id"
+"\n  INNER JOIN AFI_TVINCULACIONES TVINCULACIONES\n    ON TVINCULACIONES.ID = DS.TVINCULACIONES_ID  \n  INNER JOIN AFI_TCO"
+"TIZACION TCOTIZACION\n     ON TCOTIZACION.ID = TVINCULACIONES.TCOTIZACION_ID                                           "
+"\n  LEFT JOIN GEN_PERSONAS PERSONAS \n     ON PERSONAS.DOCUMENTO = TO_CHAR(DS.DOCUMENTO) and PERSONAS.TDOCUMENTOS_ID = DS"
+".TDOCUMENTOS_ID  AND PERSONAS.ESTREGISTRO_ID = 1\n  LEFT JOIN GEN_AFILIADOS AFI\n     ON AFI.PERSONAS_ID = PERSONAS.ID a"
+"nd AFI.ESTREGISTRO_ID = 1\n  LEFT JOIN GEN_AFILIADOS AFI_BENEFI\n     ON AFI_BENEFI.PADRE_ID = AFI.ID AND AFI_BENEFI.EST"
+"REGISTRO_ID = 1 and AFI_BENEFI.ESTAFILIACION IN ('Activo','Provisional')\n  LEFT JOIN GEN_PERSONAS PER_BENEFI\n     ON P"
+"ER_BENEFI.ID = AFI_BENEFI.PERSONAS_ID AND PER_BENEFI.ESTREGISTRO_ID = 1\nWHERE  CG.TPLANILLAS_ID = 1\n  AND CG.TARCHIVOS"
+"_ID = 1\n  AND TO_DATE(CG.PERIODO, 'YYYY-MM') BETWEEN to_date('" + context.PERIODO + "', 'YYYY-MM') AND to_date('" + context.PERIODO + "', 'YYYY-MM')                                  \nGROUP BY CG.ID, CG.ENTAPORTANTES_ID, DS.TVINCULACIONES_ID, TCOTIZACION"
+".ID, \n      CG.PERIODO, NVL(FLOOR(TO_NUMBER(MONTHS_BETWEEN(SYSDATE, PER_BENEFI.FECHA_NACIMIENTO) / 12)), -1)) TablaRec"
+"\nLEFT JOIN ( SELECT (DGETAREOS.RANGOI || ' - ' || DGETAREOS.RANDOS || ' años') AS GRUPO_ETAREO, \n                  TO_N"
+"UMBER(DGETAREOS.RANGOI) RANGOI, TO_NUMBER(DGETAREOS.RANDOS) RANDOS\n               FROM AFI_GETAREOS GETAREOS\n         "
+"      INNER JOIN AFI_DGETAREOS DGETAREOS ON DGETAREOS.GETAREOS_ID = GETAREOS.ID and DGETAREOS.ESTADO = 'Activo'\n       "
+"        LEFT JOIN GEN_SEXOS GS ON GS.ID = DGETAREOS.SEXOS_ID\n               WHERE GETAREOS.ESTADO = 'Activo'\n         "
+"            AND GETAREOS.VIGENCIA = TO_NUMBER(TO_CHAR(sysdate, 'YYYY'))\n                     AND ( DGETAREOS.SEXOS_ID i"
+"s NULL OR GS.SIGLA = 'M' ) ) TablaGE                   \n     ON NVL(TablaRec.EDAD, -1) BETWEEN TablaGE.RANGOI AND Tabla"
+"GE.RANDOS) TablaY\nON TablaX.GRUPO_ETAREO = TablaY.GRUPO_ETAREO\nGROUP BY TablaX.GRUPO_ETAREO_ID, TablaX.GRUPO_ETAREO, T"
+"ablaY.ID, TablaY.ENTAPORTANTES_ID, TablaY.TVINCULACIONES_ID, \n    TablaY.TCOTIZACION_ID, TablaY.PERIODO";
		    

		    globalMap.put("tOracleInput_40_QUERY",dbquery_tOracleInput_40);

		    java.sql.ResultSet rs_tOracleInput_40 = null;

		    try {
		    	rs_tOracleInput_40 = stmt_tOracleInput_40.executeQuery(dbquery_tOracleInput_40);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_40 = rs_tOracleInput_40.getMetaData();
		    	int colQtyInRs_tOracleInput_40 = rsmd_tOracleInput_40.getColumnCount();

		    String tmpContent_tOracleInput_40 = null;
		    
		    
		    while (rs_tOracleInput_40.next()) {
		        nb_line_tOracleInput_40++;
		        
							if(colQtyInRs_tOracleInput_40 < 1) {
								row79.GRUPO_ETAREO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(1) != null) {
						row79.GRUPO_ETAREO_ID = rs_tOracleInput_40.getBigDecimal(1);
					} else {
				
						row79.GRUPO_ETAREO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 2) {
								row79.GRUPO_ETAREO = null;
							} else {
	                         		
        	row79.GRUPO_ETAREO = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 3) {
								row79.ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(3) != null) {
						row79.ID = rs_tOracleInput_40.getBigDecimal(3);
					} else {
				
						row79.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 4) {
								row79.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(4) != null) {
						row79.ENTAPORTANTES_ID = rs_tOracleInput_40.getBigDecimal(4);
					} else {
				
						row79.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 5) {
								row79.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(5) != null) {
						row79.TVINCULACIONES_ID = rs_tOracleInput_40.getBigDecimal(5);
					} else {
				
						row79.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 6) {
								row79.TCOTIZACION_ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(6) != null) {
						row79.TCOTIZACION_ID = rs_tOracleInput_40.getBigDecimal(6);
					} else {
				
						row79.TCOTIZACION_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 7) {
								row79.PERIODO = null;
							} else {
	                         		
        	row79.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 8) {
								row79.CANTIDAD_BENEFICIARIOS = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(8) != null) {
						row79.CANTIDAD_BENEFICIARIOS = rs_tOracleInput_40.getBigDecimal(8);
					} else {
				
						row79.CANTIDAD_BENEFICIARIOS = null;
					}
		                    }
					




 



/**
 * [tOracleInput_40 begin ] stop
 */
	
	/**
	 * [tOracleInput_40 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 


	tos_count_tOracleInput_40++;

/**
 * [tOracleInput_40 main ] stop
 */
	
	/**
	 * [tOracleInput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					



    
		row79Struct oneRow_tHashOutput_3 = new row79Struct();
				
					oneRow_tHashOutput_3.GRUPO_ETAREO_ID = row79.GRUPO_ETAREO_ID;
					oneRow_tHashOutput_3.GRUPO_ETAREO = row79.GRUPO_ETAREO;
					oneRow_tHashOutput_3.ID = row79.ID;
					oneRow_tHashOutput_3.ENTAPORTANTES_ID = row79.ENTAPORTANTES_ID;
					oneRow_tHashOutput_3.TVINCULACIONES_ID = row79.TVINCULACIONES_ID;
					oneRow_tHashOutput_3.TCOTIZACION_ID = row79.TCOTIZACION_ID;
					oneRow_tHashOutput_3.PERIODO = row79.PERIODO;
					oneRow_tHashOutput_3.CANTIDAD_BENEFICIARIOS = row79.CANTIDAD_BENEFICIARIOS;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_40 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

}
}finally{
	if (rs_tOracleInput_40 != null) {
		rs_tOracleInput_40.close();
	}
	if (stmt_tOracleInput_40 != null) {
		stmt_tOracleInput_40.close();
	}
}

globalMap.put("tOracleInput_40_NB_LINE",nb_line_tOracleInput_40);
 

ok_Hash.put("tOracleInput_40", true);
end_Hash.put("tOracleInput_40", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_40", end_Hash.get("tOracleInput_40")-start_Hash.get("tOracleInput_40"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_40 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk23", 0, "ok");
				}
				tHashInput_2Process(globalMap);



/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_40 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 1);
	}
	


public static class INGRESO_ENTAPORTANTEStruct implements routines.system.IPersistableRow<INGRESO_ENTAPORTANTEStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return true;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTIDAD_APORTANTE_ID;

				public BigDecimal getENTIDAD_APORTANTE_ID () {
					return this.ENTIDAD_APORTANTE_ID;
				}

				public Boolean ENTIDAD_APORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTIDAD_APORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTIDAD_APORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTIDAD_APORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTIDAD_APORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTIDAD_APORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDOriginalDbColumnName(){
				
					return "ENTIDAD_APORTANTE_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_VINCULACION;

				public String getNOMBRE_VINCULACION () {
					return this.NOMBRE_VINCULACION;
				}

				public Boolean NOMBRE_VINCULACIONIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_VINCULACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_VINCULACIONLength(){
				    return 200;
				}
				public Integer NOMBRE_VINCULACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_VINCULACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_VINCULACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_VINCULACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_VINCULACIONOriginalDbColumnName(){
				
					return "NOMBRE_VINCULACION";
				
				}

				
			    public String NOMBRE_TIPO_COTIZACION;

				public String getNOMBRE_TIPO_COTIZACION () {
					return this.NOMBRE_TIPO_COTIZACION;
				}

				public Boolean NOMBRE_TIPO_COTIZACIONIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_COTIZACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_COTIZACIONLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_COTIZACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_COTIZACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_COTIZACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_COTIZACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_COTIZACIONOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_COTIZACION";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.ENTIDAD_APORTANTE_ID == null) ? 0 : this.ENTIDAD_APORTANTE_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final INGRESO_ENTAPORTANTEStruct other = (INGRESO_ENTAPORTANTEStruct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.ENTIDAD_APORTANTE_ID == null) {
							if (other.ENTIDAD_APORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTIDAD_APORTANTE_ID.equals(other.ENTIDAD_APORTANTE_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(INGRESO_ENTAPORTANTEStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_VINCULACION = this.NOMBRE_VINCULACION;
	            other.NOMBRE_TIPO_COTIZACION = this.NOMBRE_TIPO_COTIZACION;
	            
	}

	public void copyKeysDataTo(INGRESO_ENTAPORTANTEStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
					this.NOMBRE_TIPO_COTIZACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_VINCULACION = readString(dis);
					
					this.NOMBRE_TIPO_COTIZACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_COTIZACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_VINCULACION,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_COTIZACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTIDAD_APORTANTE_ID="+String.valueOf(ENTIDAD_APORTANTE_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_VINCULACION="+NOMBRE_VINCULACION);
		sb.append(",NOMBRE_TIPO_COTIZACION="+NOMBRE_TIPO_COTIZACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INGRESO_ENTAPORTANTEStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTIDAD_APORTANTE_ID, other.ENTIDAD_APORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return true;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTIDAD_APORTANTE_ID;

				public BigDecimal getENTIDAD_APORTANTE_ID () {
					return this.ENTIDAD_APORTANTE_ID;
				}

				public Boolean ENTIDAD_APORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTIDAD_APORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTIDAD_APORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTIDAD_APORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTIDAD_APORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTIDAD_APORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDOriginalDbColumnName(){
				
					return "ENTIDAD_APORTANTE_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTIDAD_APORTANTE_ID="+String.valueOf(ENTIDAD_APORTANTE_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_10 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_10> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return true;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTIDAD_APORTANTE_ID;

				public BigDecimal getENTIDAD_APORTANTE_ID () {
					return this.ENTIDAD_APORTANTE_ID;
				}

				public Boolean ENTIDAD_APORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTIDAD_APORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTIDAD_APORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTIDAD_APORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTIDAD_APORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTIDAD_APORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDOriginalDbColumnName(){
				
					return "ENTIDAD_APORTANTE_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.ENTIDAD_APORTANTE_ID == null) ? 0 : this.ENTIDAD_APORTANTE_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_10 other = (OnRowsEndStructtSortRow_10) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.ENTIDAD_APORTANTE_ID == null) {
							if (other.ENTIDAD_APORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTIDAD_APORTANTE_ID.equals(other.ENTIDAD_APORTANTE_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_10 other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_10 other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTIDAD_APORTANTE_ID="+String.valueOf(ENTIDAD_APORTANTE_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_10 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTIDAD_APORTANTE_ID, other.ENTIDAD_APORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class INGRESO_MENSUALStruct implements routines.system.IPersistableRow<INGRESO_MENSUALStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return true;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTIDAD_APORTANTE_ID;

				public BigDecimal getENTIDAD_APORTANTE_ID () {
					return this.ENTIDAD_APORTANTE_ID;
				}

				public Boolean ENTIDAD_APORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTIDAD_APORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTIDAD_APORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTIDAD_APORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTIDAD_APORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTIDAD_APORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTIDAD_APORTANTE_IDOriginalDbColumnName(){
				
					return "ENTIDAD_APORTANTE_ID";
				
				}

				
			    public BigDecimal REGIMEN_LABORAL_ID;

				public BigDecimal getREGIMEN_LABORAL_ID () {
					return this.REGIMEN_LABORAL_ID;
				}

				public Boolean REGIMEN_LABORAL_IDIsNullable(){
				    return true;
				}
				public Boolean REGIMEN_LABORAL_IDIsKey(){
				    return true;
				}
				public Integer REGIMEN_LABORAL_IDLength(){
				    return 0;
				}
				public Integer REGIMEN_LABORAL_IDPrecision(){
				    return null;
				}
				public String REGIMEN_LABORAL_IDDefault(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDComment(){
				
				    return "";
				
				}
				public String REGIMEN_LABORAL_IDPattern(){
				
					return "";
				
				}
				public String REGIMEN_LABORAL_IDOriginalDbColumnName(){
				
					return "REGIMEN_LABORAL_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.ENTIDAD_APORTANTE_ID == null) ? 0 : this.ENTIDAD_APORTANTE_ID.hashCode());
					
						result = prime * result + ((this.REGIMEN_LABORAL_ID == null) ? 0 : this.REGIMEN_LABORAL_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final INGRESO_MENSUALStruct other = (INGRESO_MENSUALStruct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.ENTIDAD_APORTANTE_ID == null) {
							if (other.ENTIDAD_APORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTIDAD_APORTANTE_ID.equals(other.ENTIDAD_APORTANTE_ID))
						
							return false;
					
						if (this.REGIMEN_LABORAL_ID == null) {
							if (other.REGIMEN_LABORAL_ID != null)
								return false;
						
						} else if (!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(INGRESO_MENSUALStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            
	}

	public void copyKeysDataTo(INGRESO_MENSUALStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.ENTIDAD_APORTANTE_ID = this.ENTIDAD_APORTANTE_ID;
	            	other.REGIMEN_LABORAL_ID = this.REGIMEN_LABORAL_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.ENTIDAD_APORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.REGIMEN_LABORAL_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTIDAD_APORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.REGIMEN_LABORAL_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTIDAD_APORTANTE_ID="+String.valueOf(ENTIDAD_APORTANTE_ID));
		sb.append(",REGIMEN_LABORAL_ID="+String.valueOf(REGIMEN_LABORAL_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INGRESO_MENSUALStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTIDAD_APORTANTE_ID, other.ENTIDAD_APORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.REGIMEN_LABORAL_ID, other.REGIMEN_LABORAL_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row74Struct implements routines.system.IPersistableRow<row74Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row74Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_6 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_6> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtAggregateRow_6 other = (OnRowsEndStructtAggregateRow_6) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtAggregateRow_6 other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtAggregateRow_6 other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_6 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row86Struct implements routines.system.IPersistableRow<row86Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row86Struct other = (row86Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row86Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(row86Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row86Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ALL_XYZStruct implements routines.system.IPersistableRow<ALL_XYZStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final ALL_XYZStruct other = (ALL_XYZStruct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(ALL_XYZStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(ALL_XYZStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ALL_XYZStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_11 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_11> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_11 other = (OnRowsEndStructtSortRow_11) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_11 other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_11 other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_11 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row73Struct implements routines.system.IPersistableRow<row73Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row73Struct other = (row73Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row73Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(row73Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row73Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TODOSStruct implements routines.system.IPersistableRow<TODOSStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TODOSStruct other = (TODOSStruct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TODOSStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(TODOSStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TODOSStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ALL_COTIZANTESStruct implements routines.system.IPersistableRow<ALL_COTIZANTESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ALL_COTIZANTESStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class COTIZANTESStruct implements routines.system.IPersistableRow<COTIZANTESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(COTIZANTESStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row67Struct implements routines.system.IPersistableRow<row67Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row67Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_2Struct implements routines.system.IPersistableRow<after_tHashInput_2Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_2Struct other = (after_tHashInput_2Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_2Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            
	}

	public void copyKeysDataTo(after_tHashInput_2Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_35Process(globalMap);
		tOracleInput_36Process(globalMap);
		tOracleInput_41Process(globalMap);
		tHashInput_1Process(globalMap);
		tHashInput_4Process(globalMap);
		tHashInput_5Process(globalMap);
		tHashInput_6Process(globalMap);
		tHashInput_8Process(globalMap);

		row67Struct row67 = new row67Struct();
COTIZANTESStruct COTIZANTES = new COTIZANTESStruct();
ALL_COTIZANTESStruct ALL_COTIZANTES = new ALL_COTIZANTESStruct();
TODOSStruct TODOS = new TODOSStruct();
row73Struct row73 = new row73Struct();
row80Struct row80 = new row80Struct();
ALL_XYZStruct ALL_XYZ = new ALL_XYZStruct();
row86Struct row86 = new row86Struct();
row74Struct row74 = new row74Struct();
INGRESO_MENSUALStruct INGRESO_MENSUAL = new INGRESO_MENSUALStruct();
row76Struct row76 = new row76Struct();
INGRESO_ENTAPORTANTEStruct INGRESO_ENTAPORTANTE = new INGRESO_ENTAPORTANTEStruct();








	
	/**
	 * [tSortRow_11_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_11_SortOut", false);
		start_Hash.put("tSortRow_11_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_11_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row73");
					}
				
		int tos_count_tSortRow_11_SortOut = 0;
		


class Comparablerow73Struct extends row73Struct implements Comparable<Comparablerow73Struct> {
	
	public int compareTo(Comparablerow73Struct other) {

		if(this.ID == null && other.ID != null){
			return -1;
						
		}else if(this.ID != null && other.ID == null){
			return 1;
						
		}else if(this.ID != null && other.ID != null){
			if(!this.ID.equals(other.ID)){
				return this.ID.compareTo(other.ID);
			}
		}
		if(this.ENTAPORTANTES_ID == null && other.ENTAPORTANTES_ID != null){
			return -1;
						
		}else if(this.ENTAPORTANTES_ID != null && other.ENTAPORTANTES_ID == null){
			return 1;
						
		}else if(this.ENTAPORTANTES_ID != null && other.ENTAPORTANTES_ID != null){
			if(!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)){
				return this.ENTAPORTANTES_ID.compareTo(other.ENTAPORTANTES_ID);
			}
		}
		if(this.TVINCULACIONES_ID == null && other.TVINCULACIONES_ID != null){
			return -1;
						
		}else if(this.TVINCULACIONES_ID != null && other.TVINCULACIONES_ID == null){
			return 1;
						
		}else if(this.TVINCULACIONES_ID != null && other.TVINCULACIONES_ID != null){
			if(!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID)){
				return this.TVINCULACIONES_ID.compareTo(other.TVINCULACIONES_ID);
			}
		}
		if(this.TCOTIZACION_ID == null && other.TCOTIZACION_ID != null){
			return -1;
						
		}else if(this.TCOTIZACION_ID != null && other.TCOTIZACION_ID == null){
			return 1;
						
		}else if(this.TCOTIZACION_ID != null && other.TCOTIZACION_ID != null){
			if(!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID)){
				return this.TCOTIZACION_ID.compareTo(other.TCOTIZACION_ID);
			}
		}
		if(this.GRUPO_ETAREO_ID == null && other.GRUPO_ETAREO_ID != null){
			return -1;
						
		}else if(this.GRUPO_ETAREO_ID != null && other.GRUPO_ETAREO_ID == null){
			return 1;
						
		}else if(this.GRUPO_ETAREO_ID != null && other.GRUPO_ETAREO_ID != null){
			if(!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID)){
				return this.GRUPO_ETAREO_ID.compareTo(other.GRUPO_ETAREO_ID);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow73Struct> list_tSortRow_11_SortOut = new java.util.ArrayList<Comparablerow73Struct>();


 



/**
 * [tSortRow_11_SortOut begin ] stop
 */



	
	/**
	 * [tUniqRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_7", false);
		start_Hash.put("tUniqRow_7", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_7");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TODOS");
					}
				
		int tos_count_tUniqRow_7 = 0;
		

	
		class KeyStruct_tUniqRow_7 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal GRUPO_ETAREO_ID;
					String GRUPO_ETAREO;
					BigDecimal ID;
					BigDecimal ENTAPORTANTES_ID;
					BigDecimal TVINCULACIONES_ID;
					BigDecimal TCOTIZACION_ID;
					String PERIODO;
					BigDecimal APORTE_EMPLEADO;
					BigDecimal APORTE_EMPLEADOR;
					BigDecimal CANTIDAD_COTIZANTES;
					BigDecimal CANTIDAD_BENEFICIARIOS;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
								
								result = prime * result + ((this.GRUPO_ETAREO == null) ? 0 : this.GRUPO_ETAREO.hashCode());
								
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
								result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
								
								result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
								
								result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
								
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
								result = prime * result + ((this.APORTE_EMPLEADO == null) ? 0 : this.APORTE_EMPLEADO.hashCode());
								
								result = prime * result + ((this.APORTE_EMPLEADOR == null) ? 0 : this.APORTE_EMPLEADOR.hashCode());
								
								result = prime * result + ((this.CANTIDAD_COTIZANTES == null) ? 0 : this.CANTIDAD_COTIZANTES.hashCode());
								
								result = prime * result + ((this.CANTIDAD_BENEFICIARIOS == null) ? 0 : this.CANTIDAD_BENEFICIARIOS.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_7 other = (KeyStruct_tUniqRow_7) obj;
				
									if (this.GRUPO_ETAREO_ID == null) {
										if (other.GRUPO_ETAREO_ID != null) 
											return false;
								
									} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
								 
										return false;
								
									if (this.GRUPO_ETAREO == null) {
										if (other.GRUPO_ETAREO != null) 
											return false;
								
									} else if (!this.GRUPO_ETAREO.equals(other.GRUPO_ETAREO))
								 
										return false;
								
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
								
									} else if (!this.ID.equals(other.ID))
								 
										return false;
								
									if (this.ENTAPORTANTES_ID == null) {
										if (other.ENTAPORTANTES_ID != null) 
											return false;
								
									} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
								 
										return false;
								
									if (this.TVINCULACIONES_ID == null) {
										if (other.TVINCULACIONES_ID != null) 
											return false;
								
									} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
								 
										return false;
								
									if (this.TCOTIZACION_ID == null) {
										if (other.TCOTIZACION_ID != null) 
											return false;
								
									} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
								 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
									if (this.APORTE_EMPLEADO == null) {
										if (other.APORTE_EMPLEADO != null) 
											return false;
								
									} else if (!this.APORTE_EMPLEADO.equals(other.APORTE_EMPLEADO))
								 
										return false;
								
									if (this.APORTE_EMPLEADOR == null) {
										if (other.APORTE_EMPLEADOR != null) 
											return false;
								
									} else if (!this.APORTE_EMPLEADOR.equals(other.APORTE_EMPLEADOR))
								 
										return false;
								
									if (this.CANTIDAD_COTIZANTES == null) {
										if (other.CANTIDAD_COTIZANTES != null) 
											return false;
								
									} else if (!this.CANTIDAD_COTIZANTES.equals(other.CANTIDAD_COTIZANTES))
								 
										return false;
								
									if (this.CANTIDAD_BENEFICIARIOS == null) {
										if (other.CANTIDAD_BENEFICIARIOS != null) 
											return false;
								
									} else if (!this.CANTIDAD_BENEFICIARIOS.equals(other.CANTIDAD_BENEFICIARIOS))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_7 = 0;
int nb_duplicates_tUniqRow_7 = 0;
KeyStruct_tUniqRow_7 finder_tUniqRow_7 = new KeyStruct_tUniqRow_7();
java.util.Set<KeyStruct_tUniqRow_7> keystUniqRow_7 = new java.util.HashSet<KeyStruct_tUniqRow_7>(); 

 



/**
 * [tUniqRow_7 begin ] stop
 */



	
	/**
	 * [tMap_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_42", false);
		start_Hash.put("tMap_42", System.currentTimeMillis());
		
	
	currentComponent="tMap_42";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ALL_COTIZANTES");
					}
				
		int tos_count_tMap_42 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<ALL_BENEFICIARIOSStruct> tHash_Lookup_ALL_BENEFICIARIOS = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<ALL_BENEFICIARIOSStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<ALL_BENEFICIARIOSStruct>) 
					globalMap.get( "tHash_Lookup_ALL_BENEFICIARIOS" ))
					;					
					
	

ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOSHashKey = new ALL_BENEFICIARIOSStruct();
ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOSDefault = new ALL_BENEFICIARIOSStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_42__Struct  {
}
Var__tMap_42__Struct Var__tMap_42 = new Var__tMap_42__Struct();
// ###############################

// ###############################
// # Outputs initialization
TODOSStruct TODOS_tmp = new TODOSStruct();
// ###############################

        
        



        









 



/**
 * [tMap_42 begin ] stop
 */



	
	/**
	 * [tMap_43 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_43", false);
		start_Hash.put("tMap_43", System.currentTimeMillis());
		
	
	currentComponent="tMap_43";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"COTIZANTES");
					}
				
		int tos_count_tMap_43 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct> tHash_Lookup_row71 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct>) 
					globalMap.get( "tHash_Lookup_row71" ))
					;					
					
	
		tHash_Lookup_row71.initGet();
	

row71Struct row71HashKey = new row71Struct();
row71Struct row71Default = new row71Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_43__Struct  {
}
Var__tMap_43__Struct Var__tMap_43 = new Var__tMap_43__Struct();
// ###############################

// ###############################
// # Outputs initialization
ALL_COTIZANTESStruct ALL_COTIZANTES_tmp = new ALL_COTIZANTESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_43 begin ] stop
 */



	
	/**
	 * [tMap_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_40", false);
		start_Hash.put("tMap_40", System.currentTimeMillis());
		
	
	currentComponent="tMap_40";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row67");
					}
				
		int tos_count_tMap_40 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
					globalMap.get( "tHash_Lookup_row68" ))
					;					
					
	
		tHash_Lookup_row68.initGet();
	

row68Struct row68HashKey = new row68Struct();
row68Struct row68Default = new row68Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_40__Struct  {
}
Var__tMap_40__Struct Var__tMap_40 = new Var__tMap_40__Struct();
// ###############################

// ###############################
// # Outputs initialization
COTIZANTESStruct COTIZANTES_tmp = new COTIZANTESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_40 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tHashInput_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row55Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row55Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row67.GRUPO_ETAREO_ID = next_tHashInput_2.GRUPO_ETAREO_ID;
	row67.GRUPO_ETAREO = next_tHashInput_2.GRUPO_ETAREO;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_40 main ] start
	 */

	

	
	
	currentComponent="tMap_40";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row67"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_40 = false;
		
						row68Struct row68 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_40 = false;
		boolean mainRowRejected_tMap_40 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row68" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow68 = false;
       		  	    	
       		  	    	
 							row68Struct row68ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_40) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row68.lookup( row68HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row68.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow68 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow68 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row68 != null && tHash_Lookup_row68.hasNext()) || forceLooprow68) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row68'
									
                    		  	 
							   
                    		  	 
	       		  	    	row68Struct fromLookup_row68 = null;
							row68 = row68Default;
										 
							
								
								if(!forceLooprow68) { // G 46
								
							
								 
							
								
								fromLookup_row68 = tHash_Lookup_row68.next();

							

							if(fromLookup_row68 != null) {
								row68 = fromLookup_row68;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow68 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_40__Struct Var = Var__tMap_40;// ###############################
        // ###############################
        // # Output tables

COTIZANTES = null;


// # Output table : 'COTIZANTES'
COTIZANTES_tmp.GRUPO_ETAREO_ID = row67.GRUPO_ETAREO_ID ;
COTIZANTES_tmp.GRUPO_ETAREO = row67.GRUPO_ETAREO ;
COTIZANTES_tmp.ID = row68.ID ;
COTIZANTES_tmp.ENTAPORTANTES_ID = row68.ENTAPORTANTES_ID ;
COTIZANTES_tmp.TVINCULACIONES_ID = row68.TVINCULACIONES_ID ;
COTIZANTES_tmp.TCOTIZACION_ID = row68.TCOTIZACION_ID ;
COTIZANTES_tmp.PERIODO = row68.PERIODO == null ? context.PERIODO : row68.PERIODO ;
COTIZANTES_tmp.APORTE_EMPLEADO = row68.APORTE_EMPLEADO ;
COTIZANTES_tmp.APORTE_EMPLEADOR = row68.APORTE_EMPLEADOR ;
COTIZANTES_tmp.CANTIDAD_COTIZANTES = row68.CANTIDAD_COTIZANTES ;
COTIZANTES = COTIZANTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_40 = false;










 


	tos_count_tMap_40++;

/**
 * [tMap_40 main ] stop
 */
	
	/**
	 * [tMap_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_40";
	
	

 



/**
 * [tMap_40 process_data_begin ] stop
 */
// Start of branch "COTIZANTES"
if(COTIZANTES != null) { 



	
	/**
	 * [tMap_43 main ] start
	 */

	

	
	
	currentComponent="tMap_43";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"COTIZANTES"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_43 = false;
		
						row71Struct row71 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_43 = false;
		boolean mainRowRejected_tMap_43 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row71" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow71 = false;
       		  	    	
       		  	    	
 							row71Struct row71ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_43) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row71.lookup( row71HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row71.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow71 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow71 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row71 != null && tHash_Lookup_row71.hasNext()) || forceLooprow71) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row71'
									
                    		  	 
							   
                    		  	 
	       		  	    	row71Struct fromLookup_row71 = null;
							row71 = row71Default;
										 
							
								
								if(!forceLooprow71) { // G 46
								
							
								 
							
								
								fromLookup_row71 = tHash_Lookup_row71.next();

							

							if(fromLookup_row71 != null) {
								row71 = fromLookup_row71;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow71 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_43__Struct Var = Var__tMap_43;// ###############################
        // ###############################
        // # Output tables

ALL_COTIZANTES = null;


// # Output table : 'ALL_COTIZANTES'
ALL_COTIZANTES_tmp.GRUPO_ETAREO_ID = COTIZANTES.GRUPO_ETAREO_ID ;
ALL_COTIZANTES_tmp.GRUPO_ETAREO = COTIZANTES.GRUPO_ETAREO ;
ALL_COTIZANTES_tmp.ID = COTIZANTES.ID == null ? row71.ID : COTIZANTES.ID ;
ALL_COTIZANTES_tmp.ENTAPORTANTES_ID = COTIZANTES.ENTAPORTANTES_ID == null ? row71.ENTAPORTANTES_ID : COTIZANTES.ENTAPORTANTES_ID ;
ALL_COTIZANTES_tmp.TVINCULACIONES_ID = COTIZANTES.TVINCULACIONES_ID == null ? row71.TVINCULACIONES_ID : COTIZANTES.TVINCULACIONES_ID ;
ALL_COTIZANTES_tmp.TCOTIZACION_ID = COTIZANTES.TCOTIZACION_ID == null ? row71.TCOTIZACION_ID : COTIZANTES.TCOTIZACION_ID ;
ALL_COTIZANTES_tmp.PERIODO = COTIZANTES.PERIODO ;
ALL_COTIZANTES_tmp.APORTE_EMPLEADO = COTIZANTES.ID == null ? BigDecimal.ZERO : COTIZANTES.APORTE_EMPLEADO ;
ALL_COTIZANTES_tmp.APORTE_EMPLEADOR = COTIZANTES.ID == null ? BigDecimal.ZERO : COTIZANTES.APORTE_EMPLEADOR ;
ALL_COTIZANTES_tmp.CANTIDAD_COTIZANTES = COTIZANTES.ID == null ? BigDecimal.ZERO : COTIZANTES.CANTIDAD_COTIZANTES ;
ALL_COTIZANTES = ALL_COTIZANTES_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_43 = false;










 


	tos_count_tMap_43++;

/**
 * [tMap_43 main ] stop
 */
	
	/**
	 * [tMap_43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_43";
	
	

 



/**
 * [tMap_43 process_data_begin ] stop
 */
// Start of branch "ALL_COTIZANTES"
if(ALL_COTIZANTES != null) { 



	
	/**
	 * [tMap_42 main ] start
	 */

	

	
	
	currentComponent="tMap_42";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ALL_COTIZANTES"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_42 = false;
		
						ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOS = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_42 = false;
		boolean mainRowRejected_tMap_42 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "ALL_BENEFICIARIOS" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopALL_BENEFICIARIOS = false;
       		  	    	
       		  	    	
 							ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOSObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_42) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_42 = false;
								
                        		    		    ALL_BENEFICIARIOSHashKey.GRUPO_ETAREO_ID = ALL_COTIZANTES.GRUPO_ETAREO_ID ;
                        		    		
                        		    		    ALL_BENEFICIARIOSHashKey.ID = ALL_COTIZANTES.ID ;
                        		    		
                        		    		    ALL_BENEFICIARIOSHashKey.ENTAPORTANTES_ID = ALL_COTIZANTES.ENTAPORTANTES_ID ;
                        		    		
                        		    		    ALL_BENEFICIARIOSHashKey.TVINCULACIONES_ID = ALL_COTIZANTES.TVINCULACIONES_ID ;
                        		    		
                        		    		    ALL_BENEFICIARIOSHashKey.TCOTIZACION_ID = ALL_COTIZANTES.TCOTIZACION_ID ;
                        		    		
                        		    		    ALL_BENEFICIARIOSHashKey.PERIODO = ALL_COTIZANTES.PERIODO ;
                        		    		

								
		                        	ALL_BENEFICIARIOSHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_ALL_BENEFICIARIOS.lookup( ALL_BENEFICIARIOSHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_ALL_BENEFICIARIOS != null && tHash_Lookup_ALL_BENEFICIARIOS.getCount(ALL_BENEFICIARIOSHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'ALL_BENEFICIARIOS' and it contains more one result from keys :  ALL_BENEFICIARIOS.GRUPO_ETAREO_ID = '" + ALL_BENEFICIARIOSHashKey.GRUPO_ETAREO_ID + "', ALL_BENEFICIARIOS.ID = '" + ALL_BENEFICIARIOSHashKey.ID + "', ALL_BENEFICIARIOS.ENTAPORTANTES_ID = '" + ALL_BENEFICIARIOSHashKey.ENTAPORTANTES_ID + "', ALL_BENEFICIARIOS.TVINCULACIONES_ID = '" + ALL_BENEFICIARIOSHashKey.TVINCULACIONES_ID + "', ALL_BENEFICIARIOS.TCOTIZACION_ID = '" + ALL_BENEFICIARIOSHashKey.TCOTIZACION_ID + "', ALL_BENEFICIARIOS.PERIODO = '" + ALL_BENEFICIARIOSHashKey.PERIODO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	ALL_BENEFICIARIOSStruct fromLookup_ALL_BENEFICIARIOS = null;
							ALL_BENEFICIARIOS = ALL_BENEFICIARIOSDefault;
										 
							
								 
							
							
								if (tHash_Lookup_ALL_BENEFICIARIOS !=null && tHash_Lookup_ALL_BENEFICIARIOS.hasNext()) { // G 099
								
							
								
								fromLookup_ALL_BENEFICIARIOS = tHash_Lookup_ALL_BENEFICIARIOS.next();

							
							
								} // G 099
							
							

							if(fromLookup_ALL_BENEFICIARIOS != null) {
								ALL_BENEFICIARIOS = fromLookup_ALL_BENEFICIARIOS;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_42__Struct Var = Var__tMap_42;// ###############################
        // ###############################
        // # Output tables

TODOS = null;


// # Output table : 'TODOS'
TODOS_tmp.GRUPO_ETAREO_ID = ALL_COTIZANTES.GRUPO_ETAREO_ID ;
TODOS_tmp.GRUPO_ETAREO = ALL_COTIZANTES.GRUPO_ETAREO ;
TODOS_tmp.ID = ALL_COTIZANTES.ID ;
TODOS_tmp.ENTAPORTANTES_ID = ALL_COTIZANTES.ENTAPORTANTES_ID ;
TODOS_tmp.TVINCULACIONES_ID = ALL_COTIZANTES.TVINCULACIONES_ID ;
TODOS_tmp.TCOTIZACION_ID = ALL_COTIZANTES.TCOTIZACION_ID ;
TODOS_tmp.PERIODO = ALL_COTIZANTES.PERIODO ;
TODOS_tmp.APORTE_EMPLEADO = ALL_COTIZANTES.APORTE_EMPLEADO ;
TODOS_tmp.APORTE_EMPLEADOR = ALL_COTIZANTES.APORTE_EMPLEADOR ;
TODOS_tmp.CANTIDAD_COTIZANTES = ALL_COTIZANTES.CANTIDAD_COTIZANTES ;
TODOS_tmp.CANTIDAD_BENEFICIARIOS = ALL_BENEFICIARIOS.CANTIDAD_BENEFICIARIOS == null ? BigDecimal.ZERO : ALL_BENEFICIARIOS.CANTIDAD_BENEFICIARIOS ;
TODOS = TODOS_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_42 = false;










 


	tos_count_tMap_42++;

/**
 * [tMap_42 main ] stop
 */
	
	/**
	 * [tMap_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_42";
	
	

 



/**
 * [tMap_42 process_data_begin ] stop
 */
// Start of branch "TODOS"
if(TODOS != null) { 



	
	/**
	 * [tUniqRow_7 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TODOS"
						
						);
					}
					
row73 = null;			
finder_tUniqRow_7.GRUPO_ETAREO_ID = TODOS.GRUPO_ETAREO_ID;
if(TODOS.GRUPO_ETAREO == null){
	finder_tUniqRow_7.GRUPO_ETAREO = null;
}else{
	finder_tUniqRow_7.GRUPO_ETAREO = TODOS.GRUPO_ETAREO.toLowerCase();
}
finder_tUniqRow_7.ID = TODOS.ID;
finder_tUniqRow_7.ENTAPORTANTES_ID = TODOS.ENTAPORTANTES_ID;
finder_tUniqRow_7.TVINCULACIONES_ID = TODOS.TVINCULACIONES_ID;
finder_tUniqRow_7.TCOTIZACION_ID = TODOS.TCOTIZACION_ID;
if(TODOS.PERIODO == null){
	finder_tUniqRow_7.PERIODO = null;
}else{
	finder_tUniqRow_7.PERIODO = TODOS.PERIODO.toLowerCase();
}
finder_tUniqRow_7.APORTE_EMPLEADO = TODOS.APORTE_EMPLEADO;
finder_tUniqRow_7.APORTE_EMPLEADOR = TODOS.APORTE_EMPLEADOR;
finder_tUniqRow_7.CANTIDAD_COTIZANTES = TODOS.CANTIDAD_COTIZANTES;
finder_tUniqRow_7.CANTIDAD_BENEFICIARIOS = TODOS.CANTIDAD_BENEFICIARIOS;	
finder_tUniqRow_7.hashCodeDirty = true;
if (!keystUniqRow_7.contains(finder_tUniqRow_7)) {
		KeyStruct_tUniqRow_7 new_tUniqRow_7 = new KeyStruct_tUniqRow_7();

		
new_tUniqRow_7.GRUPO_ETAREO_ID = TODOS.GRUPO_ETAREO_ID;
if(TODOS.GRUPO_ETAREO == null){
	new_tUniqRow_7.GRUPO_ETAREO = null;
}else{
	new_tUniqRow_7.GRUPO_ETAREO = TODOS.GRUPO_ETAREO.toLowerCase();
}
new_tUniqRow_7.ID = TODOS.ID;
new_tUniqRow_7.ENTAPORTANTES_ID = TODOS.ENTAPORTANTES_ID;
new_tUniqRow_7.TVINCULACIONES_ID = TODOS.TVINCULACIONES_ID;
new_tUniqRow_7.TCOTIZACION_ID = TODOS.TCOTIZACION_ID;
if(TODOS.PERIODO == null){
	new_tUniqRow_7.PERIODO = null;
}else{
	new_tUniqRow_7.PERIODO = TODOS.PERIODO.toLowerCase();
}
new_tUniqRow_7.APORTE_EMPLEADO = TODOS.APORTE_EMPLEADO;
new_tUniqRow_7.APORTE_EMPLEADOR = TODOS.APORTE_EMPLEADOR;
new_tUniqRow_7.CANTIDAD_COTIZANTES = TODOS.CANTIDAD_COTIZANTES;
new_tUniqRow_7.CANTIDAD_BENEFICIARIOS = TODOS.CANTIDAD_BENEFICIARIOS;
		
		keystUniqRow_7.add(new_tUniqRow_7);if(row73 == null){ 
	
	row73 = new row73Struct();
}row73.GRUPO_ETAREO_ID = TODOS.GRUPO_ETAREO_ID;			row73.GRUPO_ETAREO = TODOS.GRUPO_ETAREO;			row73.ID = TODOS.ID;			row73.ENTAPORTANTES_ID = TODOS.ENTAPORTANTES_ID;			row73.TVINCULACIONES_ID = TODOS.TVINCULACIONES_ID;			row73.TCOTIZACION_ID = TODOS.TCOTIZACION_ID;			row73.PERIODO = TODOS.PERIODO;			row73.APORTE_EMPLEADO = TODOS.APORTE_EMPLEADO;			row73.APORTE_EMPLEADOR = TODOS.APORTE_EMPLEADOR;			row73.CANTIDAD_COTIZANTES = TODOS.CANTIDAD_COTIZANTES;			row73.CANTIDAD_BENEFICIARIOS = TODOS.CANTIDAD_BENEFICIARIOS;					
		nb_uniques_tUniqRow_7++;
	} else {
	  nb_duplicates_tUniqRow_7++;
	}

 


	tos_count_tUniqRow_7++;

/**
 * [tUniqRow_7 main ] stop
 */
	
	/**
	 * [tUniqRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";
	
	

 



/**
 * [tUniqRow_7 process_data_begin ] stop
 */
// Start of branch "row73"
if(row73 != null) { 



	
	/**
	 * [tSortRow_11_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row73"
						
						);
					}
					



	Comparablerow73Struct arrayRowtSortRow_11_SortOut = new Comparablerow73Struct();

	arrayRowtSortRow_11_SortOut.GRUPO_ETAREO_ID = row73.GRUPO_ETAREO_ID;
	arrayRowtSortRow_11_SortOut.GRUPO_ETAREO = row73.GRUPO_ETAREO;
	arrayRowtSortRow_11_SortOut.ID = row73.ID;
	arrayRowtSortRow_11_SortOut.ENTAPORTANTES_ID = row73.ENTAPORTANTES_ID;
	arrayRowtSortRow_11_SortOut.TVINCULACIONES_ID = row73.TVINCULACIONES_ID;
	arrayRowtSortRow_11_SortOut.TCOTIZACION_ID = row73.TCOTIZACION_ID;
	arrayRowtSortRow_11_SortOut.PERIODO = row73.PERIODO;
	arrayRowtSortRow_11_SortOut.APORTE_EMPLEADO = row73.APORTE_EMPLEADO;
	arrayRowtSortRow_11_SortOut.APORTE_EMPLEADOR = row73.APORTE_EMPLEADOR;
	arrayRowtSortRow_11_SortOut.CANTIDAD_COTIZANTES = row73.CANTIDAD_COTIZANTES;
	arrayRowtSortRow_11_SortOut.CANTIDAD_BENEFICIARIOS = row73.CANTIDAD_BENEFICIARIOS;	
	list_tSortRow_11_SortOut.add(arrayRowtSortRow_11_SortOut);

 


	tos_count_tSortRow_11_SortOut++;

/**
 * [tSortRow_11_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_11_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	

 



/**
 * [tSortRow_11_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_11_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	

 



/**
 * [tSortRow_11_SortOut process_data_end ] stop
 */

} // End of branch "row73"




	
	/**
	 * [tUniqRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";
	
	

 



/**
 * [tUniqRow_7 process_data_end ] stop
 */

} // End of branch "TODOS"




	
	/**
	 * [tMap_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_42";
	
	

 



/**
 * [tMap_42 process_data_end ] stop
 */

} // End of branch "ALL_COTIZANTES"



	
		} // close loop of lookup 'row71' // G_TM_M_043
	
	
	/**
	 * [tMap_43 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_43";
	
	

 



/**
 * [tMap_43 process_data_end ] stop
 */

} // End of branch "COTIZANTES"



	
		} // close loop of lookup 'row68' // G_TM_M_043
	
	
	/**
	 * [tMap_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_40";
	
	

 



/**
 * [tMap_40 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tHashInput_2", end_Hash.get("tHashInput_2")-start_Hash.get("tHashInput_2"));
tStatCatcher_1Process(globalMap);



/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tMap_40 end ] start
	 */

	

	
	
	currentComponent="tMap_40";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row68 != null) {
						tHash_Lookup_row68.endGet();
					}
					globalMap.remove( "tHash_Lookup_row68" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row67");
			  	}
			  	
 

ok_Hash.put("tMap_40", true);
end_Hash.put("tMap_40", System.currentTimeMillis());




/**
 * [tMap_40 end ] stop
 */

	
	/**
	 * [tMap_43 end ] start
	 */

	

	
	
	currentComponent="tMap_43";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row71 != null) {
						tHash_Lookup_row71.endGet();
					}
					globalMap.remove( "tHash_Lookup_row71" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"COTIZANTES");
			  	}
			  	
 

ok_Hash.put("tMap_43", true);
end_Hash.put("tMap_43", System.currentTimeMillis());




/**
 * [tMap_43 end ] stop
 */

	
	/**
	 * [tMap_42 end ] start
	 */

	

	
	
	currentComponent="tMap_42";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_ALL_BENEFICIARIOS != null) {
						tHash_Lookup_ALL_BENEFICIARIOS.endGet();
					}
					globalMap.remove( "tHash_Lookup_ALL_BENEFICIARIOS" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ALL_COTIZANTES");
			  	}
			  	
 

ok_Hash.put("tMap_42", true);
end_Hash.put("tMap_42", System.currentTimeMillis());




/**
 * [tMap_42 end ] stop
 */

	
	/**
	 * [tUniqRow_7 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";
	
	

globalMap.put("tUniqRow_7_NB_UNIQUES",nb_uniques_tUniqRow_7);
globalMap.put("tUniqRow_7_NB_DUPLICATES",nb_duplicates_tUniqRow_7);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TODOS");
			  	}
			  	
 

ok_Hash.put("tUniqRow_7", true);
end_Hash.put("tUniqRow_7", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_7", end_Hash.get("tUniqRow_7")-start_Hash.get("tUniqRow_7"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_7 end ] stop
 */

	
	/**
	 * [tSortRow_11_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	

row73Struct[] array_tSortRow_11_SortOut = list_tSortRow_11_SortOut.toArray(new Comparablerow73Struct[0]);

java.util.Arrays.sort(array_tSortRow_11_SortOut);

globalMap.put("tSortRow_11",array_tSortRow_11_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row73");
			  	}
			  	
 

ok_Hash.put("tSortRow_11_SortOut", true);
end_Hash.put("tSortRow_11_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_11_SortOut", end_Hash.get("tSortRow_11_SortOut")-start_Hash.get("tSortRow_11_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_11_SortOut end ] stop
 */




	
	/**
	 * [tAggregateRow_6_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGOUT", false);
		start_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row86");
					}
				
		int tos_count_tAggregateRow_6_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_6 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_6 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_6 utilClass_tAggregateRow_6 = new UtilClass_tAggregateRow_6();

	

	class AggOperationStruct_tAggregateRow_6 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal GRUPO_ETAREO_ID;
    				String GRUPO_ETAREO;
    				BigDecimal ID;
    				BigDecimal ENTAPORTANTES_ID;
    				BigDecimal TVINCULACIONES_ID;
    				BigDecimal TCOTIZACION_ID;
    				String PERIODO;BigDecimal APORTE_EMPLEADO_sum;
           			BigDecimal APORTE_EMPLEADOR_sum;
           			BigDecimal CANTIDAD_COTIZANTES_sum;
           			BigDecimal CANTIDAD_BENEFICIARIOS_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
							
							result = prime * result + ((this.GRUPO_ETAREO == null) ? 0 : this.GRUPO_ETAREO.hashCode());
							
							result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
							
							result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
							
							result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
							
							result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
							
							result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_6 other = (AggOperationStruct_tAggregateRow_6) obj;
			
							if (this.GRUPO_ETAREO_ID == null) {
								if (other.GRUPO_ETAREO_ID != null) 
									return false;
							} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID)) 
								return false;
						
							if (this.GRUPO_ETAREO == null) {
								if (other.GRUPO_ETAREO != null) 
									return false;
							} else if (!this.GRUPO_ETAREO.equals(other.GRUPO_ETAREO)) 
								return false;
						
							if (this.ID == null) {
								if (other.ID != null) 
									return false;
							} else if (!this.ID.equals(other.ID)) 
								return false;
						
							if (this.ENTAPORTANTES_ID == null) {
								if (other.ENTAPORTANTES_ID != null) 
									return false;
							} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)) 
								return false;
						
							if (this.TVINCULACIONES_ID == null) {
								if (other.TVINCULACIONES_ID != null) 
									return false;
							} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID)) 
								return false;
						
							if (this.TCOTIZACION_ID == null) {
								if (other.TCOTIZACION_ID != null) 
									return false;
							} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID)) 
								return false;
						
							if (this.PERIODO == null) {
								if (other.PERIODO != null) 
									return false;
							} else if (!this.PERIODO.equals(other.PERIODO)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_6 operation_result_tAggregateRow_6 = null;
	AggOperationStruct_tAggregateRow_6 operation_finder_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();
	java.util.Map<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6> hash_tAggregateRow_6 = new java.util.HashMap<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6>();
	

 



/**
 * [tAggregateRow_6_AGGOUT begin ] stop
 */



	
	/**
	 * [tUniqRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_8", false);
		start_Hash.put("tUniqRow_8", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_8");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ALL_XYZ");
					}
				
		int tos_count_tUniqRow_8 = 0;
		

	
		class KeyStruct_tUniqRow_8 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal GRUPO_ETAREO_ID;
					String GRUPO_ETAREO;
					BigDecimal ID;
					BigDecimal ENTAPORTANTES_ID;
					BigDecimal TVINCULACIONES_ID;
					BigDecimal TCOTIZACION_ID;
					String PERIODO;
					BigDecimal APORTE_EMPLEADO;
					BigDecimal APORTE_EMPLEADOR;
					BigDecimal CANTIDAD_COTIZANTES;
					BigDecimal CANTIDAD_BENEFICIARIOS;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
								
								result = prime * result + ((this.GRUPO_ETAREO == null) ? 0 : this.GRUPO_ETAREO.hashCode());
								
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
								result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
								
								result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
								
								result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
								
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
								result = prime * result + ((this.APORTE_EMPLEADO == null) ? 0 : this.APORTE_EMPLEADO.hashCode());
								
								result = prime * result + ((this.APORTE_EMPLEADOR == null) ? 0 : this.APORTE_EMPLEADOR.hashCode());
								
								result = prime * result + ((this.CANTIDAD_COTIZANTES == null) ? 0 : this.CANTIDAD_COTIZANTES.hashCode());
								
								result = prime * result + ((this.CANTIDAD_BENEFICIARIOS == null) ? 0 : this.CANTIDAD_BENEFICIARIOS.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_8 other = (KeyStruct_tUniqRow_8) obj;
				
									if (this.GRUPO_ETAREO_ID == null) {
										if (other.GRUPO_ETAREO_ID != null) 
											return false;
								
									} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
								 
										return false;
								
									if (this.GRUPO_ETAREO == null) {
										if (other.GRUPO_ETAREO != null) 
											return false;
								
									} else if (!this.GRUPO_ETAREO.equals(other.GRUPO_ETAREO))
								 
										return false;
								
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
								
									} else if (!this.ID.equals(other.ID))
								 
										return false;
								
									if (this.ENTAPORTANTES_ID == null) {
										if (other.ENTAPORTANTES_ID != null) 
											return false;
								
									} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
								 
										return false;
								
									if (this.TVINCULACIONES_ID == null) {
										if (other.TVINCULACIONES_ID != null) 
											return false;
								
									} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
								 
										return false;
								
									if (this.TCOTIZACION_ID == null) {
										if (other.TCOTIZACION_ID != null) 
											return false;
								
									} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
								 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
									if (this.APORTE_EMPLEADO == null) {
										if (other.APORTE_EMPLEADO != null) 
											return false;
								
									} else if (!this.APORTE_EMPLEADO.equals(other.APORTE_EMPLEADO))
								 
										return false;
								
									if (this.APORTE_EMPLEADOR == null) {
										if (other.APORTE_EMPLEADOR != null) 
											return false;
								
									} else if (!this.APORTE_EMPLEADOR.equals(other.APORTE_EMPLEADOR))
								 
										return false;
								
									if (this.CANTIDAD_COTIZANTES == null) {
										if (other.CANTIDAD_COTIZANTES != null) 
											return false;
								
									} else if (!this.CANTIDAD_COTIZANTES.equals(other.CANTIDAD_COTIZANTES))
								 
										return false;
								
									if (this.CANTIDAD_BENEFICIARIOS == null) {
										if (other.CANTIDAD_BENEFICIARIOS != null) 
											return false;
								
									} else if (!this.CANTIDAD_BENEFICIARIOS.equals(other.CANTIDAD_BENEFICIARIOS))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_8 = 0;
int nb_duplicates_tUniqRow_8 = 0;
KeyStruct_tUniqRow_8 finder_tUniqRow_8 = new KeyStruct_tUniqRow_8();
java.util.Set<KeyStruct_tUniqRow_8> keystUniqRow_8 = new java.util.HashSet<KeyStruct_tUniqRow_8>(); 

 



/**
 * [tUniqRow_8 begin ] stop
 */



	
	/**
	 * [tMap_46 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_46", false);
		start_Hash.put("tMap_46", System.currentTimeMillis());
		
	
	currentComponent="tMap_46";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tMap_46 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct> tHash_Lookup_row84 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct>) 
					globalMap.get( "tHash_Lookup_row84" ))
					;					
					
	

row84Struct row84HashKey = new row84Struct();
row84Struct row84Default = new row84Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
					globalMap.get( "tHash_Lookup_row85" ))
					;					
					
	

row85Struct row85HashKey = new row85Struct();
row85Struct row85Default = new row85Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_46__Struct  {
}
Var__tMap_46__Struct Var__tMap_46 = new Var__tMap_46__Struct();
// ###############################

// ###############################
// # Outputs initialization
ALL_XYZStruct ALL_XYZ_tmp = new ALL_XYZStruct();
// ###############################

        
        



        









 



/**
 * [tMap_46 begin ] stop
 */



	
	/**
	 * [tSortRow_11_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_11_SortIn", false);
		start_Hash.put("tSortRow_11_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_11_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	
		int tos_count_tSortRow_11_SortIn = 0;
		


row73Struct[] array_tSortRow_11_SortIn = (row73Struct[]) globalMap.remove("tSortRow_11");

int nb_line_tSortRow_11_SortIn = 0;

row73Struct current_tSortRow_11_SortIn = null;

for(int i_tSortRow_11_SortIn = 0; i_tSortRow_11_SortIn < array_tSortRow_11_SortIn.length; i_tSortRow_11_SortIn++){
	current_tSortRow_11_SortIn = array_tSortRow_11_SortIn[i_tSortRow_11_SortIn];
	row80.GRUPO_ETAREO_ID = current_tSortRow_11_SortIn.GRUPO_ETAREO_ID;
	row80.GRUPO_ETAREO = current_tSortRow_11_SortIn.GRUPO_ETAREO;
	row80.ID = current_tSortRow_11_SortIn.ID;
	row80.ENTAPORTANTES_ID = current_tSortRow_11_SortIn.ENTAPORTANTES_ID;
	row80.TVINCULACIONES_ID = current_tSortRow_11_SortIn.TVINCULACIONES_ID;
	row80.TCOTIZACION_ID = current_tSortRow_11_SortIn.TCOTIZACION_ID;
	row80.PERIODO = current_tSortRow_11_SortIn.PERIODO;
	row80.APORTE_EMPLEADO = current_tSortRow_11_SortIn.APORTE_EMPLEADO;
	row80.APORTE_EMPLEADOR = current_tSortRow_11_SortIn.APORTE_EMPLEADOR;
	row80.CANTIDAD_COTIZANTES = current_tSortRow_11_SortIn.CANTIDAD_COTIZANTES;
	row80.CANTIDAD_BENEFICIARIOS = current_tSortRow_11_SortIn.CANTIDAD_BENEFICIARIOS;
	// increase number of line sorted
	nb_line_tSortRow_11_SortIn++;

 



/**
 * [tSortRow_11_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_11_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	

 


	tos_count_tSortRow_11_SortIn++;

/**
 * [tSortRow_11_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_11_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	

 



/**
 * [tSortRow_11_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tMap_46 main ] start
	 */

	

	
	
	currentComponent="tMap_46";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_46 = false;
		
						row84Struct row84 = null;
					
						row85Struct row85 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_46 = false;
		boolean mainRowRejected_tMap_46 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row84" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow84 = false;
       		  	    	
       		  	    	
 							row84Struct row84ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_46) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_46 = false;
								
                        		    		    row84HashKey.GRUPO_ETAREO_ID = row80.GRUPO_ETAREO_ID ;
                        		    		
                        		    		    row84HashKey.ID = row80.ID ;
                        		    		
                        		    		    row84HashKey.ENTAPORTANTES_ID = row80.ENTAPORTANTES_ID ;
                        		    		
                        		    		    row84HashKey.TVINCULACIONES_ID = row80.TVINCULACIONES_ID ;
                        		    		
                        		    		    row84HashKey.TCOTIZACION_ID = row80.TCOTIZACION_ID ;
                        		    		
                        		    		    row84HashKey.PERIODO = row80.PERIODO ;
                        		    		

								
		                        	row84HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row84.lookup( row84HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row84.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow84 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow84 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row84 != null && tHash_Lookup_row84.hasNext()) || forceLooprow84) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row84'
									
                    		  	 
							   
                    		  	 
	       		  	    	row84Struct fromLookup_row84 = null;
							row84 = row84Default;
										 
							
								
								if(!forceLooprow84) { // G 46
								
							
								 
							
								
								fromLookup_row84 = tHash_Lookup_row84.next();

							

							if(fromLookup_row84 != null) {
								row84 = fromLookup_row84;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow84 = false;
									 	
							
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row85" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow85 = false;
       		  	    	
       		  	    	
 							row85Struct row85ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_46) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_46 = false;
								
                        		    		    row85HashKey.GRUPO_ETAREO_ID = row80.GRUPO_ETAREO_ID ;
                        		    		
                        		    		    row85HashKey.ID = row80.ID ;
                        		    		
                        		    		    row85HashKey.ENTAPORTANTES_ID = row80.ENTAPORTANTES_ID ;
                        		    		
                        		    		    row85HashKey.TVINCULACIONES_ID = row80.TVINCULACIONES_ID ;
                        		    		
                        		    		    row85HashKey.TCOTIZACION_ID = row80.TCOTIZACION_ID ;
                        		    		
                        		    		    row85HashKey.PERIODO = row80.PERIODO ;
                        		    		

								
		                        	row85HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row85.lookup( row85HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row85.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow85 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow85 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row85 != null && tHash_Lookup_row85.hasNext()) || forceLooprow85) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row85'
									
                    		  	 
							   
                    		  	 
	       		  	    	row85Struct fromLookup_row85 = null;
							row85 = row85Default;
										 
							
								
								if(!forceLooprow85) { // G 46
								
							
								 
							
								
								fromLookup_row85 = tHash_Lookup_row85.next();

							

							if(fromLookup_row85 != null) {
								row85 = fromLookup_row85;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow85 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_46__Struct Var = Var__tMap_46;// ###############################
        // ###############################
        // # Output tables

ALL_XYZ = null;


// # Output table : 'ALL_XYZ'
ALL_XYZ_tmp.GRUPO_ETAREO_ID = row80.GRUPO_ETAREO_ID ;
ALL_XYZ_tmp.GRUPO_ETAREO = row80.GRUPO_ETAREO ;
ALL_XYZ_tmp.ID = row80.ID ;
ALL_XYZ_tmp.ENTAPORTANTES_ID = row80.ENTAPORTANTES_ID ;
ALL_XYZ_tmp.TVINCULACIONES_ID = row80.TVINCULACIONES_ID ;
ALL_XYZ_tmp.TCOTIZACION_ID = row80.TCOTIZACION_ID ;
ALL_XYZ_tmp.PERIODO = row80.PERIODO ;
ALL_XYZ_tmp.APORTE_EMPLEADO = row84 == null ? BigDecimal.ZERO : row84.APORTE_EMPLEADO == null ? BigDecimal.ZERO : row84.APORTE_EMPLEADO ;
ALL_XYZ_tmp.APORTE_EMPLEADOR = row84 == null ? BigDecimal.ZERO : row84.APORTE_EMPLEADOR == null ? BigDecimal.ZERO : row84.APORTE_EMPLEADOR ;
ALL_XYZ_tmp.CANTIDAD_COTIZANTES = row84 == null ? BigDecimal.ZERO : row84.CANTIDAD_COTIZANTES == null ? BigDecimal.ZERO : row84.CANTIDAD_COTIZANTES ;
ALL_XYZ_tmp.CANTIDAD_BENEFICIARIOS = row85 == null ? BigDecimal.ZERO : row85.CANTIDAD_BENEFICIARIOS == null ? BigDecimal.ZERO : row85.CANTIDAD_BENEFICIARIOS ;
ALL_XYZ = ALL_XYZ_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_46 = false;










 


	tos_count_tMap_46++;

/**
 * [tMap_46 main ] stop
 */
	
	/**
	 * [tMap_46 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_46";
	
	

 



/**
 * [tMap_46 process_data_begin ] stop
 */
// Start of branch "ALL_XYZ"
if(ALL_XYZ != null) { 



	
	/**
	 * [tUniqRow_8 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ALL_XYZ"
						
						);
					}
					
row86 = null;			
finder_tUniqRow_8.GRUPO_ETAREO_ID = ALL_XYZ.GRUPO_ETAREO_ID;
if(ALL_XYZ.GRUPO_ETAREO == null){
	finder_tUniqRow_8.GRUPO_ETAREO = null;
}else{
	finder_tUniqRow_8.GRUPO_ETAREO = ALL_XYZ.GRUPO_ETAREO.toLowerCase();
}
finder_tUniqRow_8.ID = ALL_XYZ.ID;
finder_tUniqRow_8.ENTAPORTANTES_ID = ALL_XYZ.ENTAPORTANTES_ID;
finder_tUniqRow_8.TVINCULACIONES_ID = ALL_XYZ.TVINCULACIONES_ID;
finder_tUniqRow_8.TCOTIZACION_ID = ALL_XYZ.TCOTIZACION_ID;
if(ALL_XYZ.PERIODO == null){
	finder_tUniqRow_8.PERIODO = null;
}else{
	finder_tUniqRow_8.PERIODO = ALL_XYZ.PERIODO.toLowerCase();
}
finder_tUniqRow_8.APORTE_EMPLEADO = ALL_XYZ.APORTE_EMPLEADO;
finder_tUniqRow_8.APORTE_EMPLEADOR = ALL_XYZ.APORTE_EMPLEADOR;
finder_tUniqRow_8.CANTIDAD_COTIZANTES = ALL_XYZ.CANTIDAD_COTIZANTES;
finder_tUniqRow_8.CANTIDAD_BENEFICIARIOS = ALL_XYZ.CANTIDAD_BENEFICIARIOS;	
finder_tUniqRow_8.hashCodeDirty = true;
if (!keystUniqRow_8.contains(finder_tUniqRow_8)) {
		KeyStruct_tUniqRow_8 new_tUniqRow_8 = new KeyStruct_tUniqRow_8();

		
new_tUniqRow_8.GRUPO_ETAREO_ID = ALL_XYZ.GRUPO_ETAREO_ID;
if(ALL_XYZ.GRUPO_ETAREO == null){
	new_tUniqRow_8.GRUPO_ETAREO = null;
}else{
	new_tUniqRow_8.GRUPO_ETAREO = ALL_XYZ.GRUPO_ETAREO.toLowerCase();
}
new_tUniqRow_8.ID = ALL_XYZ.ID;
new_tUniqRow_8.ENTAPORTANTES_ID = ALL_XYZ.ENTAPORTANTES_ID;
new_tUniqRow_8.TVINCULACIONES_ID = ALL_XYZ.TVINCULACIONES_ID;
new_tUniqRow_8.TCOTIZACION_ID = ALL_XYZ.TCOTIZACION_ID;
if(ALL_XYZ.PERIODO == null){
	new_tUniqRow_8.PERIODO = null;
}else{
	new_tUniqRow_8.PERIODO = ALL_XYZ.PERIODO.toLowerCase();
}
new_tUniqRow_8.APORTE_EMPLEADO = ALL_XYZ.APORTE_EMPLEADO;
new_tUniqRow_8.APORTE_EMPLEADOR = ALL_XYZ.APORTE_EMPLEADOR;
new_tUniqRow_8.CANTIDAD_COTIZANTES = ALL_XYZ.CANTIDAD_COTIZANTES;
new_tUniqRow_8.CANTIDAD_BENEFICIARIOS = ALL_XYZ.CANTIDAD_BENEFICIARIOS;
		
		keystUniqRow_8.add(new_tUniqRow_8);if(row86 == null){ 
	
	row86 = new row86Struct();
}row86.GRUPO_ETAREO_ID = ALL_XYZ.GRUPO_ETAREO_ID;			row86.GRUPO_ETAREO = ALL_XYZ.GRUPO_ETAREO;			row86.ID = ALL_XYZ.ID;			row86.ENTAPORTANTES_ID = ALL_XYZ.ENTAPORTANTES_ID;			row86.TVINCULACIONES_ID = ALL_XYZ.TVINCULACIONES_ID;			row86.TCOTIZACION_ID = ALL_XYZ.TCOTIZACION_ID;			row86.PERIODO = ALL_XYZ.PERIODO;			row86.APORTE_EMPLEADO = ALL_XYZ.APORTE_EMPLEADO;			row86.APORTE_EMPLEADOR = ALL_XYZ.APORTE_EMPLEADOR;			row86.CANTIDAD_COTIZANTES = ALL_XYZ.CANTIDAD_COTIZANTES;			row86.CANTIDAD_BENEFICIARIOS = ALL_XYZ.CANTIDAD_BENEFICIARIOS;					
		nb_uniques_tUniqRow_8++;
	} else {
	  nb_duplicates_tUniqRow_8++;
	}

 


	tos_count_tUniqRow_8++;

/**
 * [tUniqRow_8 main ] stop
 */
	
	/**
	 * [tUniqRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_8";
	
	

 



/**
 * [tUniqRow_8 process_data_begin ] stop
 */
// Start of branch "row86"
if(row86 != null) { 



	
	/**
	 * [tAggregateRow_6_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row86"
						
						);
					}
					
	
operation_finder_tAggregateRow_6.GRUPO_ETAREO_ID = row86.GRUPO_ETAREO_ID;
			operation_finder_tAggregateRow_6.GRUPO_ETAREO = row86.GRUPO_ETAREO;
			operation_finder_tAggregateRow_6.ID = row86.ID;
			operation_finder_tAggregateRow_6.ENTAPORTANTES_ID = row86.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_6.TVINCULACIONES_ID = row86.TVINCULACIONES_ID;
			operation_finder_tAggregateRow_6.TCOTIZACION_ID = row86.TCOTIZACION_ID;
			operation_finder_tAggregateRow_6.PERIODO = row86.PERIODO;
			

	operation_finder_tAggregateRow_6.hashCodeDirty = true;
	
	operation_result_tAggregateRow_6 = hash_tAggregateRow_6.get(operation_finder_tAggregateRow_6);

	

	if(operation_result_tAggregateRow_6 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();

		operation_result_tAggregateRow_6.GRUPO_ETAREO_ID = operation_finder_tAggregateRow_6.GRUPO_ETAREO_ID;
				operation_result_tAggregateRow_6.GRUPO_ETAREO = operation_finder_tAggregateRow_6.GRUPO_ETAREO;
				operation_result_tAggregateRow_6.ID = operation_finder_tAggregateRow_6.ID;
				operation_result_tAggregateRow_6.ENTAPORTANTES_ID = operation_finder_tAggregateRow_6.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_6.TVINCULACIONES_ID = operation_finder_tAggregateRow_6.TVINCULACIONES_ID;
				operation_result_tAggregateRow_6.TCOTIZACION_ID = operation_finder_tAggregateRow_6.TCOTIZACION_ID;
				operation_result_tAggregateRow_6.PERIODO = operation_finder_tAggregateRow_6.PERIODO;
				
		
		

		hash_tAggregateRow_6.put(operation_result_tAggregateRow_6, operation_result_tAggregateRow_6);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_6.APORTE_EMPLEADO_sum == null) {
						operation_result_tAggregateRow_6.APORTE_EMPLEADO_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_6.APORTE_EMPLEADO_sum = operation_result_tAggregateRow_6.APORTE_EMPLEADO_sum.add(
						new BigDecimal(
							String.valueOf(
								row86.APORTE_EMPLEADO
							)
						)
					);
					
					if(operation_result_tAggregateRow_6.APORTE_EMPLEADOR_sum == null) {
						operation_result_tAggregateRow_6.APORTE_EMPLEADOR_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_6.APORTE_EMPLEADOR_sum = operation_result_tAggregateRow_6.APORTE_EMPLEADOR_sum.add(
						new BigDecimal(
							String.valueOf(
								row86.APORTE_EMPLEADOR
							)
						)
					);
					
					if(operation_result_tAggregateRow_6.CANTIDAD_COTIZANTES_sum == null) {
						operation_result_tAggregateRow_6.CANTIDAD_COTIZANTES_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_6.CANTIDAD_COTIZANTES_sum = operation_result_tAggregateRow_6.CANTIDAD_COTIZANTES_sum.add(
						new BigDecimal(
							String.valueOf(
								row86.CANTIDAD_COTIZANTES
							)
						)
					);
					
					if(operation_result_tAggregateRow_6.CANTIDAD_BENEFICIARIOS_sum == null) {
						operation_result_tAggregateRow_6.CANTIDAD_BENEFICIARIOS_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_6.CANTIDAD_BENEFICIARIOS_sum = operation_result_tAggregateRow_6.CANTIDAD_BENEFICIARIOS_sum.add(
						new BigDecimal(
							String.valueOf(
								row86.CANTIDAD_BENEFICIARIOS
							)
						)
					);
					


 


	tos_count_tAggregateRow_6_AGGOUT++;

/**
 * [tAggregateRow_6_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_end ] stop
 */

} // End of branch "row86"




	
	/**
	 * [tUniqRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_8";
	
	

 



/**
 * [tUniqRow_8 process_data_end ] stop
 */

} // End of branch "ALL_XYZ"



	
		} // close loop of lookup 'row85' // G_TM_M_043
		
		} // close loop of lookup 'row84' // G_TM_M_043
	
	
	/**
	 * [tMap_46 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_46";
	
	

 



/**
 * [tMap_46 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_11_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	

 



/**
 * [tSortRow_11_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_11_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	


}

globalMap.put("tSortRow_11_SortIn_NB_LINE",nb_line_tSortRow_11_SortIn);

 

ok_Hash.put("tSortRow_11_SortIn", true);
end_Hash.put("tSortRow_11_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_11_SortIn", end_Hash.get("tSortRow_11_SortIn")-start_Hash.get("tSortRow_11_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_11_SortIn end ] stop
 */

	
	/**
	 * [tMap_46 end ] start
	 */

	

	
	
	currentComponent="tMap_46";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row84 != null) {
						tHash_Lookup_row84.endGet();
					}
					globalMap.remove( "tHash_Lookup_row84" );

					
					
				
					if(tHash_Lookup_row85 != null) {
						tHash_Lookup_row85.endGet();
					}
					globalMap.remove( "tHash_Lookup_row85" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tMap_46", true);
end_Hash.put("tMap_46", System.currentTimeMillis());




/**
 * [tMap_46 end ] stop
 */

	
	/**
	 * [tUniqRow_8 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_8";
	
	

globalMap.put("tUniqRow_8_NB_UNIQUES",nb_uniques_tUniqRow_8);
globalMap.put("tUniqRow_8_NB_DUPLICATES",nb_duplicates_tUniqRow_8);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ALL_XYZ");
			  	}
			  	
 

ok_Hash.put("tUniqRow_8", true);
end_Hash.put("tUniqRow_8", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_8", end_Hash.get("tUniqRow_8")-start_Hash.get("tUniqRow_8"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_8 end ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row86");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_6_AGGOUT", true);
end_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGOUT end ] stop
 */



	
	/**
	 * [tSortRow_10_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_10_SortOut", false);
		start_Hash.put("tSortRow_10_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_10_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INGRESO_MENSUAL");
					}
				
		int tos_count_tSortRow_10_SortOut = 0;
		


class ComparableINGRESO_MENSUALStruct extends INGRESO_MENSUALStruct implements Comparable<ComparableINGRESO_MENSUALStruct> {
	
	public int compareTo(ComparableINGRESO_MENSUALStruct other) {

		if(this.TIEMPO_ID == null && other.TIEMPO_ID != null){
			return -1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID == null){
			return 1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID != null){
			if(!this.TIEMPO_ID.equals(other.TIEMPO_ID)){
				return this.TIEMPO_ID.compareTo(other.TIEMPO_ID);
			}
		}
		if(this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID){
						
				return this.TIPO_RECAUDO_ID > other.TIPO_RECAUDO_ID ? 1 : -1;
							
		}
		if(this.PERIODO == null && other.PERIODO != null){
			return -1;
						
		}else if(this.PERIODO != null && other.PERIODO == null){
			return 1;
						
		}else if(this.PERIODO != null && other.PERIODO != null){
			if(!this.PERIODO.equals(other.PERIODO)){
				return this.PERIODO.compareTo(other.PERIODO);
			}
		}
		if(this.ENTIDAD_APORTANTE_ID == null && other.ENTIDAD_APORTANTE_ID != null){
			return -1;
						
		}else if(this.ENTIDAD_APORTANTE_ID != null && other.ENTIDAD_APORTANTE_ID == null){
			return 1;
						
		}else if(this.ENTIDAD_APORTANTE_ID != null && other.ENTIDAD_APORTANTE_ID != null){
			if(!this.ENTIDAD_APORTANTE_ID.equals(other.ENTIDAD_APORTANTE_ID)){
				return this.ENTIDAD_APORTANTE_ID.compareTo(other.ENTIDAD_APORTANTE_ID);
			}
		}
		if(this.REGIMEN_LABORAL_ID == null && other.REGIMEN_LABORAL_ID != null){
			return -1;
						
		}else if(this.REGIMEN_LABORAL_ID != null && other.REGIMEN_LABORAL_ID == null){
			return 1;
						
		}else if(this.REGIMEN_LABORAL_ID != null && other.REGIMEN_LABORAL_ID != null){
			if(!this.REGIMEN_LABORAL_ID.equals(other.REGIMEN_LABORAL_ID)){
				return this.REGIMEN_LABORAL_ID.compareTo(other.REGIMEN_LABORAL_ID);
			}
		}
		if(this.TCOTIZACION_ID == null && other.TCOTIZACION_ID != null){
			return -1;
						
		}else if(this.TCOTIZACION_ID != null && other.TCOTIZACION_ID == null){
			return 1;
						
		}else if(this.TCOTIZACION_ID != null && other.TCOTIZACION_ID != null){
			if(!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID)){
				return this.TCOTIZACION_ID.compareTo(other.TCOTIZACION_ID);
			}
		}
		if(this.GRUPO_ETAREO_ID == null && other.GRUPO_ETAREO_ID != null){
			return -1;
						
		}else if(this.GRUPO_ETAREO_ID != null && other.GRUPO_ETAREO_ID == null){
			return 1;
						
		}else if(this.GRUPO_ETAREO_ID != null && other.GRUPO_ETAREO_ID != null){
			if(!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID)){
				return this.GRUPO_ETAREO_ID.compareTo(other.GRUPO_ETAREO_ID);
			}
		}
		return 0;
	}
}

java.util.List<ComparableINGRESO_MENSUALStruct> list_tSortRow_10_SortOut = new java.util.ArrayList<ComparableINGRESO_MENSUALStruct>();


 



/**
 * [tSortRow_10_SortOut begin ] stop
 */



	
	/**
	 * [tMap_45 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_45", false);
		start_Hash.put("tMap_45", System.currentTimeMillis());
		
	
	currentComponent="tMap_45";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row74");
					}
				
		int tos_count_tMap_45 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_45__Struct  {
	int TIPO_RECAUDO_ID;
}
Var__tMap_45__Struct Var__tMap_45 = new Var__tMap_45__Struct();
// ###############################

// ###############################
// # Outputs initialization
INGRESO_MENSUALStruct INGRESO_MENSUAL_tmp = new INGRESO_MENSUALStruct();
// ###############################

        
        



        









 



/**
 * [tMap_45 begin ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGIN", false);
		start_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	
		int tos_count_tAggregateRow_6_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_6> values_tAggregateRow_6 = hash_tAggregateRow_6.values();

globalMap.put("tAggregateRow_6_NB_LINE", values_tAggregateRow_6.size());

for(AggOperationStruct_tAggregateRow_6 aggregated_row_tAggregateRow_6 : values_tAggregateRow_6) { // G_AggR_600



 



/**
 * [tAggregateRow_6_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

            				    row74.GRUPO_ETAREO_ID = aggregated_row_tAggregateRow_6.GRUPO_ETAREO_ID;
            				    
            				    row74.GRUPO_ETAREO = aggregated_row_tAggregateRow_6.GRUPO_ETAREO;
            				    
            				    row74.ID = aggregated_row_tAggregateRow_6.ID;
            				    
            				    row74.ENTAPORTANTES_ID = aggregated_row_tAggregateRow_6.ENTAPORTANTES_ID;
            				    
            				    row74.TVINCULACIONES_ID = aggregated_row_tAggregateRow_6.TVINCULACIONES_ID;
            				    
            				    row74.TCOTIZACION_ID = aggregated_row_tAggregateRow_6.TCOTIZACION_ID;
            				    
            				    row74.PERIODO = aggregated_row_tAggregateRow_6.PERIODO;
            				    row74.APORTE_EMPLEADO = aggregated_row_tAggregateRow_6.APORTE_EMPLEADO_sum;
                                	row74.APORTE_EMPLEADOR = aggregated_row_tAggregateRow_6.APORTE_EMPLEADOR_sum;
                                	row74.CANTIDAD_COTIZANTES = aggregated_row_tAggregateRow_6.CANTIDAD_COTIZANTES_sum;
                                	row74.CANTIDAD_BENEFICIARIOS = aggregated_row_tAggregateRow_6.CANTIDAD_BENEFICIARIOS_sum;
                                	

 


	tos_count_tAggregateRow_6_AGGIN++;

/**
 * [tAggregateRow_6_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_45 main ] start
	 */

	

	
	
	currentComponent="tMap_45";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row74"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_45 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_45 = false;
		boolean mainRowRejected_tMap_45 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_45__Struct Var = Var__tMap_45;
Var.TIPO_RECAUDO_ID = 1;// ###############################
        // ###############################
        // # Output tables

INGRESO_MENSUAL = null;


// # Output table : 'INGRESO_MENSUAL'
// # Filter conditions 
if( 

row74.ID != null

 ) {
INGRESO_MENSUAL_tmp.TIEMPO_ID = row74.ID ;
INGRESO_MENSUAL_tmp.TIPO_RECAUDO_ID = Var.TIPO_RECAUDO_ID ;
INGRESO_MENSUAL_tmp.PERIODO = row74.PERIODO ;
INGRESO_MENSUAL_tmp.ENTIDAD_APORTANTE_ID = row74.ENTAPORTANTES_ID ;
INGRESO_MENSUAL_tmp.REGIMEN_LABORAL_ID = row74.TVINCULACIONES_ID ;
INGRESO_MENSUAL_tmp.TCOTIZACION_ID = row74.TCOTIZACION_ID ;
INGRESO_MENSUAL_tmp.APORTE_EMPLEADO = row74.APORTE_EMPLEADO ;
INGRESO_MENSUAL_tmp.APORTE_EMPLEADOR = row74.APORTE_EMPLEADOR ;
INGRESO_MENSUAL_tmp.CANTIDAD_COTIZANTES = row74.CANTIDAD_COTIZANTES ;
INGRESO_MENSUAL_tmp.CANTIDAD_BENEFICIARIOS = row74.CANTIDAD_BENEFICIARIOS ;
INGRESO_MENSUAL_tmp.GRUPO_ETAREO = row74.GRUPO_ETAREO ;
INGRESO_MENSUAL_tmp.GRUPO_ETAREO_ID = row74.GRUPO_ETAREO_ID ;
INGRESO_MENSUAL = INGRESO_MENSUAL_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_45 = false;










 


	tos_count_tMap_45++;

/**
 * [tMap_45 main ] stop
 */
	
	/**
	 * [tMap_45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_45";
	
	

 



/**
 * [tMap_45 process_data_begin ] stop
 */
// Start of branch "INGRESO_MENSUAL"
if(INGRESO_MENSUAL != null) { 



	
	/**
	 * [tSortRow_10_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INGRESO_MENSUAL"
						
						);
					}
					



	ComparableINGRESO_MENSUALStruct arrayRowtSortRow_10_SortOut = new ComparableINGRESO_MENSUALStruct();

	arrayRowtSortRow_10_SortOut.TIEMPO_ID = INGRESO_MENSUAL.TIEMPO_ID;
	arrayRowtSortRow_10_SortOut.TIPO_RECAUDO_ID = INGRESO_MENSUAL.TIPO_RECAUDO_ID;
	arrayRowtSortRow_10_SortOut.PERIODO = INGRESO_MENSUAL.PERIODO;
	arrayRowtSortRow_10_SortOut.ENTIDAD_APORTANTE_ID = INGRESO_MENSUAL.ENTIDAD_APORTANTE_ID;
	arrayRowtSortRow_10_SortOut.REGIMEN_LABORAL_ID = INGRESO_MENSUAL.REGIMEN_LABORAL_ID;
	arrayRowtSortRow_10_SortOut.TCOTIZACION_ID = INGRESO_MENSUAL.TCOTIZACION_ID;
	arrayRowtSortRow_10_SortOut.APORTE_EMPLEADO = INGRESO_MENSUAL.APORTE_EMPLEADO;
	arrayRowtSortRow_10_SortOut.APORTE_EMPLEADOR = INGRESO_MENSUAL.APORTE_EMPLEADOR;
	arrayRowtSortRow_10_SortOut.CANTIDAD_COTIZANTES = INGRESO_MENSUAL.CANTIDAD_COTIZANTES;
	arrayRowtSortRow_10_SortOut.CANTIDAD_BENEFICIARIOS = INGRESO_MENSUAL.CANTIDAD_BENEFICIARIOS;
	arrayRowtSortRow_10_SortOut.GRUPO_ETAREO = INGRESO_MENSUAL.GRUPO_ETAREO;
	arrayRowtSortRow_10_SortOut.GRUPO_ETAREO_ID = INGRESO_MENSUAL.GRUPO_ETAREO_ID;	
	list_tSortRow_10_SortOut.add(arrayRowtSortRow_10_SortOut);

 


	tos_count_tSortRow_10_SortOut++;

/**
 * [tSortRow_10_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_10_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	

 



/**
 * [tSortRow_10_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_10_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	

 



/**
 * [tSortRow_10_SortOut process_data_end ] stop
 */

} // End of branch "INGRESO_MENSUAL"




	
	/**
	 * [tMap_45 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_45";
	
	

 



/**
 * [tMap_45 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_6_AGGIN", true);
end_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGIN end ] stop
 */

	
	/**
	 * [tMap_45 end ] start
	 */

	

	
	
	currentComponent="tMap_45";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row74");
			  	}
			  	
 

ok_Hash.put("tMap_45", true);
end_Hash.put("tMap_45", System.currentTimeMillis());




/**
 * [tMap_45 end ] stop
 */

	
	/**
	 * [tSortRow_10_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	

INGRESO_MENSUALStruct[] array_tSortRow_10_SortOut = list_tSortRow_10_SortOut.toArray(new ComparableINGRESO_MENSUALStruct[0]);

java.util.Arrays.sort(array_tSortRow_10_SortOut);

globalMap.put("tSortRow_10",array_tSortRow_10_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INGRESO_MENSUAL");
			  	}
			  	
 

ok_Hash.put("tSortRow_10_SortOut", true);
end_Hash.put("tSortRow_10_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_10_SortOut", end_Hash.get("tSortRow_10_SortOut")-start_Hash.get("tSortRow_10_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_10_SortOut end ] stop
 */



	
	/**
	 * [tOracleOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_17", false);
		start_Hash.put("tOracleOutput_17", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_17");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INGRESO_ENTAPORTANTE");
					}
				
		int tos_count_tOracleOutput_17 = 0;
		






    
    int nb_line_tOracleOutput_17 = 0;
    int nb_line_update_tOracleOutput_17 = 0;
    int nb_line_inserted_tOracleOutput_17 = 0;
    int nb_line_deleted_tOracleOutput_17 = 0;
    int nb_line_rejected_tOracleOutput_17 = 0;

    int tmp_batchUpdateCount_tOracleOutput_17 = 0;

    int deletedCount_tOracleOutput_17=0;
    int updatedCount_tOracleOutput_17=0;
    int insertedCount_tOracleOutput_17=0;
    int rowsToCommitCount_tOracleOutput_17=0;
    int rejectedCount_tOracleOutput_17=0;

    boolean whetherReject_tOracleOutput_17 = false;

    java.sql.Connection conn_tOracleOutput_17 = null;

    //optional table
    String dbschema_tOracleOutput_17 = null;
    String tableName_tOracleOutput_17 = null;
                    String driverClass_tOracleOutput_17 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_17);
                String url_tOracleOutput_17 = null;
                    url_tOracleOutput_17 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_17 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_17 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_17 = decryptedPassword_tOracleOutput_17;
                dbschema_tOracleOutput_17 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_17 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_17.put("user",dbUser_tOracleOutput_17);
                    atnParamsPrope_tOracleOutput_17.put("password",dbPwd_tOracleOutput_17);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_17.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_17 = java.sql.DriverManager.getConnection(url_tOracleOutput_17, atnParamsPrope_tOracleOutput_17);
        resourceMap.put("conn_tOracleOutput_17", conn_tOracleOutput_17);
            conn_tOracleOutput_17.setAutoCommit(false);
            int commitEvery_tOracleOutput_17 = 1000;
            int commitCounter_tOracleOutput_17 = 0;
        int batchSize_tOracleOutput_17 = 10000;
        int batchSizeCounter_tOracleOutput_17=0;
        int count_tOracleOutput_17=0;

        if(dbschema_tOracleOutput_17 == null || dbschema_tOracleOutput_17.trim().length() == 0) {
            tableName_tOracleOutput_17 = ("BREC_INGRESOMENSUAL");
        } else {
            tableName_tOracleOutput_17 = dbschema_tOracleOutput_17 + "." + ("BREC_INGRESOMENSUAL");
        }
                String insert_tOracleOutput_17 = "INSERT INTO " + tableName_tOracleOutput_17 + " (TIEMPO_ID,TIPO_RECAUDO_ID,PERIODO,ENTIDAD_APORTANTE_ID,REGIMEN_LABORAL_ID,TCOTIZACION_ID,APORTE_EMPLEADO,APORTE_EMPLEADOR,CANTIDAD_COTIZANTES,CANTIDAD_BENEFICIARIOS,GRUPO_ETAREO,GRUPO_ETAREO_ID,NOMBRE_ENTAPORTANTE,NOMBRE_VINCULACION,NOMBRE_TIPO_COTIZACION) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_17 = conn_tOracleOutput_17.prepareStatement(insert_tOracleOutput_17);
                        resourceMap.put("pstmt_tOracleOutput_17", pstmt_tOracleOutput_17);





 



/**
 * [tOracleOutput_17 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct> tHash_Lookup_row64 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct>) 
					globalMap.get( "tHash_Lookup_row64" ))
					;					
					
	

row64Struct row64HashKey = new row64Struct();
row64Struct row64Default = new row64Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
					globalMap.get( "tHash_Lookup_row65" ))
					;					
					
	

row65Struct row65HashKey = new row65Struct();
row65Struct row65Default = new row65Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct> tHash_Lookup_row66 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct>) 
					globalMap.get( "tHash_Lookup_row66" ))
					;					
					
	

row66Struct row66HashKey = new row66Struct();
row66Struct row66Default = new row66Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
INGRESO_ENTAPORTANTEStruct INGRESO_ENTAPORTANTE_tmp = new INGRESO_ENTAPORTANTEStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tSortRow_10_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_10_SortIn", false);
		start_Hash.put("tSortRow_10_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_10_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	
		int tos_count_tSortRow_10_SortIn = 0;
		


INGRESO_MENSUALStruct[] array_tSortRow_10_SortIn = (INGRESO_MENSUALStruct[]) globalMap.remove("tSortRow_10");

int nb_line_tSortRow_10_SortIn = 0;

INGRESO_MENSUALStruct current_tSortRow_10_SortIn = null;

for(int i_tSortRow_10_SortIn = 0; i_tSortRow_10_SortIn < array_tSortRow_10_SortIn.length; i_tSortRow_10_SortIn++){
	current_tSortRow_10_SortIn = array_tSortRow_10_SortIn[i_tSortRow_10_SortIn];
	row76.TIEMPO_ID = current_tSortRow_10_SortIn.TIEMPO_ID;
	row76.TIPO_RECAUDO_ID = current_tSortRow_10_SortIn.TIPO_RECAUDO_ID;
	row76.PERIODO = current_tSortRow_10_SortIn.PERIODO;
	row76.ENTIDAD_APORTANTE_ID = current_tSortRow_10_SortIn.ENTIDAD_APORTANTE_ID;
	row76.REGIMEN_LABORAL_ID = current_tSortRow_10_SortIn.REGIMEN_LABORAL_ID;
	row76.TCOTIZACION_ID = current_tSortRow_10_SortIn.TCOTIZACION_ID;
	row76.APORTE_EMPLEADO = current_tSortRow_10_SortIn.APORTE_EMPLEADO;
	row76.APORTE_EMPLEADOR = current_tSortRow_10_SortIn.APORTE_EMPLEADOR;
	row76.CANTIDAD_COTIZANTES = current_tSortRow_10_SortIn.CANTIDAD_COTIZANTES;
	row76.CANTIDAD_BENEFICIARIOS = current_tSortRow_10_SortIn.CANTIDAD_BENEFICIARIOS;
	row76.GRUPO_ETAREO = current_tSortRow_10_SortIn.GRUPO_ETAREO;
	row76.GRUPO_ETAREO_ID = current_tSortRow_10_SortIn.GRUPO_ETAREO_ID;
	// increase number of line sorted
	nb_line_tSortRow_10_SortIn++;

 



/**
 * [tSortRow_10_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_10_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	

 


	tos_count_tSortRow_10_SortIn++;

/**
 * [tSortRow_10_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_10_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	

 



/**
 * [tSortRow_10_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
						row64Struct row64 = null;
					
						row65Struct row65 = null;
					
						row66Struct row66 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row64" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow64 = false;
       		  	    	
       		  	    	
 							row64Struct row64ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row64HashKey.ID = row76.ENTIDAD_APORTANTE_ID ;
                        		    		

								
		                        	row64HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row64.lookup( row64HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row64.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_15 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row64 != null && tHash_Lookup_row64.getCount(row64HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row64' and it contains more one result from keys :  row64.ID = '" + row64HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row64Struct fromLookup_row64 = null;
							row64 = row64Default;
										 
							
								 
							
							
								if (tHash_Lookup_row64 !=null && tHash_Lookup_row64.hasNext()) { // G 099
								
							
								
								fromLookup_row64 = tHash_Lookup_row64.next();

							
							
								} // G 099
							
							

							if(fromLookup_row64 != null) {
								row64 = fromLookup_row64;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row65" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow65 = false;
       		  	    	
       		  	    	
 							row65Struct row65ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row65HashKey.ID = row76.REGIMEN_LABORAL_ID ;
                        		    		

								
		                        	row65HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row65.lookup( row65HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row65.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_15 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row65 != null && tHash_Lookup_row65.getCount(row65HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row65' and it contains more one result from keys :  row65.ID = '" + row65HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row65Struct fromLookup_row65 = null;
							row65 = row65Default;
										 
							
								 
							
							
								if (tHash_Lookup_row65 !=null && tHash_Lookup_row65.hasNext()) { // G 099
								
							
								
								fromLookup_row65 = tHash_Lookup_row65.next();

							
							
								} // G 099
							
							

							if(fromLookup_row65 != null) {
								row65 = fromLookup_row65;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row66" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow66 = false;
       		  	    	
       		  	    	
 							row66Struct row66ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row66HashKey.ID = row76.TCOTIZACION_ID ;
                        		    		

								
		                        	row66HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row66.lookup( row66HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row66.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_15 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row66 != null && tHash_Lookup_row66.getCount(row66HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row66' and it contains more one result from keys :  row66.ID = '" + row66HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row66Struct fromLookup_row66 = null;
							row66 = row66Default;
										 
							
								 
							
							
								if (tHash_Lookup_row66 !=null && tHash_Lookup_row66.hasNext()) { // G 099
								
							
								
								fromLookup_row66 = tHash_Lookup_row66.next();

							
							
								} // G 099
							
							

							if(fromLookup_row66 != null) {
								row66 = fromLookup_row66;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

INGRESO_ENTAPORTANTE = null;

if(!rejectedInnerJoin_tMap_15 ) {

// # Output table : 'INGRESO_ENTAPORTANTE'
INGRESO_ENTAPORTANTE_tmp.TIEMPO_ID = row76.TIEMPO_ID ;
INGRESO_ENTAPORTANTE_tmp.TIPO_RECAUDO_ID = row76.TIPO_RECAUDO_ID ;
INGRESO_ENTAPORTANTE_tmp.PERIODO = row76.PERIODO ;
INGRESO_ENTAPORTANTE_tmp.ENTIDAD_APORTANTE_ID = row76.ENTIDAD_APORTANTE_ID ;
INGRESO_ENTAPORTANTE_tmp.REGIMEN_LABORAL_ID = row76.REGIMEN_LABORAL_ID ;
INGRESO_ENTAPORTANTE_tmp.TCOTIZACION_ID = row76.TCOTIZACION_ID ;
INGRESO_ENTAPORTANTE_tmp.APORTE_EMPLEADO = row76.APORTE_EMPLEADO ;
INGRESO_ENTAPORTANTE_tmp.APORTE_EMPLEADOR = row76.APORTE_EMPLEADOR ;
INGRESO_ENTAPORTANTE_tmp.CANTIDAD_COTIZANTES = row76.CANTIDAD_COTIZANTES ;
INGRESO_ENTAPORTANTE_tmp.CANTIDAD_BENEFICIARIOS = row76.CANTIDAD_BENEFICIARIOS ;
INGRESO_ENTAPORTANTE_tmp.GRUPO_ETAREO = row76.GRUPO_ETAREO ;
INGRESO_ENTAPORTANTE_tmp.GRUPO_ETAREO_ID = row76.GRUPO_ETAREO_ID ;
INGRESO_ENTAPORTANTE_tmp.NOMBRE_ENTAPORTANTE = row64.NOMBRE ;
INGRESO_ENTAPORTANTE_tmp.NOMBRE_VINCULACION = row65.NOMBRE ;
INGRESO_ENTAPORTANTE_tmp.NOMBRE_TIPO_COTIZACION = row66.NOMBRE ;
INGRESO_ENTAPORTANTE = INGRESO_ENTAPORTANTE_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "INGRESO_ENTAPORTANTE"
if(INGRESO_ENTAPORTANTE != null) { 



	
	/**
	 * [tOracleOutput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INGRESO_ENTAPORTANTE"
						
						);
					}
					



        whetherReject_tOracleOutput_17 = false;
                        pstmt_tOracleOutput_17.setBigDecimal(1, INGRESO_ENTAPORTANTE.TIEMPO_ID);

                        pstmt_tOracleOutput_17.setInt(2, INGRESO_ENTAPORTANTE.TIPO_RECAUDO_ID);

                        if(INGRESO_ENTAPORTANTE.PERIODO == null) {
pstmt_tOracleOutput_17.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(3, INGRESO_ENTAPORTANTE.PERIODO);
}

                        pstmt_tOracleOutput_17.setBigDecimal(4, INGRESO_ENTAPORTANTE.ENTIDAD_APORTANTE_ID);

                        pstmt_tOracleOutput_17.setBigDecimal(5, INGRESO_ENTAPORTANTE.REGIMEN_LABORAL_ID);

                        pstmt_tOracleOutput_17.setBigDecimal(6, INGRESO_ENTAPORTANTE.TCOTIZACION_ID);

                        pstmt_tOracleOutput_17.setBigDecimal(7, INGRESO_ENTAPORTANTE.APORTE_EMPLEADO);

                        pstmt_tOracleOutput_17.setBigDecimal(8, INGRESO_ENTAPORTANTE.APORTE_EMPLEADOR);

                        pstmt_tOracleOutput_17.setBigDecimal(9, INGRESO_ENTAPORTANTE.CANTIDAD_COTIZANTES);

                        pstmt_tOracleOutput_17.setBigDecimal(10, INGRESO_ENTAPORTANTE.CANTIDAD_BENEFICIARIOS);

                        if(INGRESO_ENTAPORTANTE.GRUPO_ETAREO == null) {
pstmt_tOracleOutput_17.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(11, INGRESO_ENTAPORTANTE.GRUPO_ETAREO);
}

                        pstmt_tOracleOutput_17.setBigDecimal(12, INGRESO_ENTAPORTANTE.GRUPO_ETAREO_ID);

                        if(INGRESO_ENTAPORTANTE.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_17.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(13, INGRESO_ENTAPORTANTE.NOMBRE_ENTAPORTANTE);
}

                        if(INGRESO_ENTAPORTANTE.NOMBRE_VINCULACION == null) {
pstmt_tOracleOutput_17.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(14, INGRESO_ENTAPORTANTE.NOMBRE_VINCULACION);
}

                        if(INGRESO_ENTAPORTANTE.NOMBRE_TIPO_COTIZACION == null) {
pstmt_tOracleOutput_17.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(15, INGRESO_ENTAPORTANTE.NOMBRE_TIPO_COTIZACION);
}

                pstmt_tOracleOutput_17.addBatch();
                nb_line_tOracleOutput_17++;
                batchSizeCounter_tOracleOutput_17++;
            if(!whetherReject_tOracleOutput_17) {
            }
            if (batchSize_tOracleOutput_17 > 0 &&  batchSize_tOracleOutput_17 <= batchSizeCounter_tOracleOutput_17) {
                try {
                    pstmt_tOracleOutput_17.executeBatch();
                }catch (java.sql.BatchUpdateException e_tOracleOutput_17){
globalMap.put("tOracleOutput_17_ERROR_MESSAGE",e_tOracleOutput_17.getMessage());
			        java.sql.SQLException ne_tOracleOutput_17 = e_tOracleOutput_17.getNextException(),sqle_tOracleOutput_17=null;
			    	String errormessage_tOracleOutput_17;
					if (ne_tOracleOutput_17 != null) {
						// build new exception to provide the original cause
						sqle_tOracleOutput_17 = new java.sql.SQLException(e_tOracleOutput_17.getMessage() + "\ncaused by: " + ne_tOracleOutput_17.getMessage(), ne_tOracleOutput_17.getSQLState(), ne_tOracleOutput_17.getErrorCode(), ne_tOracleOutput_17);
						errormessage_tOracleOutput_17 = sqle_tOracleOutput_17.getMessage();
					}else{
						errormessage_tOracleOutput_17 = e_tOracleOutput_17.getMessage();
					}
	            	
	                	System.err.println(errormessage_tOracleOutput_17);
	            	
	        	}
                tmp_batchUpdateCount_tOracleOutput_17 = pstmt_tOracleOutput_17.getUpdateCount();
                    insertedCount_tOracleOutput_17
                += (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
                rowsToCommitCount_tOracleOutput_17 += (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
                batchSizeCounter_tOracleOutput_17 = 0;
            }
                commitCounter_tOracleOutput_17++;
                if(commitEvery_tOracleOutput_17 <= commitCounter_tOracleOutput_17) {
                    if(batchSizeCounter_tOracleOutput_17 > 0) {
                        try {
                            pstmt_tOracleOutput_17.executeBatch();
                        }catch (java.sql.BatchUpdateException e_tOracleOutput_17){
globalMap.put("tOracleOutput_17_ERROR_MESSAGE",e_tOracleOutput_17.getMessage());
					        java.sql.SQLException ne_tOracleOutput_17 = e_tOracleOutput_17.getNextException(),sqle_tOracleOutput_17=null;
					    	String errormessage_tOracleOutput_17;
							if (ne_tOracleOutput_17 != null) {
								// build new exception to provide the original cause
								sqle_tOracleOutput_17 = new java.sql.SQLException(e_tOracleOutput_17.getMessage() + "\ncaused by: " + ne_tOracleOutput_17.getMessage(), ne_tOracleOutput_17.getSQLState(), ne_tOracleOutput_17.getErrorCode(), ne_tOracleOutput_17);
								errormessage_tOracleOutput_17 = sqle_tOracleOutput_17.getMessage();
							}else{
								errormessage_tOracleOutput_17 = e_tOracleOutput_17.getMessage();
							}
			            	
			                	System.err.println(errormessage_tOracleOutput_17);
			            	
			        	}
                        tmp_batchUpdateCount_tOracleOutput_17 = pstmt_tOracleOutput_17.getUpdateCount();
                            insertedCount_tOracleOutput_17
                        += (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
                        rowsToCommitCount_tOracleOutput_17 += (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
                    }
                    if(rowsToCommitCount_tOracleOutput_17 != 0){
                    	
                    }
                    conn_tOracleOutput_17.commit();
                    if(rowsToCommitCount_tOracleOutput_17 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_17 = 0;
                    }
                    commitCounter_tOracleOutput_17=0;
                    	batchSizeCounter_tOracleOutput_17=0;
                }

 


	tos_count_tOracleOutput_17++;

/**
 * [tOracleOutput_17 main ] stop
 */
	
	/**
	 * [tOracleOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	

 



/**
 * [tOracleOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	

 



/**
 * [tOracleOutput_17 process_data_end ] stop
 */

} // End of branch "INGRESO_ENTAPORTANTE"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_10_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	

 



/**
 * [tSortRow_10_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_10_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	


}

globalMap.put("tSortRow_10_SortIn_NB_LINE",nb_line_tSortRow_10_SortIn);

 

ok_Hash.put("tSortRow_10_SortIn", true);
end_Hash.put("tSortRow_10_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_10_SortIn", end_Hash.get("tSortRow_10_SortIn")-start_Hash.get("tSortRow_10_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_10_SortIn end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row64 != null) {
						tHash_Lookup_row64.endGet();
					}
					globalMap.remove( "tHash_Lookup_row64" );

					
					
				
					if(tHash_Lookup_row65 != null) {
						tHash_Lookup_row65.endGet();
					}
					globalMap.remove( "tHash_Lookup_row65" );

					
					
				
					if(tHash_Lookup_row66 != null) {
						tHash_Lookup_row66.endGet();
					}
					globalMap.remove( "tHash_Lookup_row66" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tOracleOutput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	
	



	
        if(batchSizeCounter_tOracleOutput_17 > 0) {
            try {
            	if (pstmt_tOracleOutput_17 != null) {
					
					pstmt_tOracleOutput_17.executeBatch();
					
        	    }
            }catch (java.sql.BatchUpdateException e_tOracleOutput_17){
globalMap.put("tOracleOutput_17_ERROR_MESSAGE",e_tOracleOutput_17.getMessage());
		        java.sql.SQLException ne_tOracleOutput_17 = e_tOracleOutput_17.getNextException(),sqle_tOracleOutput_17=null;
		    	String errormessage_tOracleOutput_17;
				if (ne_tOracleOutput_17 != null) {
					// build new exception to provide the original cause
					sqle_tOracleOutput_17 = new java.sql.SQLException(e_tOracleOutput_17.getMessage() + "\ncaused by: " + ne_tOracleOutput_17.getMessage(), ne_tOracleOutput_17.getSQLState(), ne_tOracleOutput_17.getErrorCode(), ne_tOracleOutput_17);
					errormessage_tOracleOutput_17 = sqle_tOracleOutput_17.getMessage();
				}else{
					errormessage_tOracleOutput_17 = e_tOracleOutput_17.getMessage();
				}
            	
                	System.err.println(errormessage_tOracleOutput_17);
            	
        	}
        	if (pstmt_tOracleOutput_17 != null) {
            	tmp_batchUpdateCount_tOracleOutput_17 = pstmt_tOracleOutput_17.getUpdateCount();
    	    	
    	    		insertedCount_tOracleOutput_17
    	    	
    	    	+= (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
				rowsToCommitCount_tOracleOutput_17 += (tmp_batchUpdateCount_tOracleOutput_17!=-1?tmp_batchUpdateCount_tOracleOutput_17:0);
            }
        }
        if(pstmt_tOracleOutput_17 != null) {
			
				pstmt_tOracleOutput_17.close();
				resourceMap.remove("pstmt_tOracleOutput_17");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_17", true);
		if(commitCounter_tOracleOutput_17 > 0 && rowsToCommitCount_tOracleOutput_17 != 0) {
			
		}
		conn_tOracleOutput_17.commit();
		if(commitCounter_tOracleOutput_17 > 0 && rowsToCommitCount_tOracleOutput_17 != 0) {
			
			rowsToCommitCount_tOracleOutput_17 = 0;
		}
		commitCounter_tOracleOutput_17 = 0;
		
		
		conn_tOracleOutput_17 .close();
		
		resourceMap.put("finish_tOracleOutput_17", true);
   	

	
	nb_line_deleted_tOracleOutput_17=nb_line_deleted_tOracleOutput_17+ deletedCount_tOracleOutput_17;
	nb_line_update_tOracleOutput_17=nb_line_update_tOracleOutput_17 + updatedCount_tOracleOutput_17;
	nb_line_inserted_tOracleOutput_17=nb_line_inserted_tOracleOutput_17 + insertedCount_tOracleOutput_17;
	nb_line_rejected_tOracleOutput_17=nb_line_rejected_tOracleOutput_17 + rejectedCount_tOracleOutput_17;
	
        globalMap.put("tOracleOutput_17_NB_LINE",nb_line_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_UPDATED",nb_line_update_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_17);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INGRESO_ENTAPORTANTE");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_17", true);
end_Hash.put("tOracleOutput_17", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_17", end_Hash.get("tOracleOutput_17")-start_Hash.get("tOracleOutput_17"));
tStatCatcher_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk17", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tOracleOutput_17 end ] stop
 */













































				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row64"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row65"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row66"); 
				     			
							//free memory for "tSortRow_10_SortIn"
							globalMap.remove("tSortRow_10");
						
							//free memory for "tAggregateRow_6_AGGIN"
							globalMap.remove("tAggregateRow_6");
						
					     			//free memory for "tMap_46"
					     			globalMap.remove("tHash_Lookup_row84"); 
				     			
					     			//free memory for "tMap_46"
					     			globalMap.remove("tHash_Lookup_row85"); 
				     			
							//free memory for "tSortRow_11_SortIn"
							globalMap.remove("tSortRow_11");
						
					     			//free memory for "tMap_42"
					     			globalMap.remove("tHash_Lookup_ALL_BENEFICIARIOS"); 
				     			
					     			//free memory for "tMap_43"
					     			globalMap.remove("tHash_Lookup_row71"); 
				     			
					     			//free memory for "tMap_40"
					     			globalMap.remove("tHash_Lookup_row68"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tMap_40 finally ] start
	 */

	

	
	
	currentComponent="tMap_40";
	
	

 



/**
 * [tMap_40 finally ] stop
 */

	
	/**
	 * [tMap_43 finally ] start
	 */

	

	
	
	currentComponent="tMap_43";
	
	

 



/**
 * [tMap_43 finally ] stop
 */

	
	/**
	 * [tMap_42 finally ] start
	 */

	

	
	
	currentComponent="tMap_42";
	
	

 



/**
 * [tMap_42 finally ] stop
 */

	
	/**
	 * [tUniqRow_7 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";
	
	

 



/**
 * [tUniqRow_7 finally ] stop
 */

	
	/**
	 * [tSortRow_11_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortOut";
	
	

 



/**
 * [tSortRow_11_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_11_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_11";
	
	currentComponent="tSortRow_11_SortIn";
	
	

 



/**
 * [tSortRow_11_SortIn finally ] stop
 */

	
	/**
	 * [tMap_46 finally ] start
	 */

	

	
	
	currentComponent="tMap_46";
	
	

 



/**
 * [tMap_46 finally ] stop
 */

	
	/**
	 * [tUniqRow_8 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_8";
	
	

 



/**
 * [tUniqRow_8 finally ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_45 finally ] start
	 */

	

	
	
	currentComponent="tMap_45";
	
	

 



/**
 * [tMap_45 finally ] stop
 */

	
	/**
	 * [tSortRow_10_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortOut";
	
	

 



/**
 * [tSortRow_10_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_10_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_10";
	
	currentComponent="tSortRow_10_SortIn";
	
	

 



/**
 * [tSortRow_10_SortIn finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tOracleOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_17") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_17 = null;
                if ((pstmtToClose_tOracleOutput_17 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_17")) != null) {
                    pstmtToClose_tOracleOutput_17.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_17") == null){
            java.sql.Connection ctn_tOracleOutput_17 = null;
            if((ctn_tOracleOutput_17 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_17")) != null){
                try {
                    ctn_tOracleOutput_17.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_17) {
                    String errorMessage_tOracleOutput_17 = "failed to close the connection in tOracleOutput_17 :" + sqlEx_tOracleOutput_17.getMessage();
                    System.err.println(errorMessage_tOracleOutput_17);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_17 finally ] stop
 */













































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println(TalendDate.getCurrentDate());
System.out.println("--> End Ingresos mensuales aportes y salud");
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tOracleInput_15Process(globalMap);



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return null;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_TOTAL_INGRESO_ID;

				public int getTIPO_TOTAL_INGRESO_ID () {
					return this.TIPO_TOTAL_INGRESO_ID;
				}

				public Boolean TIPO_TOTAL_INGRESO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_TOTAL_INGRESO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_TOTAL_INGRESO_IDLength(){
				    return null;
				}
				public Integer TIPO_TOTAL_INGRESO_IDPrecision(){
				    return null;
				}
				public String TIPO_TOTAL_INGRESO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDOriginalDbColumnName(){
				
					return "TIPO_TOTAL_INGRESO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_TIPO_INGRESO;

				public String getNOMBRE_TIPO_INGRESO () {
					return this.NOMBRE_TIPO_INGRESO;
				}

				public Boolean NOMBRE_TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_INGRESOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_INGRESOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_INGRESOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_INGRESO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_TOTAL_INGRESO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row36Struct other = (row36Struct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_TOTAL_INGRESO_ID != other.TIPO_TOTAL_INGRESO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					

		return true;
    }

	public void copyDataTo(row36Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            other.PERIODO = this.PERIODO;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_TIPO_INGRESO = this.NOMBRE_TIPO_INGRESO;
	            
	}

	public void copyKeysDataTo(row36Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_TOTAL_INGRESO_ID="+String.valueOf(TIPO_TOTAL_INGRESO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_TIPO_INGRESO="+NOMBRE_TIPO_INGRESO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_TOTAL_INGRESO_ID, other.TIPO_TOTAL_INGRESO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_8 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_8> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return null;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_TOTAL_INGRESO_ID;

				public int getTIPO_TOTAL_INGRESO_ID () {
					return this.TIPO_TOTAL_INGRESO_ID;
				}

				public Boolean TIPO_TOTAL_INGRESO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_TOTAL_INGRESO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_TOTAL_INGRESO_IDLength(){
				    return null;
				}
				public Integer TIPO_TOTAL_INGRESO_IDPrecision(){
				    return null;
				}
				public String TIPO_TOTAL_INGRESO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDOriginalDbColumnName(){
				
					return "TIPO_TOTAL_INGRESO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_TIPO_INGRESO;

				public String getNOMBRE_TIPO_INGRESO () {
					return this.NOMBRE_TIPO_INGRESO;
				}

				public Boolean NOMBRE_TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_INGRESOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_INGRESOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_INGRESOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_INGRESO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_TOTAL_INGRESO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_8 other = (OnRowsEndStructtSortRow_8) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_TOTAL_INGRESO_ID != other.TIPO_TOTAL_INGRESO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_8 other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            other.PERIODO = this.PERIODO;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_TIPO_INGRESO = this.NOMBRE_TIPO_INGRESO;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_8 other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_TOTAL_INGRESO_ID="+String.valueOf(TIPO_TOTAL_INGRESO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_TIPO_INGRESO="+NOMBRE_TIPO_INGRESO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_8 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_TOTAL_INGRESO_ID, other.TIPO_TOTAL_INGRESO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return "";
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out1Struct other = (out1Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out1Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(out1Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return "";
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIEMPO_TOTALESStruct implements routines.system.IPersistableRow<TIEMPO_TOTALESStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return "";
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TIEMPO_TOTALESStruct other = (TIEMPO_TOTALESStruct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TIEMPO_TOTALESStruct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(TIEMPO_TOTALESStruct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIEMPO_TOTALESStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TOTALES_RECAUDOStruct implements routines.system.IPersistableRow<TOTALES_RECAUDOStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return null;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_TOTAL_INGRESO_ID;

				public int getTIPO_TOTAL_INGRESO_ID () {
					return this.TIPO_TOTAL_INGRESO_ID;
				}

				public Boolean TIPO_TOTAL_INGRESO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_TOTAL_INGRESO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_TOTAL_INGRESO_IDLength(){
				    return null;
				}
				public Integer TIPO_TOTAL_INGRESO_IDPrecision(){
				    return null;
				}
				public String TIPO_TOTAL_INGRESO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_TOTAL_INGRESO_IDOriginalDbColumnName(){
				
					return "TIPO_TOTAL_INGRESO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_TIPO_INGRESO;

				public String getNOMBRE_TIPO_INGRESO () {
					return this.NOMBRE_TIPO_INGRESO;
				}

				public Boolean NOMBRE_TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_INGRESOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_INGRESOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_INGRESOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_INGRESO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_TOTAL_INGRESO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TOTALES_RECAUDOStruct other = (TOTALES_RECAUDOStruct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_TOTAL_INGRESO_ID != other.TIPO_TOTAL_INGRESO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					

		return true;
    }

	public void copyDataTo(TOTALES_RECAUDOStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            other.PERIODO = this.PERIODO;
	            other.TOTAL_APORTE = this.TOTAL_APORTE;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_TIPO_INGRESO = this.NOMBRE_TIPO_INGRESO;
	            
	}

	public void copyKeysDataTo(TOTALES_RECAUDOStruct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_TOTAL_INGRESO_ID = this.TIPO_TOTAL_INGRESO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_TOTAL_INGRESO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_TIPO_INGRESO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_TOTAL_INGRESO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_INGRESO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_TOTAL_INGRESO_ID="+String.valueOf(TIPO_TOTAL_INGRESO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_TIPO_INGRESO="+NOMBRE_TIPO_INGRESO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TOTALES_RECAUDOStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_TOTAL_INGRESO_ID, other.TIPO_TOTAL_INGRESO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_2> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_COTIZANTE_SALUDStruct implements routines.system.IPersistableRow<APORTE_COTIZANTE_SALUDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_COTIZANTE_SALUDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE_COTIZANTE;

				public BigDecimal getTOTAL_APORTE_COTIZANTE () {
					return this.TOTAL_APORTE_COTIZANTE;
				}

				public Boolean TOTAL_APORTE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTE_COTIZANTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTE_COTIZANTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTE_COTIZANTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE_COTIZANTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE_COTIZANTE="+String.valueOf(TOTAL_APORTE_COTIZANTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_15Struct implements routines.system.IPersistableRow<after_tOracleInput_15Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE_COTIZANTE;

				public BigDecimal getTOTAL_APORTE_COTIZANTE () {
					return this.TOTAL_APORTE_COTIZANTE;
				}

				public Boolean TOTAL_APORTE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTE_COTIZANTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTE_COTIZANTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTE_COTIZANTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE_COTIZANTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE_COTIZANTE="+String.valueOf(TOTAL_APORTE_COTIZANTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PORCENTAJE_PPCDStruct implements routines.system.IPersistableRow<PORCENTAJE_PPCDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PORCENTAJE_PPCDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE;

				public BigDecimal getAPORTE () {
					return this.APORTE;
				}

				public Boolean APORTEIsNullable(){
				    return true;
				}
				public Boolean APORTEIsKey(){
				    return false;
				}
				public Integer APORTELength(){
				    return 0;
				}
				public Integer APORTEPrecision(){
				    return 0;
				}
				public String APORTEDefault(){
				
					return "";
				
				}
				public String APORTEComment(){
				
				    return "";
				
				}
				public String APORTEPattern(){
				
					return "";
				
				}
				public String APORTEOriginalDbColumnName(){
				
					return "APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE="+String.valueOf(APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PORCENTAJE_UPCStruct implements routines.system.IPersistableRow<PORCENTAJE_UPCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PORCENTAJE_UPCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE;

				public BigDecimal getAPORTE () {
					return this.APORTE;
				}

				public Boolean APORTEIsNullable(){
				    return true;
				}
				public Boolean APORTEIsKey(){
				    return false;
				}
				public Integer APORTELength(){
				    return 0;
				}
				public Integer APORTEPrecision(){
				    return 0;
				}
				public String APORTEDefault(){
				
					return "";
				
				}
				public String APORTEComment(){
				
				    return "";
				
				}
				public String APORTEPattern(){
				
					return "";
				
				}
				public String APORTEOriginalDbColumnName(){
				
					return "APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE="+String.valueOf(APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_PATRONAL_SALUDStruct implements routines.system.IPersistableRow<APORTE_PATRONAL_SALUDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_PATRONAL_SALUDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE_PATRONAL;

				public BigDecimal getTOTAL_APORTE_PATRONAL () {
					return this.TOTAL_APORTE_PATRONAL;
				}

				public Boolean TOTAL_APORTE_PATRONALIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTE_PATRONALIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTE_PATRONALLength(){
				    return 0;
				}
				public Integer TOTAL_APORTE_PATRONALPrecision(){
				    return 0;
				}
				public String TOTAL_APORTE_PATRONALDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTE_PATRONALComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTE_PATRONALPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTE_PATRONALOriginalDbColumnName(){
				
					return "TOTAL_APORTE_PATRONAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_PATRONAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_PATRONAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE_PATRONAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE_PATRONAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE_PATRONAL="+String.valueOf(TOTAL_APORTE_PATRONAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_PPDCStruct implements routines.system.IPersistableRow<APORTE_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_PPDCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_VENTAStruct implements routines.system.IPersistableRow<APORTE_VENTAStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_VENTAStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class NOVESP_PATRONALStruct implements routines.system.IPersistableRow<NOVESP_PATRONALStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(NOVESP_PATRONALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_CARNETStruct implements routines.system.IPersistableRow<APORTE_CARNETStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_CARNETStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RETRO_APORTE_COTIZANTEStruct implements routines.system.IPersistableRow<RETRO_APORTE_COTIZANTEStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RETRO_APORTE_COTIZANTEStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE_COTIZANTE;

				public BigDecimal getTOTAL_APORTE_COTIZANTE () {
					return this.TOTAL_APORTE_COTIZANTE;
				}

				public Boolean TOTAL_APORTE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTE_COTIZANTELength(){
				    return null;
				}
				public Integer TOTAL_APORTE_COTIZANTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTE_COTIZANTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTE_COTIZANTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE_COTIZANTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_COTIZANTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE_COTIZANTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE_COTIZANTE="+String.valueOf(TOTAL_APORTE_COTIZANTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RETRO_APORTE_PATRONALStruct implements routines.system.IPersistableRow<RETRO_APORTE_PATRONALStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RETRO_APORTE_PATRONALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE_PATRONAL;

				public BigDecimal getTOTAL_APORTE_PATRONAL () {
					return this.TOTAL_APORTE_PATRONAL;
				}

				public Boolean TOTAL_APORTE_PATRONALIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTE_PATRONALIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTE_PATRONALLength(){
				    return null;
				}
				public Integer TOTAL_APORTE_PATRONALPrecision(){
				    return null;
				}
				public String TOTAL_APORTE_PATRONALDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTE_PATRONALComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTE_PATRONALPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTE_PATRONALOriginalDbColumnName(){
				
					return "TOTAL_APORTE_PATRONAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_PATRONAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE_PATRONAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE_PATRONAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE_PATRONAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE_PATRONAL="+String.valueOf(TOTAL_APORTE_PATRONAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RETRO_ATEP_PATRONALStruct implements routines.system.IPersistableRow<RETRO_ATEP_PATRONALStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return null;
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RETRO_ATEP_PATRONALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return 0;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return 0;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class APORTE_PATRONAL_ATEPStruct implements routines.system.IPersistableRow<APORTE_PATRONAL_ATEPStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String DESCRIPCION_APORTE;

				public String getDESCRIPCION_APORTE () {
					return this.DESCRIPCION_APORTE;
				}

				public Boolean DESCRIPCION_APORTEIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCION_APORTEIsKey(){
				    return false;
				}
				public Integer DESCRIPCION_APORTELength(){
				    return null;
				}
				public Integer DESCRIPCION_APORTEPrecision(){
				    return null;
				}
				public String DESCRIPCION_APORTEDefault(){
				
					return null;
				
				}
				public String DESCRIPCION_APORTEComment(){
				
				    return "";
				
				}
				public String DESCRIPCION_APORTEPattern(){
				
					return "";
				
				}
				public String DESCRIPCION_APORTEOriginalDbColumnName(){
				
					return "DESCRIPCION_APORTE";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				
			    public int TIPO_INGRESO;

				public int getTIPO_INGRESO () {
					return this.TIPO_INGRESO;
				}

				public Boolean TIPO_INGRESOIsNullable(){
				    return false;
				}
				public Boolean TIPO_INGRESOIsKey(){
				    return false;
				}
				public Integer TIPO_INGRESOLength(){
				    return null;
				}
				public Integer TIPO_INGRESOPrecision(){
				    return null;
				}
				public String TIPO_INGRESODefault(){
				
					return "";
				
				}
				public String TIPO_INGRESOComment(){
				
				    return "";
				
				}
				public String TIPO_INGRESOPattern(){
				
					return "";
				
				}
				public String TIPO_INGRESOOriginalDbColumnName(){
				
					return "TIPO_INGRESO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.FECHA = readString(dis);
					
					this.DESCRIPCION_APORTE = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
			        this.TIPO_INGRESO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.FECHA,dos);
					
					// String
				
						writeString(this.DESCRIPCION_APORTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
					// int
				
		            	dos.writeInt(this.TIPO_INGRESO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",FECHA="+FECHA);
		sb.append(",DESCRIPCION_APORTE="+DESCRIPCION_APORTE);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
		sb.append(",TIPO_INGRESO="+String.valueOf(TIPO_INGRESO));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(APORTE_PATRONAL_ATEPStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TOTAL_APORTE;

				public BigDecimal getTOTAL_APORTE () {
					return this.TOTAL_APORTE;
				}

				public Boolean TOTAL_APORTEIsNullable(){
				    return true;
				}
				public Boolean TOTAL_APORTEIsKey(){
				    return false;
				}
				public Integer TOTAL_APORTELength(){
				    return null;
				}
				public Integer TOTAL_APORTEPrecision(){
				    return null;
				}
				public String TOTAL_APORTEDefault(){
				
					return "";
				
				}
				public String TOTAL_APORTEComment(){
				
				    return "";
				
				}
				public String TOTAL_APORTEPattern(){
				
					return "";
				
				}
				public String TOTAL_APORTEOriginalDbColumnName(){
				
					return "TOTAL_APORTE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.TOTAL_APORTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_APORTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TOTAL_APORTE="+String.valueOf(TOTAL_APORTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_9Process(globalMap);

		row18Struct row18 = new row18Struct();
APORTE_COTIZANTE_SALUDStruct APORTE_COTIZANTE_SALUD = new APORTE_COTIZANTE_SALUDStruct();

		row19Struct row19 = new row19Struct();
APORTE_PATRONAL_ATEPStruct APORTE_PATRONAL_ATEP = new APORTE_PATRONAL_ATEPStruct();

		row20Struct row20 = new row20Struct();
RETRO_APORTE_COTIZANTEStruct RETRO_APORTE_COTIZANTE = new RETRO_APORTE_COTIZANTEStruct();

		row21Struct row21 = new row21Struct();
RETRO_ATEP_PATRONALStruct RETRO_ATEP_PATRONAL = new RETRO_ATEP_PATRONALStruct();

		row22Struct row22 = new row22Struct();
NOVESP_PATRONALStruct NOVESP_PATRONAL = new NOVESP_PATRONALStruct();

		row23Struct row23 = new row23Struct();
APORTE_PATRONAL_SALUDStruct APORTE_PATRONAL_SALUD = new APORTE_PATRONAL_SALUDStruct();

		row24Struct row24 = new row24Struct();
RETRO_APORTE_PATRONALStruct RETRO_APORTE_PATRONAL = new RETRO_APORTE_PATRONALStruct();

		row28Struct row28 = new row28Struct();
APORTE_CARNETStruct APORTE_CARNET = new APORTE_CARNETStruct();

		row29Struct row29 = new row29Struct();
APORTE_PPDCStruct APORTE_PPDC = new APORTE_PPDCStruct();

		row30Struct row30 = new row30Struct();
APORTE_VENTAStruct APORTE_VENTA = new APORTE_VENTAStruct();

		row31Struct row31 = new row31Struct();
PORCENTAJE_UPCStruct PORCENTAJE_UPC = new PORCENTAJE_UPCStruct();

		row32Struct row32 = new row32Struct();
PORCENTAJE_PPCDStruct PORCENTAJE_PPCD = new PORCENTAJE_PPCDStruct();

			row25Struct row25 = new row25Struct();
row26Struct row26 = new row26Struct();
row27Struct row27 = new row27Struct();
TIEMPO_TOTALESStruct TIEMPO_TOTALES = new TIEMPO_TOTALESStruct();
row33Struct row33 = new row33Struct();
out1Struct out1 = new out1Struct();
TOTALES_RECAUDOStruct TOTALES_RECAUDO = new TOTALES_RECAUDOStruct();
row36Struct row36 = new row36Struct();




	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tAggregateRow_1_AGGOUT");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal ID;
    				int TIPO_RECAUDO;
    				String FECHA;
    				String DESCRIPCION_APORTE;
    				int TIPO_INGRESO;
    				String PERIODO;BigDecimal TOTAL_APORTE_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
							
								result = prime * result + (int) this.TIPO_RECAUDO;
							
							result = prime * result + ((this.FECHA == null) ? 0 : this.FECHA.hashCode());
							
							result = prime * result + ((this.DESCRIPCION_APORTE == null) ? 0 : this.DESCRIPCION_APORTE.hashCode());
							
								result = prime * result + (int) this.TIPO_INGRESO;
							
							result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
							if (this.ID == null) {
								if (other.ID != null) 
									return false;
							} else if (!this.ID.equals(other.ID)) 
								return false;
						
							if (this.TIPO_RECAUDO != other.TIPO_RECAUDO) 
								return false;
						
							if (this.FECHA == null) {
								if (other.FECHA != null) 
									return false;
							} else if (!this.FECHA.equals(other.FECHA)) 
								return false;
						
							if (this.DESCRIPCION_APORTE == null) {
								if (other.DESCRIPCION_APORTE != null) 
									return false;
							} else if (!this.DESCRIPCION_APORTE.equals(other.DESCRIPCION_APORTE)) 
								return false;
						
							if (this.TIPO_INGRESO != other.TIPO_INGRESO) 
								return false;
						
							if (this.PERIODO == null) {
								if (other.PERIODO != null) 
									return false;
							} else if (!this.PERIODO.equals(other.PERIODO)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */



	
	/**
	 * [tUnite_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_3", false);
		start_Hash.put("tUnite_3", System.currentTimeMillis());
		
	
	currentComponent="tUnite_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"APORTE_COTIZANTE_SALUD","RETRO_APORTE_COTIZANTE","APORTE_PATRONAL_ATEP","RETRO_ATEP_PATRONAL","APORTE_PATRONAL_SALUD","PORCENTAJE_UPC","PORCENTAJE_PPCD","NOVESP_PATRONAL","RETRO_APORTE_PATRONAL","APORTE_VENTA","APORTE_CARNET","APORTE_PPDC");
					}
				
		int tos_count_tUnite_3 = 0;
		

int nb_line_tUnite_3 = 0;

 



/**
 * [tUnite_3 begin ] stop
 */

	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
	int TIPO_RECAUDO;
	String FECHA;
	String APORTE_COTIZANTE;
	int TIPO_INGRESO;
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_COTIZANTE_SALUDStruct APORTE_COTIZANTE_SALUD_tmp = new APORTE_COTIZANTE_SALUDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tOracleInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_15", false);
		start_Hash.put("tOracleInput_15", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_15");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_15";
	
	
		int tos_count_tOracleInput_15 = 0;
		
	


	
		    int nb_line_tOracleInput_15 = 0;
		    java.sql.Connection conn_tOracleInput_15 = null;
				conn_tOracleInput_15 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_15 = false;
				boolean isConnectionWrapped_tOracleInput_15 = !(conn_tOracleInput_15 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_15.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_15 = null;
                if (isConnectionWrapped_tOracleInput_15) {
					unwrappedOraConn_tOracleInput_15 = conn_tOracleInput_15.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_15 != null) {
                        isTimeZoneNull_tOracleInput_15 = (unwrappedOraConn_tOracleInput_15.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_15 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_15).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_15) {
					java.sql.Statement stmtGetTZ_tOracleInput_15 = conn_tOracleInput_15.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_15 = stmtGetTZ_tOracleInput_15.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_15 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_15.next()) {
						sessionTimezone_tOracleInput_15 = rsGetTZ_tOracleInput_15.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_15 && unwrappedOraConn_tOracleInput_15 != null) {
                        unwrappedOraConn_tOracleInput_15.setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_15).setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_15 = conn_tOracleInput_15.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_15.setFetchSize(1000);


		    String dbquery_tOracleInput_15 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADO_EPS, 0)) AS TOTAL_APORTE_COTIZANTE\nFROM VM_"
+"REC_CONSOLIDADO CG \nINNER JOIN REC_DSALUD DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 1 \n  AND CG.TARCHIVOS_ID = "
+"1\n  AND CG.PERIODO = '" + context.PERIODO + "' \n  GROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_15_QUERY",dbquery_tOracleInput_15);

		    java.sql.ResultSet rs_tOracleInput_15 = null;

		    try {
		    	rs_tOracleInput_15 = stmt_tOracleInput_15.executeQuery(dbquery_tOracleInput_15);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_15 = rs_tOracleInput_15.getMetaData();
		    	int colQtyInRs_tOracleInput_15 = rsmd_tOracleInput_15.getColumnCount();

		    String tmpContent_tOracleInput_15 = null;
		    
		    
		    while (rs_tOracleInput_15.next()) {
		        nb_line_tOracleInput_15++;
		        
							if(colQtyInRs_tOracleInput_15 < 1) {
								row18.ID = null;
							} else {
		                          
					if(rs_tOracleInput_15.getObject(1) != null) {
						row18.ID = rs_tOracleInput_15.getBigDecimal(1);
					} else {
				
						row18.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_15 < 2) {
								row18.PERIODO = null;
							} else {
	                         		
        	row18.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 3) {
								row18.TOTAL_APORTE_COTIZANTE = null;
							} else {
		                          
					if(rs_tOracleInput_15.getObject(3) != null) {
						row18.TOTAL_APORTE_COTIZANTE = rs_tOracleInput_15.getBigDecimal(3);
					} else {
				
						row18.TOTAL_APORTE_COTIZANTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_15 begin ] stop
 */
	
	/**
	 * [tOracleInput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 


	tos_count_tOracleInput_15++;

/**
 * [tOracleInput_15 main ] stop
 */
	
	/**
	 * [tOracleInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;
Var.TIPO_RECAUDO = 1;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row18.PERIODO + "-01")))) ;
Var.APORTE_COTIZANTE = "APORTE COTIZANTE";
Var.TIPO_INGRESO = 2;// ###############################
        // ###############################
        // # Output tables

APORTE_COTIZANTE_SALUD = null;


// # Output table : 'APORTE_COTIZANTE_SALUD'
APORTE_COTIZANTE_SALUD_tmp.ID = row18.ID ;
APORTE_COTIZANTE_SALUD_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_COTIZANTE_SALUD_tmp.FECHA = Var.FECHA ;
APORTE_COTIZANTE_SALUD_tmp.DESCRIPCION_APORTE = Var.APORTE_COTIZANTE ;
APORTE_COTIZANTE_SALUD_tmp.TOTAL_APORTE = row18.TOTAL_APORTE_COTIZANTE ;
APORTE_COTIZANTE_SALUD_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_COTIZANTE_SALUD_tmp.PERIODO = row18.PERIODO ;
APORTE_COTIZANTE_SALUD = APORTE_COTIZANTE_SALUD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "APORTE_COTIZANTE_SALUD"
if(APORTE_COTIZANTE_SALUD != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_COTIZANTE_SALUD"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_COTIZANTE_SALUD.ID;								
			row25.TIPO_RECAUDO = APORTE_COTIZANTE_SALUD.TIPO_RECAUDO;								
			row25.FECHA = APORTE_COTIZANTE_SALUD.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_COTIZANTE_SALUD.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_COTIZANTE_SALUD.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_COTIZANTE_SALUD.TIPO_INGRESO;								
			row25.PERIODO = APORTE_COTIZANTE_SALUD.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_COTIZANTE_SALUD"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

}
}finally{
	if (rs_tOracleInput_15 != null) {
		rs_tOracleInput_15.close();
	}
	if (stmt_tOracleInput_15 != null) {
		stmt_tOracleInput_15.close();
	}
}

globalMap.put("tOracleInput_15_NB_LINE",nb_line_tOracleInput_15);
 

ok_Hash.put("tOracleInput_15", true);
end_Hash.put("tOracleInput_15", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_15", end_Hash.get("tOracleInput_15")-start_Hash.get("tOracleInput_15"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_15 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */




	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
	int TIPO_RECAUDO;
	String FECHA;
	String APORTE_ATEP;
	int TIPO_INGRESO;
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_PATRONAL_ATEPStruct APORTE_PATRONAL_ATEP_tmp = new APORTE_PATRONAL_ATEPStruct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tOracleInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_16", false);
		start_Hash.put("tOracleInput_16", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_16");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_16";
	
	
		int tos_count_tOracleInput_16 = 0;
		
	


	
		    int nb_line_tOracleInput_16 = 0;
		    java.sql.Connection conn_tOracleInput_16 = null;
				conn_tOracleInput_16 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_16 = false;
				boolean isConnectionWrapped_tOracleInput_16 = !(conn_tOracleInput_16 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_16.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_16 = null;
                if (isConnectionWrapped_tOracleInput_16) {
					unwrappedOraConn_tOracleInput_16 = conn_tOracleInput_16.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_16 != null) {
                        isTimeZoneNull_tOracleInput_16 = (unwrappedOraConn_tOracleInput_16.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_16 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_16).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_16) {
					java.sql.Statement stmtGetTZ_tOracleInput_16 = conn_tOracleInput_16.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_16 = stmtGetTZ_tOracleInput_16.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_16 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_16.next()) {
						sessionTimezone_tOracleInput_16 = rsGetTZ_tOracleInput_16.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_16 && unwrappedOraConn_tOracleInput_16 != null) {
                        unwrappedOraConn_tOracleInput_16.setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_16).setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_16 = conn_tOracleInput_16.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_16.setFetchSize(1000);


		    String dbquery_tOracleInput_16 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADOR_ARL, 0)) AS TOTAL_APORTE_COTIZANTE\nFROM VM"
+"_REC_CONSOLIDADO CG \nINNER JOIN REC_DSALUD DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 1 \n  AND CG.TARCHIVOS_ID ="
+" 2\n  AND CG.PERIODO = '" + context.PERIODO + "'\nGROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_16_QUERY",dbquery_tOracleInput_16);

		    java.sql.ResultSet rs_tOracleInput_16 = null;

		    try {
		    	rs_tOracleInput_16 = stmt_tOracleInput_16.executeQuery(dbquery_tOracleInput_16);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_16 = rs_tOracleInput_16.getMetaData();
		    	int colQtyInRs_tOracleInput_16 = rsmd_tOracleInput_16.getColumnCount();

		    String tmpContent_tOracleInput_16 = null;
		    
		    
		    while (rs_tOracleInput_16.next()) {
		        nb_line_tOracleInput_16++;
		        
							if(colQtyInRs_tOracleInput_16 < 1) {
								row19.ID = null;
							} else {
		                          
					if(rs_tOracleInput_16.getObject(1) != null) {
						row19.ID = rs_tOracleInput_16.getBigDecimal(1);
					} else {
				
						row19.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_16 < 2) {
								row19.PERIODO = null;
							} else {
	                         		
        	row19.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_16, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_16 < 3) {
								row19.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_16.getObject(3) != null) {
						row19.TOTAL_APORTE = rs_tOracleInput_16.getBigDecimal(3);
					} else {
				
						row19.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_16 begin ] stop
 */
	
	/**
	 * [tOracleInput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 


	tos_count_tOracleInput_16++;

/**
 * [tOracleInput_16 main ] stop
 */
	
	/**
	 * [tOracleInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;
Var.TIPO_RECAUDO = 2;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row19.PERIODO + "-01")))) ;
Var.APORTE_ATEP = "APORTE ATEP";
Var.TIPO_INGRESO = 3;// ###############################
        // ###############################
        // # Output tables

APORTE_PATRONAL_ATEP = null;


// # Output table : 'APORTE_PATRONAL_ATEP'
APORTE_PATRONAL_ATEP_tmp.ID = row19.ID ;
APORTE_PATRONAL_ATEP_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_PATRONAL_ATEP_tmp.FECHA = Var.FECHA ;
APORTE_PATRONAL_ATEP_tmp.DESCRIPCION_APORTE = Var.APORTE_ATEP ;
APORTE_PATRONAL_ATEP_tmp.TOTAL_APORTE = row19.TOTAL_APORTE ;
APORTE_PATRONAL_ATEP_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_PATRONAL_ATEP_tmp.PERIODO = row19.PERIODO ;
APORTE_PATRONAL_ATEP = APORTE_PATRONAL_ATEP_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "APORTE_PATRONAL_ATEP"
if(APORTE_PATRONAL_ATEP != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_PATRONAL_ATEP"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_PATRONAL_ATEP.ID;								
			row25.TIPO_RECAUDO = APORTE_PATRONAL_ATEP.TIPO_RECAUDO;								
			row25.FECHA = APORTE_PATRONAL_ATEP.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_PATRONAL_ATEP.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_PATRONAL_ATEP.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_PATRONAL_ATEP.TIPO_INGRESO;								
			row25.PERIODO = APORTE_PATRONAL_ATEP.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_PATRONAL_ATEP"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

}
}finally{
	if (rs_tOracleInput_16 != null) {
		rs_tOracleInput_16.close();
	}
	if (stmt_tOracleInput_16 != null) {
		stmt_tOracleInput_16.close();
	}
}

globalMap.put("tOracleInput_16_NB_LINE",nb_line_tOracleInput_16);
 

ok_Hash.put("tOracleInput_16", true);
end_Hash.put("tOracleInput_16", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_16", end_Hash.get("tOracleInput_16")-start_Hash.get("tOracleInput_16"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_16 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */




	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
	int TIPO_RECAUDO;
	String APORTE_COTIZANTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
RETRO_APORTE_COTIZANTEStruct RETRO_APORTE_COTIZANTE_tmp = new RETRO_APORTE_COTIZANTEStruct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tOracleInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_17", false);
		start_Hash.put("tOracleInput_17", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_17");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_17";
	
	
		int tos_count_tOracleInput_17 = 0;
		
	


	
		    int nb_line_tOracleInput_17 = 0;
		    java.sql.Connection conn_tOracleInput_17 = null;
				conn_tOracleInput_17 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_17 = false;
				boolean isConnectionWrapped_tOracleInput_17 = !(conn_tOracleInput_17 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_17.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_17 = null;
                if (isConnectionWrapped_tOracleInput_17) {
					unwrappedOraConn_tOracleInput_17 = conn_tOracleInput_17.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_17 != null) {
                        isTimeZoneNull_tOracleInput_17 = (unwrappedOraConn_tOracleInput_17.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_17 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_17).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_17) {
					java.sql.Statement stmtGetTZ_tOracleInput_17 = conn_tOracleInput_17.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_17 = stmtGetTZ_tOracleInput_17.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_17 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_17.next()) {
						sessionTimezone_tOracleInput_17 = rsGetTZ_tOracleInput_17.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_17 && unwrappedOraConn_tOracleInput_17 != null) {
                        unwrappedOraConn_tOracleInput_17.setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_17).setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_17 = conn_tOracleInput_17.createStatement();

		    String dbquery_tOracleInput_17 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADO_EPS, 0)) AS TOTAL_APORTE_COTIZANTE\nFROM VM_"
+"REC_CONSOLIDADO CG \nINNER JOIN REC_DRETROACTIVO DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 2\n  AND CG.TARCHIVOS_"
+"ID = 1\n  AND CG.PERIODO = '" + context.PERIODO + "'\nGROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_17_QUERY",dbquery_tOracleInput_17);

		    java.sql.ResultSet rs_tOracleInput_17 = null;

		    try {
		    	rs_tOracleInput_17 = stmt_tOracleInput_17.executeQuery(dbquery_tOracleInput_17);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_17 = rs_tOracleInput_17.getMetaData();
		    	int colQtyInRs_tOracleInput_17 = rsmd_tOracleInput_17.getColumnCount();

		    String tmpContent_tOracleInput_17 = null;
		    
		    
		    while (rs_tOracleInput_17.next()) {
		        nb_line_tOracleInput_17++;
		        
							if(colQtyInRs_tOracleInput_17 < 1) {
								row20.ID = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(1) != null) {
						row20.ID = rs_tOracleInput_17.getBigDecimal(1);
					} else {
				
						row20.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 2) {
								row20.PERIODO = null;
							} else {
	                         		
        	row20.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 3) {
								row20.TOTAL_APORTE_COTIZANTE = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(3) != null) {
						row20.TOTAL_APORTE_COTIZANTE = rs_tOracleInput_17.getBigDecimal(3);
					} else {
				
						row20.TOTAL_APORTE_COTIZANTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_17 begin ] stop
 */
	
	/**
	 * [tOracleInput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 


	tos_count_tOracleInput_17++;

/**
 * [tOracleInput_17 main ] stop
 */
	
	/**
	 * [tOracleInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;
Var.TIPO_RECAUDO = 3;
Var.APORTE_COTIZANTE = "APORTE COTIZANTE";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row20.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 2;// ###############################
        // ###############################
        // # Output tables

RETRO_APORTE_COTIZANTE = null;


// # Output table : 'RETRO_APORTE_COTIZANTE'
RETRO_APORTE_COTIZANTE_tmp.ID = row20.ID ;
RETRO_APORTE_COTIZANTE_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RETRO_APORTE_COTIZANTE_tmp.FECHA = Var.FECHA ;
RETRO_APORTE_COTIZANTE_tmp.DESCRIPCION_APORTE = Var.APORTE_COTIZANTE ;
RETRO_APORTE_COTIZANTE_tmp.TOTAL_APORTE = row20.TOTAL_APORTE_COTIZANTE ;
RETRO_APORTE_COTIZANTE_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
RETRO_APORTE_COTIZANTE_tmp.PERIODO = row20.PERIODO ;
RETRO_APORTE_COTIZANTE = RETRO_APORTE_COTIZANTE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "RETRO_APORTE_COTIZANTE"
if(RETRO_APORTE_COTIZANTE != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RETRO_APORTE_COTIZANTE"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = RETRO_APORTE_COTIZANTE.ID;								
			row25.TIPO_RECAUDO = RETRO_APORTE_COTIZANTE.TIPO_RECAUDO;								
			row25.FECHA = RETRO_APORTE_COTIZANTE.FECHA;								
			row25.DESCRIPCION_APORTE = RETRO_APORTE_COTIZANTE.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = RETRO_APORTE_COTIZANTE.TOTAL_APORTE;								
			row25.TIPO_INGRESO = RETRO_APORTE_COTIZANTE.TIPO_INGRESO;								
			row25.PERIODO = RETRO_APORTE_COTIZANTE.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "RETRO_APORTE_COTIZANTE"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

}
}finally{
	if (rs_tOracleInput_17 != null) {
		rs_tOracleInput_17.close();
	}
	if (stmt_tOracleInput_17 != null) {
		stmt_tOracleInput_17.close();
	}
}

globalMap.put("tOracleInput_17_NB_LINE",nb_line_tOracleInput_17);
 

ok_Hash.put("tOracleInput_17", true);
end_Hash.put("tOracleInput_17", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_17", end_Hash.get("tOracleInput_17")-start_Hash.get("tOracleInput_17"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_17 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */




	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
	int TIPO_RECAUDO;
	String APORTE_ATEP;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
RETRO_ATEP_PATRONALStruct RETRO_ATEP_PATRONAL_tmp = new RETRO_ATEP_PATRONALStruct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tOracleInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_18", false);
		start_Hash.put("tOracleInput_18", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_18");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_18";
	
	
		int tos_count_tOracleInput_18 = 0;
		
	


	
		    int nb_line_tOracleInput_18 = 0;
		    java.sql.Connection conn_tOracleInput_18 = null;
				conn_tOracleInput_18 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_18 = false;
				boolean isConnectionWrapped_tOracleInput_18 = !(conn_tOracleInput_18 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_18.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_18 = null;
                if (isConnectionWrapped_tOracleInput_18) {
					unwrappedOraConn_tOracleInput_18 = conn_tOracleInput_18.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_18 != null) {
                        isTimeZoneNull_tOracleInput_18 = (unwrappedOraConn_tOracleInput_18.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_18 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_18).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_18) {
					java.sql.Statement stmtGetTZ_tOracleInput_18 = conn_tOracleInput_18.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_18 = stmtGetTZ_tOracleInput_18.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_18 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_18.next()) {
						sessionTimezone_tOracleInput_18 = rsGetTZ_tOracleInput_18.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_18 && unwrappedOraConn_tOracleInput_18 != null) {
                        unwrappedOraConn_tOracleInput_18.setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_18).setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_18 = conn_tOracleInput_18.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_18.setFetchSize(1000);


		    String dbquery_tOracleInput_18 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADOR_ARL, 0)) AS TOTAL_APORTE_COTIZANTE\nFROM VM"
+"_REC_CONSOLIDADO CG \nINNER JOIN REC_DRETROACTIVO DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 2\n  AND CG.TARCHIVOS"
+"_ID = 2\n  AND CG.PERIODO = '" + context.PERIODO + "'\n  GROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_18_QUERY",dbquery_tOracleInput_18);

		    java.sql.ResultSet rs_tOracleInput_18 = null;

		    try {
		    	rs_tOracleInput_18 = stmt_tOracleInput_18.executeQuery(dbquery_tOracleInput_18);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_18 = rs_tOracleInput_18.getMetaData();
		    	int colQtyInRs_tOracleInput_18 = rsmd_tOracleInput_18.getColumnCount();

		    String tmpContent_tOracleInput_18 = null;
		    
		    
		    while (rs_tOracleInput_18.next()) {
		        nb_line_tOracleInput_18++;
		        
							if(colQtyInRs_tOracleInput_18 < 1) {
								row21.ID = null;
							} else {
		                          
					if(rs_tOracleInput_18.getObject(1) != null) {
						row21.ID = rs_tOracleInput_18.getBigDecimal(1);
					} else {
				
						row21.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_18 < 2) {
								row21.PERIODO = null;
							} else {
	                         		
        	row21.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_18, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_18 < 3) {
								row21.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_18.getObject(3) != null) {
						row21.TOTAL_APORTE = rs_tOracleInput_18.getBigDecimal(3);
					} else {
				
						row21.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_18 begin ] stop
 */
	
	/**
	 * [tOracleInput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 


	tos_count_tOracleInput_18++;

/**
 * [tOracleInput_18 main ] stop
 */
	
	/**
	 * [tOracleInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_19 = false;
		boolean mainRowRejected_tMap_19 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;
Var.TIPO_RECAUDO = 4;
Var.APORTE_ATEP = "APORTE ATEP";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row21.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 3;// ###############################
        // ###############################
        // # Output tables

RETRO_ATEP_PATRONAL = null;


// # Output table : 'RETRO_ATEP_PATRONAL'
RETRO_ATEP_PATRONAL_tmp.ID = row21.ID ;
RETRO_ATEP_PATRONAL_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RETRO_ATEP_PATRONAL_tmp.FECHA = Var.FECHA ;
RETRO_ATEP_PATRONAL_tmp.DESCRIPCION_APORTE = Var.APORTE_ATEP ;
RETRO_ATEP_PATRONAL_tmp.TOTAL_APORTE = row21.TOTAL_APORTE ;
RETRO_ATEP_PATRONAL_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
RETRO_ATEP_PATRONAL_tmp.PERIODO = row21.PERIODO ;
RETRO_ATEP_PATRONAL = RETRO_ATEP_PATRONAL_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "RETRO_ATEP_PATRONAL"
if(RETRO_ATEP_PATRONAL != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RETRO_ATEP_PATRONAL"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = RETRO_ATEP_PATRONAL.ID;								
			row25.TIPO_RECAUDO = RETRO_ATEP_PATRONAL.TIPO_RECAUDO;								
			row25.FECHA = RETRO_ATEP_PATRONAL.FECHA;								
			row25.DESCRIPCION_APORTE = RETRO_ATEP_PATRONAL.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = RETRO_ATEP_PATRONAL.TOTAL_APORTE;								
			row25.TIPO_INGRESO = RETRO_ATEP_PATRONAL.TIPO_INGRESO;								
			row25.PERIODO = RETRO_ATEP_PATRONAL.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "RETRO_ATEP_PATRONAL"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

}
}finally{
	if (rs_tOracleInput_18 != null) {
		rs_tOracleInput_18.close();
	}
	if (stmt_tOracleInput_18 != null) {
		stmt_tOracleInput_18.close();
	}
}

globalMap.put("tOracleInput_18_NB_LINE",nb_line_tOracleInput_18);
 

ok_Hash.put("tOracleInput_18", true);
end_Hash.put("tOracleInput_18", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_18", end_Hash.get("tOracleInput_18")-start_Hash.get("tOracleInput_18"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_18 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */




	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
	int TIPO_RECAUDO;
	String APORTE_PATRONAL;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
NOVESP_PATRONALStruct NOVESP_PATRONAL_tmp = new NOVESP_PATRONALStruct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tOracleInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_19", false);
		start_Hash.put("tOracleInput_19", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_19");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_19";
	
	
		int tos_count_tOracleInput_19 = 0;
		
	


	
		    int nb_line_tOracleInput_19 = 0;
		    java.sql.Connection conn_tOracleInput_19 = null;
				conn_tOracleInput_19 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_19 = false;
				boolean isConnectionWrapped_tOracleInput_19 = !(conn_tOracleInput_19 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_19.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_19 = null;
                if (isConnectionWrapped_tOracleInput_19) {
					unwrappedOraConn_tOracleInput_19 = conn_tOracleInput_19.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_19 != null) {
                        isTimeZoneNull_tOracleInput_19 = (unwrappedOraConn_tOracleInput_19.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_19 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_19).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_19) {
					java.sql.Statement stmtGetTZ_tOracleInput_19 = conn_tOracleInput_19.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_19 = stmtGetTZ_tOracleInput_19.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_19 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_19.next()) {
						sessionTimezone_tOracleInput_19 = rsGetTZ_tOracleInput_19.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_19 && unwrappedOraConn_tOracleInput_19 != null) {
                        unwrappedOraConn_tOracleInput_19.setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_19).setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_19 = conn_tOracleInput_19.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_19.setFetchSize(1000);


		    String dbquery_tOracleInput_19 = "SELECT \n  MAX(CG.ID) AS ID, \n  CG.PERIODO, \n  SUM(NVL(DS.VALOR_APORTE, 0)) AS TOTAL_APORTE\nFROM VM_REC_CONSOLIDADO "
+"CG\nINNER JOIN REC_DNOVEDADESP DS ON DS.ID = CG.RDSD_ID\nWHERE \n  CG.TPLANILLAS_ID = 3 \n  AND CG.TARCHIVOS_ID = 1\n  A"
+"ND CG.PERIODO = '" + context.PERIODO + "'\nGROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_19_QUERY",dbquery_tOracleInput_19);

		    java.sql.ResultSet rs_tOracleInput_19 = null;

		    try {
		    	rs_tOracleInput_19 = stmt_tOracleInput_19.executeQuery(dbquery_tOracleInput_19);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_19 = rs_tOracleInput_19.getMetaData();
		    	int colQtyInRs_tOracleInput_19 = rsmd_tOracleInput_19.getColumnCount();

		    String tmpContent_tOracleInput_19 = null;
		    
		    
		    while (rs_tOracleInput_19.next()) {
		        nb_line_tOracleInput_19++;
		        
							if(colQtyInRs_tOracleInput_19 < 1) {
								row22.ID = null;
							} else {
		                          
					if(rs_tOracleInput_19.getObject(1) != null) {
						row22.ID = rs_tOracleInput_19.getBigDecimal(1);
					} else {
				
						row22.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_19 < 2) {
								row22.PERIODO = null;
							} else {
	                         		
        	row22.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_19, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_19 < 3) {
								row22.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_19.getObject(3) != null) {
						row22.TOTAL_APORTE = rs_tOracleInput_19.getBigDecimal(3);
					} else {
				
						row22.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_19 begin ] stop
 */
	
	/**
	 * [tOracleInput_19 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 


	tos_count_tOracleInput_19++;

/**
 * [tOracleInput_19 main ] stop
 */
	
	/**
	 * [tOracleInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;
Var.TIPO_RECAUDO = 5;
Var.APORTE_PATRONAL = "APORTE PATRONAL";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row22.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 1;// ###############################
        // ###############################
        // # Output tables

NOVESP_PATRONAL = null;


// # Output table : 'NOVESP_PATRONAL'
NOVESP_PATRONAL_tmp.ID = row22.ID ;
NOVESP_PATRONAL_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
NOVESP_PATRONAL_tmp.FECHA = Var.FECHA ;
NOVESP_PATRONAL_tmp.DESCRIPCION_APORTE = Var.APORTE_PATRONAL ;
NOVESP_PATRONAL_tmp.TOTAL_APORTE = row22.TOTAL_APORTE ;
NOVESP_PATRONAL_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
NOVESP_PATRONAL_tmp.PERIODO = row22.PERIODO ;
NOVESP_PATRONAL = NOVESP_PATRONAL_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "NOVESP_PATRONAL"
if(NOVESP_PATRONAL != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"NOVESP_PATRONAL"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = NOVESP_PATRONAL.ID;								
			row25.TIPO_RECAUDO = NOVESP_PATRONAL.TIPO_RECAUDO;								
			row25.FECHA = NOVESP_PATRONAL.FECHA;								
			row25.DESCRIPCION_APORTE = NOVESP_PATRONAL.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = NOVESP_PATRONAL.TOTAL_APORTE;								
			row25.TIPO_INGRESO = NOVESP_PATRONAL.TIPO_INGRESO;								
			row25.PERIODO = NOVESP_PATRONAL.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "NOVESP_PATRONAL"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_19 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

}
}finally{
	if (rs_tOracleInput_19 != null) {
		rs_tOracleInput_19.close();
	}
	if (stmt_tOracleInput_19 != null) {
		stmt_tOracleInput_19.close();
	}
}

globalMap.put("tOracleInput_19_NB_LINE",nb_line_tOracleInput_19);
 

ok_Hash.put("tOracleInput_19", true);
end_Hash.put("tOracleInput_19", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_19", end_Hash.get("tOracleInput_19")-start_Hash.get("tOracleInput_19"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_19 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */




	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
	int TIPO_RECAUDO;
	String FECHA;
	String APORTE_PATRONAL;
	int TIPO_INGRESO;
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_PATRONAL_SALUDStruct APORTE_PATRONAL_SALUD_tmp = new APORTE_PATRONAL_SALUDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tOracleInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_20", false);
		start_Hash.put("tOracleInput_20", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_20");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_20";
	
	
		int tos_count_tOracleInput_20 = 0;
		
	


	
		    int nb_line_tOracleInput_20 = 0;
		    java.sql.Connection conn_tOracleInput_20 = null;
				conn_tOracleInput_20 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_20 = false;
				boolean isConnectionWrapped_tOracleInput_20 = !(conn_tOracleInput_20 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_20.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_20 = null;
                if (isConnectionWrapped_tOracleInput_20) {
					unwrappedOraConn_tOracleInput_20 = conn_tOracleInput_20.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_20 != null) {
                        isTimeZoneNull_tOracleInput_20 = (unwrappedOraConn_tOracleInput_20.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_20 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_20).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_20) {
					java.sql.Statement stmtGetTZ_tOracleInput_20 = conn_tOracleInput_20.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_20 = stmtGetTZ_tOracleInput_20.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_20 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_20.next()) {
						sessionTimezone_tOracleInput_20 = rsGetTZ_tOracleInput_20.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_20 && unwrappedOraConn_tOracleInput_20 != null) {
                        unwrappedOraConn_tOracleInput_20.setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_20).setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_20 = conn_tOracleInput_20.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_20.setFetchSize(1000);


		    String dbquery_tOracleInput_20 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADOR_EPS, 0)) AS  TOTAL_APORTE_COTIZANTE\nFROM V"
+"M_REC_CONSOLIDADO CG \nINNER JOIN REC_DSALUD DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 1 \n  AND CG.TARCHIVOS_ID "
+"= 1\n  AND CG.PERIODO = '" + context.PERIODO + "'\n  GROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_20_QUERY",dbquery_tOracleInput_20);

		    java.sql.ResultSet rs_tOracleInput_20 = null;

		    try {
		    	rs_tOracleInput_20 = stmt_tOracleInput_20.executeQuery(dbquery_tOracleInput_20);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_20 = rs_tOracleInput_20.getMetaData();
		    	int colQtyInRs_tOracleInput_20 = rsmd_tOracleInput_20.getColumnCount();

		    String tmpContent_tOracleInput_20 = null;
		    
		    
		    while (rs_tOracleInput_20.next()) {
		        nb_line_tOracleInput_20++;
		        
							if(colQtyInRs_tOracleInput_20 < 1) {
								row23.ID = null;
							} else {
		                          
					if(rs_tOracleInput_20.getObject(1) != null) {
						row23.ID = rs_tOracleInput_20.getBigDecimal(1);
					} else {
				
						row23.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_20 < 2) {
								row23.PERIODO = null;
							} else {
	                         		
        	row23.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_20, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_20 < 3) {
								row23.TOTAL_APORTE_PATRONAL = null;
							} else {
		                          
					if(rs_tOracleInput_20.getObject(3) != null) {
						row23.TOTAL_APORTE_PATRONAL = rs_tOracleInput_20.getBigDecimal(3);
					} else {
				
						row23.TOTAL_APORTE_PATRONAL = null;
					}
		                    }
					




 



/**
 * [tOracleInput_20 begin ] stop
 */
	
	/**
	 * [tOracleInput_20 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 


	tos_count_tOracleInput_20++;

/**
 * [tOracleInput_20 main ] stop
 */
	
	/**
	 * [tOracleInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;
Var.TIPO_RECAUDO = 1;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row23.PERIODO + "-01")))) ;
Var.APORTE_PATRONAL = "APORTE PATRONAL";
Var.TIPO_INGRESO = 1;// ###############################
        // ###############################
        // # Output tables

APORTE_PATRONAL_SALUD = null;


// # Output table : 'APORTE_PATRONAL_SALUD'
APORTE_PATRONAL_SALUD_tmp.ID = row23.ID ;
APORTE_PATRONAL_SALUD_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_PATRONAL_SALUD_tmp.FECHA = Var.FECHA ;
APORTE_PATRONAL_SALUD_tmp.DESCRIPCION_APORTE = Var.APORTE_PATRONAL ;
APORTE_PATRONAL_SALUD_tmp.TOTAL_APORTE = row23.TOTAL_APORTE_PATRONAL ;
APORTE_PATRONAL_SALUD_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_PATRONAL_SALUD_tmp.PERIODO = row23.PERIODO ;
APORTE_PATRONAL_SALUD = APORTE_PATRONAL_SALUD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "APORTE_PATRONAL_SALUD"
if(APORTE_PATRONAL_SALUD != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_PATRONAL_SALUD"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_PATRONAL_SALUD.ID;								
			row25.TIPO_RECAUDO = APORTE_PATRONAL_SALUD.TIPO_RECAUDO;								
			row25.FECHA = APORTE_PATRONAL_SALUD.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_PATRONAL_SALUD.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_PATRONAL_SALUD.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_PATRONAL_SALUD.TIPO_INGRESO;								
			row25.PERIODO = APORTE_PATRONAL_SALUD.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_PATRONAL_SALUD"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_20 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

}
}finally{
	if (rs_tOracleInput_20 != null) {
		rs_tOracleInput_20.close();
	}
	if (stmt_tOracleInput_20 != null) {
		stmt_tOracleInput_20.close();
	}
}

globalMap.put("tOracleInput_20_NB_LINE",nb_line_tOracleInput_20);
 

ok_Hash.put("tOracleInput_20", true);
end_Hash.put("tOracleInput_20", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_20", end_Hash.get("tOracleInput_20")-start_Hash.get("tOracleInput_20"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_20 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */




	
	/**
	 * [tMap_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_22", false);
		start_Hash.put("tMap_22", System.currentTimeMillis());
		
	
	currentComponent="tMap_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_22 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_22__Struct  {
	int TIPO_RECAUDO;
	String APORTE_PATRONAL;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
RETRO_APORTE_PATRONALStruct RETRO_APORTE_PATRONAL_tmp = new RETRO_APORTE_PATRONALStruct();
// ###############################

        
        



        









 



/**
 * [tMap_22 begin ] stop
 */



	
	/**
	 * [tOracleInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_21", false);
		start_Hash.put("tOracleInput_21", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_21");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_21";
	
	
		int tos_count_tOracleInput_21 = 0;
		
	


	
		    int nb_line_tOracleInput_21 = 0;
		    java.sql.Connection conn_tOracleInput_21 = null;
				conn_tOracleInput_21 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_21 = false;
				boolean isConnectionWrapped_tOracleInput_21 = !(conn_tOracleInput_21 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_21.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_21 = null;
                if (isConnectionWrapped_tOracleInput_21) {
					unwrappedOraConn_tOracleInput_21 = conn_tOracleInput_21.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_21 != null) {
                        isTimeZoneNull_tOracleInput_21 = (unwrappedOraConn_tOracleInput_21.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_21 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_21).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_21) {
					java.sql.Statement stmtGetTZ_tOracleInput_21 = conn_tOracleInput_21.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_21 = stmtGetTZ_tOracleInput_21.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_21 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_21.next()) {
						sessionTimezone_tOracleInput_21 = rsGetTZ_tOracleInput_21.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_21 && unwrappedOraConn_tOracleInput_21 != null) {
                        unwrappedOraConn_tOracleInput_21.setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_21).setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_21 = conn_tOracleInput_21.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_21.setFetchSize(1000);


		    String dbquery_tOracleInput_21 = "SELECT  \n  MAX(CG.ID), \n  CG.PERIODO, \n  SUM(NVL(DS.COTIZACION_EMPLEADOR_EPS, 0))AS TOTAL_APORTE_COTIZANTE\nFROM VM_"
+"REC_CONSOLIDADO CG \nINNER JOIN REC_DRETROACTIVO DS ON DS.ID = CG.DS_ID\nWHERE CG.TPLANILLAS_ID = 2 \n  AND CG.TARCHIVOS"
+"_ID = 1\n  AND CG.PERIODO = '" + context.PERIODO + "'\n  GROUP BY CG.PERIODO";
		    

		    globalMap.put("tOracleInput_21_QUERY",dbquery_tOracleInput_21);

		    java.sql.ResultSet rs_tOracleInput_21 = null;

		    try {
		    	rs_tOracleInput_21 = stmt_tOracleInput_21.executeQuery(dbquery_tOracleInput_21);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_21 = rs_tOracleInput_21.getMetaData();
		    	int colQtyInRs_tOracleInput_21 = rsmd_tOracleInput_21.getColumnCount();

		    String tmpContent_tOracleInput_21 = null;
		    
		    
		    while (rs_tOracleInput_21.next()) {
		        nb_line_tOracleInput_21++;
		        
							if(colQtyInRs_tOracleInput_21 < 1) {
								row24.ID = null;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(1) != null) {
						row24.ID = rs_tOracleInput_21.getBigDecimal(1);
					} else {
				
						row24.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_21 < 2) {
								row24.PERIODO = null;
							} else {
	                         		
        	row24.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_21, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_21 < 3) {
								row24.TOTAL_APORTE_PATRONAL = null;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(3) != null) {
						row24.TOTAL_APORTE_PATRONAL = rs_tOracleInput_21.getBigDecimal(3);
					} else {
				
						row24.TOTAL_APORTE_PATRONAL = null;
					}
		                    }
					




 



/**
 * [tOracleInput_21 begin ] stop
 */
	
	/**
	 * [tOracleInput_21 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 


	tos_count_tOracleInput_21++;

/**
 * [tOracleInput_21 main ] stop
 */
	
	/**
	 * [tOracleInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tMap_22 main ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_22 = false;
		boolean mainRowRejected_tMap_22 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_22__Struct Var = Var__tMap_22;
Var.TIPO_RECAUDO = 3;
Var.APORTE_PATRONAL = "APORTE PATRONAL";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row24.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 1;// ###############################
        // ###############################
        // # Output tables

RETRO_APORTE_PATRONAL = null;


// # Output table : 'RETRO_APORTE_PATRONAL'
RETRO_APORTE_PATRONAL_tmp.ID = row24.ID ;
RETRO_APORTE_PATRONAL_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
RETRO_APORTE_PATRONAL_tmp.FECHA = Var.FECHA;
RETRO_APORTE_PATRONAL_tmp.DESCRIPCION_APORTE = Var.APORTE_PATRONAL ;
RETRO_APORTE_PATRONAL_tmp.TOTAL_APORTE = row24.TOTAL_APORTE_PATRONAL ;
RETRO_APORTE_PATRONAL_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
RETRO_APORTE_PATRONAL_tmp.PERIODO = row24.PERIODO ;
RETRO_APORTE_PATRONAL = RETRO_APORTE_PATRONAL_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_22 = false;










 


	tos_count_tMap_22++;

/**
 * [tMap_22 main ] stop
 */
	
	/**
	 * [tMap_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_begin ] stop
 */
// Start of branch "RETRO_APORTE_PATRONAL"
if(RETRO_APORTE_PATRONAL != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"RETRO_APORTE_PATRONAL"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = RETRO_APORTE_PATRONAL.ID;								
			row25.TIPO_RECAUDO = RETRO_APORTE_PATRONAL.TIPO_RECAUDO;								
			row25.FECHA = RETRO_APORTE_PATRONAL.FECHA;								
			row25.DESCRIPCION_APORTE = RETRO_APORTE_PATRONAL.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = RETRO_APORTE_PATRONAL.TOTAL_APORTE;								
			row25.TIPO_INGRESO = RETRO_APORTE_PATRONAL.TIPO_INGRESO;								
			row25.PERIODO = RETRO_APORTE_PATRONAL.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "RETRO_APORTE_PATRONAL"




	
	/**
	 * [tMap_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_21 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

}
}finally{
	if (rs_tOracleInput_21 != null) {
		rs_tOracleInput_21.close();
	}
	if (stmt_tOracleInput_21 != null) {
		stmt_tOracleInput_21.close();
	}
}

globalMap.put("tOracleInput_21_NB_LINE",nb_line_tOracleInput_21);
 

ok_Hash.put("tOracleInput_21", true);
end_Hash.put("tOracleInput_21", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_21", end_Hash.get("tOracleInput_21")-start_Hash.get("tOracleInput_21"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_21 end ] stop
 */

	
	/**
	 * [tMap_22 end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_22", true);
end_Hash.put("tMap_22", System.currentTimeMillis());




/**
 * [tMap_22 end ] stop
 */




	
	/**
	 * [tMap_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_23", false);
		start_Hash.put("tMap_23", System.currentTimeMillis());
		
	
	currentComponent="tMap_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tMap_23 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_23__Struct  {
	int TIPO_RECAUDO;
	String DESCRIPCION_APORTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_CARNETStruct APORTE_CARNET_tmp = new APORTE_CARNETStruct();
// ###############################

        
        



        









 



/**
 * [tMap_23 begin ] stop
 */



	
	/**
	 * [tOracleInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_22", false);
		start_Hash.put("tOracleInput_22", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_22");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_22";
	
	
		int tos_count_tOracleInput_22 = 0;
		
	


	
		    int nb_line_tOracleInput_22 = 0;
		    java.sql.Connection conn_tOracleInput_22 = null;
				conn_tOracleInput_22 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_22 = false;
				boolean isConnectionWrapped_tOracleInput_22 = !(conn_tOracleInput_22 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_22.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_22 = null;
                if (isConnectionWrapped_tOracleInput_22) {
					unwrappedOraConn_tOracleInput_22 = conn_tOracleInput_22.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_22 != null) {
                        isTimeZoneNull_tOracleInput_22 = (unwrappedOraConn_tOracleInput_22.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_22 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_22).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_22) {
					java.sql.Statement stmtGetTZ_tOracleInput_22 = conn_tOracleInput_22.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_22 = stmtGetTZ_tOracleInput_22.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_22 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_22.next()) {
						sessionTimezone_tOracleInput_22 = rsGetTZ_tOracleInput_22.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_22 && unwrappedOraConn_tOracleInput_22 != null) {
                        unwrappedOraConn_tOracleInput_22.setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_22).setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_22 = conn_tOracleInput_22.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_22.setFetchSize(1000);


		    String dbquery_tOracleInput_22 = "SELECT MAX(AC.ID) ID, REC.fnc_DateToPeriodo(AC.FECHA) PERIODO, SUM(NVL(AC.VALOR, 0)) TOTAL_APORTE\nFROM AFI_CONSIGNACIO"
+"NES AC\nINNER JOIN AFI_TCONSIGNACIONES TC\nON TC.ID = AC.TCONSIGNACIONES_ID\nWHERE UPPER(TC.NOMBRE) = 'CARNET'\nAND AC.E"
+"STREGISTRO_ID = 1\nAND REC.fnc_DateToPeriodo(AC.FECHA) ='" + context.PERIODO + "' GROUP BY REC.fnc_DateToPeriodo(AC.FECHA)";
		    

		    globalMap.put("tOracleInput_22_QUERY",dbquery_tOracleInput_22);

		    java.sql.ResultSet rs_tOracleInput_22 = null;

		    try {
		    	rs_tOracleInput_22 = stmt_tOracleInput_22.executeQuery(dbquery_tOracleInput_22);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_22 = rs_tOracleInput_22.getMetaData();
		    	int colQtyInRs_tOracleInput_22 = rsmd_tOracleInput_22.getColumnCount();

		    String tmpContent_tOracleInput_22 = null;
		    
		    
		    while (rs_tOracleInput_22.next()) {
		        nb_line_tOracleInput_22++;
		        
							if(colQtyInRs_tOracleInput_22 < 1) {
								row28.ID = null;
							} else {
		                          
					if(rs_tOracleInput_22.getObject(1) != null) {
						row28.ID = rs_tOracleInput_22.getBigDecimal(1);
					} else {
				
						row28.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_22 < 2) {
								row28.PERIODO = null;
							} else {
	                         		
        	row28.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_22, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_22 < 3) {
								row28.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_22.getObject(3) != null) {
						row28.TOTAL_APORTE = rs_tOracleInput_22.getBigDecimal(3);
					} else {
				
						row28.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_22 begin ] stop
 */
	
	/**
	 * [tOracleInput_22 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 


	tos_count_tOracleInput_22++;

/**
 * [tOracleInput_22 main ] stop
 */
	
	/**
	 * [tOracleInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tMap_23 main ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_23 = false;
		boolean mainRowRejected_tMap_23 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_23__Struct Var = Var__tMap_23;
Var.TIPO_RECAUDO = 7;
Var.DESCRIPCION_APORTE = "CARNETIZACION" ;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row28.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 4;// ###############################
        // ###############################
        // # Output tables

APORTE_CARNET = null;


// # Output table : 'APORTE_CARNET'
APORTE_CARNET_tmp.ID = row28.ID ;
APORTE_CARNET_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_CARNET_tmp.FECHA = Var.FECHA ;
APORTE_CARNET_tmp.DESCRIPCION_APORTE = Var.DESCRIPCION_APORTE ;
APORTE_CARNET_tmp.TOTAL_APORTE = row28.TOTAL_APORTE ;
APORTE_CARNET_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_CARNET_tmp.PERIODO = row28.PERIODO ;
APORTE_CARNET = APORTE_CARNET_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_23 = false;










 


	tos_count_tMap_23++;

/**
 * [tMap_23 main ] stop
 */
	
	/**
	 * [tMap_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_begin ] stop
 */
// Start of branch "APORTE_CARNET"
if(APORTE_CARNET != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_CARNET"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_CARNET.ID;								
			row25.TIPO_RECAUDO = APORTE_CARNET.TIPO_RECAUDO;								
			row25.FECHA = APORTE_CARNET.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_CARNET.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_CARNET.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_CARNET.TIPO_INGRESO;								
			row25.PERIODO = APORTE_CARNET.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_CARNET"




	
	/**
	 * [tMap_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_22 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

}
}finally{
	if (rs_tOracleInput_22 != null) {
		rs_tOracleInput_22.close();
	}
	if (stmt_tOracleInput_22 != null) {
		stmt_tOracleInput_22.close();
	}
}

globalMap.put("tOracleInput_22_NB_LINE",nb_line_tOracleInput_22);
 

ok_Hash.put("tOracleInput_22", true);
end_Hash.put("tOracleInput_22", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_22", end_Hash.get("tOracleInput_22")-start_Hash.get("tOracleInput_22"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_22 end ] stop
 */

	
	/**
	 * [tMap_23 end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tMap_23", true);
end_Hash.put("tMap_23", System.currentTimeMillis());




/**
 * [tMap_23 end ] stop
 */




	
	/**
	 * [tMap_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_25", false);
		start_Hash.put("tMap_25", System.currentTimeMillis());
		
	
	currentComponent="tMap_25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tMap_25 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_25__Struct  {
	int TIPO_RECAUDO;
	String DESCRIPCION_APORTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_25__Struct Var__tMap_25 = new Var__tMap_25__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_PPDCStruct APORTE_PPDC_tmp = new APORTE_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_25 begin ] stop
 */



	
	/**
	 * [tOracleInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_23", false);
		start_Hash.put("tOracleInput_23", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_23");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_23";
	
	
		int tos_count_tOracleInput_23 = 0;
		
	


	
		    int nb_line_tOracleInput_23 = 0;
		    java.sql.Connection conn_tOracleInput_23 = null;
				conn_tOracleInput_23 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_23 = false;
				boolean isConnectionWrapped_tOracleInput_23 = !(conn_tOracleInput_23 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_23.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_23 = null;
                if (isConnectionWrapped_tOracleInput_23) {
					unwrappedOraConn_tOracleInput_23 = conn_tOracleInput_23.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_23 != null) {
                        isTimeZoneNull_tOracleInput_23 = (unwrappedOraConn_tOracleInput_23.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_23 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_23).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_23) {
					java.sql.Statement stmtGetTZ_tOracleInput_23 = conn_tOracleInput_23.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_23 = stmtGetTZ_tOracleInput_23.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_23 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_23.next()) {
						sessionTimezone_tOracleInput_23 = rsGetTZ_tOracleInput_23.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_23 && unwrappedOraConn_tOracleInput_23 != null) {
                        unwrappedOraConn_tOracleInput_23.setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_23).setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_23 = conn_tOracleInput_23.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_23.setFetchSize(1000);


		    String dbquery_tOracleInput_23 = "SELECT MAX(AC.ID) ID, REC.fnc_DateToPeriodo(AC.FECHA) PERIODO, SUM(NVL(AC.VALOR, 0)) TOTAL_APORTE\nFROM AFI_CONSIGNACIO"
+"NES AC\nINNER JOIN AFI_TCONSIGNACIONES TC\nON TC.ID = AC.TCONSIGNACIONES_ID\nWHERE UPPER(TC.NOMBRE) = 'PPCD'\nAND AC.EST"
+"REGISTRO_ID = 1\nAND REC.fnc_DateToPeriodo(AC.FECHA) ='" + context.PERIODO + "' GROUP BY REC.fnc_DateToPeriodo(AC.FECHA)";
		    

		    globalMap.put("tOracleInput_23_QUERY",dbquery_tOracleInput_23);

		    java.sql.ResultSet rs_tOracleInput_23 = null;

		    try {
		    	rs_tOracleInput_23 = stmt_tOracleInput_23.executeQuery(dbquery_tOracleInput_23);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_23 = rs_tOracleInput_23.getMetaData();
		    	int colQtyInRs_tOracleInput_23 = rsmd_tOracleInput_23.getColumnCount();

		    String tmpContent_tOracleInput_23 = null;
		    
		    
		    while (rs_tOracleInput_23.next()) {
		        nb_line_tOracleInput_23++;
		        
							if(colQtyInRs_tOracleInput_23 < 1) {
								row29.ID = null;
							} else {
		                          
					if(rs_tOracleInput_23.getObject(1) != null) {
						row29.ID = rs_tOracleInput_23.getBigDecimal(1);
					} else {
				
						row29.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_23 < 2) {
								row29.PERIODO = null;
							} else {
	                         		
        	row29.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_23, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_23 < 3) {
								row29.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_23.getObject(3) != null) {
						row29.TOTAL_APORTE = rs_tOracleInput_23.getBigDecimal(3);
					} else {
				
						row29.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_23 begin ] stop
 */
	
	/**
	 * [tOracleInput_23 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 


	tos_count_tOracleInput_23++;

/**
 * [tOracleInput_23 main ] stop
 */
	
	/**
	 * [tOracleInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tMap_25 main ] start
	 */

	

	
	
	currentComponent="tMap_25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_25 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_25 = false;
		boolean mainRowRejected_tMap_25 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_25__Struct Var = Var__tMap_25;
Var.TIPO_RECAUDO = 8;
Var.DESCRIPCION_APORTE = "PPCD (Padres y Ex esposa)";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row29.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 5;// ###############################
        // ###############################
        // # Output tables

APORTE_PPDC = null;


// # Output table : 'APORTE_PPDC'
APORTE_PPDC_tmp.ID = row29.ID ;
APORTE_PPDC_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_PPDC_tmp.FECHA = Var.FECHA ;
APORTE_PPDC_tmp.DESCRIPCION_APORTE = Var.DESCRIPCION_APORTE ;
APORTE_PPDC_tmp.TOTAL_APORTE = row29.TOTAL_APORTE ;
APORTE_PPDC_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_PPDC_tmp.PERIODO = row29.PERIODO ;
APORTE_PPDC = APORTE_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_25 = false;










 


	tos_count_tMap_25++;

/**
 * [tMap_25 main ] stop
 */
	
	/**
	 * [tMap_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_25";
	
	

 



/**
 * [tMap_25 process_data_begin ] stop
 */
// Start of branch "APORTE_PPDC"
if(APORTE_PPDC != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_PPDC"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_PPDC.ID;								
			row25.TIPO_RECAUDO = APORTE_PPDC.TIPO_RECAUDO;								
			row25.FECHA = APORTE_PPDC.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_PPDC.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_PPDC.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_PPDC.TIPO_INGRESO;								
			row25.PERIODO = APORTE_PPDC.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_PPDC"




	
	/**
	 * [tMap_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_25";
	
	

 



/**
 * [tMap_25 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_23 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

}
}finally{
	if (rs_tOracleInput_23 != null) {
		rs_tOracleInput_23.close();
	}
	if (stmt_tOracleInput_23 != null) {
		stmt_tOracleInput_23.close();
	}
}

globalMap.put("tOracleInput_23_NB_LINE",nb_line_tOracleInput_23);
 

ok_Hash.put("tOracleInput_23", true);
end_Hash.put("tOracleInput_23", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_23", end_Hash.get("tOracleInput_23")-start_Hash.get("tOracleInput_23"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_23 end ] stop
 */

	
	/**
	 * [tMap_25 end ] start
	 */

	

	
	
	currentComponent="tMap_25";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tMap_25", true);
end_Hash.put("tMap_25", System.currentTimeMillis());




/**
 * [tMap_25 end ] stop
 */




	
	/**
	 * [tMap_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_26", false);
		start_Hash.put("tMap_26", System.currentTimeMillis());
		
	
	currentComponent="tMap_26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tMap_26 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_26__Struct  {
	int TIPO_RECAUDO;
	String DESCRIPCION_APORTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_26__Struct Var__tMap_26 = new Var__tMap_26__Struct();
// ###############################

// ###############################
// # Outputs initialization
APORTE_VENTAStruct APORTE_VENTA_tmp = new APORTE_VENTAStruct();
// ###############################

        
        



        









 



/**
 * [tMap_26 begin ] stop
 */



	
	/**
	 * [tOracleInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_24", false);
		start_Hash.put("tOracleInput_24", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_24");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_24";
	
	
		int tos_count_tOracleInput_24 = 0;
		
	


	
		    int nb_line_tOracleInput_24 = 0;
		    java.sql.Connection conn_tOracleInput_24 = null;
				conn_tOracleInput_24 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_24 = false;
				boolean isConnectionWrapped_tOracleInput_24 = !(conn_tOracleInput_24 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_24.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_24 = null;
                if (isConnectionWrapped_tOracleInput_24) {
					unwrappedOraConn_tOracleInput_24 = conn_tOracleInput_24.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_24 != null) {
                        isTimeZoneNull_tOracleInput_24 = (unwrappedOraConn_tOracleInput_24.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_24 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_24).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_24) {
					java.sql.Statement stmtGetTZ_tOracleInput_24 = conn_tOracleInput_24.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_24 = stmtGetTZ_tOracleInput_24.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_24 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_24.next()) {
						sessionTimezone_tOracleInput_24 = rsGetTZ_tOracleInput_24.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_24 && unwrappedOraConn_tOracleInput_24 != null) {
                        unwrappedOraConn_tOracleInput_24.setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_24).setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_24 = conn_tOracleInput_24.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_24.setFetchSize(1000);


		    String dbquery_tOracleInput_24 = "SELECT 100000 ID, '" + context.PERIODO + "' AS PERIODO, 0 TOTAL_APORTE FROM DUAL";
		    

		    globalMap.put("tOracleInput_24_QUERY",dbquery_tOracleInput_24);

		    java.sql.ResultSet rs_tOracleInput_24 = null;

		    try {
		    	rs_tOracleInput_24 = stmt_tOracleInput_24.executeQuery(dbquery_tOracleInput_24);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_24 = rs_tOracleInput_24.getMetaData();
		    	int colQtyInRs_tOracleInput_24 = rsmd_tOracleInput_24.getColumnCount();

		    String tmpContent_tOracleInput_24 = null;
		    
		    
		    while (rs_tOracleInput_24.next()) {
		        nb_line_tOracleInput_24++;
		        
							if(colQtyInRs_tOracleInput_24 < 1) {
								row30.ID = null;
							} else {
		                          
					if(rs_tOracleInput_24.getObject(1) != null) {
						row30.ID = rs_tOracleInput_24.getBigDecimal(1);
					} else {
				
						row30.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_24 < 2) {
								row30.PERIODO = null;
							} else {
	                         		
        	row30.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_24, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_24 < 3) {
								row30.TOTAL_APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_24.getObject(3) != null) {
						row30.TOTAL_APORTE = rs_tOracleInput_24.getBigDecimal(3);
					} else {
				
						row30.TOTAL_APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_24 begin ] stop
 */
	
	/**
	 * [tOracleInput_24 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 


	tos_count_tOracleInput_24++;

/**
 * [tOracleInput_24 main ] stop
 */
	
	/**
	 * [tOracleInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tMap_26 main ] start
	 */

	

	
	
	currentComponent="tMap_26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_26 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_26 = false;
		boolean mainRowRejected_tMap_26 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_26__Struct Var = Var__tMap_26;
Var.TIPO_RECAUDO = 11;
Var.DESCRIPCION_APORTE = "VENTA DE SERVICIOS";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row30.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 6;// ###############################
        // ###############################
        // # Output tables

APORTE_VENTA = null;


// # Output table : 'APORTE_VENTA'
APORTE_VENTA_tmp.ID = row30.ID ;
APORTE_VENTA_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
APORTE_VENTA_tmp.FECHA = Var.FECHA ;
APORTE_VENTA_tmp.DESCRIPCION_APORTE = Var.DESCRIPCION_APORTE ;
APORTE_VENTA_tmp.TOTAL_APORTE = row30.TOTAL_APORTE ;
APORTE_VENTA_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
APORTE_VENTA_tmp.PERIODO = row30.PERIODO ;
APORTE_VENTA = APORTE_VENTA_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_26 = false;










 


	tos_count_tMap_26++;

/**
 * [tMap_26 main ] stop
 */
	
	/**
	 * [tMap_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_26";
	
	

 



/**
 * [tMap_26 process_data_begin ] stop
 */
// Start of branch "APORTE_VENTA"
if(APORTE_VENTA != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"APORTE_VENTA"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = APORTE_VENTA.ID;								
			row25.TIPO_RECAUDO = APORTE_VENTA.TIPO_RECAUDO;								
			row25.FECHA = APORTE_VENTA.FECHA;								
			row25.DESCRIPCION_APORTE = APORTE_VENTA.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = APORTE_VENTA.TOTAL_APORTE;								
			row25.TIPO_INGRESO = APORTE_VENTA.TIPO_INGRESO;								
			row25.PERIODO = APORTE_VENTA.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "APORTE_VENTA"




	
	/**
	 * [tMap_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_26";
	
	

 



/**
 * [tMap_26 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_24 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

}
}finally{
	if (rs_tOracleInput_24 != null) {
		rs_tOracleInput_24.close();
	}
	if (stmt_tOracleInput_24 != null) {
		stmt_tOracleInput_24.close();
	}
}

globalMap.put("tOracleInput_24_NB_LINE",nb_line_tOracleInput_24);
 

ok_Hash.put("tOracleInput_24", true);
end_Hash.put("tOracleInput_24", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_24", end_Hash.get("tOracleInput_24")-start_Hash.get("tOracleInput_24"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_24 end ] stop
 */

	
	/**
	 * [tMap_26 end ] start
	 */

	

	
	
	currentComponent="tMap_26";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tMap_26", true);
end_Hash.put("tMap_26", System.currentTimeMillis());




/**
 * [tMap_26 end ] stop
 */




	
	/**
	 * [tMap_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_28", false);
		start_Hash.put("tMap_28", System.currentTimeMillis());
		
	
	currentComponent="tMap_28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_28 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_28__Struct  {
	int TIPO_RECAUDO;
	String DESCRIPCION_APORTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_28__Struct Var__tMap_28 = new Var__tMap_28__Struct();
// ###############################

// ###############################
// # Outputs initialization
PORCENTAJE_UPCStruct PORCENTAJE_UPC_tmp = new PORCENTAJE_UPCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_28 begin ] stop
 */



	
	/**
	 * [tOracleInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_25", false);
		start_Hash.put("tOracleInput_25", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_25");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_25";
	
	
		int tos_count_tOracleInput_25 = 0;
		
	


	
		    int nb_line_tOracleInput_25 = 0;
		    java.sql.Connection conn_tOracleInput_25 = null;
				conn_tOracleInput_25 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_25 = false;
				boolean isConnectionWrapped_tOracleInput_25 = !(conn_tOracleInput_25 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_25.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_25 = null;
                if (isConnectionWrapped_tOracleInput_25) {
					unwrappedOraConn_tOracleInput_25 = conn_tOracleInput_25.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_25 != null) {
                        isTimeZoneNull_tOracleInput_25 = (unwrappedOraConn_tOracleInput_25.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_25 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_25).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_25) {
					java.sql.Statement stmtGetTZ_tOracleInput_25 = conn_tOracleInput_25.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_25 = stmtGetTZ_tOracleInput_25.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_25 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_25.next()) {
						sessionTimezone_tOracleInput_25 = rsGetTZ_tOracleInput_25.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_25 && unwrappedOraConn_tOracleInput_25 != null) {
                        unwrappedOraConn_tOracleInput_25.setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_25).setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_25 = conn_tOracleInput_25.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_25.setFetchSize(1000);


		    String dbquery_tOracleInput_25 = "SELECT ID, PERIODO, REC.fnc_GetPorcUPCCotizantesArray(ENTAPORTANTES_ID, '1,2',\n  PERIODO) APORTE                      "
+"         \n FROM (SELECT MAX(CG.ID) ID, CAST(COLLECT(TO_CHAR(CG.ENTAPORTANTES_ID)) AS SALUDSIS.REC_TYPARRAY) ENTAPORTANT"
+"ES_ID, CG.PERIODO\n                  FROM REC_CONTROLCARGUE CG\n                  WHERE CG.PERIODO = '" + context.PERIODO + "' \n                        AND CG.ESTREGISTRO_ID = 1\n                        AND CG.ESTARCHIVO_ID = 3 \n             "
+"           AND CG.TPLANILLAS_ID = 1 \n                        AND CG.TARCHIVOS_ID = 1\n            GROUP BY CG.PERIODO\n"
+"      )";
		    

		    globalMap.put("tOracleInput_25_QUERY",dbquery_tOracleInput_25);

		    java.sql.ResultSet rs_tOracleInput_25 = null;

		    try {
		    	rs_tOracleInput_25 = stmt_tOracleInput_25.executeQuery(dbquery_tOracleInput_25);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_25 = rs_tOracleInput_25.getMetaData();
		    	int colQtyInRs_tOracleInput_25 = rsmd_tOracleInput_25.getColumnCount();

		    String tmpContent_tOracleInput_25 = null;
		    
		    
		    while (rs_tOracleInput_25.next()) {
		        nb_line_tOracleInput_25++;
		        
							if(colQtyInRs_tOracleInput_25 < 1) {
								row31.ID = null;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(1) != null) {
						row31.ID = rs_tOracleInput_25.getBigDecimal(1);
					} else {
				
						row31.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_25 < 2) {
								row31.PERIODO = null;
							} else {
	                         		
        	row31.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_25, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_25 < 3) {
								row31.APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(3) != null) {
						row31.APORTE = rs_tOracleInput_25.getBigDecimal(3);
					} else {
				
						row31.APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_25 begin ] stop
 */
	
	/**
	 * [tOracleInput_25 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 


	tos_count_tOracleInput_25++;

/**
 * [tOracleInput_25 main ] stop
 */
	
	/**
	 * [tOracleInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tMap_28 main ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_28 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_28 = false;
		boolean mainRowRejected_tMap_28 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_28__Struct Var = Var__tMap_28;
Var.TIPO_RECAUDO = 12;
Var.DESCRIPCION_APORTE = "VALOR MENSUAL DEL INGRESO POR % DE UPC";
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row31.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 7;// ###############################
        // ###############################
        // # Output tables

PORCENTAJE_UPC = null;


// # Output table : 'PORCENTAJE_UPC'
PORCENTAJE_UPC_tmp.ID = row31.ID ;
PORCENTAJE_UPC_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
PORCENTAJE_UPC_tmp.FECHA = Var.FECHA ;
PORCENTAJE_UPC_tmp.DESCRIPCION_APORTE = Var.DESCRIPCION_APORTE ;
PORCENTAJE_UPC_tmp.TOTAL_APORTE = row31.APORTE ;
PORCENTAJE_UPC_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
PORCENTAJE_UPC_tmp.PERIODO = row31.PERIODO ;
PORCENTAJE_UPC = PORCENTAJE_UPC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_28 = false;










 


	tos_count_tMap_28++;

/**
 * [tMap_28 main ] stop
 */
	
	/**
	 * [tMap_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 process_data_begin ] stop
 */
// Start of branch "PORCENTAJE_UPC"
if(PORCENTAJE_UPC != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"PORCENTAJE_UPC"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = PORCENTAJE_UPC.ID;								
			row25.TIPO_RECAUDO = PORCENTAJE_UPC.TIPO_RECAUDO;								
			row25.FECHA = PORCENTAJE_UPC.FECHA;								
			row25.DESCRIPCION_APORTE = PORCENTAJE_UPC.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = PORCENTAJE_UPC.TOTAL_APORTE;								
			row25.TIPO_INGRESO = PORCENTAJE_UPC.TIPO_INGRESO;								
			row25.PERIODO = PORCENTAJE_UPC.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "PORCENTAJE_UPC"




	
	/**
	 * [tMap_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_25 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

}
}finally{
	if (rs_tOracleInput_25 != null) {
		rs_tOracleInput_25.close();
	}
	if (stmt_tOracleInput_25 != null) {
		stmt_tOracleInput_25.close();
	}
}

globalMap.put("tOracleInput_25_NB_LINE",nb_line_tOracleInput_25);
 

ok_Hash.put("tOracleInput_25", true);
end_Hash.put("tOracleInput_25", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_25", end_Hash.get("tOracleInput_25")-start_Hash.get("tOracleInput_25"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_25 end ] stop
 */

	
	/**
	 * [tMap_28 end ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_28", true);
end_Hash.put("tMap_28", System.currentTimeMillis());




/**
 * [tMap_28 end ] stop
 */




	
	/**
	 * [tMap_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_29", false);
		start_Hash.put("tMap_29", System.currentTimeMillis());
		
	
	currentComponent="tMap_29";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tMap_29 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_29__Struct  {
	int TIPO_RECAUDO;
	String DESCRIPCION_APORTE;
	String FECHA;
	int TIPO_INGRESO;
}
Var__tMap_29__Struct Var__tMap_29 = new Var__tMap_29__Struct();
// ###############################

// ###############################
// # Outputs initialization
PORCENTAJE_PPCDStruct PORCENTAJE_PPCD_tmp = new PORCENTAJE_PPCDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_29 begin ] stop
 */



	
	/**
	 * [tOracleInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_26", false);
		start_Hash.put("tOracleInput_26", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_26");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_26";
	
	
		int tos_count_tOracleInput_26 = 0;
		
	


	
		    int nb_line_tOracleInput_26 = 0;
		    java.sql.Connection conn_tOracleInput_26 = null;
				conn_tOracleInput_26 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_26 = false;
				boolean isConnectionWrapped_tOracleInput_26 = !(conn_tOracleInput_26 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_26.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_26 = null;
                if (isConnectionWrapped_tOracleInput_26) {
					unwrappedOraConn_tOracleInput_26 = conn_tOracleInput_26.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_26 != null) {
                        isTimeZoneNull_tOracleInput_26 = (unwrappedOraConn_tOracleInput_26.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_26 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_26).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_26) {
					java.sql.Statement stmtGetTZ_tOracleInput_26 = conn_tOracleInput_26.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_26 = stmtGetTZ_tOracleInput_26.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_26 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_26.next()) {
						sessionTimezone_tOracleInput_26 = rsGetTZ_tOracleInput_26.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_26 && unwrappedOraConn_tOracleInput_26 != null) {
                        unwrappedOraConn_tOracleInput_26.setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_26).setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_26 = conn_tOracleInput_26.createStatement();

		    String dbquery_tOracleInput_26 = "SELECT ID, PERIODO, SUM(APORTE) APORTE  \nFROM (SELECT ID, ENTAPORTANTES_ID,\n             PERIODO,\n             REC.f"
+"nc_GetPorcUPCNoCotizantes(ENTAPORTANTES_ID,\n                                            PERIODO) AS APORTE\n        FRO"
+"M (SELECT MAX(CG.ID) ID, CG.ENTAPORTANTES_ID, CG.PERIODO\n                FROM REC_CONTROLCARGUE CG\n               WHER"
+"E CG.PERIODO = '" + context.PERIODO + "'\n                 AND CG.ESTREGISTRO_ID = 1 \n                 AND CG.ESTARCHIVO_ID = 3 \n                 AND CG.TPL"
+"ANILLAS_ID = 1 \n                 AND CG.TARCHIVOS_ID = 3 \n               GROUP BY CG.ENTAPORTANTES_ID, CG.PERIODO))\nG"
+"ROUP BY ID, PERIODO";
		    

		    globalMap.put("tOracleInput_26_QUERY",dbquery_tOracleInput_26);

		    java.sql.ResultSet rs_tOracleInput_26 = null;

		    try {
		    	rs_tOracleInput_26 = stmt_tOracleInput_26.executeQuery(dbquery_tOracleInput_26);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_26 = rs_tOracleInput_26.getMetaData();
		    	int colQtyInRs_tOracleInput_26 = rsmd_tOracleInput_26.getColumnCount();

		    String tmpContent_tOracleInput_26 = null;
		    
		    
		    while (rs_tOracleInput_26.next()) {
		        nb_line_tOracleInput_26++;
		        
							if(colQtyInRs_tOracleInput_26 < 1) {
								row32.ID = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(1) != null) {
						row32.ID = rs_tOracleInput_26.getBigDecimal(1);
					} else {
				
						row32.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_26 < 2) {
								row32.PERIODO = null;
							} else {
	                         		
        	row32.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_26, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_26 < 3) {
								row32.APORTE = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(3) != null) {
						row32.APORTE = rs_tOracleInput_26.getBigDecimal(3);
					} else {
				
						row32.APORTE = null;
					}
		                    }
					




 



/**
 * [tOracleInput_26 begin ] stop
 */
	
	/**
	 * [tOracleInput_26 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 


	tos_count_tOracleInput_26++;

/**
 * [tOracleInput_26 main ] stop
 */
	
	/**
	 * [tOracleInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tMap_29 main ] start
	 */

	

	
	
	currentComponent="tMap_29";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_29 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_29 = false;
		boolean mainRowRejected_tMap_29 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_29__Struct Var = Var__tMap_29;
Var.TIPO_RECAUDO = 13;
Var.DESCRIPCION_APORTE = "VALOR MENSUAL DEL INGRESO POR PPCD" ;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (row32.PERIODO + "-01")))) ;
Var.TIPO_INGRESO = 8;// ###############################
        // ###############################
        // # Output tables

PORCENTAJE_PPCD = null;


// # Output table : 'PORCENTAJE_PPCD'
PORCENTAJE_PPCD_tmp.ID = row32.ID ;
PORCENTAJE_PPCD_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
PORCENTAJE_PPCD_tmp.FECHA = Var.FECHA ;
PORCENTAJE_PPCD_tmp.DESCRIPCION_APORTE = Var.DESCRIPCION_APORTE ;
PORCENTAJE_PPCD_tmp.TOTAL_APORTE = row32.APORTE ;
PORCENTAJE_PPCD_tmp.TIPO_INGRESO = Var.TIPO_INGRESO ;
PORCENTAJE_PPCD_tmp.PERIODO = row32.PERIODO ;
PORCENTAJE_PPCD = PORCENTAJE_PPCD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_29 = false;










 


	tos_count_tMap_29++;

/**
 * [tMap_29 main ] stop
 */
	
	/**
	 * [tMap_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_29";
	
	

 



/**
 * [tMap_29 process_data_begin ] stop
 */
// Start of branch "PORCENTAJE_PPCD"
if(PORCENTAJE_PPCD != null) { 



	
	/**
	 * [tUnite_3 main ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"PORCENTAJE_PPCD"
									
							);
						}
						
//////////
 

// for output
			row25 = new row25Struct();
								
			row25.ID = PORCENTAJE_PPCD.ID;								
			row25.TIPO_RECAUDO = PORCENTAJE_PPCD.TIPO_RECAUDO;								
			row25.FECHA = PORCENTAJE_PPCD.FECHA;								
			row25.DESCRIPCION_APORTE = PORCENTAJE_PPCD.DESCRIPCION_APORTE;								
			row25.TOTAL_APORTE = PORCENTAJE_PPCD.TOTAL_APORTE;								
			row25.TIPO_INGRESO = PORCENTAJE_PPCD.TIPO_INGRESO;								
			row25.PERIODO = PORCENTAJE_PPCD.PERIODO;			

			nb_line_tUnite_3++;

//////////
 


	tos_count_tUnite_3++;

/**
 * [tUnite_3 main ] stop
 */
	
	/**
	 * [tUnite_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.ID = row25.ID;
			operation_finder_tAggregateRow_1.TIPO_RECAUDO = row25.TIPO_RECAUDO;
			operation_finder_tAggregateRow_1.FECHA = row25.FECHA;
			operation_finder_tAggregateRow_1.DESCRIPCION_APORTE = row25.DESCRIPCION_APORTE;
			operation_finder_tAggregateRow_1.TIPO_INGRESO = row25.TIPO_INGRESO;
			operation_finder_tAggregateRow_1.PERIODO = row25.PERIODO;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.ID = operation_finder_tAggregateRow_1.ID;
				operation_result_tAggregateRow_1.TIPO_RECAUDO = operation_finder_tAggregateRow_1.TIPO_RECAUDO;
				operation_result_tAggregateRow_1.FECHA = operation_finder_tAggregateRow_1.FECHA;
				operation_result_tAggregateRow_1.DESCRIPCION_APORTE = operation_finder_tAggregateRow_1.DESCRIPCION_APORTE;
				operation_result_tAggregateRow_1.TIPO_INGRESO = operation_finder_tAggregateRow_1.TIPO_INGRESO;
				operation_result_tAggregateRow_1.PERIODO = operation_finder_tAggregateRow_1.PERIODO;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				if(row25.TOTAL_APORTE != null) { // G_OutMain_AggR_546
				
					if(operation_result_tAggregateRow_1.TOTAL_APORTE_sum == null) {
						operation_result_tAggregateRow_1.TOTAL_APORTE_sum = new BigDecimal(0).setScale(0);
					}
					operation_result_tAggregateRow_1.TOTAL_APORTE_sum = operation_result_tAggregateRow_1.TOTAL_APORTE_sum.add(
						new BigDecimal(
							String.valueOf(
								row25.TOTAL_APORTE
							)
						)
					);
					
				} // G_OutMain_AggR_546
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tUnite_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 process_data_end ] stop
 */

} // End of branch "PORCENTAJE_PPCD"




	
	/**
	 * [tMap_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_29";
	
	

 



/**
 * [tMap_29 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_26 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

}
}finally{
	if (rs_tOracleInput_26 != null) {
		rs_tOracleInput_26.close();
	}
	if (stmt_tOracleInput_26 != null) {
		stmt_tOracleInput_26.close();
	}
}

globalMap.put("tOracleInput_26_NB_LINE",nb_line_tOracleInput_26);
 

ok_Hash.put("tOracleInput_26", true);
end_Hash.put("tOracleInput_26", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_26", end_Hash.get("tOracleInput_26")-start_Hash.get("tOracleInput_26"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_26 end ] stop
 */

	
	/**
	 * [tMap_29 end ] start
	 */

	

	
	
	currentComponent="tMap_29";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tMap_29", true);
end_Hash.put("tMap_29", System.currentTimeMillis());




/**
 * [tMap_29 end ] stop
 */



	
	/**
	 * [tUnite_3 end ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

globalMap.put("tUnite_3_NB_LINE", nb_line_tUnite_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"APORTE_COTIZANTE_SALUD","RETRO_APORTE_COTIZANTE","APORTE_PATRONAL_ATEP","RETRO_ATEP_PATRONAL","APORTE_PATRONAL_SALUD","PORCENTAJE_UPC","PORCENTAJE_PPCD","NOVESP_PATRONAL","RETRO_APORTE_PATRONAL","APORTE_VENTA","APORTE_CARNET","APORTE_PPDC");
			  	}
			  	
 

ok_Hash.put("tUnite_3", true);
end_Hash.put("tUnite_3", System.currentTimeMillis());




/**
 * [tUnite_3 end ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tAggregateRow_1_AGGOUT", end_Hash.get("tAggregateRow_1_AGGOUT")-start_Hash.get("tAggregateRow_1_AGGOUT"));
tStatCatcher_1Process(globalMap);



/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */


	
	/**
	 * [tSortRow_2_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_2_SortOut", false);
		start_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_2_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tSortRow_2_SortOut = 0;
		


class Comparablerow26Struct extends row26Struct implements Comparable<Comparablerow26Struct> {
	
	public int compareTo(Comparablerow26Struct other) {

		if(this.TIPO_RECAUDO != other.TIPO_RECAUDO){
						
				return this.TIPO_RECAUDO > other.TIPO_RECAUDO ? 1 : -1;
							
		}
		if(this.TIPO_INGRESO != other.TIPO_INGRESO){
						
				return this.TIPO_INGRESO > other.TIPO_INGRESO ? 1 : -1;
							
		}
		return 0;
	}
}

java.util.List<Comparablerow26Struct> list_tSortRow_2_SortOut = new java.util.ArrayList<Comparablerow26Struct>();


 



/**
 * [tSortRow_2_SortOut begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tAggregateRow_1_AGGIN");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

            				    row26.ID = aggregated_row_tAggregateRow_1.ID;
            				    
            				    row26.TIPO_RECAUDO = aggregated_row_tAggregateRow_1.TIPO_RECAUDO;
            				    
            				    row26.FECHA = aggregated_row_tAggregateRow_1.FECHA;
            				    
            				    row26.DESCRIPCION_APORTE = aggregated_row_tAggregateRow_1.DESCRIPCION_APORTE;
            				    row26.TOTAL_APORTE = aggregated_row_tAggregateRow_1.TOTAL_APORTE_sum;
                                	
            				    row26.TIPO_INGRESO = aggregated_row_tAggregateRow_1.TIPO_INGRESO;
            				    
            				    row26.PERIODO = aggregated_row_tAggregateRow_1.PERIODO;
            				    

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_2_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					



	Comparablerow26Struct arrayRowtSortRow_2_SortOut = new Comparablerow26Struct();

	arrayRowtSortRow_2_SortOut.ID = row26.ID;
	arrayRowtSortRow_2_SortOut.TIPO_RECAUDO = row26.TIPO_RECAUDO;
	arrayRowtSortRow_2_SortOut.FECHA = row26.FECHA;
	arrayRowtSortRow_2_SortOut.DESCRIPCION_APORTE = row26.DESCRIPCION_APORTE;
	arrayRowtSortRow_2_SortOut.TOTAL_APORTE = row26.TOTAL_APORTE;
	arrayRowtSortRow_2_SortOut.TIPO_INGRESO = row26.TIPO_INGRESO;
	arrayRowtSortRow_2_SortOut.PERIODO = row26.PERIODO;	
	list_tSortRow_2_SortOut.add(arrayRowtSortRow_2_SortOut);

 


	tos_count_tSortRow_2_SortOut++;

/**
 * [tSortRow_2_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_2_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_2_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tAggregateRow_1_AGGIN", end_Hash.get("tAggregateRow_1_AGGIN")-start_Hash.get("tAggregateRow_1_AGGIN"));
tStatCatcher_1Process(globalMap);



/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tSortRow_2_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

row26Struct[] array_tSortRow_2_SortOut = list_tSortRow_2_SortOut.toArray(new Comparablerow26Struct[0]);

java.util.Arrays.sort(array_tSortRow_2_SortOut);

globalMap.put("tSortRow_2",array_tSortRow_2_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tSortRow_2_SortOut", true);
end_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_2_SortOut", end_Hash.get("tSortRow_2_SortOut")-start_Hash.get("tSortRow_2_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_2_SortOut end ] stop
 */





	
	/**
	 * [tOracleOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_13", false);
		start_Hash.put("tOracleOutput_13", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_13");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tOracleOutput_13 = 0;
		






    
    int nb_line_tOracleOutput_13 = 0;
    int nb_line_update_tOracleOutput_13 = 0;
    int nb_line_inserted_tOracleOutput_13 = 0;
    int nb_line_deleted_tOracleOutput_13 = 0;
    int nb_line_rejected_tOracleOutput_13 = 0;

    int tmp_batchUpdateCount_tOracleOutput_13 = 0;

    int deletedCount_tOracleOutput_13=0;
    int updatedCount_tOracleOutput_13=0;
    int insertedCount_tOracleOutput_13=0;
    int rowsToCommitCount_tOracleOutput_13=0;
    int rejectedCount_tOracleOutput_13=0;

    boolean whetherReject_tOracleOutput_13 = false;

    java.sql.Connection conn_tOracleOutput_13 = null;

    //optional table
    String dbschema_tOracleOutput_13 = null;
    String tableName_tOracleOutput_13 = null;
        dbschema_tOracleOutput_13 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_13 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_13=0;

        if(dbschema_tOracleOutput_13 == null || dbschema_tOracleOutput_13.trim().length() == 0) {
            tableName_tOracleOutput_13 = ("BREC_TIEMPO");
        } else {
            tableName_tOracleOutput_13 = dbschema_tOracleOutput_13 + "." + ("BREC_TIEMPO");
        }
                String insert_tOracleOutput_13 = "INSERT INTO " + tableName_tOracleOutput_13 + " (ID,TIPO_RECAUDO_ID,FECHA,PERIODO,Anio,Mes,Dia) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_13 = conn_tOracleOutput_13.prepareStatement(insert_tOracleOutput_13);
                        resourceMap.put("pstmt_tOracleOutput_13", pstmt_tOracleOutput_13);





 



/**
 * [tOracleOutput_13 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
					globalMap.get( "tHash_Lookup_row52" ))
					;					
					
	

row52Struct row52HashKey = new row52Struct();
row52Struct row52Default = new row52Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIEMPO_TOTALES");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal ID;
					int TIPO_RECAUDO_ID;
					String PERIODO;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
									result = prime * result + (int) this.TIPO_RECAUDO_ID;
									
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
								
									} else if (!this.ID.equals(other.ID))
								 
										return false;
								
									if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID) 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */




	
	/**
	 * [tSortRow_8_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_8_SortOut", false);
		start_Hash.put("tSortRow_8_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_8_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TOTALES_RECAUDO");
					}
				
		int tos_count_tSortRow_8_SortOut = 0;
		


class ComparableTOTALES_RECAUDOStruct extends TOTALES_RECAUDOStruct implements Comparable<ComparableTOTALES_RECAUDOStruct> {
	
	public int compareTo(ComparableTOTALES_RECAUDOStruct other) {

		if(this.TIEMPO_ID == null && other.TIEMPO_ID != null){
			return -1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID == null){
			return 1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID != null){
			if(!this.TIEMPO_ID.equals(other.TIEMPO_ID)){
				return this.TIEMPO_ID.compareTo(other.TIEMPO_ID);
			}
		}
		if(this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID){
						
				return this.TIPO_RECAUDO_ID > other.TIPO_RECAUDO_ID ? 1 : -1;
							
		}
		if(this.TIPO_TOTAL_INGRESO_ID != other.TIPO_TOTAL_INGRESO_ID){
						
				return this.TIPO_TOTAL_INGRESO_ID > other.TIPO_TOTAL_INGRESO_ID ? 1 : -1;
							
		}
		if(this.PERIODO == null && other.PERIODO != null){
			return -1;
						
		}else if(this.PERIODO != null && other.PERIODO == null){
			return 1;
						
		}else if(this.PERIODO != null && other.PERIODO != null){
			if(!this.PERIODO.equals(other.PERIODO)){
				return this.PERIODO.compareTo(other.PERIODO);
			}
		}
		return 0;
	}
}

java.util.List<ComparableTOTALES_RECAUDOStruct> list_tSortRow_8_SortOut = new java.util.ArrayList<ComparableTOTALES_RECAUDOStruct>();


 



/**
 * [tSortRow_8_SortOut begin ] stop
 */



	
	/**
	 * [tMap_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_27", false);
		start_Hash.put("tMap_27", System.currentTimeMillis());
		
	
	currentComponent="tMap_27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tMap_27 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_27__Struct  {
	int Anio;
	int Mes;
	int Dia;
	java.util.Date FECHA;
}
Var__tMap_27__Struct Var__tMap_27 = new Var__tMap_27__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIEMPO_TOTALESStruct TIEMPO_TOTALES_tmp = new TIEMPO_TOTALESStruct();
TOTALES_RECAUDOStruct TOTALES_RECAUDO_tmp = new TOTALES_RECAUDOStruct();
// ###############################

        
        



        









 



/**
 * [tMap_27 begin ] stop
 */



	
	/**
	 * [tSortRow_2_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_2_SortIn", false);
		start_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_2_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	
		int tos_count_tSortRow_2_SortIn = 0;
		


row26Struct[] array_tSortRow_2_SortIn = (row26Struct[]) globalMap.remove("tSortRow_2");

int nb_line_tSortRow_2_SortIn = 0;

row26Struct current_tSortRow_2_SortIn = null;

for(int i_tSortRow_2_SortIn = 0; i_tSortRow_2_SortIn < array_tSortRow_2_SortIn.length; i_tSortRow_2_SortIn++){
	current_tSortRow_2_SortIn = array_tSortRow_2_SortIn[i_tSortRow_2_SortIn];
	row27.ID = current_tSortRow_2_SortIn.ID;
	row27.TIPO_RECAUDO = current_tSortRow_2_SortIn.TIPO_RECAUDO;
	row27.FECHA = current_tSortRow_2_SortIn.FECHA;
	row27.DESCRIPCION_APORTE = current_tSortRow_2_SortIn.DESCRIPCION_APORTE;
	row27.TOTAL_APORTE = current_tSortRow_2_SortIn.TOTAL_APORTE;
	row27.TIPO_INGRESO = current_tSortRow_2_SortIn.TIPO_INGRESO;
	row27.PERIODO = current_tSortRow_2_SortIn.PERIODO;
	// increase number of line sorted
	nb_line_tSortRow_2_SortIn++;

 



/**
 * [tSortRow_2_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 


	tos_count_tSortRow_2_SortIn++;

/**
 * [tSortRow_2_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tMap_27 main ] start
	 */

	

	
	
	currentComponent="tMap_27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_27 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_27 = false;
		boolean mainRowRejected_tMap_27 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_27__Struct Var = Var__tMap_27;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", row27.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", row27.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", row27.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", row27.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_TOTALES = null;
TOTALES_RECAUDO = null;


// # Output table : 'TIEMPO_TOTALES'
TIEMPO_TOTALES_tmp.ID = row27.ID ;
TIEMPO_TOTALES_tmp.TIPO_RECAUDO_ID = row27.TIPO_RECAUDO ;
TIEMPO_TOTALES_tmp.FECHA = Var.FECHA ;
TIEMPO_TOTALES_tmp.PERIODO = row27.PERIODO ;
TIEMPO_TOTALES_tmp.Anio = Var.Anio ;
TIEMPO_TOTALES_tmp.Mes = Var.Mes ;
TIEMPO_TOTALES_tmp.Dia = Var.Dia ;
TIEMPO_TOTALES = TIEMPO_TOTALES_tmp;

// # Output table : 'TOTALES_RECAUDO'
TOTALES_RECAUDO_tmp.TIEMPO_ID = row27.ID ;
TOTALES_RECAUDO_tmp.TIPO_TOTAL_INGRESO_ID = row27.TIPO_INGRESO ;
TOTALES_RECAUDO_tmp.PERIODO = row27.PERIODO ;
TOTALES_RECAUDO_tmp.TOTAL_APORTE = row27.TOTAL_APORTE ;
TOTALES_RECAUDO_tmp.TIPO_RECAUDO_ID = row27.TIPO_RECAUDO ;
TOTALES_RECAUDO_tmp.NOMBRE_TIPO_INGRESO = row27.DESCRIPCION_APORTE ;
TOTALES_RECAUDO = TOTALES_RECAUDO_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_27 = false;










 


	tos_count_tMap_27++;

/**
 * [tMap_27 main ] stop
 */
	
	/**
	 * [tMap_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_27";
	
	

 



/**
 * [tMap_27 process_data_begin ] stop
 */
// Start of branch "TIEMPO_TOTALES"
if(TIEMPO_TOTALES != null) { 



	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_TOTALES"
						
						);
					}
					
row33 = null;			
finder_tUniqRow_1.ID = TIEMPO_TOTALES.ID;
finder_tUniqRow_1.TIPO_RECAUDO_ID = TIEMPO_TOTALES.TIPO_RECAUDO_ID;
if(TIEMPO_TOTALES.PERIODO == null){
	finder_tUniqRow_1.PERIODO = null;
}else{
	finder_tUniqRow_1.PERIODO = TIEMPO_TOTALES.PERIODO.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
new_tUniqRow_1.ID = TIEMPO_TOTALES.ID;
new_tUniqRow_1.TIPO_RECAUDO_ID = TIEMPO_TOTALES.TIPO_RECAUDO_ID;
if(TIEMPO_TOTALES.PERIODO == null){
	new_tUniqRow_1.PERIODO = null;
}else{
	new_tUniqRow_1.PERIODO = TIEMPO_TOTALES.PERIODO.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row33 == null){ 
	
	row33 = new row33Struct();
}row33.ID = TIEMPO_TOTALES.ID;			row33.TIPO_RECAUDO_ID = TIEMPO_TOTALES.TIPO_RECAUDO_ID;			row33.FECHA = TIEMPO_TOTALES.FECHA;			row33.PERIODO = TIEMPO_TOTALES.PERIODO;			row33.Anio = TIEMPO_TOTALES.Anio;			row33.Mes = TIEMPO_TOTALES.Mes;			row33.Dia = TIEMPO_TOTALES.Dia;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row33"
if(row33 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row52Struct row52 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row52" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow52 = false;
       		  	    	
       		  	    	
 							row52Struct row52ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row52HashKey.ID = row33.ID ;
                        		    		
	                        		    	Object exprKeyValue_row52__TIPO_RECAUDO_ID = row33.TIPO_RECAUDO_ID ;
	                        		    	if(exprKeyValue_row52__TIPO_RECAUDO_ID == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_7 = true;
	                        		    	} else {
                        		    			row52HashKey.TIPO_RECAUDO_ID = (int)(Integer) exprKeyValue_row52__TIPO_RECAUDO_ID;
                        		    		}
                        		    		
                        		    		    row52HashKey.PERIODO = row33.PERIODO ;
                        		    		

								
		                        	row52HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_7) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row52.lookup( row52HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row52 != null && tHash_Lookup_row52.getCount(row52HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row52' and it contains more one result from keys :  row52.ID = '" + row52HashKey.ID + "', row52.TIPO_RECAUDO_ID = '" + row52HashKey.TIPO_RECAUDO_ID + "', row52.PERIODO = '" + row52HashKey.PERIODO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row52Struct fromLookup_row52 = null;
							row52 = row52Default;
										 
							
								 
							
							
								if (tHash_Lookup_row52 !=null && tHash_Lookup_row52.hasNext()) { // G 099
								
							
								
								fromLookup_row52 = tHash_Lookup_row52.next();

							
							
								} // G 099
							
							

							if(fromLookup_row52 != null) {
								row52 = fromLookup_row52;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
// # Filter conditions 
if( 

row52.ID == null

 ) {
out1_tmp.ID = row33.ID ;
out1_tmp.TIPO_RECAUDO_ID = row33.TIPO_RECAUDO_ID ;
out1_tmp.FECHA = row33.FECHA ;
out1_tmp.PERIODO = row33.PERIODO ;
out1_tmp.Anio = row33.Anio ;
out1_tmp.Mes = row33.Mes ;
out1_tmp.Dia = row33.Dia ;
out1 = out1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tOracleOutput_13 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					



        whetherReject_tOracleOutput_13 = false;
                        pstmt_tOracleOutput_13.setBigDecimal(1, out1.ID);

                        pstmt_tOracleOutput_13.setInt(2, out1.TIPO_RECAUDO_ID);

                        if(out1.FECHA != null) {
pstmt_tOracleOutput_13.setObject(3, new java.sql.Timestamp(out1.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_13.setNull(3, java.sql.Types.DATE);
}

                        if(out1.PERIODO == null) {
pstmt_tOracleOutput_13.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_13.setString(4, out1.PERIODO);
}

                        pstmt_tOracleOutput_13.setInt(5, out1.Anio);

                        pstmt_tOracleOutput_13.setInt(6, out1.Mes);

                        pstmt_tOracleOutput_13.setInt(7, out1.Dia);

                try {
                    nb_line_tOracleOutput_13++;
                    int processedCount_tOracleOutput_13 = pstmt_tOracleOutput_13.executeUpdate();
                    insertedCount_tOracleOutput_13 += processedCount_tOracleOutput_13;
                    rowsToCommitCount_tOracleOutput_13 += processedCount_tOracleOutput_13;
                } catch(java.lang.Exception e_tOracleOutput_13) {
globalMap.put("tOracleOutput_13_ERROR_MESSAGE",e_tOracleOutput_13.getMessage());
                    whetherReject_tOracleOutput_13 = true;
                            System.err.print(e_tOracleOutput_13.getMessage());
                }

 


	tos_count_tOracleOutput_13++;

/**
 * [tOracleOutput_13 main ] stop
 */
	
	/**
	 * [tOracleOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	

 



/**
 * [tOracleOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	

 



/**
 * [tOracleOutput_13 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "row33"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */

} // End of branch "TIEMPO_TOTALES"




// Start of branch "TOTALES_RECAUDO"
if(TOTALES_RECAUDO != null) { 



	
	/**
	 * [tSortRow_8_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TOTALES_RECAUDO"
						
						);
					}
					



	ComparableTOTALES_RECAUDOStruct arrayRowtSortRow_8_SortOut = new ComparableTOTALES_RECAUDOStruct();

	arrayRowtSortRow_8_SortOut.TIEMPO_ID = TOTALES_RECAUDO.TIEMPO_ID;
	arrayRowtSortRow_8_SortOut.TIPO_TOTAL_INGRESO_ID = TOTALES_RECAUDO.TIPO_TOTAL_INGRESO_ID;
	arrayRowtSortRow_8_SortOut.PERIODO = TOTALES_RECAUDO.PERIODO;
	arrayRowtSortRow_8_SortOut.TOTAL_APORTE = TOTALES_RECAUDO.TOTAL_APORTE;
	arrayRowtSortRow_8_SortOut.TIPO_RECAUDO_ID = TOTALES_RECAUDO.TIPO_RECAUDO_ID;
	arrayRowtSortRow_8_SortOut.NOMBRE_TIPO_INGRESO = TOTALES_RECAUDO.NOMBRE_TIPO_INGRESO;	
	list_tSortRow_8_SortOut.add(arrayRowtSortRow_8_SortOut);

 


	tos_count_tSortRow_8_SortOut++;

/**
 * [tSortRow_8_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_8_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	

 



/**
 * [tSortRow_8_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_8_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	

 



/**
 * [tSortRow_8_SortOut process_data_end ] stop
 */

} // End of branch "TOTALES_RECAUDO"




	
	/**
	 * [tMap_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_27";
	
	

 



/**
 * [tMap_27 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_2_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	


}

globalMap.put("tSortRow_2_SortIn_NB_LINE",nb_line_tSortRow_2_SortIn);

 

ok_Hash.put("tSortRow_2_SortIn", true);
end_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_2_SortIn", end_Hash.get("tSortRow_2_SortIn")-start_Hash.get("tSortRow_2_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_2_SortIn end ] stop
 */

	
	/**
	 * [tMap_27 end ] start
	 */

	

	
	
	currentComponent="tMap_27";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tMap_27", true);
end_Hash.put("tMap_27", System.currentTimeMillis());




/**
 * [tMap_27 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIEMPO_TOTALES");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_1", end_Hash.get("tUniqRow_1")-start_Hash.get("tUniqRow_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row52 != null) {
						tHash_Lookup_row52.endGet();
					}
					globalMap.remove( "tHash_Lookup_row52" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tOracleOutput_13 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	
	



	
        if(pstmt_tOracleOutput_13 != null) {
			
				pstmt_tOracleOutput_13.close();
				resourceMap.remove("pstmt_tOracleOutput_13");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_13", true);

	
	nb_line_deleted_tOracleOutput_13=nb_line_deleted_tOracleOutput_13+ deletedCount_tOracleOutput_13;
	nb_line_update_tOracleOutput_13=nb_line_update_tOracleOutput_13 + updatedCount_tOracleOutput_13;
	nb_line_inserted_tOracleOutput_13=nb_line_inserted_tOracleOutput_13 + insertedCount_tOracleOutput_13;
	nb_line_rejected_tOracleOutput_13=nb_line_rejected_tOracleOutput_13 + rejectedCount_tOracleOutput_13;
	
        globalMap.put("tOracleOutput_13_NB_LINE",nb_line_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_UPDATED",nb_line_update_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_13);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_13", true);
end_Hash.put("tOracleOutput_13", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_13", end_Hash.get("tOracleOutput_13")-start_Hash.get("tOracleOutput_13"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_13 end ] stop
 */










	
	/**
	 * [tSortRow_8_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	

TOTALES_RECAUDOStruct[] array_tSortRow_8_SortOut = list_tSortRow_8_SortOut.toArray(new ComparableTOTALES_RECAUDOStruct[0]);

java.util.Arrays.sort(array_tSortRow_8_SortOut);

globalMap.put("tSortRow_8",array_tSortRow_8_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TOTALES_RECAUDO");
			  	}
			  	
 

ok_Hash.put("tSortRow_8_SortOut", true);
end_Hash.put("tSortRow_8_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_8_SortOut", end_Hash.get("tSortRow_8_SortOut")-start_Hash.get("tSortRow_8_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_8_SortOut end ] stop
 */


	
	/**
	 * [tOracleOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_14", false);
		start_Hash.put("tOracleOutput_14", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_14");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tOracleOutput_14 = 0;
		






    
    int nb_line_tOracleOutput_14 = 0;
    int nb_line_update_tOracleOutput_14 = 0;
    int nb_line_inserted_tOracleOutput_14 = 0;
    int nb_line_deleted_tOracleOutput_14 = 0;
    int nb_line_rejected_tOracleOutput_14 = 0;

    int tmp_batchUpdateCount_tOracleOutput_14 = 0;

    int deletedCount_tOracleOutput_14=0;
    int updatedCount_tOracleOutput_14=0;
    int insertedCount_tOracleOutput_14=0;
    int rowsToCommitCount_tOracleOutput_14=0;
    int rejectedCount_tOracleOutput_14=0;

    boolean whetherReject_tOracleOutput_14 = false;

    java.sql.Connection conn_tOracleOutput_14 = null;

    //optional table
    String dbschema_tOracleOutput_14 = null;
    String tableName_tOracleOutput_14 = null;
        dbschema_tOracleOutput_14 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_14=0;

        if(dbschema_tOracleOutput_14 == null || dbschema_tOracleOutput_14.trim().length() == 0) {
            tableName_tOracleOutput_14 = ("BREC_TOTALAPORPERIODO");
        } else {
            tableName_tOracleOutput_14 = dbschema_tOracleOutput_14 + "." + ("BREC_TOTALAPORPERIODO");
        }
                String insert_tOracleOutput_14 = "INSERT INTO " + tableName_tOracleOutput_14 + " (TIEMPO_ID,TIPO_TOTAL_INGRESO_ID,PERIODO,TOTAL_APORTE,TIPO_RECAUDO_ID,NOMBRE_TIPO_INGRESO) VALUES (?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_14 = conn_tOracleOutput_14.prepareStatement(insert_tOracleOutput_14);
                        resourceMap.put("pstmt_tOracleOutput_14", pstmt_tOracleOutput_14);





 



/**
 * [tOracleOutput_14 begin ] stop
 */



	
	/**
	 * [tSortRow_8_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_8_SortIn", false);
		start_Hash.put("tSortRow_8_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_8_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	
		int tos_count_tSortRow_8_SortIn = 0;
		


TOTALES_RECAUDOStruct[] array_tSortRow_8_SortIn = (TOTALES_RECAUDOStruct[]) globalMap.remove("tSortRow_8");

int nb_line_tSortRow_8_SortIn = 0;

TOTALES_RECAUDOStruct current_tSortRow_8_SortIn = null;

for(int i_tSortRow_8_SortIn = 0; i_tSortRow_8_SortIn < array_tSortRow_8_SortIn.length; i_tSortRow_8_SortIn++){
	current_tSortRow_8_SortIn = array_tSortRow_8_SortIn[i_tSortRow_8_SortIn];
	row36.TIEMPO_ID = current_tSortRow_8_SortIn.TIEMPO_ID;
	row36.TIPO_TOTAL_INGRESO_ID = current_tSortRow_8_SortIn.TIPO_TOTAL_INGRESO_ID;
	row36.PERIODO = current_tSortRow_8_SortIn.PERIODO;
	row36.TOTAL_APORTE = current_tSortRow_8_SortIn.TOTAL_APORTE;
	row36.TIPO_RECAUDO_ID = current_tSortRow_8_SortIn.TIPO_RECAUDO_ID;
	row36.NOMBRE_TIPO_INGRESO = current_tSortRow_8_SortIn.NOMBRE_TIPO_INGRESO;
	// increase number of line sorted
	nb_line_tSortRow_8_SortIn++;

 



/**
 * [tSortRow_8_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_8_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	

 


	tos_count_tSortRow_8_SortIn++;

/**
 * [tSortRow_8_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_8_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	

 



/**
 * [tSortRow_8_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					



        whetherReject_tOracleOutput_14 = false;
                        pstmt_tOracleOutput_14.setBigDecimal(1, row36.TIEMPO_ID);

                        pstmt_tOracleOutput_14.setInt(2, row36.TIPO_TOTAL_INGRESO_ID);

                        if(row36.PERIODO == null) {
pstmt_tOracleOutput_14.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_14.setString(3, row36.PERIODO);
}

                        pstmt_tOracleOutput_14.setBigDecimal(4, row36.TOTAL_APORTE);

                        pstmt_tOracleOutput_14.setInt(5, row36.TIPO_RECAUDO_ID);

                        if(row36.NOMBRE_TIPO_INGRESO == null) {
pstmt_tOracleOutput_14.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_14.setString(6, row36.NOMBRE_TIPO_INGRESO);
}

                try {
                    nb_line_tOracleOutput_14++;
                    int processedCount_tOracleOutput_14 = pstmt_tOracleOutput_14.executeUpdate();
                    insertedCount_tOracleOutput_14 += processedCount_tOracleOutput_14;
                    rowsToCommitCount_tOracleOutput_14 += processedCount_tOracleOutput_14;
                } catch(java.lang.Exception e_tOracleOutput_14) {
globalMap.put("tOracleOutput_14_ERROR_MESSAGE",e_tOracleOutput_14.getMessage());
                    whetherReject_tOracleOutput_14 = true;
                            System.err.print(e_tOracleOutput_14.getMessage());
                }
            if(!whetherReject_tOracleOutput_14) {
            }

 


	tos_count_tOracleOutput_14++;

/**
 * [tOracleOutput_14 main ] stop
 */
	
	/**
	 * [tOracleOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	

 



/**
 * [tOracleOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	

 



/**
 * [tOracleOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_8_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	

 



/**
 * [tSortRow_8_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_8_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	


}

globalMap.put("tSortRow_8_SortIn_NB_LINE",nb_line_tSortRow_8_SortIn);

 

ok_Hash.put("tSortRow_8_SortIn", true);
end_Hash.put("tSortRow_8_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_8_SortIn", end_Hash.get("tSortRow_8_SortIn")-start_Hash.get("tSortRow_8_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_8_SortIn end ] stop
 */

	
	/**
	 * [tOracleOutput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	
	



	
        if(pstmt_tOracleOutput_14 != null) {
			
				pstmt_tOracleOutput_14.close();
				resourceMap.remove("pstmt_tOracleOutput_14");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_14", true);

	
	nb_line_deleted_tOracleOutput_14=nb_line_deleted_tOracleOutput_14+ deletedCount_tOracleOutput_14;
	nb_line_update_tOracleOutput_14=nb_line_update_tOracleOutput_14 + updatedCount_tOracleOutput_14;
	nb_line_inserted_tOracleOutput_14=nb_line_inserted_tOracleOutput_14 + insertedCount_tOracleOutput_14;
	nb_line_rejected_tOracleOutput_14=nb_line_rejected_tOracleOutput_14 + rejectedCount_tOracleOutput_14;
	
        globalMap.put("tOracleOutput_14_NB_LINE",nb_line_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_UPDATED",nb_line_update_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_14);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_14", true);
end_Hash.put("tOracleOutput_14", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_14", end_Hash.get("tOracleOutput_14")-start_Hash.get("tOracleOutput_14"));
tStatCatcher_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tJava_5Process(globalMap);



/**
 * [tOracleOutput_14 end ] stop
 */
























				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_8_SortIn"
							globalMap.remove("tSortRow_8");
						
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row52"); 
				     			
							//free memory for "tSortRow_2_SortIn"
							globalMap.remove("tSortRow_2");
						
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
				try{
					
	
	/**
	 * [tOracleInput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */



	
	/**
	 * [tOracleInput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */



	
	/**
	 * [tOracleInput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */



	
	/**
	 * [tOracleInput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 finally ] stop
 */



	
	/**
	 * [tOracleInput_19 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */



	
	/**
	 * [tOracleInput_20 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */



	
	/**
	 * [tOracleInput_21 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 finally ] stop
 */

	
	/**
	 * [tMap_22 finally ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 finally ] stop
 */



	
	/**
	 * [tOracleInput_22 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 finally ] stop
 */

	
	/**
	 * [tMap_23 finally ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 finally ] stop
 */



	
	/**
	 * [tOracleInput_23 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 finally ] stop
 */

	
	/**
	 * [tMap_25 finally ] start
	 */

	

	
	
	currentComponent="tMap_25";
	
	

 



/**
 * [tMap_25 finally ] stop
 */



	
	/**
	 * [tOracleInput_24 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 finally ] stop
 */

	
	/**
	 * [tMap_26 finally ] start
	 */

	

	
	
	currentComponent="tMap_26";
	
	

 



/**
 * [tMap_26 finally ] stop
 */



	
	/**
	 * [tOracleInput_25 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 finally ] stop
 */

	
	/**
	 * [tMap_28 finally ] start
	 */

	

	
	
	currentComponent="tMap_28";
	
	

 



/**
 * [tMap_28 finally ] stop
 */



	
	/**
	 * [tOracleInput_26 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 finally ] stop
 */

	
	/**
	 * [tMap_29 finally ] start
	 */

	

	
	
	currentComponent="tMap_29";
	
	

 



/**
 * [tMap_29 finally ] stop
 */



	
	/**
	 * [tUnite_3 finally ] start
	 */

	

	
	
	currentComponent="tUnite_3";
	
	

 



/**
 * [tUnite_3 finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tSortRow_2_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_2_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn finally ] stop
 */

	
	/**
	 * [tMap_27 finally ] start
	 */

	

	
	
	currentComponent="tMap_27";
	
	

 



/**
 * [tMap_27 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tOracleOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_13") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_13 = null;
                if ((pstmtToClose_tOracleOutput_13 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_13")) != null) {
                    pstmtToClose_tOracleOutput_13.close();
                }
    }
 



/**
 * [tOracleOutput_13 finally ] stop
 */










	
	/**
	 * [tSortRow_8_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortOut";
	
	

 



/**
 * [tSortRow_8_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_8_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_8";
	
	currentComponent="tSortRow_8_SortIn";
	
	

 



/**
 * [tSortRow_8_SortIn finally ] stop
 */

	
	/**
	 * [tOracleOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_14") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_14 = null;
                if ((pstmtToClose_tOracleOutput_14 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_14")) != null) {
                    pstmtToClose_tOracleOutput_14.close();
                }
    }
 



/**
 * [tOracleOutput_14 finally ] stop
 */
























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


System.out.println(TalendDate.getCurrentDate());
System.out.println("--> End DataMart Aportes Vs Periodo");

 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk25", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public String periodo_;

				public String getPeriodo_ () {
					return this.periodo_;
				}

				public Boolean periodo_IsNullable(){
				    return true;
				}
				public Boolean periodo_IsKey(){
				    return false;
				}
				public Integer periodo_Length(){
				    return null;
				}
				public Integer periodo_Precision(){
				    return null;
				}
				public String periodo_Default(){
				
					return null;
				
				}
				public String periodo_Comment(){
				
				    return "";
				
				}
				public String periodo_Pattern(){
				
					return "";
				
				}
				public String periodo_OriginalDbColumnName(){
				
					return "periodo_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.periodo_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.periodo_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.periodo_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.periodo_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("periodo_="+periodo_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleSP_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "REC.createvmrecconsolidado" + "(?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row12.periodo_ = "";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

			// code for the argument 1 (periodo_) of type 'IN AUTOMAPPING'
    					if (row12.periodo_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(1, row12.periodo_);
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleSP_1", end_Hash.get("tOracleSP_1")-start_Hash.get("tOracleSP_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleSP_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_33Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tOracleInput_33 - inputs:(after_tOracleInput_28) outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_32 - inputs:(row6,row14,row13) outputs:(TIEMPO_APORTE,TIPODOC_APORTES)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tOracleInput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_33", false);
		start_Hash.put("tOracleInput_33", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_33");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_33";
	
	
		int tos_count_tOracleInput_33 = 0;
		
	


	
		    int nb_line_tOracleInput_33 = 0;
		    java.sql.Connection conn_tOracleInput_33 = null;
				conn_tOracleInput_33 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_33 = false;
				boolean isConnectionWrapped_tOracleInput_33 = !(conn_tOracleInput_33 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_33.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_33 = null;
                if (isConnectionWrapped_tOracleInput_33) {
					unwrappedOraConn_tOracleInput_33 = conn_tOracleInput_33.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_33 != null) {
                        isTimeZoneNull_tOracleInput_33 = (unwrappedOraConn_tOracleInput_33.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_33 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_33).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_33) {
					java.sql.Statement stmtGetTZ_tOracleInput_33 = conn_tOracleInput_33.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_33 = stmtGetTZ_tOracleInput_33.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_33 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_33.next()) {
						sessionTimezone_tOracleInput_33 = rsGetTZ_tOracleInput_33.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_33 && unwrappedOraConn_tOracleInput_33 != null) {
                        unwrappedOraConn_tOracleInput_33.setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_33).setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_33 = conn_tOracleInput_33.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_33.setFetchSize(1000);


		    String dbquery_tOracleInput_33 = "SELECT \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.\"ID\", \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.NOMBRE, \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.SIGLA\nFROM "+context.db_origen_Schema+".GEN_TDOCUMENTOS WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_33_QUERY",dbquery_tOracleInput_33);

		    java.sql.ResultSet rs_tOracleInput_33 = null;

		    try {
		    	rs_tOracleInput_33 = stmt_tOracleInput_33.executeQuery(dbquery_tOracleInput_33);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_33 = rs_tOracleInput_33.getMetaData();
		    	int colQtyInRs_tOracleInput_33 = rsmd_tOracleInput_33.getColumnCount();

		    String tmpContent_tOracleInput_33 = null;
		    
		    
		    while (rs_tOracleInput_33.next()) {
		        nb_line_tOracleInput_33++;
		        
							if(colQtyInRs_tOracleInput_33 < 1) {
								row14.ID = null;
							} else {
		                          
					if(rs_tOracleInput_33.getObject(1) != null) {
						row14.ID = rs_tOracleInput_33.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_33 < 2) {
								row14.NOMBRE = null;
							} else {
	                         		
        	row14.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_33 < 3) {
								row14.SIGLA = null;
							} else {
	                         		
        	row14.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 3, false);
		                    }
					




 



/**
 * [tOracleInput_33 begin ] stop
 */
	
	/**
	 * [tOracleInput_33 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 


	tos_count_tOracleInput_33++;

/**
 * [tOracleInput_33 main ] stop
 */
	
	/**
	 * [tOracleInput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.ID = row14.ID;
				
				row14_HashRow.NOMBRE = row14.NOMBRE;
				
				row14_HashRow.SIGLA = row14.SIGLA;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_33 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

}
}finally{
	if (rs_tOracleInput_33 != null) {
		rs_tOracleInput_33.close();
	}
	if (stmt_tOracleInput_33 != null) {
		stmt_tOracleInput_33.close();
	}
}

globalMap.put("tOracleInput_33_NB_LINE",nb_line_tOracleInput_33);
 

ok_Hash.put("tOracleInput_33", true);
end_Hash.put("tOracleInput_33", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_33", end_Hash.get("tOracleInput_33")-start_Hash.get("tOracleInput_33"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_33 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

tHash_Lookup_row14.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_33 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableComparableLookupRow<row35Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 200;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row35Struct other = (row35Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row35Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row35Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();




	
	/**
	 * [tAdvancedHash_row35 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row35", false);
		start_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row35";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tAdvancedHash_row35 = 0;
		

			   		// connection name:row35
			   		// source node:tOracleInput_7 - inputs:(after_tOracleInput_28) outputs:(row35,row35) | target node:tAdvancedHash_row35 - inputs:(row35) outputs:()
			   		// linked node: tMap_35 - inputs:(row37,row35) outputs:(TOTALES_APORTES_TIPO_RECAUDO)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row35 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row35Struct>getLookup(matchingModeEnum_row35);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row35", tHash_Lookup_row35);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row35 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_7");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_7.setFetchSize(1000);


		    String dbquery_tOracleInput_7 = "SELECT ID, NOMBRE FROM AFI_TVINCULACIONES WHERE ESTREGISTRO_ID = 1 AND TVINCULACIONES = 'RC'";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row35.ID = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(1) != null) {
						row35.ID = rs_tOracleInput_7.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row35.NOMBRE = null;
							} else {
	                         		
        	row35.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 2, false);
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					


			   
			   

					row35Struct row35_HashRow = new row35Struct();
		   	   	   
				
				row35_HashRow.ID = row35.ID;
				
				row35_HashRow.NOMBRE = row35.NOMBRE;
				
			tHash_Lookup_row35.put(row35_HashRow);
			
            




 


	tos_count_tAdvancedHash_row35++;

/**
 * [tAdvancedHash_row35 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_7", end_Hash.get("tOracleInput_7")-start_Hash.get("tOracleInput_7"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

tHash_Lookup_row35.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row35", true);
end_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());




/**
 * [tAdvancedHash_row35 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row42Struct implements routines.system.IPersistableComparableLookupRow<row42Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public Integer TIPO_RECAUDO_ID;

				public Integer getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return true;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return 0;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal TNOVEDADES_ID;

				public BigDecimal getTNOVEDADES_ID () {
					return this.TNOVEDADES_ID;
				}

				public Boolean TNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TNOVEDADES_IDIsKey(){
				    return true;
				}
				public Integer TNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer TNOVEDADES_IDPrecision(){
				    return 0;
				}
				public String TNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String TNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String TNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String TNOVEDADES_IDOriginalDbColumnName(){
				
					return "TNOVEDADES_ID";
				
				}

				
			    public String NOMBRE_NOVEDAD;

				public String getNOMBRE_NOVEDAD () {
					return this.NOMBRE_NOVEDAD;
				}

				public Boolean NOMBRE_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_NOVEDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_NOVEDADLength(){
				    return 200;
				}
				public Integer NOMBRE_NOVEDADPrecision(){
				    return 0;
				}
				public String NOMBRE_NOVEDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_NOVEDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_NOVEDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_NOVEDADOriginalDbColumnName(){
				
					return "NOMBRE_NOVEDAD";
				
				}

				
			    public BigDecimal CANTIDAD_NOVEDAD;

				public BigDecimal getCANTIDAD_NOVEDAD () {
					return this.CANTIDAD_NOVEDAD;
				}

				public Boolean CANTIDAD_NOVEDADIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_NOVEDADIsKey(){
				    return false;
				}
				public Integer CANTIDAD_NOVEDADLength(){
				    return 0;
				}
				public Integer CANTIDAD_NOVEDADPrecision(){
				    return 0;
				}
				public String CANTIDAD_NOVEDADDefault(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADComment(){
				
				    return "";
				
				}
				public String CANTIDAD_NOVEDADPattern(){
				
					return "";
				
				}
				public String CANTIDAD_NOVEDADOriginalDbColumnName(){
				
					return "CANTIDAD_NOVEDAD";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
						result = prime * result + ((this.TIPO_RECAUDO_ID == null) ? 0 : this.TIPO_RECAUDO_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row42Struct other = (row42Struct) obj;
		
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID == null) {
							if (other.TIPO_RECAUDO_ID != null)
								return false;
						
						} else if (!this.TIPO_RECAUDO_ID.equals(other.TIPO_RECAUDO_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row42Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.TNOVEDADES_ID = this.TNOVEDADES_ID;
	            other.NOMBRE_NOVEDAD = this.NOMBRE_NOVEDAD;
	            other.CANTIDAD_NOVEDAD = this.CANTIDAD_NOVEDAD;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            
	}

	public void copyKeysDataTo(row42Struct other) {

		other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
						this.TIPO_RECAUDO_ID = readInteger(dis);
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// Integer
				
						writeInteger(this.TIPO_RECAUDO_ID,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.TNOVEDADES_ID = (BigDecimal) ois.readObject();
					
						this.NOMBRE_NOVEDAD = readString(dis,ois);
					
       			    	this.CANTIDAD_NOVEDAD = (BigDecimal) ois.readObject();
					
       			    	this.TVINCULACIONES_ID = (BigDecimal) ois.readObject();
					
       			    	this.ENTAPORTANTES_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.TNOVEDADES_ID = (BigDecimal) objectIn.readObject();
					
						this.NOMBRE_NOVEDAD = readString(dis,objectIn);
					
       			    	this.CANTIDAD_NOVEDAD = (BigDecimal) objectIn.readObject();
					
       			    	this.TVINCULACIONES_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.ENTAPORTANTES_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.TNOVEDADES_ID);
					
						writeString(this.NOMBRE_NOVEDAD, dos, oos);
					
       			    	oos.writeObject(this.CANTIDAD_NOVEDAD);
					
       			    	oos.writeObject(this.TVINCULACIONES_ID);
					
       			    	oos.writeObject(this.ENTAPORTANTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TNOVEDADES_ID);
					
						writeString(this.NOMBRE_NOVEDAD, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD_NOVEDAD);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TVINCULACIONES_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ENTAPORTANTES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",TNOVEDADES_ID="+String.valueOf(TNOVEDADES_ID));
		sb.append(",NOMBRE_NOVEDAD="+NOMBRE_NOVEDAD);
		sb.append(",CANTIDAD_NOVEDAD="+String.valueOf(CANTIDAD_NOVEDAD));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row42Struct row42 = new row42Struct();




	
	/**
	 * [tAdvancedHash_row42 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row42", false);
		start_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row42";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tAdvancedHash_row42 = 0;
		

			   		// connection name:row42
			   		// source node:tOracleInput_14 - inputs:(after_tOracleInput_28) outputs:(row42,row42) | target node:tAdvancedHash_row42 - inputs:(row42) outputs:()
			   		// linked node: tMap_13 - inputs:(row60,row42) outputs:(CANT_NOVEDADES)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row42 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row42Struct>getLookup(matchingModeEnum_row42);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row42", tHash_Lookup_row42);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row42 begin ] stop
 */



	
	/**
	 * [tOracleInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_14", false);
		start_Hash.put("tOracleInput_14", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_14");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_14";
	
	
		int tos_count_tOracleInput_14 = 0;
		
	


	
		    int nb_line_tOracleInput_14 = 0;
		    java.sql.Connection conn_tOracleInput_14 = null;
				conn_tOracleInput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_14 = false;
				boolean isConnectionWrapped_tOracleInput_14 = !(conn_tOracleInput_14 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_14.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_14 = null;
                if (isConnectionWrapped_tOracleInput_14) {
					unwrappedOraConn_tOracleInput_14 = conn_tOracleInput_14.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_14 != null) {
                        isTimeZoneNull_tOracleInput_14 = (unwrappedOraConn_tOracleInput_14.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_14 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_14).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_14) {
					java.sql.Statement stmtGetTZ_tOracleInput_14 = conn_tOracleInput_14.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_14 = stmtGetTZ_tOracleInput_14.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_14 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_14.next()) {
						sessionTimezone_tOracleInput_14 = rsGetTZ_tOracleInput_14.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_14 && unwrappedOraConn_tOracleInput_14 != null) {
                        unwrappedOraConn_tOracleInput_14.setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_14).setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_14 = conn_tOracleInput_14.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_14.setFetchSize(1000);


		    String dbquery_tOracleInput_14 = "SELECT DS.ID TIEMPO_ID, DS.TPLANILLAS_ID TIPO_RECAUDO_ID, DS.PERIODO, NVL(NOVEDADES.TNOVEDADES_ID, 0) TNOVEDADES_ID, \n"
+"NVL(TNOVEDADES.NOMBRE, 'Aporte') NOMBRE_NOVEDAD, COUNT(DS.Ds_Id) CANTIDAD_NOVEDAD, dss.TVINCULACIONES_ID, DS.ENTAPORTANT"
+"ES_ID\nFROM VM_REC_CONSOLIDADO ds\nLEFT JOIN REC_NOVEDADES NOVEDADES ON NOVEDADES.DSALUD_ID = DS.Ds_Id\nLEFT JOIN GEN_TN"
+"OVEDADES TNOVEDADES ON TNOVEDADES.ID = NOVEDADES.TNOVEDADES_ID\ninner join rec_dsalud dss on dss.id=DS.Ds_Id \nWHERE \nd"
+"s.TPLANILLAS_ID = 1 AND ds.TARCHIVOS_ID IN (1, 2)\nAND ds.PERIODO = '" + context.PERIODO + "'\nGROUP BY ds.ID, ds.PERIODO, NOVEDADES.TNOVEDADES_ID, TNOVEDADES.NOMBRE, ds.TPLANILLAS_ID, dss.TVINCULACIONES_ID, ds."
+"ENTAPORTANTES_ID";
		    

		    globalMap.put("tOracleInput_14_QUERY",dbquery_tOracleInput_14);

		    java.sql.ResultSet rs_tOracleInput_14 = null;

		    try {
		    	rs_tOracleInput_14 = stmt_tOracleInput_14.executeQuery(dbquery_tOracleInput_14);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_14 = rs_tOracleInput_14.getMetaData();
		    	int colQtyInRs_tOracleInput_14 = rsmd_tOracleInput_14.getColumnCount();

		    String tmpContent_tOracleInput_14 = null;
		    
		    
		    while (rs_tOracleInput_14.next()) {
		        nb_line_tOracleInput_14++;
		        
							if(colQtyInRs_tOracleInput_14 < 1) {
								row42.TIEMPO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(1) != null) {
						row42.TIEMPO_ID = rs_tOracleInput_14.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_14 < 2) {
								row42.TIPO_RECAUDO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(2) != null) {
						row42.TIPO_RECAUDO_ID = rs_tOracleInput_14.getInt(2);
					} else {
				
						row42.TIPO_RECAUDO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_14 < 3) {
								row42.PERIODO = null;
							} else {
	                         		
        	row42.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 4) {
								row42.TNOVEDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(4) != null) {
						row42.TNOVEDADES_ID = rs_tOracleInput_14.getBigDecimal(4);
					} else {
				
						row42.TNOVEDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_14 < 5) {
								row42.NOMBRE_NOVEDAD = null;
							} else {
	                         		
        	row42.NOMBRE_NOVEDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 6) {
								row42.CANTIDAD_NOVEDAD = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(6) != null) {
						row42.CANTIDAD_NOVEDAD = rs_tOracleInput_14.getBigDecimal(6);
					} else {
				
						row42.CANTIDAD_NOVEDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_14 < 7) {
								row42.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(7) != null) {
						row42.TVINCULACIONES_ID = rs_tOracleInput_14.getBigDecimal(7);
					} else {
				
						row42.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_14 < 8) {
								row42.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(8) != null) {
						row42.ENTAPORTANTES_ID = rs_tOracleInput_14.getBigDecimal(8);
					} else {
				
						row42.ENTAPORTANTES_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_14 begin ] stop
 */
	
	/**
	 * [tOracleInput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 


	tos_count_tOracleInput_14++;

/**
 * [tOracleInput_14 main ] stop
 */
	
	/**
	 * [tOracleInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					


			   
			   

					row42Struct row42_HashRow = new row42Struct();
		   	   	   
				
				row42_HashRow.TIEMPO_ID = row42.TIEMPO_ID;
				
				row42_HashRow.TIPO_RECAUDO_ID = row42.TIPO_RECAUDO_ID;
				
				row42_HashRow.PERIODO = row42.PERIODO;
				
				row42_HashRow.TNOVEDADES_ID = row42.TNOVEDADES_ID;
				
				row42_HashRow.NOMBRE_NOVEDAD = row42.NOMBRE_NOVEDAD;
				
				row42_HashRow.CANTIDAD_NOVEDAD = row42.CANTIDAD_NOVEDAD;
				
				row42_HashRow.TVINCULACIONES_ID = row42.TVINCULACIONES_ID;
				
				row42_HashRow.ENTAPORTANTES_ID = row42.ENTAPORTANTES_ID;
				
			tHash_Lookup_row42.put(row42_HashRow);
			
            




 


	tos_count_tAdvancedHash_row42++;

/**
 * [tAdvancedHash_row42 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

}
}finally{
	if (rs_tOracleInput_14 != null) {
		rs_tOracleInput_14.close();
	}
	if (stmt_tOracleInput_14 != null) {
		stmt_tOracleInput_14.close();
	}
}

globalMap.put("tOracleInput_14_NB_LINE",nb_line_tOracleInput_14);
 

ok_Hash.put("tOracleInput_14", true);
end_Hash.put("tOracleInput_14", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_14", end_Hash.get("tOracleInput_14")-start_Hash.get("tOracleInput_14"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

tHash_Lookup_row42.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row42", true);
end_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());




/**
 * [tAdvancedHash_row42 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 20;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.TDOCUMENTOS_ID = this.TDOCUMENTOS_ID;
	            other.DOCUMENTO = this.DOCUMENTO;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) ois.readObject();
					
						this.DOCUMENTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) objectIn.readObject();
					
						this.DOCUMENTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_32Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tOracleInput_32 - inputs:(after_tOracleInput_28) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_32 - inputs:(row6,row14,row13) outputs:(TIEMPO_APORTE,TIPODOC_APORTES)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tOracleInput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_32", false);
		start_Hash.put("tOracleInput_32", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_32");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_32";
	
	
		int tos_count_tOracleInput_32 = 0;
		
	


	
		    int nb_line_tOracleInput_32 = 0;
		    java.sql.Connection conn_tOracleInput_32 = null;
				conn_tOracleInput_32 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_32 = false;
				boolean isConnectionWrapped_tOracleInput_32 = !(conn_tOracleInput_32 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_32.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_32 = null;
                if (isConnectionWrapped_tOracleInput_32) {
					unwrappedOraConn_tOracleInput_32 = conn_tOracleInput_32.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_32 != null) {
                        isTimeZoneNull_tOracleInput_32 = (unwrappedOraConn_tOracleInput_32.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_32 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_32).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_32) {
					java.sql.Statement stmtGetTZ_tOracleInput_32 = conn_tOracleInput_32.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_32 = stmtGetTZ_tOracleInput_32.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_32 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_32.next()) {
						sessionTimezone_tOracleInput_32 = rsGetTZ_tOracleInput_32.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_32 && unwrappedOraConn_tOracleInput_32 != null) {
                        unwrappedOraConn_tOracleInput_32.setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_32).setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_32 = conn_tOracleInput_32.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_32.setFetchSize(1000);


		    String dbquery_tOracleInput_32 = "SELECT \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.\"ID\", \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.NOMBRE, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.TDOCUMENTOS_ID, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.DOCUMENTO\nFROM "+context.db_origen_Schema+".GEN_ENTAPORTANTES WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_32_QUERY",dbquery_tOracleInput_32);

		    java.sql.ResultSet rs_tOracleInput_32 = null;

		    try {
		    	rs_tOracleInput_32 = stmt_tOracleInput_32.executeQuery(dbquery_tOracleInput_32);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_32 = rs_tOracleInput_32.getMetaData();
		    	int colQtyInRs_tOracleInput_32 = rsmd_tOracleInput_32.getColumnCount();

		    String tmpContent_tOracleInput_32 = null;
		    
		    
		    while (rs_tOracleInput_32.next()) {
		        nb_line_tOracleInput_32++;
		        
							if(colQtyInRs_tOracleInput_32 < 1) {
								row13.ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(1) != null) {
						row13.ID = rs_tOracleInput_32.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 2) {
								row13.NOMBRE = null;
							} else {
	                         		
        	row13.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_32, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_32 < 3) {
								row13.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(3) != null) {
						row13.TDOCUMENTOS_ID = rs_tOracleInput_32.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 4) {
								row13.DOCUMENTO = null;
							} else {
	                         		
        	row13.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_32, 4, false);
		                    }
					




 



/**
 * [tOracleInput_32 begin ] stop
 */
	
	/**
	 * [tOracleInput_32 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 


	tos_count_tOracleInput_32++;

/**
 * [tOracleInput_32 main ] stop
 */
	
	/**
	 * [tOracleInput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.ID = row13.ID;
				
				row13_HashRow.NOMBRE = row13.NOMBRE;
				
				row13_HashRow.TDOCUMENTOS_ID = row13.TDOCUMENTOS_ID;
				
				row13_HashRow.DOCUMENTO = row13.DOCUMENTO;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_32 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

}
}finally{
	if (rs_tOracleInput_32 != null) {
		rs_tOracleInput_32.close();
	}
	if (stmt_tOracleInput_32 != null) {
		stmt_tOracleInput_32.close();
	}
}

globalMap.put("tOracleInput_32_NB_LINE",nb_line_tOracleInput_32);
 

ok_Hash.put("tOracleInput_32", true);
end_Hash.put("tOracleInput_32", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_32", end_Hash.get("tOracleInput_32")-start_Hash.get("tOracleInput_32"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_32 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_32 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 1);
	}
	


public static class row52Struct implements routines.system.IPersistableComparableLookupRow<row52Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "yyyy";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return "";
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return "";
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row52Struct other = (row52Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row52Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row52Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.FECHA = readDate(dis,ois);
					
			            this.Anio = dis.readInt();
					
			            this.Mes = dis.readInt();
					
			            this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.FECHA = readDate(dis,objectIn);
					
			            this.Anio = objectIn.readInt();
					
			            this.Mes = objectIn.readInt();
					
			            this.Dia = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeDate(this.FECHA, dos, oos);
					
		            	dos.writeInt(this.Anio);
					
		            	dos.writeInt(this.Mes);
					
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeDate(this.FECHA, dos, objectOut);
					
					objectOut.writeInt(this.Anio);
					
					objectOut.writeInt(this.Mes);
					
					objectOut.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row52Struct row52 = new row52Struct();




	
	/**
	 * [tAdvancedHash_row52 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row52", false);
		start_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tAdvancedHash_row52 = 0;
		

			   		// connection name:row52
			   		// source node:tHashInput_9 - inputs:(after_tOracleInput_15) outputs:(row52,row52) | target node:tAdvancedHash_row52 - inputs:(row52) outputs:()
			   		// linked node: tMap_7 - inputs:(row33,row52) outputs:(out1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row52 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row52Struct>getLookup(matchingModeEnum_row52);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row52", tHash_Lookup_row52);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row52 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row91Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row91Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row91Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row52.ID = next_tHashInput_9.ID;
	row52.TIPO_RECAUDO_ID = next_tHashInput_9.TIPO_RECAUDO_ID;
	row52.FECHA = next_tHashInput_9.FECHA;
	row52.PERIODO = next_tHashInput_9.PERIODO;
	row52.Anio = next_tHashInput_9.Anio;
	row52.Mes = next_tHashInput_9.Mes;
	row52.Dia = next_tHashInput_9.Dia;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					


			   
			   

					row52Struct row52_HashRow = new row52Struct();
		   	   	   
				
				row52_HashRow.ID = row52.ID;
				
				row52_HashRow.TIPO_RECAUDO_ID = row52.TIPO_RECAUDO_ID;
				
				row52_HashRow.FECHA = row52.FECHA;
				
				row52_HashRow.PERIODO = row52.PERIODO;
				
				row52_HashRow.Anio = row52.Anio;
				
				row52_HashRow.Mes = row52.Mes;
				
				row52_HashRow.Dia = row52.Dia;
				
			tHash_Lookup_row52.put(row52_HashRow);
			
            




 


	tos_count_tAdvancedHash_row52++;

/**
 * [tAdvancedHash_row52 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

tHash_Lookup_row52.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row52", true);
end_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());




/**
 * [tAdvancedHash_row52 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleConnection_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(false);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleConnection_1", end_Hash.get("tOracleConnection_1")-start_Hash.get("tOracleConnection_1"));
tStatCatcher_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleConnection_2Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_2", false);
		start_Hash.put("tOracleConnection_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleConnection_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleConnection_2";
	
	
		int tos_count_tOracleConnection_2 = 0;
		
	

	
        String url_tOracleConnection_2 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_2", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_2 = context.db_destino_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_2 = context.db_destino_Password; 
		String dbPwd_tOracleConnection_2 = decryptedPassword_tOracleConnection_2;
	
	
	java.sql.Connection conn_tOracleConnection_2 = null;
	
		
			String driverClass_tOracleConnection_2 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_2 = java.lang.Class.forName(driverClass_tOracleConnection_2);
			globalMap.put("driverClass_tOracleConnection_2", driverClass_tOracleConnection_2);
		
			java.util.Properties atnParamsPrope_tOracleConnection_2 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_2.put("user",dbUser_tOracleConnection_2);
			    atnParamsPrope_tOracleConnection_2.put("password",dbPwd_tOracleConnection_2);
			if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                atnParamsPrope_tOracleConnection_2.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_2 = java.sql.DriverManager.getConnection(url_tOracleConnection_2, atnParamsPrope_tOracleConnection_2);

		globalMap.put("conn_tOracleConnection_2", conn_tOracleConnection_2);
	if (null != conn_tOracleConnection_2) {
		
			conn_tOracleConnection_2.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_2",context.db_destino_Server);
        globalMap.put("port_" + "tOracleConnection_2",context.db_destino_Port);
        globalMap.put("dbname_" + "tOracleConnection_2",context.db_destino_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_2", context.db_destino_Schema);
	globalMap.put("username_" + "tOracleConnection_2",context.db_destino_Login);
	globalMap.put("password_" + "tOracleConnection_2",dbPwd_tOracleConnection_2);

 



/**
 * [tOracleConnection_2 begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 


	tos_count_tOracleConnection_2++;

/**
 * [tOracleConnection_2 main ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_2 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 

ok_Hash.put("tOracleConnection_2", true);
end_Hash.put("tOracleConnection_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleConnection_2", end_Hash.get("tOracleConnection_2")-start_Hash.get("tOracleConnection_2"));
tStatCatcher_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tRunJob_2Process(globalMap);



/**
 * [tOracleConnection_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tRunJob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRunJob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tRunJob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_2", false);
		start_Hash.put("tRunJob_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tRunJob_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tRunJob_2";
	
	
		int tos_count_tRunJob_2 = 0;
		
class DealChildJobLibrary_tRunJob_2 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_2 dealChildJobLibrary_tRunJob_2 = new DealChildJobLibrary_tRunJob_2();

	class JVMArgumentHelper_tRunJob_2 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_2 jvm_argument_helper_tRunJob_2 = new JVMArgumentHelper_tRunJob_2();
	
	String audit_jar_path_tRunJob_2 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_2 begin ] stop
 */
	
	/**
	 * [tRunJob_2 main ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	
	java.util.List<String> paraList_tRunJob_2 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_2 = System.getProperty("os.name");
			if (osName_tRunJob_2 != null && osName_tRunJob_2.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_2.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_2.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_2 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_2 != null){
								paraList_tRunJob_2.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_2);
							}
							String log4j2_config_tRunJob_2 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_2 != null){
								paraList_tRunJob_2.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_2);
							}
							if (log4j1_config_tRunJob_2 != null || log4j2_config_tRunJob_2 != null) {
								paraList_tRunJob_2.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_2.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_2.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx2048M");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx4096M");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-cp");
		      				
              					String classpath_tRunJob_2_6 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/ojdbc8-19.19.0.0.jar;../lib/xercesImpl-2.12.2.jar;../lib/xml-apis-1.4.01.jar;../lib/crypto-utils-7.1.16.jar;../lib/TalendSAX.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/slf4j-api-1.7.34.jar;../lib/talendcsv-1.1.0.jar;../lib/talend_file_enhanced-1.3.jar;../lib/dom4j-2.1.3.jar;../lib/talend-oracle-timestamptz.jar;recconsolidado_4_0.jar;mail_1_3.jar;";
              					
              					if(audit_jar_path_tRunJob_2!=null && !audit_jar_path_tRunJob_2.isEmpty()) {
		      						classpath_tRunJob_2_6 += audit_jar_path_tRunJob_2;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, dealChildJobLibrary_tRunJob_2.replaceJarPathsFromCrcMap(classpath_tRunJob_2_6), true);
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "rep_diario_recaudo.recconsolidado_4_0.RecConsolidado");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--father_node=tRunJob_2");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_2.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_2.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_2 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_2 != null){
								paraList_tRunJob_2.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_2);
							}
							String log4j2_config_tRunJob_2 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_2 != null){
								paraList_tRunJob_2.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_2);
							}
							if (log4j1_config_tRunJob_2 != null || log4j2_config_tRunJob_2 != null) {
								paraList_tRunJob_2.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_2.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_2.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx2048M");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-Xmx4096M");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "-cp");
		      				
		      					String classpath_tRunJob_2_6 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/ojdbc8-19.19.0.0.jar:$ROOT_PATH/../lib/xercesImpl-2.12.2.jar:$ROOT_PATH/../lib/xml-apis-1.4.01.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/TalendSAX.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/talendcsv-1.1.0.jar:$ROOT_PATH/../lib/talend_file_enhanced-1.3.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/../lib/talend-oracle-timestamptz.jar:$ROOT_PATH/recconsolidado_4_0.jar:$ROOT_PATH/mail_1_3.jar:";
		      					
		      					if(audit_jar_path_tRunJob_2!=null && !audit_jar_path_tRunJob_2.isEmpty()) {
		      						classpath_tRunJob_2_6 += audit_jar_path_tRunJob_2;
		      					}
		      					
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, dealChildJobLibrary_tRunJob_2.replaceJarPathsFromCrcMap(classpath_tRunJob_2_6).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "rep_diario_recaudo.recconsolidado_4_0.RecConsolidado");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--father_node=tRunJob_2");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_2.addArgumentsTo(paraList_tRunJob_2, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_2.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_2.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_2.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_2 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_2 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_2".equals(tRunJobName_tRunJob_2) && childResumePath_tRunJob_2 != null){
		paraList_tRunJob_2.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_2.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_2");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_2 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_2 = null;

	
		obj_tRunJob_2 = context.PERIODO;
		if(obj_tRunJob_2!=null) {
			if (obj_tRunJob_2.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_2.add("--context_param PERIODO=" + ((java.util.Date) obj_tRunJob_2).getTime());
			} else {
				
					paraList_tRunJob_2.add("--context_param PERIODO=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_2));
					
				
			}
		} else {
			paraList_tRunJob_2.add("--context_param PERIODO=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_2.put("PERIODO", obj_tRunJob_2);
	
	
				class ConsoleHelper_tRunJob_2 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_2_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_2_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_2 consoleHelper_tRunJob_2 = new ConsoleHelper_tRunJob_2();

		Runtime runtime_tRunJob_2 = Runtime.getRuntime();
		Process ps_tRunJob_2 = null;
		
		//0 indicates normal termination
        int result_tRunJob_2;
        StringBuffer errorMsg_tRunJob_2 = new StringBuffer();
        try {
            ps_tRunJob_2 = runtime_tRunJob_2.exec((String[])paraList_tRunJob_2.toArray(new String[paraList_tRunJob_2.size()]));

            Thread normal_tRunJob_2 = consoleHelper_tRunJob_2.getNormalThread(ps_tRunJob_2);
            normal_tRunJob_2.start();

            Thread error_tRunJob_2 = consoleHelper_tRunJob_2.getErrorThread(ps_tRunJob_2, errorMsg_tRunJob_2);
            error_tRunJob_2.start();

            result_tRunJob_2 = ps_tRunJob_2.waitFor();
            normal_tRunJob_2.join();
            error_tRunJob_2.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_2_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_2.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_2_CHILD_RETURN_CODE",result_tRunJob_2);
		if(result_tRunJob_2 != 0){
   			globalMap.put("tRunJob_2_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_2.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_2 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_2.toString());
			
  		}

		

 


	tos_count_tRunJob_2++;

/**
 * [tRunJob_2 main ] stop
 */
	
	/**
	 * [tRunJob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 



/**
 * [tRunJob_2 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 



/**
 * [tRunJob_2 process_data_end ] stop
 */
	
	/**
	 * [tRunJob_2 end ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 

ok_Hash.put("tRunJob_2", true);
end_Hash.put("tRunJob_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tRunJob_2", end_Hash.get("tRunJob_2")-start_Hash.get("tRunJob_2"));
tStatCatcher_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk20", 0, "ok");
				}
				tOracleInput_10Process(globalMap);



/**
 * [tRunJob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRunJob_2 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	
	
 



/**
 * [tRunJob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRunJob_2_SUBPROCESS_STATE", 1);
	}
	


public static class row82Struct implements routines.system.IPersistableRow<row82Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row82Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row82Struct row82 = new row82Struct();




	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row82");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement();

		    String dbquery_tOracleInput_10 = "SELECT TIEM.PERIODO FROM (SELECT MAX(TI.ID) AS ID FROM BREC_TIEMPO TI \n               WHERE TI.TIPO_RECAUDO_ID= 1) IDE"
+"\nINNER JOIN BREC_TIEMPO TIEM ON TIEM.ID = IDE.ID\nWHERE TIEM.TIPO_RECAUDO_ID = 1";
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row82.PERIODO = null;
							} else {
	                         		
        	row82.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 1, false);
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row82"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.ULTIMO_PERIODO = row82.PERIODO;

    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());




/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row82");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tOracleInput_45Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row83Struct implements routines.system.IPersistableRow<row83Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row83Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_45Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row83Struct row83 = new row83Struct();




	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row83");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_45 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_45", false);
		start_Hash.put("tOracleInput_45", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_45";
	
	
		int tos_count_tOracleInput_45 = 0;
		
	


	
		    int nb_line_tOracleInput_45 = 0;
		    java.sql.Connection conn_tOracleInput_45 = null;
				conn_tOracleInput_45 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_45 = false;
				boolean isConnectionWrapped_tOracleInput_45 = !(conn_tOracleInput_45 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_45.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_45 = null;
                if (isConnectionWrapped_tOracleInput_45) {
					unwrappedOraConn_tOracleInput_45 = conn_tOracleInput_45.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_45 != null) {
                        isTimeZoneNull_tOracleInput_45 = (unwrappedOraConn_tOracleInput_45.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_45 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_45).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_45) {
					java.sql.Statement stmtGetTZ_tOracleInput_45 = conn_tOracleInput_45.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_45 = stmtGetTZ_tOracleInput_45.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_45 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_45.next()) {
						sessionTimezone_tOracleInput_45 = rsGetTZ_tOracleInput_45.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_45 && unwrappedOraConn_tOracleInput_45 != null) {
                        unwrappedOraConn_tOracleInput_45.setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_45).setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_45 = conn_tOracleInput_45.createStatement();

		    String dbquery_tOracleInput_45 = "SELECT \nT.ID\nFROM (SELECT\n                ID,\n                ROW_NUMBER() OVER(ORDER BY TO_DATE(PERIODO,'YYYY-MM')"
+" DESC)  AS NUMERO\n                FROM REC_CONTROLCARGUE \n                WHERE ESTREGISTRO_ID = 1 \n                A"
+"ND ESTARCHIVO_ID = 3\n                AND TO_DATE(PERIODO,'YYYY-MM') > TO_DATE( '"+ context.ULTIMO_PERIODO +"' ,'YYYY-MM')\n                ORDER BY PERIODO DESC) T\nWHERE\nT.NUMERO = 1";
		    

		    globalMap.put("tOracleInput_45_QUERY",dbquery_tOracleInput_45);

		    java.sql.ResultSet rs_tOracleInput_45 = null;

		    try {
		    	rs_tOracleInput_45 = stmt_tOracleInput_45.executeQuery(dbquery_tOracleInput_45);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_45 = rs_tOracleInput_45.getMetaData();
		    	int colQtyInRs_tOracleInput_45 = rsmd_tOracleInput_45.getColumnCount();

		    String tmpContent_tOracleInput_45 = null;
		    
		    
		    while (rs_tOracleInput_45.next()) {
		        nb_line_tOracleInput_45++;
		        
							if(colQtyInRs_tOracleInput_45 < 1) {
								row83.ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(1) != null) {
						row83.ID = rs_tOracleInput_45.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_45 begin ] stop
 */
	
	/**
	 * [tOracleInput_45 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 


	tos_count_tOracleInput_45++;

/**
 * [tOracleInput_45 main ] stop
 */
	
	/**
	 * [tOracleInput_45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row83"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.CCARGUE_ID = row83.ID.intValue();

    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_45 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_45 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

}
}finally{
	if (rs_tOracleInput_45 != null) {
		rs_tOracleInput_45.close();
	}
	if (stmt_tOracleInput_45 != null) {
		stmt_tOracleInput_45.close();
	}
}

globalMap.put("tOracleInput_45_NB_LINE",nb_line_tOracleInput_45);
 

ok_Hash.put("tOracleInput_45", true);
end_Hash.put("tOracleInput_45", System.currentTimeMillis());




/**
 * [tOracleInput_45 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row83");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_45:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tOracleInput_12Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_45 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 1);
	}
	


public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 200;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row45Struct other = (row45Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row45Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row45Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();




	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






        int updateKeyCount_tOracleOutput_2 = 1;
        if(updateKeyCount_tOracleOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_2 == 2 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
                    String driverClass_tOracleOutput_2 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_2);
                String url_tOracleOutput_2 = null;
                    url_tOracleOutput_2 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_2 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_2 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_2 = decryptedPassword_tOracleOutput_2;
                dbschema_tOracleOutput_2 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_2 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_2.put("user",dbUser_tOracleOutput_2);
                    atnParamsPrope_tOracleOutput_2.put("password",dbPwd_tOracleOutput_2);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_2.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_2 = java.sql.DriverManager.getConnection(url_tOracleOutput_2, atnParamsPrope_tOracleOutput_2);
        resourceMap.put("conn_tOracleOutput_2", conn_tOracleOutput_2);
            conn_tOracleOutput_2.setAutoCommit(false);
            int commitEvery_tOracleOutput_2 = 1000;
            int commitCounter_tOracleOutput_2 = 0;
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("BREC_REGLABORAL");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("BREC_REGLABORAL");
        }
                String update_tOracleOutput_2 = "UPDATE " + tableName_tOracleOutput_2 + " SET NOMBRE = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(update_tOracleOutput_2);
                resourceMap.put("pstmtUpdate_tOracleOutput_2", pstmtUpdate_tOracleOutput_2);
                String insert_tOracleOutput_2 = "INSERT INTO " + tableName_tOracleOutput_2 + " (ID,NOMBRE) VALUES (?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(insert_tOracleOutput_2);
                resourceMap.put("pstmtInsert_tOracleOutput_2", pstmtInsert_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_12");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_12.setFetchSize(1000);


		    String dbquery_tOracleInput_12 = "SELECT  ID, NOMBRE FROM AFI_TVINCULACIONES WHERE ESTREGISTRO_ID = 1 AND TVINCULACIONES = 'RC'";
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row45.ID = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(1) != null) {
						row45.ID = rs_tOracleInput_12.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row45.NOMBRE = null;
							} else {
	                         		
        	row45.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 2, false);
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
            int updateFlag_tOracleOutput_2 = 0;
                    if(row45.NOMBRE == null) {
pstmtUpdate_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_2.setString(1, row45.NOMBRE);
}


                    pstmtUpdate_tOracleOutput_2.setBigDecimal(2 + count_tOracleOutput_2, row45.ID);


            try {
                updateFlag_tOracleOutput_2 = pstmtUpdate_tOracleOutput_2.executeUpdate();
                updatedCount_tOracleOutput_2 = updatedCount_tOracleOutput_2+updateFlag_tOracleOutput_2;
                rowsToCommitCount_tOracleOutput_2 += updateFlag_tOracleOutput_2;
                if(updateFlag_tOracleOutput_2 == 0) {
                            pstmtInsert_tOracleOutput_2.setBigDecimal(1, row45.ID);

                            if(row45.NOMBRE == null) {
pstmtInsert_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_2.setString(2, row45.NOMBRE);
}

                    int processedCount_tOracleOutput_2 = pstmtInsert_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    nb_line_tOracleOutput_2++;
                }else{
                    nb_line_tOracleOutput_2++;
                }
            } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                whetherReject_tOracleOutput_2 = true;
                    throw(e_tOracleOutput_2);
            }
            if(!whetherReject_tOracleOutput_2) {
            }
                commitCounter_tOracleOutput_2++;
                if(commitEvery_tOracleOutput_2 <= commitCounter_tOracleOutput_2) {
                    if(rowsToCommitCount_tOracleOutput_2 != 0){
                    	
                    }
                    conn_tOracleOutput_2.commit();
                    if(rowsToCommitCount_tOracleOutput_2 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_2 = 0;
                    }
                    commitCounter_tOracleOutput_2=0;
                }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_12", end_Hash.get("tOracleInput_12")-start_Hash.get("tOracleInput_12"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_2 != null){
            pstmtUpdate_tOracleOutput_2.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_2");
        }
        if(pstmtInsert_tOracleOutput_2 != null){
            pstmtInsert_tOracleOutput_2.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_2");
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);
		if(commitCounter_tOracleOutput_2 > 0 && rowsToCommitCount_tOracleOutput_2 != 0) {
			
		}
		conn_tOracleOutput_2.commit();
		if(commitCounter_tOracleOutput_2 > 0 && rowsToCommitCount_tOracleOutput_2 != 0) {
			
			rowsToCommitCount_tOracleOutput_2 = 0;
		}
		commitCounter_tOracleOutput_2 = 0;
		
		
		conn_tOracleOutput_2 .close();
		
		resourceMap.put("finish_tOracleOutput_2", true);
   	

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_2", end_Hash.get("tOracleOutput_2")-start_Hash.get("tOracleOutput_2"));
tStatCatcher_1Process(globalMap);
   			if ( (Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If3", 0, "true");
					}
				tOracleInput_13Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If3", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_2 = null;
                if ((pstmtUpdateToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_2")) != null) {
                    pstmtUpdateToClose_tOracleOutput_2.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_2 = null;
                if ((pstmtInsertToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_2")) != null) {
                    pstmtInsertToClose_tOracleOutput_2.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_2") == null){
            java.sql.Connection ctn_tOracleOutput_2 = null;
            if((ctn_tOracleOutput_2 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_2")) != null){
                try {
                    ctn_tOracleOutput_2.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_2) {
                    String errorMessage_tOracleOutput_2 = "failed to close the connection in tOracleOutput_2 :" + sqlEx_tOracleOutput_2.getMessage();
                    System.err.println(errorMessage_tOracleOutput_2);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal VALOR;

				public BigDecimal getVALOR () {
					return this.VALOR;
				}

				public Boolean VALORIsNullable(){
				    return true;
				}
				public Boolean VALORIsKey(){
				    return false;
				}
				public Integer VALORLength(){
				    return 14;
				}
				public Integer VALORPrecision(){
				    return 2;
				}
				public String VALORDefault(){
				
					return "";
				
				}
				public String VALORComment(){
				
				    return "";
				
				}
				public String VALORPattern(){
				
					return "";
				
				}
				public String VALOROriginalDbColumnName(){
				
					return "VALOR";
				
				}

				
			    public BigDecimal ANIO;

				public BigDecimal getANIO () {
					return this.ANIO;
				}

				public Boolean ANIOIsNullable(){
				    return false;
				}
				public Boolean ANIOIsKey(){
				    return false;
				}
				public Integer ANIOLength(){
				    return 0;
				}
				public Integer ANIOPrecision(){
				    return null;
				}
				public String ANIODefault(){
				
					return "";
				
				}
				public String ANIOComment(){
				
				    return "";
				
				}
				public String ANIOPattern(){
				
					return "";
				
				}
				public String ANIOOriginalDbColumnName(){
				
					return "ANIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row46Struct other = (row46Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row46Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.VALOR = this.VALOR;
	            other.ANIO = this.ANIO;
	            
	}

	public void copyKeysDataTo(row46Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
						this.VALOR = (BigDecimal) dis.readObject();
					
						this.ANIO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
						this.VALOR = (BigDecimal) dis.readObject();
					
						this.ANIO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ANIO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ANIO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",VALOR="+String.valueOf(VALOR));
		sb.append(",ANIO="+String.valueOf(ANIO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();




	
	/**
	 * [tOracleOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_3", false);
		start_Hash.put("tOracleOutput_3", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_3");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tOracleOutput_3 = 0;
		






        int updateKeyCount_tOracleOutput_3 = 1;
        if(updateKeyCount_tOracleOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_3 == 4 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_3 = 0;
    int nb_line_update_tOracleOutput_3 = 0;
    int nb_line_inserted_tOracleOutput_3 = 0;
    int nb_line_deleted_tOracleOutput_3 = 0;
    int nb_line_rejected_tOracleOutput_3 = 0;

    int tmp_batchUpdateCount_tOracleOutput_3 = 0;

    int deletedCount_tOracleOutput_3=0;
    int updatedCount_tOracleOutput_3=0;
    int insertedCount_tOracleOutput_3=0;
    int rowsToCommitCount_tOracleOutput_3=0;
    int rejectedCount_tOracleOutput_3=0;

    boolean whetherReject_tOracleOutput_3 = false;

    java.sql.Connection conn_tOracleOutput_3 = null;

    //optional table
    String dbschema_tOracleOutput_3 = null;
    String tableName_tOracleOutput_3 = null;
                    String driverClass_tOracleOutput_3 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_3);
                String url_tOracleOutput_3 = null;
                    url_tOracleOutput_3 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_3 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_3 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_3 = decryptedPassword_tOracleOutput_3;
                dbschema_tOracleOutput_3 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_3 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_3.put("user",dbUser_tOracleOutput_3);
                    atnParamsPrope_tOracleOutput_3.put("password",dbPwd_tOracleOutput_3);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_3.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_3 = java.sql.DriverManager.getConnection(url_tOracleOutput_3, atnParamsPrope_tOracleOutput_3);
        resourceMap.put("conn_tOracleOutput_3", conn_tOracleOutput_3);
            conn_tOracleOutput_3.setAutoCommit(false);
            int commitEvery_tOracleOutput_3 = 1000;
            int commitCounter_tOracleOutput_3 = 0;
        int count_tOracleOutput_3=0;

        if(dbschema_tOracleOutput_3 == null || dbschema_tOracleOutput_3.trim().length() == 0) {
            tableName_tOracleOutput_3 = ("BREC_PARRECAUDO");
        } else {
            tableName_tOracleOutput_3 = dbschema_tOracleOutput_3 + "." + ("BREC_PARRECAUDO");
        }
                String update_tOracleOutput_3 = "UPDATE " + tableName_tOracleOutput_3 + " SET NOMBRE = ?,VALOR = ?,ANIO = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_3 = conn_tOracleOutput_3.prepareStatement(update_tOracleOutput_3);
                resourceMap.put("pstmtUpdate_tOracleOutput_3", pstmtUpdate_tOracleOutput_3);
                String insert_tOracleOutput_3 = "INSERT INTO " + tableName_tOracleOutput_3 + " (ID,NOMBRE,VALOR,ANIO) VALUES (?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_3 = conn_tOracleOutput_3.prepareStatement(insert_tOracleOutput_3);
                resourceMap.put("pstmtInsert_tOracleOutput_3", pstmtInsert_tOracleOutput_3);





 



/**
 * [tOracleOutput_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_13", false);
		start_Hash.put("tOracleInput_13", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_13");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_13";
	
	
		int tos_count_tOracleInput_13 = 0;
		
	


	
		    int nb_line_tOracleInput_13 = 0;
		    java.sql.Connection conn_tOracleInput_13 = null;
				conn_tOracleInput_13 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_13 = false;
				boolean isConnectionWrapped_tOracleInput_13 = !(conn_tOracleInput_13 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_13.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_13 = null;
                if (isConnectionWrapped_tOracleInput_13) {
					unwrappedOraConn_tOracleInput_13 = conn_tOracleInput_13.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_13 != null) {
                        isTimeZoneNull_tOracleInput_13 = (unwrappedOraConn_tOracleInput_13.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_13 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_13).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_13) {
					java.sql.Statement stmtGetTZ_tOracleInput_13 = conn_tOracleInput_13.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_13 = stmtGetTZ_tOracleInput_13.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_13 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_13.next()) {
						sessionTimezone_tOracleInput_13 = rsGetTZ_tOracleInput_13.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_13 && unwrappedOraConn_tOracleInput_13 != null) {
                        unwrappedOraConn_tOracleInput_13.setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_13).setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_13 = conn_tOracleInput_13.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_13.setFetchSize(1000);


		    String dbquery_tOracleInput_13 = "SELECT PR.ID, DP.NOMBRE, PR.VALOR_PARAMETRO VALOR, PR.ANIO\nFROM REC_PARAMRECAUDO PR INNER JOIN REC_DPARAMETRO DP ON DP"
+".ID = PR.DPARAMETRO_ID\nWHERE PR.ESTREGISTRO_ID = 1 AND PR.ANIO = EXTRACT(YEAR FROM REC.fnc_PeriodoToDate('" + context.PERIODO + "', 0))";
		    

		    globalMap.put("tOracleInput_13_QUERY",dbquery_tOracleInput_13);

		    java.sql.ResultSet rs_tOracleInput_13 = null;

		    try {
		    	rs_tOracleInput_13 = stmt_tOracleInput_13.executeQuery(dbquery_tOracleInput_13);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_13 = rs_tOracleInput_13.getMetaData();
		    	int colQtyInRs_tOracleInput_13 = rsmd_tOracleInput_13.getColumnCount();

		    String tmpContent_tOracleInput_13 = null;
		    
		    
		    while (rs_tOracleInput_13.next()) {
		        nb_line_tOracleInput_13++;
		        
							if(colQtyInRs_tOracleInput_13 < 1) {
								row46.ID = null;
							} else {
		                          
					if(rs_tOracleInput_13.getObject(1) != null) {
						row46.ID = rs_tOracleInput_13.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_13 < 2) {
								row46.NOMBRE = null;
							} else {
	                         		
        	row46.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 3) {
								row46.VALOR = null;
							} else {
		                          
					if(rs_tOracleInput_13.getObject(3) != null) {
						row46.VALOR = rs_tOracleInput_13.getBigDecimal(3);
					} else {
				
						row46.VALOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_13 < 4) {
								row46.ANIO = null;
							} else {
		                          
					if(rs_tOracleInput_13.getObject(4) != null) {
						row46.ANIO = rs_tOracleInput_13.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_13 begin ] stop
 */
	
	/**
	 * [tOracleInput_13 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 


	tos_count_tOracleInput_13++;

/**
 * [tOracleInput_13 main ] stop
 */
	
	/**
	 * [tOracleInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					



        whetherReject_tOracleOutput_3 = false;
            int updateFlag_tOracleOutput_3 = 0;
                    if(row46.NOMBRE == null) {
pstmtUpdate_tOracleOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_3.setString(1, row46.NOMBRE);
}

                    pstmtUpdate_tOracleOutput_3.setBigDecimal(2, row46.VALOR);

                    pstmtUpdate_tOracleOutput_3.setBigDecimal(3, row46.ANIO);


                    pstmtUpdate_tOracleOutput_3.setBigDecimal(4 + count_tOracleOutput_3, row46.ID);


            try {
                updateFlag_tOracleOutput_3 = pstmtUpdate_tOracleOutput_3.executeUpdate();
                updatedCount_tOracleOutput_3 = updatedCount_tOracleOutput_3+updateFlag_tOracleOutput_3;
                rowsToCommitCount_tOracleOutput_3 += updateFlag_tOracleOutput_3;
                if(updateFlag_tOracleOutput_3 == 0) {
                            pstmtInsert_tOracleOutput_3.setBigDecimal(1, row46.ID);

                            if(row46.NOMBRE == null) {
pstmtInsert_tOracleOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_3.setString(2, row46.NOMBRE);
}

                            pstmtInsert_tOracleOutput_3.setBigDecimal(3, row46.VALOR);

                            pstmtInsert_tOracleOutput_3.setBigDecimal(4, row46.ANIO);

                    int processedCount_tOracleOutput_3 = pstmtInsert_tOracleOutput_3.executeUpdate();
                    insertedCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                    rowsToCommitCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                    nb_line_tOracleOutput_3++;
                }else{
                    nb_line_tOracleOutput_3++;
                }
            } catch(java.lang.Exception e_tOracleOutput_3) {
globalMap.put("tOracleOutput_3_ERROR_MESSAGE",e_tOracleOutput_3.getMessage());
                whetherReject_tOracleOutput_3 = true;
                    throw(e_tOracleOutput_3);
            }
            if(!whetherReject_tOracleOutput_3) {
            }
                commitCounter_tOracleOutput_3++;
                if(commitEvery_tOracleOutput_3 <= commitCounter_tOracleOutput_3) {
                    if(rowsToCommitCount_tOracleOutput_3 != 0){
                    	
                    }
                    conn_tOracleOutput_3.commit();
                    if(rowsToCommitCount_tOracleOutput_3 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_3 = 0;
                    }
                    commitCounter_tOracleOutput_3=0;
                }

 


	tos_count_tOracleOutput_3++;

/**
 * [tOracleOutput_3 main ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_13 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

}
}finally{
	if (rs_tOracleInput_13 != null) {
		rs_tOracleInput_13.close();
	}
	if (stmt_tOracleInput_13 != null) {
		stmt_tOracleInput_13.close();
	}
}

globalMap.put("tOracleInput_13_NB_LINE",nb_line_tOracleInput_13);
 

ok_Hash.put("tOracleInput_13", true);
end_Hash.put("tOracleInput_13", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_13", end_Hash.get("tOracleInput_13")-start_Hash.get("tOracleInput_13"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_13 end ] stop
 */

	
	/**
	 * [tOracleOutput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_3 != null){
            pstmtUpdate_tOracleOutput_3.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_3");
        }
        if(pstmtInsert_tOracleOutput_3 != null){
            pstmtInsert_tOracleOutput_3.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_3");
        }
    resourceMap.put("statementClosed_tOracleOutput_3", true);
		if(commitCounter_tOracleOutput_3 > 0 && rowsToCommitCount_tOracleOutput_3 != 0) {
			
		}
		conn_tOracleOutput_3.commit();
		if(commitCounter_tOracleOutput_3 > 0 && rowsToCommitCount_tOracleOutput_3 != 0) {
			
			rowsToCommitCount_tOracleOutput_3 = 0;
		}
		commitCounter_tOracleOutput_3 = 0;
		
		
		conn_tOracleOutput_3 .close();
		
		resourceMap.put("finish_tOracleOutput_3", true);
   	

	
	nb_line_deleted_tOracleOutput_3=nb_line_deleted_tOracleOutput_3+ deletedCount_tOracleOutput_3;
	nb_line_update_tOracleOutput_3=nb_line_update_tOracleOutput_3 + updatedCount_tOracleOutput_3;
	nb_line_inserted_tOracleOutput_3=nb_line_inserted_tOracleOutput_3 + insertedCount_tOracleOutput_3;
	nb_line_rejected_tOracleOutput_3=nb_line_rejected_tOracleOutput_3 + rejectedCount_tOracleOutput_3;
	
        globalMap.put("tOracleOutput_3_NB_LINE",nb_line_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_UPDATED",nb_line_update_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_3);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_3", true);
end_Hash.put("tOracleOutput_3", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_3", end_Hash.get("tOracleOutput_3")-start_Hash.get("tOracleOutput_3"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If4", 0, "true");
					}
				tOracleInput_6Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If4", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_13 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 finally ] stop
 */

	
	/**
	 * [tOracleOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_3") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_3 = null;
                if ((pstmtUpdateToClose_tOracleOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_3")) != null) {
                    pstmtUpdateToClose_tOracleOutput_3.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_3 = null;
                if ((pstmtInsertToClose_tOracleOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_3")) != null) {
                    pstmtInsertToClose_tOracleOutput_3.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_3") == null){
            java.sql.Connection ctn_tOracleOutput_3 = null;
            if((ctn_tOracleOutput_3 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_3")) != null){
                try {
                    ctn_tOracleOutput_3.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_3) {
                    String errorMessage_tOracleOutput_3 = "failed to close the connection in tOracleOutput_3 :" + sqlEx_tOracleOutput_3.getMessage();
                    System.err.println(errorMessage_tOracleOutput_3);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row49Struct other = (row49Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row49Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row49Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row49Struct row49 = new row49Struct();




	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_4");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






        int updateKeyCount_tOracleOutput_4 = 1;
        if(updateKeyCount_tOracleOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_4 == 2 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
                    String driverClass_tOracleOutput_4 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_4);
                String url_tOracleOutput_4 = null;
                    url_tOracleOutput_4 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_4 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_4 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_4 = decryptedPassword_tOracleOutput_4;
                dbschema_tOracleOutput_4 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_4 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_4.put("user",dbUser_tOracleOutput_4);
                    atnParamsPrope_tOracleOutput_4.put("password",dbPwd_tOracleOutput_4);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_4.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_4 = java.sql.DriverManager.getConnection(url_tOracleOutput_4, atnParamsPrope_tOracleOutput_4);
        resourceMap.put("conn_tOracleOutput_4", conn_tOracleOutput_4);
            conn_tOracleOutput_4.setAutoCommit(false);
            int commitEvery_tOracleOutput_4 = 1000;
            int commitCounter_tOracleOutput_4 = 0;
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("BREC_TRECAUDO");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("BREC_TRECAUDO");
        }
                java.sql.PreparedStatement pstmt_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement("SELECT COUNT(1) FROM " + tableName_tOracleOutput_4 + " WHERE ID = ?");
                resourceMap.put("pstmt_tOracleOutput_4", pstmt_tOracleOutput_4);
                String insert_tOracleOutput_4 = "INSERT INTO " + tableName_tOracleOutput_4 + " (ID,NOMBRE) VALUES (?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(insert_tOracleOutput_4);
                resourceMap.put("pstmtInsert_tOracleOutput_4", pstmtInsert_tOracleOutput_4);
                String update_tOracleOutput_4 = "UPDATE " + tableName_tOracleOutput_4 + " SET NOMBRE = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(update_tOracleOutput_4);
                resourceMap.put("pstmtUpdate_tOracleOutput_4", pstmtUpdate_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_6");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_6.setFetchSize(1000);


		    String dbquery_tOracleInput_6 = "SELECT 1 ID, 'APORTE SALUD' NOMBRE FROM DUAL\nUNION\nSELECT 2, 'APORTE ATEP' FROM DUAL\nUNION\nSELECT 3, 'RETRO SALUD' "
+"FROM DUAL\nUNION\nSELECT 4, 'RETRO ATEP' FROM DUAL\nUNION\nSELECT 5, 'NOVEDADES ESPECIALES' FROM DUAL\nUNION\nSELECT 6, "
+"'NOMINA PPDC' FROM DUAL\nUNION\nSELECT 7, 'CONSIGNACION CARNET' FROM DUAL\nUNION\nSELECT 8, 'CONSIGNACION PPCD' FROM DUA"
+"L\nUNION\nSELECT 9, 'SERVICIOS HOSPITALARIOS' FROM DUAL\nUNION\nSELECT 10, 'OTROS INGRESOS' FROM DUAL\nUNION\nSELECT 11,"
+" 'VENTA DE SERVICIOS' FROM DUAL\nUNION\nSELECT 12, 'VALOR MENSUAL DEL INGRESO POR % DE UPC' FROM DUAL\nUNION\nSELECT 13,"
+" 'VALOR MENSUAL DEL INGRESO POR PPCD' FROM DUAL";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row49.ID = null;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(1) != null) {
						row49.ID = rs_tOracleInput_6.getBigDecimal(1);
					} else {
				
						row49.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row49.NOMBRE = null;
							} else {
	                         		
        	row49.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 2, false);
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					



        whetherReject_tOracleOutput_4 = false;
                    pstmt_tOracleOutput_4.setBigDecimal(1, row49.ID);

            int checkCount_tOracleOutput_4 = -1;
            try (java.sql.ResultSet rs_tOracleOutput_4 = pstmt_tOracleOutput_4.executeQuery()) {
                while(rs_tOracleOutput_4.next()) {
                    checkCount_tOracleOutput_4 = rs_tOracleOutput_4.getInt(1);
                }
            }
            if(checkCount_tOracleOutput_4 > 0) {
                        if(row49.NOMBRE == null) {
pstmtUpdate_tOracleOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_4.setString(1, row49.NOMBRE);
}

                        pstmtUpdate_tOracleOutput_4.setBigDecimal(2 + count_tOracleOutput_4, row49.ID);

                try {
                    int processedCount_tOracleOutput_4 = pstmtUpdate_tOracleOutput_4.executeUpdate();
                    updatedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    nb_line_tOracleOutput_4++;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                        throw(e_tOracleOutput_4);
                }
            } else {
                        pstmtInsert_tOracleOutput_4.setBigDecimal(1, row49.ID);

                        if(row49.NOMBRE == null) {
pstmtInsert_tOracleOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_4.setString(2, row49.NOMBRE);
}

                try {
                    int processedCount_tOracleOutput_4 = pstmtInsert_tOracleOutput_4.executeUpdate();
                    insertedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    nb_line_tOracleOutput_4++;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                        throw(e_tOracleOutput_4);
                }
            }
            if(!whetherReject_tOracleOutput_4) {
            }
                commitCounter_tOracleOutput_4++;
                if(commitEvery_tOracleOutput_4 <= commitCounter_tOracleOutput_4) {
                    if(rowsToCommitCount_tOracleOutput_4 != 0){
                    	
                    }
                    conn_tOracleOutput_4.commit();
                    if(rowsToCommitCount_tOracleOutput_4 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_4 = 0;
                    }
                    commitCounter_tOracleOutput_4=0;
                }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_6", end_Hash.get("tOracleInput_6")-start_Hash.get("tOracleInput_6"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_4 != null){
            pstmtUpdate_tOracleOutput_4.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_4");
        }
        if(pstmtInsert_tOracleOutput_4 != null){
            pstmtInsert_tOracleOutput_4.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_4");
        }
        if(pstmt_tOracleOutput_4 != null) {
            pstmt_tOracleOutput_4.close();
            resourceMap.remove("pstmt_tOracleOutput_4");
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);
		if(commitCounter_tOracleOutput_4 > 0 && rowsToCommitCount_tOracleOutput_4 != 0) {
			
		}
		conn_tOracleOutput_4.commit();
		if(commitCounter_tOracleOutput_4 > 0 && rowsToCommitCount_tOracleOutput_4 != 0) {
			
			rowsToCommitCount_tOracleOutput_4 = 0;
		}
		commitCounter_tOracleOutput_4 = 0;
		
		
		conn_tOracleOutput_4 .close();
		
		resourceMap.put("finish_tOracleOutput_4", true);
   	

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_4", end_Hash.get("tOracleOutput_4")-start_Hash.get("tOracleOutput_4"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_4_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_4_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tOracleInput_8Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_4 = null;
                if ((pstmtUpdateToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_4")) != null) {
                    pstmtUpdateToClose_tOracleOutput_4.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_4 = null;
                if ((pstmtInsertToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_4")) != null) {
                    pstmtInsertToClose_tOracleOutput_4.close();
                }
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_4 = null;
                if ((pstmtToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_4")) != null) {
                    pstmtToClose_tOracleOutput_4.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_4") == null){
            java.sql.Connection ctn_tOracleOutput_4 = null;
            if((ctn_tOracleOutput_4 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_4")) != null){
                try {
                    ctn_tOracleOutput_4.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_4) {
                    String errorMessage_tOracleOutput_4 = "failed to close the connection in tOracleOutput_4 :" + sqlEx_tOracleOutput_4.getMessage();
                    System.err.println(errorMessage_tOracleOutput_4);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row53Struct other = (row53Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row53Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row53Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row53Struct row53 = new row53Struct();




	
	/**
	 * [tOracleOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_12", false);
		start_Hash.put("tOracleOutput_12", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_12");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tOracleOutput_12 = 0;
		






        int updateKeyCount_tOracleOutput_12 = 1;
        if(updateKeyCount_tOracleOutput_12 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_12 == 2 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_12 = 0;
    int nb_line_update_tOracleOutput_12 = 0;
    int nb_line_inserted_tOracleOutput_12 = 0;
    int nb_line_deleted_tOracleOutput_12 = 0;
    int nb_line_rejected_tOracleOutput_12 = 0;

    int tmp_batchUpdateCount_tOracleOutput_12 = 0;

    int deletedCount_tOracleOutput_12=0;
    int updatedCount_tOracleOutput_12=0;
    int insertedCount_tOracleOutput_12=0;
    int rowsToCommitCount_tOracleOutput_12=0;
    int rejectedCount_tOracleOutput_12=0;

    boolean whetherReject_tOracleOutput_12 = false;

    java.sql.Connection conn_tOracleOutput_12 = null;

    //optional table
    String dbschema_tOracleOutput_12 = null;
    String tableName_tOracleOutput_12 = null;
                    String driverClass_tOracleOutput_12 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_12);
                String url_tOracleOutput_12 = null;
                    url_tOracleOutput_12 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_12 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_12 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_12 = decryptedPassword_tOracleOutput_12;
                dbschema_tOracleOutput_12 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_12 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_12.put("user",dbUser_tOracleOutput_12);
                    atnParamsPrope_tOracleOutput_12.put("password",dbPwd_tOracleOutput_12);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_12.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_12 = java.sql.DriverManager.getConnection(url_tOracleOutput_12, atnParamsPrope_tOracleOutput_12);
        resourceMap.put("conn_tOracleOutput_12", conn_tOracleOutput_12);
            conn_tOracleOutput_12.setAutoCommit(false);
            int commitEvery_tOracleOutput_12 = 1000;
            int commitCounter_tOracleOutput_12 = 0;
        int count_tOracleOutput_12=0;

        if(dbschema_tOracleOutput_12 == null || dbschema_tOracleOutput_12.trim().length() == 0) {
            tableName_tOracleOutput_12 = ("BREC_TTOTALINGRESO");
        } else {
            tableName_tOracleOutput_12 = dbschema_tOracleOutput_12 + "." + ("BREC_TTOTALINGRESO");
        }
                String update_tOracleOutput_12 = "UPDATE " + tableName_tOracleOutput_12 + " SET NOMBRE = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_12 = conn_tOracleOutput_12.prepareStatement(update_tOracleOutput_12);
                resourceMap.put("pstmtUpdate_tOracleOutput_12", pstmtUpdate_tOracleOutput_12);
                String insert_tOracleOutput_12 = "INSERT INTO " + tableName_tOracleOutput_12 + " (ID,NOMBRE) VALUES (?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_12 = conn_tOracleOutput_12.prepareStatement(insert_tOracleOutput_12);
                resourceMap.put("pstmtInsert_tOracleOutput_12", pstmtInsert_tOracleOutput_12);





 



/**
 * [tOracleOutput_12 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_8");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				String driverClass_tOracleInput_8 = "oracle.jdbc.OracleDriver";
				java.lang.Class.forName(driverClass_tOracleInput_8);
				
			String url_tOracleInput_8 = null;
				url_tOracleInput_8 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";

				String dbUser_tOracleInput_8 = context.db_origen_Login;

				

				
	final String decryptedPassword_tOracleInput_8 = context.db_origen_Password; 

				String dbPwd_tOracleInput_8 = decryptedPassword_tOracleInput_8;

				
					java.util.Properties atnParamsPrope_tOracleInput_8 = new java.util.Properties();
					atnParamsPrope_tOracleInput_8.put("user",dbUser_tOracleInput_8);
					atnParamsPrope_tOracleInput_8.put("password",dbPwd_tOracleInput_8);
                    if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                        atnParamsPrope_tOracleInput_8.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
                    }
					conn_tOracleInput_8 = java.sql.DriverManager.getConnection(url_tOracleInput_8, atnParamsPrope_tOracleInput_8);
				java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
				java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
				String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
				while (rsGetTZ_tOracleInput_8.next()) {
					sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
				}
                                if (!(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) &&
                                        conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class)) {
                                    if (conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class) != null) {
                                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class)).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                                    }
                                } else {
                                    ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                                }
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_8.setFetchSize(1000);


		    String dbquery_tOracleInput_8 = "SELECT 1 ID, 'APORTE PATRONAL' NOMBRE FROM DUAL\nUNION\nSELECT 2, 'APORTE COTIZANTE' FROM DUAL\nUNION\nSELECT 3, 'APORT"
+"E ATEP' FROM DUAL\nUNION\nSELECT 4, 'CARNETIZACION' FROM DUAL\nUNION\nSELECT 5, 'PPCD (Padres y Ex esposa)' FROM DUAL\nU"
+"NION\nSELECT 6, 'VENTA DE SERVICIOS' FROM DUAL\nUNION\nSELECT 7, 'VALOR MENSUAL DEL INGRESO POR % DE UPC' FROM DUAL\nUNI"
+"ON\nSELECT 8, 'VALOR MENSUAL DEL INGRESO POR PPCD' FROM DUAL";
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row53.ID = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(1) != null) {
						row53.ID = rs_tOracleInput_8.getBigDecimal(1);
					} else {
				
						row53.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row53.NOMBRE = null;
							} else {
	                         		
        	row53.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 2, false);
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					



        whetherReject_tOracleOutput_12 = false;
            int updateFlag_tOracleOutput_12 = 0;
                    if(row53.NOMBRE == null) {
pstmtUpdate_tOracleOutput_12.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_12.setString(1, row53.NOMBRE);
}


                    pstmtUpdate_tOracleOutput_12.setBigDecimal(2 + count_tOracleOutput_12, row53.ID);


            try {
                updateFlag_tOracleOutput_12 = pstmtUpdate_tOracleOutput_12.executeUpdate();
                updatedCount_tOracleOutput_12 = updatedCount_tOracleOutput_12+updateFlag_tOracleOutput_12;
                rowsToCommitCount_tOracleOutput_12 += updateFlag_tOracleOutput_12;
                if(updateFlag_tOracleOutput_12 == 0) {
                            pstmtInsert_tOracleOutput_12.setBigDecimal(1, row53.ID);

                            if(row53.NOMBRE == null) {
pstmtInsert_tOracleOutput_12.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_12.setString(2, row53.NOMBRE);
}

                    int processedCount_tOracleOutput_12 = pstmtInsert_tOracleOutput_12.executeUpdate();
                    insertedCount_tOracleOutput_12 += processedCount_tOracleOutput_12;
                    rowsToCommitCount_tOracleOutput_12 += processedCount_tOracleOutput_12;
                    nb_line_tOracleOutput_12++;
                }else{
                    nb_line_tOracleOutput_12++;
                }
            } catch(java.lang.Exception e_tOracleOutput_12) {
globalMap.put("tOracleOutput_12_ERROR_MESSAGE",e_tOracleOutput_12.getMessage());
                whetherReject_tOracleOutput_12 = true;
                    throw(e_tOracleOutput_12);
            }
            if(!whetherReject_tOracleOutput_12) {
            }
                commitCounter_tOracleOutput_12++;
                if(commitEvery_tOracleOutput_12 <= commitCounter_tOracleOutput_12) {
                    if(rowsToCommitCount_tOracleOutput_12 != 0){
                    	
                    }
                    conn_tOracleOutput_12.commit();
                    if(rowsToCommitCount_tOracleOutput_12 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_12 = 0;
                    }
                    commitCounter_tOracleOutput_12=0;
                }

 


	tos_count_tOracleOutput_12++;

/**
 * [tOracleOutput_12 main ] stop
 */
	
	/**
	 * [tOracleOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	

 



/**
 * [tOracleOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	

 



/**
 * [tOracleOutput_12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
	if(conn_tOracleInput_8 != null && !conn_tOracleInput_8.isClosed()) {
	
			conn_tOracleInput_8.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}
	
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_8", end_Hash.get("tOracleInput_8")-start_Hash.get("tOracleInput_8"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tOracleOutput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_12 != null){
            pstmtUpdate_tOracleOutput_12.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_12");
        }
        if(pstmtInsert_tOracleOutput_12 != null){
            pstmtInsert_tOracleOutput_12.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_12");
        }
    resourceMap.put("statementClosed_tOracleOutput_12", true);
		if(commitCounter_tOracleOutput_12 > 0 && rowsToCommitCount_tOracleOutput_12 != 0) {
			
		}
		conn_tOracleOutput_12.commit();
		if(commitCounter_tOracleOutput_12 > 0 && rowsToCommitCount_tOracleOutput_12 != 0) {
			
			rowsToCommitCount_tOracleOutput_12 = 0;
		}
		commitCounter_tOracleOutput_12 = 0;
		
		
		conn_tOracleOutput_12 .close();
		
		resourceMap.put("finish_tOracleOutput_12", true);
   	

	
	nb_line_deleted_tOracleOutput_12=nb_line_deleted_tOracleOutput_12+ deletedCount_tOracleOutput_12;
	nb_line_update_tOracleOutput_12=nb_line_update_tOracleOutput_12 + updatedCount_tOracleOutput_12;
	nb_line_inserted_tOracleOutput_12=nb_line_inserted_tOracleOutput_12 + insertedCount_tOracleOutput_12;
	nb_line_rejected_tOracleOutput_12=nb_line_rejected_tOracleOutput_12 + rejectedCount_tOracleOutput_12;
	
        globalMap.put("tOracleOutput_12_NB_LINE",nb_line_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_UPDATED",nb_line_update_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_12);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_12", true);
end_Hash.put("tOracleOutput_12", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_12", end_Hash.get("tOracleOutput_12")-start_Hash.get("tOracleOutput_12"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_4_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_4_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_12_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_12_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If6", 0, "true");
					}
				tOracleInput_11Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If6", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tOracleOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_12") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_12 = null;
                if ((pstmtUpdateToClose_tOracleOutput_12 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_12")) != null) {
                    pstmtUpdateToClose_tOracleOutput_12.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_12 = null;
                if ((pstmtInsertToClose_tOracleOutput_12 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_12")) != null) {
                    pstmtInsertToClose_tOracleOutput_12.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_12") == null){
            java.sql.Connection ctn_tOracleOutput_12 = null;
            if((ctn_tOracleOutput_12 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_12")) != null){
                try {
                    ctn_tOracleOutput_12.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_12) {
                    String errorMessage_tOracleOutput_12 = "failed to close the connection in tOracleOutput_12 :" + sqlEx_tOracleOutput_12.getMessage();
                    System.err.println(errorMessage_tOracleOutput_12);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 3;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row57Struct other = (row57Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row57Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row57Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row57Struct row57 = new row57Struct();




	
	/**
	 * [tOracleOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_15", false);
		start_Hash.put("tOracleOutput_15", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_15");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tOracleOutput_15 = 0;
		






        int updateKeyCount_tOracleOutput_15 = 1;
        if(updateKeyCount_tOracleOutput_15 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_15 == 3 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_15 = 0;
    int nb_line_update_tOracleOutput_15 = 0;
    int nb_line_inserted_tOracleOutput_15 = 0;
    int nb_line_deleted_tOracleOutput_15 = 0;
    int nb_line_rejected_tOracleOutput_15 = 0;

    int tmp_batchUpdateCount_tOracleOutput_15 = 0;

    int deletedCount_tOracleOutput_15=0;
    int updatedCount_tOracleOutput_15=0;
    int insertedCount_tOracleOutput_15=0;
    int rowsToCommitCount_tOracleOutput_15=0;
    int rejectedCount_tOracleOutput_15=0;

    boolean whetherReject_tOracleOutput_15 = false;

    java.sql.Connection conn_tOracleOutput_15 = null;

    //optional table
    String dbschema_tOracleOutput_15 = null;
    String tableName_tOracleOutput_15 = null;
                    String driverClass_tOracleOutput_15 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_15);
                String url_tOracleOutput_15 = null;
                    url_tOracleOutput_15 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_15 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_15 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_15 = decryptedPassword_tOracleOutput_15;
                dbschema_tOracleOutput_15 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_15 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_15.put("user",dbUser_tOracleOutput_15);
                    atnParamsPrope_tOracleOutput_15.put("password",dbPwd_tOracleOutput_15);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_15.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_15 = java.sql.DriverManager.getConnection(url_tOracleOutput_15, atnParamsPrope_tOracleOutput_15);
        resourceMap.put("conn_tOracleOutput_15", conn_tOracleOutput_15);
            conn_tOracleOutput_15.setAutoCommit(false);
            int commitEvery_tOracleOutput_15 = 1000;
            int commitCounter_tOracleOutput_15 = 0;
        int count_tOracleOutput_15=0;

        if(dbschema_tOracleOutput_15 == null || dbschema_tOracleOutput_15.trim().length() == 0) {
            tableName_tOracleOutput_15 = ("BREC_TSOMETIDO");
        } else {
            tableName_tOracleOutput_15 = dbschema_tOracleOutput_15 + "." + ("BREC_TSOMETIDO");
        }
                String update_tOracleOutput_15 = "UPDATE " + tableName_tOracleOutput_15 + " SET NOMBRE = ?,SIGLA = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_15 = conn_tOracleOutput_15.prepareStatement(update_tOracleOutput_15);
                resourceMap.put("pstmtUpdate_tOracleOutput_15", pstmtUpdate_tOracleOutput_15);
                String insert_tOracleOutput_15 = "INSERT INTO " + tableName_tOracleOutput_15 + " (ID,NOMBRE,SIGLA) VALUES (?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_15 = conn_tOracleOutput_15.prepareStatement(insert_tOracleOutput_15);
                resourceMap.put("pstmtInsert_tOracleOutput_15", pstmtInsert_tOracleOutput_15);





 



/**
 * [tOracleOutput_15 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_11");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_11.setFetchSize(1000);


		    String dbquery_tOracleInput_11 = "SELECT ID, NOMBRE, SIGLA FROM REC_TSOMETIDO WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row57.ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(1) != null) {
						row57.ID = rs_tOracleInput_11.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row57.NOMBRE = null;
							} else {
	                         		
        	row57.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 3) {
								row57.SIGLA = null;
							} else {
	                         		
        	row57.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 3, false);
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					



        whetherReject_tOracleOutput_15 = false;
            int updateFlag_tOracleOutput_15 = 0;
                    if(row57.NOMBRE == null) {
pstmtUpdate_tOracleOutput_15.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_15.setString(1, row57.NOMBRE);
}

                    if(row57.SIGLA == null) {
pstmtUpdate_tOracleOutput_15.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_15.setString(2, row57.SIGLA);
}


                    pstmtUpdate_tOracleOutput_15.setBigDecimal(3 + count_tOracleOutput_15, row57.ID);


            try {
                updateFlag_tOracleOutput_15 = pstmtUpdate_tOracleOutput_15.executeUpdate();
                updatedCount_tOracleOutput_15 = updatedCount_tOracleOutput_15+updateFlag_tOracleOutput_15;
                rowsToCommitCount_tOracleOutput_15 += updateFlag_tOracleOutput_15;
                if(updateFlag_tOracleOutput_15 == 0) {
                            pstmtInsert_tOracleOutput_15.setBigDecimal(1, row57.ID);

                            if(row57.NOMBRE == null) {
pstmtInsert_tOracleOutput_15.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_15.setString(2, row57.NOMBRE);
}

                            if(row57.SIGLA == null) {
pstmtInsert_tOracleOutput_15.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_15.setString(3, row57.SIGLA);
}

                    int processedCount_tOracleOutput_15 = pstmtInsert_tOracleOutput_15.executeUpdate();
                    insertedCount_tOracleOutput_15 += processedCount_tOracleOutput_15;
                    rowsToCommitCount_tOracleOutput_15 += processedCount_tOracleOutput_15;
                    nb_line_tOracleOutput_15++;
                }else{
                    nb_line_tOracleOutput_15++;
                }
            } catch(java.lang.Exception e_tOracleOutput_15) {
globalMap.put("tOracleOutput_15_ERROR_MESSAGE",e_tOracleOutput_15.getMessage());
                whetherReject_tOracleOutput_15 = true;
                    throw(e_tOracleOutput_15);
            }
            if(!whetherReject_tOracleOutput_15) {
            }
                commitCounter_tOracleOutput_15++;
                if(commitEvery_tOracleOutput_15 <= commitCounter_tOracleOutput_15) {
                    if(rowsToCommitCount_tOracleOutput_15 != 0){
                    	
                    }
                    conn_tOracleOutput_15.commit();
                    if(rowsToCommitCount_tOracleOutput_15 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_15 = 0;
                    }
                    commitCounter_tOracleOutput_15=0;
                }

 


	tos_count_tOracleOutput_15++;

/**
 * [tOracleOutput_15 main ] stop
 */
	
	/**
	 * [tOracleOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	

 



/**
 * [tOracleOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	

 



/**
 * [tOracleOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_11", end_Hash.get("tOracleInput_11")-start_Hash.get("tOracleInput_11"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_15 != null){
            pstmtUpdate_tOracleOutput_15.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_15");
        }
        if(pstmtInsert_tOracleOutput_15 != null){
            pstmtInsert_tOracleOutput_15.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_15");
        }
    resourceMap.put("statementClosed_tOracleOutput_15", true);
		if(commitCounter_tOracleOutput_15 > 0 && rowsToCommitCount_tOracleOutput_15 != 0) {
			
		}
		conn_tOracleOutput_15.commit();
		if(commitCounter_tOracleOutput_15 > 0 && rowsToCommitCount_tOracleOutput_15 != 0) {
			
			rowsToCommitCount_tOracleOutput_15 = 0;
		}
		commitCounter_tOracleOutput_15 = 0;
		
		
		conn_tOracleOutput_15 .close();
		
		resourceMap.put("finish_tOracleOutput_15", true);
   	

	
	nb_line_deleted_tOracleOutput_15=nb_line_deleted_tOracleOutput_15+ deletedCount_tOracleOutput_15;
	nb_line_update_tOracleOutput_15=nb_line_update_tOracleOutput_15 + updatedCount_tOracleOutput_15;
	nb_line_inserted_tOracleOutput_15=nb_line_inserted_tOracleOutput_15 + insertedCount_tOracleOutput_15;
	nb_line_rejected_tOracleOutput_15=nb_line_rejected_tOracleOutput_15 + rejectedCount_tOracleOutput_15;
	
        globalMap.put("tOracleOutput_15_NB_LINE",nb_line_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_UPDATED",nb_line_update_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_15);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_15", true);
end_Hash.put("tOracleOutput_15", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_15", end_Hash.get("tOracleOutput_15")-start_Hash.get("tOracleOutput_15"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_4_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_4_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_12_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_12_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_15_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_15_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If7", 0, "true");
					}
				tOracleInput_27Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If7", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_15") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_15 = null;
                if ((pstmtUpdateToClose_tOracleOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_15")) != null) {
                    pstmtUpdateToClose_tOracleOutput_15.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_15 = null;
                if ((pstmtInsertToClose_tOracleOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_15")) != null) {
                    pstmtInsertToClose_tOracleOutput_15.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_15") == null){
            java.sql.Connection ctn_tOracleOutput_15 = null;
            if((ctn_tOracleOutput_15 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_15")) != null){
                try {
                    ctn_tOracleOutput_15.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_15) {
                    String errorMessage_tOracleOutput_15 = "failed to close the connection in tOracleOutput_15 :" + sqlEx_tOracleOutput_15.getMessage();
                    System.err.println(errorMessage_tOracleOutput_15);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row63Struct implements routines.system.IPersistableRow<row63Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row63Struct other = (row63Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row63Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row63Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row63Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_27Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row63Struct row63 = new row63Struct();




	
	/**
	 * [tOracleOutput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_18", false);
		start_Hash.put("tOracleOutput_18", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_18");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row63");
					}
				
		int tos_count_tOracleOutput_18 = 0;
		






        int updateKeyCount_tOracleOutput_18 = 1;
        if(updateKeyCount_tOracleOutput_18 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_18 == 2 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_18 = 0;
    int nb_line_update_tOracleOutput_18 = 0;
    int nb_line_inserted_tOracleOutput_18 = 0;
    int nb_line_deleted_tOracleOutput_18 = 0;
    int nb_line_rejected_tOracleOutput_18 = 0;

    int tmp_batchUpdateCount_tOracleOutput_18 = 0;

    int deletedCount_tOracleOutput_18=0;
    int updatedCount_tOracleOutput_18=0;
    int insertedCount_tOracleOutput_18=0;
    int rowsToCommitCount_tOracleOutput_18=0;
    int rejectedCount_tOracleOutput_18=0;

    boolean whetherReject_tOracleOutput_18 = false;

    java.sql.Connection conn_tOracleOutput_18 = null;

    //optional table
    String dbschema_tOracleOutput_18 = null;
    String tableName_tOracleOutput_18 = null;
                    String driverClass_tOracleOutput_18 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_18);
                String url_tOracleOutput_18 = null;
                    url_tOracleOutput_18 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_18 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_18 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_18 = decryptedPassword_tOracleOutput_18;
                dbschema_tOracleOutput_18 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_18 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_18.put("user",dbUser_tOracleOutput_18);
                    atnParamsPrope_tOracleOutput_18.put("password",dbPwd_tOracleOutput_18);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_18.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_18 = java.sql.DriverManager.getConnection(url_tOracleOutput_18, atnParamsPrope_tOracleOutput_18);
        resourceMap.put("conn_tOracleOutput_18", conn_tOracleOutput_18);
            conn_tOracleOutput_18.setAutoCommit(false);
            int commitEvery_tOracleOutput_18 = 1000;
            int commitCounter_tOracleOutput_18 = 0;
        int count_tOracleOutput_18=0;

        if(dbschema_tOracleOutput_18 == null || dbschema_tOracleOutput_18.trim().length() == 0) {
            tableName_tOracleOutput_18 = ("BREC_TCOTIZACION");
        } else {
            tableName_tOracleOutput_18 = dbschema_tOracleOutput_18 + "." + ("BREC_TCOTIZACION");
        }
                String update_tOracleOutput_18 = "UPDATE " + tableName_tOracleOutput_18 + " SET NOMBRE = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_18 = conn_tOracleOutput_18.prepareStatement(update_tOracleOutput_18);
                resourceMap.put("pstmtUpdate_tOracleOutput_18", pstmtUpdate_tOracleOutput_18);
                String insert_tOracleOutput_18 = "INSERT INTO " + tableName_tOracleOutput_18 + " (ID,NOMBRE) VALUES (?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_18 = conn_tOracleOutput_18.prepareStatement(insert_tOracleOutput_18);
                resourceMap.put("pstmtInsert_tOracleOutput_18", pstmtInsert_tOracleOutput_18);





 



/**
 * [tOracleOutput_18 begin ] stop
 */



	
	/**
	 * [tOracleInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_27", false);
		start_Hash.put("tOracleInput_27", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_27");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_27";
	
	
		int tos_count_tOracleInput_27 = 0;
		
	


	
		    int nb_line_tOracleInput_27 = 0;
		    java.sql.Connection conn_tOracleInput_27 = null;
				conn_tOracleInput_27 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_27 = false;
				boolean isConnectionWrapped_tOracleInput_27 = !(conn_tOracleInput_27 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_27.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_27 = null;
                if (isConnectionWrapped_tOracleInput_27) {
					unwrappedOraConn_tOracleInput_27 = conn_tOracleInput_27.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_27 != null) {
                        isTimeZoneNull_tOracleInput_27 = (unwrappedOraConn_tOracleInput_27.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_27 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_27).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_27) {
					java.sql.Statement stmtGetTZ_tOracleInput_27 = conn_tOracleInput_27.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_27 = stmtGetTZ_tOracleInput_27.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_27 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_27.next()) {
						sessionTimezone_tOracleInput_27 = rsGetTZ_tOracleInput_27.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_27 && unwrappedOraConn_tOracleInput_27 != null) {
                        unwrappedOraConn_tOracleInput_27.setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_27).setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_27 = conn_tOracleInput_27.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_27.setFetchSize(1000);


		    String dbquery_tOracleInput_27 = "SELECT ID, NOMBRE FROM AFI_TCOTIZACION WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_27_QUERY",dbquery_tOracleInput_27);

		    java.sql.ResultSet rs_tOracleInput_27 = null;

		    try {
		    	rs_tOracleInput_27 = stmt_tOracleInput_27.executeQuery(dbquery_tOracleInput_27);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_27 = rs_tOracleInput_27.getMetaData();
		    	int colQtyInRs_tOracleInput_27 = rsmd_tOracleInput_27.getColumnCount();

		    String tmpContent_tOracleInput_27 = null;
		    
		    
		    while (rs_tOracleInput_27.next()) {
		        nb_line_tOracleInput_27++;
		        
							if(colQtyInRs_tOracleInput_27 < 1) {
								row63.ID = null;
							} else {
		                          
					if(rs_tOracleInput_27.getObject(1) != null) {
						row63.ID = rs_tOracleInput_27.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_27 < 2) {
								row63.NOMBRE = null;
							} else {
	                         		
        	row63.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_27, 2, false);
		                    }
					




 



/**
 * [tOracleInput_27 begin ] stop
 */
	
	/**
	 * [tOracleInput_27 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 


	tos_count_tOracleInput_27++;

/**
 * [tOracleInput_27 main ] stop
 */
	
	/**
	 * [tOracleInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row63"
						
						);
					}
					



        whetherReject_tOracleOutput_18 = false;
            int updateFlag_tOracleOutput_18 = 0;
                    if(row63.NOMBRE == null) {
pstmtUpdate_tOracleOutput_18.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_18.setString(1, row63.NOMBRE);
}


                    pstmtUpdate_tOracleOutput_18.setBigDecimal(2 + count_tOracleOutput_18, row63.ID);


            try {
                updateFlag_tOracleOutput_18 = pstmtUpdate_tOracleOutput_18.executeUpdate();
                updatedCount_tOracleOutput_18 = updatedCount_tOracleOutput_18+updateFlag_tOracleOutput_18;
                rowsToCommitCount_tOracleOutput_18 += updateFlag_tOracleOutput_18;
                if(updateFlag_tOracleOutput_18 == 0) {
                            pstmtInsert_tOracleOutput_18.setBigDecimal(1, row63.ID);

                            if(row63.NOMBRE == null) {
pstmtInsert_tOracleOutput_18.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_18.setString(2, row63.NOMBRE);
}

                    int processedCount_tOracleOutput_18 = pstmtInsert_tOracleOutput_18.executeUpdate();
                    insertedCount_tOracleOutput_18 += processedCount_tOracleOutput_18;
                    rowsToCommitCount_tOracleOutput_18 += processedCount_tOracleOutput_18;
                    nb_line_tOracleOutput_18++;
                }else{
                    nb_line_tOracleOutput_18++;
                }
            } catch(java.lang.Exception e_tOracleOutput_18) {
globalMap.put("tOracleOutput_18_ERROR_MESSAGE",e_tOracleOutput_18.getMessage());
                whetherReject_tOracleOutput_18 = true;
                    throw(e_tOracleOutput_18);
            }
            if(!whetherReject_tOracleOutput_18) {
            }
                commitCounter_tOracleOutput_18++;
                if(commitEvery_tOracleOutput_18 <= commitCounter_tOracleOutput_18) {
                    if(rowsToCommitCount_tOracleOutput_18 != 0){
                    	
                    }
                    conn_tOracleOutput_18.commit();
                    if(rowsToCommitCount_tOracleOutput_18 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_18 = 0;
                    }
                    commitCounter_tOracleOutput_18=0;
                }

 


	tos_count_tOracleOutput_18++;

/**
 * [tOracleOutput_18 main ] stop
 */
	
	/**
	 * [tOracleOutput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	

 



/**
 * [tOracleOutput_18 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	

 



/**
 * [tOracleOutput_18 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_27 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

}
}finally{
	if (rs_tOracleInput_27 != null) {
		rs_tOracleInput_27.close();
	}
	if (stmt_tOracleInput_27 != null) {
		stmt_tOracleInput_27.close();
	}
}

globalMap.put("tOracleInput_27_NB_LINE",nb_line_tOracleInput_27);
 

ok_Hash.put("tOracleInput_27", true);
end_Hash.put("tOracleInput_27", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_27", end_Hash.get("tOracleInput_27")-start_Hash.get("tOracleInput_27"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_27 end ] stop
 */

	
	/**
	 * [tOracleOutput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_18 != null){
            pstmtUpdate_tOracleOutput_18.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_18");
        }
        if(pstmtInsert_tOracleOutput_18 != null){
            pstmtInsert_tOracleOutput_18.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_18");
        }
    resourceMap.put("statementClosed_tOracleOutput_18", true);
		if(commitCounter_tOracleOutput_18 > 0 && rowsToCommitCount_tOracleOutput_18 != 0) {
			
		}
		conn_tOracleOutput_18.commit();
		if(commitCounter_tOracleOutput_18 > 0 && rowsToCommitCount_tOracleOutput_18 != 0) {
			
			rowsToCommitCount_tOracleOutput_18 = 0;
		}
		commitCounter_tOracleOutput_18 = 0;
		
		
		conn_tOracleOutput_18 .close();
		
		resourceMap.put("finish_tOracleOutput_18", true);
   	

	
	nb_line_deleted_tOracleOutput_18=nb_line_deleted_tOracleOutput_18+ deletedCount_tOracleOutput_18;
	nb_line_update_tOracleOutput_18=nb_line_update_tOracleOutput_18 + updatedCount_tOracleOutput_18;
	nb_line_inserted_tOracleOutput_18=nb_line_inserted_tOracleOutput_18 + insertedCount_tOracleOutput_18;
	nb_line_rejected_tOracleOutput_18=nb_line_rejected_tOracleOutput_18 + rejectedCount_tOracleOutput_18;
	
        globalMap.put("tOracleOutput_18_NB_LINE",nb_line_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_UPDATED",nb_line_update_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_18);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row63");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_18", true);
end_Hash.put("tOracleOutput_18", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_18", end_Hash.get("tOracleOutput_18")-start_Hash.get("tOracleOutput_18"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_4_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_4_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_12_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_12_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_15_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_15_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_18_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_18_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If10", 0, "true");
					}
				tOracleInput_42Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If10", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_27 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 finally ] stop
 */

	
	/**
	 * [tOracleOutput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_18") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_18 = null;
                if ((pstmtUpdateToClose_tOracleOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_18")) != null) {
                    pstmtUpdateToClose_tOracleOutput_18.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_18 = null;
                if ((pstmtInsertToClose_tOracleOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_18")) != null) {
                    pstmtInsertToClose_tOracleOutput_18.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_18") == null){
            java.sql.Connection ctn_tOracleOutput_18 = null;
            if((ctn_tOracleOutput_18 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_18")) != null){
                try {
                    ctn_tOracleOutput_18.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_18) {
                    String errorMessage_tOracleOutput_18 = "failed to close the connection in tOracleOutput_18 :" + sqlEx_tOracleOutput_18.getMessage();
                    System.err.println(errorMessage_tOracleOutput_18);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableRow<row54Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 200;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return false;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String NOMBRE_COTIZACION;

				public String getNOMBRE_COTIZACION () {
					return this.NOMBRE_COTIZACION;
				}

				public Boolean NOMBRE_COTIZACIONIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_COTIZACIONIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZACIONLength(){
				    return 50;
				}
				public Integer NOMBRE_COTIZACIONPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZACIONDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZACIONComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZACIONPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZACIONOriginalDbColumnName(){
				
					return "NOMBRE_COTIZACION";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            other.ESTADO = this.ESTADO;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.NOMBRE_COTIZACION = this.NOMBRE_COTIZACION;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.ESTADO = readString(dis);
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZACION = readString(dis);
					
						this.ESTREGISTRO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.ESTADO = readString(dis);
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZACION = readString(dis);
					
						this.ESTREGISTRO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.NOMBRE_COTIZACION,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.NOMBRE_COTIZACION,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESTREGISTRO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",NOMBRE_COTIZACION="+NOMBRE_COTIZACION);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tOracleOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_19", false);
		start_Hash.put("tOracleOutput_19", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_19");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tOracleOutput_19 = 0;
		






        int updateKeyCount_tOracleOutput_19 = 1;
        if(updateKeyCount_tOracleOutput_19 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_19 == 7 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_19 = 0;
    int nb_line_update_tOracleOutput_19 = 0;
    int nb_line_inserted_tOracleOutput_19 = 0;
    int nb_line_deleted_tOracleOutput_19 = 0;
    int nb_line_rejected_tOracleOutput_19 = 0;

    int tmp_batchUpdateCount_tOracleOutput_19 = 0;

    int deletedCount_tOracleOutput_19=0;
    int updatedCount_tOracleOutput_19=0;
    int insertedCount_tOracleOutput_19=0;
    int rowsToCommitCount_tOracleOutput_19=0;
    int rejectedCount_tOracleOutput_19=0;

    boolean whetherReject_tOracleOutput_19 = false;

    java.sql.Connection conn_tOracleOutput_19 = null;

    //optional table
    String dbschema_tOracleOutput_19 = null;
    String tableName_tOracleOutput_19 = null;
                    String driverClass_tOracleOutput_19 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_19);
                String url_tOracleOutput_19 = null;
                    url_tOracleOutput_19 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_19 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_19 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_19 = decryptedPassword_tOracleOutput_19;
                dbschema_tOracleOutput_19 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_19 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_19.put("user",dbUser_tOracleOutput_19);
                    atnParamsPrope_tOracleOutput_19.put("password",dbPwd_tOracleOutput_19);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_19.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_19 = java.sql.DriverManager.getConnection(url_tOracleOutput_19, atnParamsPrope_tOracleOutput_19);
        resourceMap.put("conn_tOracleOutput_19", conn_tOracleOutput_19);
            conn_tOracleOutput_19.setAutoCommit(false);
            int commitEvery_tOracleOutput_19 = 1000;
            int commitCounter_tOracleOutput_19 = 0;
        int count_tOracleOutput_19=0;

        if(dbschema_tOracleOutput_19 == null || dbschema_tOracleOutput_19.trim().length() == 0) {
            tableName_tOracleOutput_19 = ("BREC_TVINCULACIONES");
        } else {
            tableName_tOracleOutput_19 = dbschema_tOracleOutput_19 + "." + ("BREC_TVINCULACIONES");
        }
                String update_tOracleOutput_19 = "UPDATE " + tableName_tOracleOutput_19 + " SET NOMBRE = ?,SIGLA = ?,ESTADO = ?,TCOTIZACION_ID = ?,NOMBRE_COTIZACION = ?,ESTREGISTRO_ID = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmtUpdate_tOracleOutput_19 = conn_tOracleOutput_19.prepareStatement(update_tOracleOutput_19);
                resourceMap.put("pstmtUpdate_tOracleOutput_19", pstmtUpdate_tOracleOutput_19);
                String insert_tOracleOutput_19 = "INSERT INTO " + tableName_tOracleOutput_19 + " (ID,NOMBRE,SIGLA,ESTADO,TCOTIZACION_ID,NOMBRE_COTIZACION,ESTREGISTRO_ID) VALUES (?,?,?,?,?,?,?)";    
                java.sql.PreparedStatement pstmtInsert_tOracleOutput_19 = conn_tOracleOutput_19.prepareStatement(insert_tOracleOutput_19);
                resourceMap.put("pstmtInsert_tOracleOutput_19", pstmtInsert_tOracleOutput_19);





 



/**
 * [tOracleOutput_19 begin ] stop
 */



	
	/**
	 * [tOracleInput_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_42", false);
		start_Hash.put("tOracleInput_42", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_42");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_42";
	
	
		int tos_count_tOracleInput_42 = 0;
		
	


	
		    int nb_line_tOracleInput_42 = 0;
		    java.sql.Connection conn_tOracleInput_42 = null;
				conn_tOracleInput_42 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_42 = false;
				boolean isConnectionWrapped_tOracleInput_42 = !(conn_tOracleInput_42 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_42.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_42 = null;
                if (isConnectionWrapped_tOracleInput_42) {
					unwrappedOraConn_tOracleInput_42 = conn_tOracleInput_42.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_42 != null) {
                        isTimeZoneNull_tOracleInput_42 = (unwrappedOraConn_tOracleInput_42.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_42 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_42).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_42) {
					java.sql.Statement stmtGetTZ_tOracleInput_42 = conn_tOracleInput_42.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_42 = stmtGetTZ_tOracleInput_42.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_42 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_42.next()) {
						sessionTimezone_tOracleInput_42 = rsGetTZ_tOracleInput_42.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_42 && unwrappedOraConn_tOracleInput_42 != null) {
                        unwrappedOraConn_tOracleInput_42.setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_42).setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_42 = conn_tOracleInput_42.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_42.setFetchSize(1000);


		    String dbquery_tOracleInput_42 = "SELECT\n  TV.ID,\n  TV.NOMBRE,\n  TV.SIGLA,\n  TV.ESTADO,\n  TV.TCOTIZACION_ID,\n  TC.NOMBRE AS NOMBRE_COTIZACION,\n  T"
+"V.ESTREGISTRO_ID\nFROM AFI_TVINCULACIONES TV\nINNER JOIN AFI_TCOTIZACION TC ON TC.ID = TV.TCOTIZACION_ID AND TC.ESTREGIS"
+"TRO_ID = 1\nWHERE TV.TVINCULACIONES = 'RC' AND TV.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_42_QUERY",dbquery_tOracleInput_42);

		    java.sql.ResultSet rs_tOracleInput_42 = null;

		    try {
		    	rs_tOracleInput_42 = stmt_tOracleInput_42.executeQuery(dbquery_tOracleInput_42);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_42 = rs_tOracleInput_42.getMetaData();
		    	int colQtyInRs_tOracleInput_42 = rsmd_tOracleInput_42.getColumnCount();

		    String tmpContent_tOracleInput_42 = null;
		    
		    
		    while (rs_tOracleInput_42.next()) {
		        nb_line_tOracleInput_42++;
		        
							if(colQtyInRs_tOracleInput_42 < 1) {
								row54.ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(1) != null) {
						row54.ID = rs_tOracleInput_42.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_42 < 2) {
								row54.NOMBRE = null;
							} else {
	                         		
        	row54.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 3) {
								row54.SIGLA = null;
							} else {
	                         		
        	row54.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 4) {
								row54.ESTADO = null;
							} else {
	                         		
        	row54.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 5) {
								row54.TCOTIZACION_ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(5) != null) {
						row54.TCOTIZACION_ID = rs_tOracleInput_42.getBigDecimal(5);
					} else {
				
						row54.TCOTIZACION_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_42 < 6) {
								row54.NOMBRE_COTIZACION = null;
							} else {
	                         		
        	row54.NOMBRE_COTIZACION = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 7) {
								row54.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(7) != null) {
						row54.ESTREGISTRO_ID = rs_tOracleInput_42.getBigDecimal(7);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_42 begin ] stop
 */
	
	/**
	 * [tOracleInput_42 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 


	tos_count_tOracleInput_42++;

/**
 * [tOracleInput_42 main ] stop
 */
	
	/**
	 * [tOracleInput_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_19 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					



        whetherReject_tOracleOutput_19 = false;
            int updateFlag_tOracleOutput_19 = 0;
                    if(row54.NOMBRE == null) {
pstmtUpdate_tOracleOutput_19.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_19.setString(1, row54.NOMBRE);
}

                    if(row54.SIGLA == null) {
pstmtUpdate_tOracleOutput_19.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_19.setString(2, row54.SIGLA);
}

                    if(row54.ESTADO == null) {
pstmtUpdate_tOracleOutput_19.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_19.setString(3, row54.ESTADO);
}

                    pstmtUpdate_tOracleOutput_19.setBigDecimal(4, row54.TCOTIZACION_ID);

                    if(row54.NOMBRE_COTIZACION == null) {
pstmtUpdate_tOracleOutput_19.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tOracleOutput_19.setString(5, row54.NOMBRE_COTIZACION);
}

                    pstmtUpdate_tOracleOutput_19.setBigDecimal(6, row54.ESTREGISTRO_ID);


                    pstmtUpdate_tOracleOutput_19.setBigDecimal(7 + count_tOracleOutput_19, row54.ID);


            try {
                updateFlag_tOracleOutput_19 = pstmtUpdate_tOracleOutput_19.executeUpdate();
                updatedCount_tOracleOutput_19 = updatedCount_tOracleOutput_19+updateFlag_tOracleOutput_19;
                rowsToCommitCount_tOracleOutput_19 += updateFlag_tOracleOutput_19;
                if(updateFlag_tOracleOutput_19 == 0) {
                            pstmtInsert_tOracleOutput_19.setBigDecimal(1, row54.ID);

                            if(row54.NOMBRE == null) {
pstmtInsert_tOracleOutput_19.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_19.setString(2, row54.NOMBRE);
}

                            if(row54.SIGLA == null) {
pstmtInsert_tOracleOutput_19.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_19.setString(3, row54.SIGLA);
}

                            if(row54.ESTADO == null) {
pstmtInsert_tOracleOutput_19.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_19.setString(4, row54.ESTADO);
}

                            pstmtInsert_tOracleOutput_19.setBigDecimal(5, row54.TCOTIZACION_ID);

                            if(row54.NOMBRE_COTIZACION == null) {
pstmtInsert_tOracleOutput_19.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tOracleOutput_19.setString(6, row54.NOMBRE_COTIZACION);
}

                            pstmtInsert_tOracleOutput_19.setBigDecimal(7, row54.ESTREGISTRO_ID);

                    int processedCount_tOracleOutput_19 = pstmtInsert_tOracleOutput_19.executeUpdate();
                    insertedCount_tOracleOutput_19 += processedCount_tOracleOutput_19;
                    rowsToCommitCount_tOracleOutput_19 += processedCount_tOracleOutput_19;
                    nb_line_tOracleOutput_19++;
                }else{
                    nb_line_tOracleOutput_19++;
                }
            } catch(java.lang.Exception e_tOracleOutput_19) {
globalMap.put("tOracleOutput_19_ERROR_MESSAGE",e_tOracleOutput_19.getMessage());
                whetherReject_tOracleOutput_19 = true;
                    throw(e_tOracleOutput_19);
            }
            if(!whetherReject_tOracleOutput_19) {
            }
                commitCounter_tOracleOutput_19++;
                if(commitEvery_tOracleOutput_19 <= commitCounter_tOracleOutput_19) {
                    if(rowsToCommitCount_tOracleOutput_19 != 0){
                    	
                    }
                    conn_tOracleOutput_19.commit();
                    if(rowsToCommitCount_tOracleOutput_19 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_19 = 0;
                    }
                    commitCounter_tOracleOutput_19=0;
                }

 


	tos_count_tOracleOutput_19++;

/**
 * [tOracleOutput_19 main ] stop
 */
	
	/**
	 * [tOracleOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	

 



/**
 * [tOracleOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	

 



/**
 * [tOracleOutput_19 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_42 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

}
}finally{
	if (rs_tOracleInput_42 != null) {
		rs_tOracleInput_42.close();
	}
	if (stmt_tOracleInput_42 != null) {
		stmt_tOracleInput_42.close();
	}
}

globalMap.put("tOracleInput_42_NB_LINE",nb_line_tOracleInput_42);
 

ok_Hash.put("tOracleInput_42", true);
end_Hash.put("tOracleInput_42", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_42", end_Hash.get("tOracleInput_42")-start_Hash.get("tOracleInput_42"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_42 end ] stop
 */

	
	/**
	 * [tOracleOutput_19 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	
	



	
        if(pstmtUpdate_tOracleOutput_19 != null){
            pstmtUpdate_tOracleOutput_19.close();
            resourceMap.remove("pstmtUpdate_tOracleOutput_19");
        }
        if(pstmtInsert_tOracleOutput_19 != null){
            pstmtInsert_tOracleOutput_19.close();
            resourceMap.remove("pstmtInsert_tOracleOutput_19");
        }
    resourceMap.put("statementClosed_tOracleOutput_19", true);
		if(commitCounter_tOracleOutput_19 > 0 && rowsToCommitCount_tOracleOutput_19 != 0) {
			
		}
		conn_tOracleOutput_19.commit();
		if(commitCounter_tOracleOutput_19 > 0 && rowsToCommitCount_tOracleOutput_19 != 0) {
			
			rowsToCommitCount_tOracleOutput_19 = 0;
		}
		commitCounter_tOracleOutput_19 = 0;
		
		
		conn_tOracleOutput_19 .close();
		
		resourceMap.put("finish_tOracleOutput_19", true);
   	

	
	nb_line_deleted_tOracleOutput_19=nb_line_deleted_tOracleOutput_19+ deletedCount_tOracleOutput_19;
	nb_line_update_tOracleOutput_19=nb_line_update_tOracleOutput_19 + updatedCount_tOracleOutput_19;
	nb_line_inserted_tOracleOutput_19=nb_line_inserted_tOracleOutput_19 + insertedCount_tOracleOutput_19;
	nb_line_rejected_tOracleOutput_19=nb_line_rejected_tOracleOutput_19 + rejectedCount_tOracleOutput_19;
	
        globalMap.put("tOracleOutput_19_NB_LINE",nb_line_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_UPDATED",nb_line_update_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_19);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_19", true);
end_Hash.put("tOracleOutput_19", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_19", end_Hash.get("tOracleOutput_19")-start_Hash.get("tOracleOutput_19"));
tStatCatcher_1Process(globalMap);
   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_2_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_3_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_4_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_4_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_12_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_12_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_15_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_15_NB_LINE_UPDATED") > 0) &&
((Integer)globalMap.get("tOracleOutput_18_NB_LINE_INSERTED") > 0 ||  (Integer)globalMap.get("tOracleOutput_18_NB_LINE_UPDATED") > 0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If9", 0, "true");
					}
				tOracleInput_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If9", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_42 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 finally ] stop
 */

	
	/**
	 * [tOracleOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_19") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tOracleOutput_19 = null;
                if ((pstmtUpdateToClose_tOracleOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tOracleOutput_19")) != null) {
                    pstmtUpdateToClose_tOracleOutput_19.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tOracleOutput_19 = null;
                if ((pstmtInsertToClose_tOracleOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tOracleOutput_19")) != null) {
                    pstmtInsertToClose_tOracleOutput_19.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_19") == null){
            java.sql.Connection ctn_tOracleOutput_19 = null;
            if((ctn_tOracleOutput_19 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_19")) != null){
                try {
                    ctn_tOracleOutput_19.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_19) {
                    String errorMessage_tOracleOutput_19 = "failed to close the connection in tOracleOutput_19 :" + sqlEx_tOracleOutput_19.getMessage();
                    System.err.println(errorMessage_tOracleOutput_19);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal AFILIADO_ID;

				public BigDecimal getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return 0;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return "";
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.NUMERO_DOCUMENTO == null) ? 0 : this.NUMERO_DOCUMENTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.NUMERO_DOCUMENTO == null) {
							if (other.NUMERO_DOCUMENTO != null)
								return false;
						
						} else if (!this.NUMERO_DOCUMENTO.equals(other.NUMERO_DOCUMENTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.ID = this.ID;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.AFILIADO_ID = this.AFILIADO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_DOCUMENTO = this.NOMBRE_TIPO_DOCUMENTO;
	            other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            other.NOMBRE_COTIZANTE = this.NOMBRE_COTIZANTE;
	            other.FECHA_INGRESO = this.FECHA_INGRESO;
	            other.SIGLA_FUERZA = this.SIGLA_FUERZA;
	            other.NOMBRE_TIPO_SOMETIDO = this.NOMBRE_TIPO_SOMETIDO;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.SIGLA_TIPO_SOMETIDO = this.SIGLA_TIPO_SOMETIDO;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.ID = this.ID;
	            	other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",AFILIADO_ID="+String.valueOf(AFILIADO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NUMERO_DOCUMENTO, other.NUMERO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_4> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal AFILIADO_ID;

				public BigDecimal getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return 0;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return "";
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.NUMERO_DOCUMENTO == null) ? 0 : this.NUMERO_DOCUMENTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_4 other = (OnRowsEndStructtSortRow_4) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.NUMERO_DOCUMENTO == null) {
							if (other.NUMERO_DOCUMENTO != null)
								return false;
						
						} else if (!this.NUMERO_DOCUMENTO.equals(other.NUMERO_DOCUMENTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_4 other) {

		other.ID = this.ID;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.AFILIADO_ID = this.AFILIADO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_DOCUMENTO = this.NOMBRE_TIPO_DOCUMENTO;
	            other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            other.NOMBRE_COTIZANTE = this.NOMBRE_COTIZANTE;
	            other.FECHA_INGRESO = this.FECHA_INGRESO;
	            other.SIGLA_FUERZA = this.SIGLA_FUERZA;
	            other.NOMBRE_TIPO_SOMETIDO = this.NOMBRE_TIPO_SOMETIDO;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.SIGLA_TIPO_SOMETIDO = this.SIGLA_TIPO_SOMETIDO;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_4 other) {

		other.ID = this.ID;
	            	other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",AFILIADO_ID="+String.valueOf(AFILIADO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_4 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NUMERO_DOCUMENTO, other.NUMERO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class REC_PPCDStruct implements routines.system.IPersistableRow<REC_PPCDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal AFILIADO_ID;

				public BigDecimal getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return 0;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return "";
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.NUMERO_DOCUMENTO == null) ? 0 : this.NUMERO_DOCUMENTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final REC_PPCDStruct other = (REC_PPCDStruct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.NUMERO_DOCUMENTO == null) {
							if (other.NUMERO_DOCUMENTO != null)
								return false;
						
						} else if (!this.NUMERO_DOCUMENTO.equals(other.NUMERO_DOCUMENTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(REC_PPCDStruct other) {

		other.ID = this.ID;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.PERIODO = this.PERIODO;
	            other.AFILIADO_ID = this.AFILIADO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_DOCUMENTO = this.NOMBRE_TIPO_DOCUMENTO;
	            other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            other.NOMBRE_COTIZANTE = this.NOMBRE_COTIZANTE;
	            other.FECHA_INGRESO = this.FECHA_INGRESO;
	            other.SIGLA_FUERZA = this.SIGLA_FUERZA;
	            other.NOMBRE_TIPO_SOMETIDO = this.NOMBRE_TIPO_SOMETIDO;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.SIGLA_TIPO_SOMETIDO = this.SIGLA_TIPO_SOMETIDO;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(REC_PPCDStruct other) {

		other.ID = this.ID;
	            	other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.NUMERO_DOCUMENTO = this.NUMERO_DOCUMENTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.PERIODO = readString(dis);
					
						this.AFILIADO_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",AFILIADO_ID="+String.valueOf(AFILIADO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(REC_PPCDStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NUMERO_DOCUMENTO, other.NUMERO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return true;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.TSOMETIDO_ID == null) ? 0 : this.TSOMETIDO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TSOMETIDO_ID == null) {
							if (other.TSOMETIDO_ID != null)
								return false;
						
						} else if (!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_PPCD = this.CANTIDAD_PPCD;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TSOMETIDO_ID, other.TSOMETIDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_3> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return true;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.TSOMETIDO_ID == null) ? 0 : this.TSOMETIDO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final OnRowsEndStructtSortRow_3 other = (OnRowsEndStructtSortRow_3) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TSOMETIDO_ID == null) {
							if (other.TSOMETIDO_ID != null)
								return false;
						
						} else if (!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(OnRowsEndStructtSortRow_3 other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_PPCD = this.CANTIDAD_PPCD;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(OnRowsEndStructtSortRow_3 other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_3 other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TSOMETIDO_ID, other.TSOMETIDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TOTALES_PPDCStruct implements routines.system.IPersistableRow<TOTALES_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ENTAPORTANTE_ID;

				public BigDecimal getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				
			    public BigDecimal TIEMPO_ID;

				public BigDecimal getTIEMPO_ID () {
					return this.TIEMPO_ID;
				}

				public Boolean TIEMPO_IDIsNullable(){
				    return false;
				}
				public Boolean TIEMPO_IDIsKey(){
				    return true;
				}
				public Integer TIEMPO_IDLength(){
				    return 0;
				}
				public Integer TIEMPO_IDPrecision(){
				    return null;
				}
				public String TIEMPO_IDDefault(){
				
					return "";
				
				}
				public String TIEMPO_IDComment(){
				
				    return "";
				
				}
				public String TIEMPO_IDPattern(){
				
					return "";
				
				}
				public String TIEMPO_IDOriginalDbColumnName(){
				
					return "TIEMPO_ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return true;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ENTAPORTANTE_ID == null) ? 0 : this.ENTAPORTANTE_ID.hashCode());
					
						result = prime * result + ((this.TIEMPO_ID == null) ? 0 : this.TIEMPO_ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.TSOMETIDO_ID == null) ? 0 : this.TSOMETIDO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TOTALES_PPDCStruct other = (TOTALES_PPDCStruct) obj;
		
						if (this.ENTAPORTANTE_ID == null) {
							if (other.ENTAPORTANTE_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID))
						
							return false;
					
						if (this.TIEMPO_ID == null) {
							if (other.TIEMPO_ID != null)
								return false;
						
						} else if (!this.TIEMPO_ID.equals(other.TIEMPO_ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.TSOMETIDO_ID == null) {
							if (other.TSOMETIDO_ID != null)
								return false;
						
						} else if (!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TOTALES_PPDCStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            other.TIEMPO_ID = this.TIEMPO_ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.NOMBRE_ENTAPORTANTE = this.NOMBRE_ENTAPORTANTE;
	            other.NOMBRE_TIPO_RECAUDO = this.NOMBRE_TIPO_RECAUDO;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_PPCD = this.CANTIDAD_PPCD;
	            other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            other.FUERZAS_ID = this.FUERZAS_ID;
	            
	}

	public void copyKeysDataTo(TOTALES_PPDCStruct other) {

		other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            	other.TIEMPO_ID = this.TIEMPO_ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	other.TSOMETIDO_ID = this.TSOMETIDO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ENTAPORTANTE_ID = (BigDecimal) dis.readObject();
					
						this.TIEMPO_ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTE_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TIEMPO_ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
		sb.append(",TIEMPO_ID="+String.valueOf(TIEMPO_ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TOTALES_PPDCStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ENTAPORTANTE_ID, other.ENTAPORTANTE_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIEMPO_ID, other.TIEMPO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TSOMETIDO_ID, other.TSOMETIDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_APORTE;

				public int getTIPO_APORTE () {
					return this.TIPO_APORTE;
				}

				public Boolean TIPO_APORTEIsNullable(){
				    return false;
				}
				public Boolean TIPO_APORTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTELength(){
				    return null;
				}
				public Integer TIPO_APORTEPrecision(){
				    return null;
				}
				public String TIPO_APORTEDefault(){
				
					return "";
				
				}
				public String TIPO_APORTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTEOriginalDbColumnName(){
				
					return "TIPO_APORTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public BigDecimal NUMERO_DOCUMENTO;

				public BigDecimal getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
						this.NUMERO_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
						this.NUMERO_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.NUMERO_DOCUMENTO);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.NUMERO_DOCUMENTO);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_APORTE="+String.valueOf(TIPO_APORTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+String.valueOf(NUMERO_DOCUMENTO));
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_2> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_APORTE;

				public int getTIPO_APORTE () {
					return this.TIPO_APORTE;
				}

				public Boolean TIPO_APORTEIsNullable(){
				    return false;
				}
				public Boolean TIPO_APORTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTELength(){
				    return null;
				}
				public Integer TIPO_APORTEPrecision(){
				    return null;
				}
				public String TIPO_APORTEDefault(){
				
					return "";
				
				}
				public String TIPO_APORTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTEOriginalDbColumnName(){
				
					return "TIPO_APORTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public BigDecimal NUMERO_DOCUMENTO;

				public BigDecimal getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
						this.NUMERO_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
						this.NUMERO_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.NUMERO_DOCUMENTO);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.NUMERO_DOCUMENTO);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_APORTE="+String.valueOf(TIPO_APORTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+String.valueOf(NUMERO_DOCUMENTO));
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_APORTE;

				public int getTIPO_APORTE () {
					return this.TIPO_APORTE;
				}

				public Boolean TIPO_APORTEIsNullable(){
				    return false;
				}
				public Boolean TIPO_APORTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTELength(){
				    return null;
				}
				public Integer TIPO_APORTEPrecision(){
				    return null;
				}
				public String TIPO_APORTEDefault(){
				
					return "";
				
				}
				public String TIPO_APORTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTEOriginalDbColumnName(){
				
					return "TIPO_APORTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_APORTE="+String.valueOf(TIPO_APORTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row50Struct implements routines.system.IPersistableRow<row50Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_APORTE;

				public int getTIPO_APORTE () {
					return this.TIPO_APORTE;
				}

				public Boolean TIPO_APORTEIsNullable(){
				    return false;
				}
				public Boolean TIPO_APORTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTELength(){
				    return null;
				}
				public Integer TIPO_APORTEPrecision(){
				    return null;
				}
				public String TIPO_APORTEDefault(){
				
					return "";
				
				}
				public String TIPO_APORTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTEOriginalDbColumnName(){
				
					return "TIPO_APORTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_APORTE="+String.valueOf(TIPO_APORTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return null;
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return null;
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row43Struct other = (row43Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row43Struct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(row43Struct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIEMPO_PART_PPDCStruct implements routines.system.IPersistableRow<TIEMPO_PART_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO_ID;

				public int getTIPO_RECAUDO_ID () {
					return this.TIPO_RECAUDO_ID;
				}

				public Boolean TIPO_RECAUDO_IDIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDO_IDIsKey(){
				    return true;
				}
				public Integer TIPO_RECAUDO_IDLength(){
				    return null;
				}
				public Integer TIPO_RECAUDO_IDPrecision(){
				    return null;
				}
				public String TIPO_RECAUDO_IDDefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDO_IDPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDO_IDOriginalDbColumnName(){
				
					return "TIPO_RECAUDO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public int Anio;

				public int getAnio () {
					return this.Anio;
				}

				public Boolean AnioIsNullable(){
				    return false;
				}
				public Boolean AnioIsKey(){
				    return false;
				}
				public Integer AnioLength(){
				    return null;
				}
				public Integer AnioPrecision(){
				    return null;
				}
				public String AnioDefault(){
				
					return null;
				
				}
				public String AnioComment(){
				
				    return "";
				
				}
				public String AnioPattern(){
				
					return "";
				
				}
				public String AnioOriginalDbColumnName(){
				
					return "Anio";
				
				}

				
			    public int Mes;

				public int getMes () {
					return this.Mes;
				}

				public Boolean MesIsNullable(){
				    return false;
				}
				public Boolean MesIsKey(){
				    return false;
				}
				public Integer MesLength(){
				    return null;
				}
				public Integer MesPrecision(){
				    return null;
				}
				public String MesDefault(){
				
					return null;
				
				}
				public String MesComment(){
				
				    return "";
				
				}
				public String MesPattern(){
				
					return "";
				
				}
				public String MesOriginalDbColumnName(){
				
					return "Mes";
				
				}

				
			    public int Dia;

				public int getDia () {
					return this.Dia;
				}

				public Boolean DiaIsNullable(){
				    return false;
				}
				public Boolean DiaIsKey(){
				    return false;
				}
				public Integer DiaLength(){
				    return null;
				}
				public Integer DiaPrecision(){
				    return null;
				}
				public String DiaDefault(){
				
					return null;
				
				}
				public String DiaComment(){
				
				    return "";
				
				}
				public String DiaPattern(){
				
					return "";
				
				}
				public String DiaOriginalDbColumnName(){
				
					return "Dia";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
							result = prime * result + (int) this.TIPO_RECAUDO_ID;
						
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final TIEMPO_PART_PPDCStruct other = (TIEMPO_PART_PPDCStruct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID)
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(TIEMPO_PART_PPDCStruct other) {

		other.ID = this.ID;
	            other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            other.FECHA = this.FECHA;
	            other.PERIODO = this.PERIODO;
	            other.Anio = this.Anio;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            
	}

	public void copyKeysDataTo(TIEMPO_PART_PPDCStruct other) {

		other.ID = this.ID;
	            	other.TIPO_RECAUDO_ID = this.TIPO_RECAUDO_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}




	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO_ID = dis.readInt();
					
					this.FECHA = readDate(dis);
					
					this.PERIODO = readString(dis);
					
			        this.Anio = dis.readInt();
					
			        this.Mes = dis.readInt();
					
			        this.Dia = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO_ID);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// int
				
		            	dos.writeInt(this.Anio);
					
					// int
				
		            	dos.writeInt(this.Mes);
					
					// int
				
		            	dos.writeInt(this.Dia);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO_ID="+String.valueOf(TIPO_RECAUDO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",Anio="+String.valueOf(Anio));
		sb.append(",Mes="+String.valueOf(Mes));
		sb.append(",Dia="+String.valueOf(Dia));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIEMPO_PART_PPDCStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_RECAUDO_ID, other.TIPO_RECAUDO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIEMPO_PPDCStruct implements routines.system.IPersistableRow<TIEMPO_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public int TIPO_RECAUDO;

				public int getTIPO_RECAUDO () {
					return this.TIPO_RECAUDO;
				}

				public Boolean TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String TIPO_RECAUDODefault(){
				
					return "";
				
				}
				public String TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String TIPO_RECAUDOOriginalDbColumnName(){
				
					return "TIPO_RECAUDO";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String FECHA;

				public String getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return null;
				}
				public Integer FECHAPrecision(){
				    return null;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.FECHA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			        this.TIPO_RECAUDO = dis.readInt();
					
					this.PERIODO = readString(dis);
					
					this.FECHA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// int
				
		            	dos.writeInt(this.TIPO_RECAUDO);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",TIPO_RECAUDO="+String.valueOf(TIPO_RECAUDO));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",FECHA="+FECHA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIEMPO_PPDCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class SOMETIDO_PPDCStruct implements routines.system.IPersistableRow<SOMETIDO_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public int TIPO_APORTE;

				public int getTIPO_APORTE () {
					return this.TIPO_APORTE;
				}

				public Boolean TIPO_APORTEIsNullable(){
				    return false;
				}
				public Boolean TIPO_APORTEIsKey(){
				    return false;
				}
				public Integer TIPO_APORTELength(){
				    return null;
				}
				public Integer TIPO_APORTEPrecision(){
				    return null;
				}
				public String TIPO_APORTEDefault(){
				
					return "";
				
				}
				public String TIPO_APORTEComment(){
				
				    return "";
				
				}
				public String TIPO_APORTEPattern(){
				
					return "";
				
				}
				public String TIPO_APORTEOriginalDbColumnName(){
				
					return "TIPO_APORTE";
				
				}

				
			    public String NOMBRE_TIPO_RECAUDO;

				public String getNOMBRE_TIPO_RECAUDO () {
					return this.NOMBRE_TIPO_RECAUDO;
				}

				public Boolean NOMBRE_TIPO_RECAUDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_RECAUDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_RECAUDOLength(){
				    return null;
				}
				public Integer NOMBRE_TIPO_RECAUDOPrecision(){
				    return null;
				}
				public String NOMBRE_TIPO_RECAUDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_RECAUDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_RECAUDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_RECAUDO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String NOMBRE_TIPO_DOCUMENTO;

				public String getNOMBRE_TIPO_DOCUMENTO () {
					return this.NOMBRE_TIPO_DOCUMENTO;
				}

				public Boolean NOMBRE_TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer NOMBRE_TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return 0;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String NOMBRE_TIPO_SOMETIDO;

				public String getNOMBRE_TIPO_SOMETIDO () {
					return this.NOMBRE_TIPO_SOMETIDO;
				}

				public Boolean NOMBRE_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer NOMBRE_TIPO_SOMETIDOLength(){
				    return 50;
				}
				public Integer NOMBRE_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String NOMBRE_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String NOMBRE_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String NOMBRE_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "NOMBRE_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal CANTIDAD_PPCD;

				public BigDecimal getCANTIDAD_PPCD () {
					return this.CANTIDAD_PPCD;
				}

				public Boolean CANTIDAD_PPCDIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_PPCDIsKey(){
				    return false;
				}
				public Integer CANTIDAD_PPCDLength(){
				    return null;
				}
				public Integer CANTIDAD_PPCDPrecision(){
				    return null;
				}
				public String CANTIDAD_PPCDDefault(){
				
					return null;
				
				}
				public String CANTIDAD_PPCDComment(){
				
				    return "";
				
				}
				public String CANTIDAD_PPCDPattern(){
				
					return "";
				
				}
				public String CANTIDAD_PPCDOriginalDbColumnName(){
				
					return "CANTIDAD_PPCD";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String SIGLA_TIPO_SOMETIDO;

				public String getSIGLA_TIPO_SOMETIDO () {
					return this.SIGLA_TIPO_SOMETIDO;
				}

				public Boolean SIGLA_TIPO_SOMETIDOIsNullable(){
				    return false;
				}
				public Boolean SIGLA_TIPO_SOMETIDOIsKey(){
				    return false;
				}
				public Integer SIGLA_TIPO_SOMETIDOLength(){
				    return 3;
				}
				public Integer SIGLA_TIPO_SOMETIDOPrecision(){
				    return 0;
				}
				public String SIGLA_TIPO_SOMETIDODefault(){
				
					return null;
				
				}
				public String SIGLA_TIPO_SOMETIDOComment(){
				
				    return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOPattern(){
				
					return "";
				
				}
				public String SIGLA_TIPO_SOMETIDOOriginalDbColumnName(){
				
					return "SIGLA_TIPO_SOMETIDO";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
			        this.TIPO_APORTE = dis.readInt();
					
					this.NOMBRE_TIPO_RECAUDO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.NOMBRE_TIPO_SOMETIDO = readString(dis);
					
						this.CANTIDAD_PPCD = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA_TIPO_SOMETIDO = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TIPO_APORTE);
					
					// String
				
						writeString(this.NOMBRE_TIPO_RECAUDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.NOMBRE_TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.NOMBRE_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_PPCD);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.SIGLA_TIPO_SOMETIDO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_APORTE="+String.valueOf(TIPO_APORTE));
		sb.append(",NOMBRE_TIPO_RECAUDO="+NOMBRE_TIPO_RECAUDO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",NOMBRE_TIPO_DOCUMENTO="+NOMBRE_TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",NOMBRE_TIPO_SOMETIDO="+NOMBRE_TIPO_SOMETIDO);
		sb.append(",CANTIDAD_PPCD="+String.valueOf(CANTIDAD_PPCD));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",SIGLA_TIPO_SOMETIDO="+SIGLA_TIPO_SOMETIDO);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(SOMETIDO_PPDCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class FUERZA_PPDCStruct implements routines.system.IPersistableRow<FUERZA_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 10;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return false;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(FUERZA_PPDCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class TIPODOC_PPCDStruct implements routines.system.IPersistableRow<TIPODOC_PPCDStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TIPODOC_PPCDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ENTAPORTANTE_PPDCStruct implements routines.system.IPersistableRow<ENTAPORTANTE_PPDCStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public String NOMBRE_ENTAPORTANTE;

				public String getNOMBRE_ENTAPORTANTE () {
					return this.NOMBRE_ENTAPORTANTE;
				}

				public Boolean NOMBRE_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean NOMBRE_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_ENTAPORTANTELength(){
				    return 50;
				}
				public Integer NOMBRE_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_ENTAPORTANTEOriginalDbColumnName(){
				
					return "NOMBRE_ENTAPORTANTE";
				
				}

				
			    public String DOCUMENTO_ENTAPORTANTE;

				public String getDOCUMENTO_ENTAPORTANTE () {
					return this.DOCUMENTO_ENTAPORTANTE;
				}

				public Boolean DOCUMENTO_ENTAPORTANTEIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTO_ENTAPORTANTEIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTAPORTANTELength(){
				    return 20;
				}
				public Integer DOCUMENTO_ENTAPORTANTEPrecision(){
				    return 0;
				}
				public String DOCUMENTO_ENTAPORTANTEDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTAPORTANTEComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTAPORTANTEOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTAPORTANTE";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
					this.NOMBRE_ENTAPORTANTE = readString(dis);
					
					this.DOCUMENTO_ENTAPORTANTE = readString(dis);
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// String
				
						writeString(this.NOMBRE_ENTAPORTANTE,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTAPORTANTE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",NOMBRE_ENTAPORTANTE="+NOMBRE_ENTAPORTANTE);
		sb.append(",DOCUMENTO_ENTAPORTANTE="+DOCUMENTO_ENTAPORTANTE);
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ENTAPORTANTE_PPDCStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_1Struct implements routines.system.IPersistableRow<after_tOracleInput_1Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal PPDC_ID;

				public BigDecimal getPPDC_ID () {
					return this.PPDC_ID;
				}

				public Boolean PPDC_IDIsNullable(){
				    return false;
				}
				public Boolean PPDC_IDIsKey(){
				    return false;
				}
				public Integer PPDC_IDLength(){
				    return 0;
				}
				public Integer PPDC_IDPrecision(){
				    return null;
				}
				public String PPDC_IDDefault(){
				
					return "";
				
				}
				public String PPDC_IDComment(){
				
				    return "";
				
				}
				public String PPDC_IDPattern(){
				
					return "";
				
				}
				public String PPDC_IDOriginalDbColumnName(){
				
					return "PPDC_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 50;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return false;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal AFILIADOS_ID;

				public BigDecimal getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String NOMBRE_COTIZANTE;

				public String getNOMBRE_COTIZANTE () {
					return this.NOMBRE_COTIZANTE;
				}

				public Boolean NOMBRE_COTIZANTEIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COTIZANTEIsKey(){
				    return false;
				}
				public Integer NOMBRE_COTIZANTELength(){
				    return 100;
				}
				public Integer NOMBRE_COTIZANTEPrecision(){
				    return 0;
				}
				public String NOMBRE_COTIZANTEDefault(){
				
					return null;
				
				}
				public String NOMBRE_COTIZANTEComment(){
				
				    return "";
				
				}
				public String NOMBRE_COTIZANTEPattern(){
				
					return "";
				
				}
				public String NOMBRE_COTIZANTEOriginalDbColumnName(){
				
					return "NOMBRE_COTIZANTE";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public BigDecimal FUERZAS_ID;

				public BigDecimal getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public BigDecimal TSOMETIDO_ID;

				public BigDecimal getTSOMETIDO_ID () {
					return this.TSOMETIDO_ID;
				}

				public Boolean TSOMETIDO_IDIsNullable(){
				    return true;
				}
				public Boolean TSOMETIDO_IDIsKey(){
				    return false;
				}
				public Integer TSOMETIDO_IDLength(){
				    return 0;
				}
				public Integer TSOMETIDO_IDPrecision(){
				    return null;
				}
				public String TSOMETIDO_IDDefault(){
				
					return "";
				
				}
				public String TSOMETIDO_IDComment(){
				
				    return "";
				
				}
				public String TSOMETIDO_IDPattern(){
				
					return "";
				
				}
				public String TSOMETIDO_IDOriginalDbColumnName(){
				
					return "TSOMETIDO_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.PPDC_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.AFILIADOS_ID = (BigDecimal) dis.readObject();
					
						this.TDOCUMENTOS_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
					this.NOMBRE_COTIZANTE = readString(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.FUERZAS_ID = (BigDecimal) dis.readObject();
					
						this.TSOMETIDO_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TSOMETIDO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PPDC_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.AFILIADOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.NOMBRE_COTIZANTE,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FUERZAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TSOMETIDO_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PPDC_ID="+String.valueOf(PPDC_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",NOMBRE_COTIZANTE="+NOMBRE_COTIZANTE);
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",TSOMETIDO_ID="+String.valueOf(TSOMETIDO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_2Process(globalMap);
		tOracleInput_3Process(globalMap);
		tOracleInput_4Process(globalMap);
		tOracleInput_5Process(globalMap);

		row1Struct row1 = new row1Struct();
ENTAPORTANTE_PPDCStruct ENTAPORTANTE_PPDC = new ENTAPORTANTE_PPDCStruct();
TIPODOC_PPCDStruct TIPODOC_PPCD = new TIPODOC_PPCDStruct();
FUERZA_PPDCStruct FUERZA_PPDC = new FUERZA_PPDCStruct();
TIEMPO_PPDCStruct TIEMPO_PPDC = new TIEMPO_PPDCStruct();
TIEMPO_PART_PPDCStruct TIEMPO_PART_PPDC = new TIEMPO_PART_PPDCStruct();
row43Struct row43 = new row43Struct();
SOMETIDO_PPDCStruct SOMETIDO_PPDC = new SOMETIDO_PPDCStruct();
row44Struct row44 = new row44Struct();
row17Struct row17 = new row17Struct();
TOTALES_PPDCStruct TOTALES_PPDC = new TOTALES_PPDCStruct();
row48Struct row48 = new row48Struct();
row50Struct row50 = new row50Struct();
REC_PPCDStruct REC_PPCD = new REC_PPCDStruct();
row47Struct row47 = new row47Struct();










	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("BREC_TIEMPO").toUpperCase();
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("BREC_TIEMPO").toUpperCase();
        }
                String insert_tOracleOutput_1 = "INSERT INTO " + tableName_tOracleOutput_1 + " (ID,TIPO_RECAUDO_ID,FECHA,PERIODO,ANIO,MES,DIA) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(insert_tOracleOutput_1);
                        resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);
                StringBuffer query_tOracleOutput_1 = null;
		 	String[] insertSQLSplits_tOracleOutput_1 = insert_tOracleOutput_1.split("\\?");





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tUniqRow_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIEMPO_PART_PPDC");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					BigDecimal ID;
					int TIPO_RECAUDO_ID;
					String PERIODO;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
									result = prime * result + (int) this.TIPO_RECAUDO_ID;
									
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
								
									} else if (!this.ID.equals(other.ID))
								 
										return false;
								
									if (this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID) 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
								
									} else if (!this.PERIODO.equals(other.PERIODO))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIEMPO_PPDC");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
	int Anio;
	int Mes;
	int Dia;
	java.util.Date FECHA;
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIEMPO_PART_PPDCStruct TIEMPO_PART_PPDC_tmp = new TIEMPO_PART_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */





	
	/**
	 * [tAggregateRow_2_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGOUT", false);
		start_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tAggregateRow_2_AGGOUT");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tAggregateRow_2_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_2 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_2 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_2 utilClass_tAggregateRow_2 = new UtilClass_tAggregateRow_2();

	
	
		class AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2 { // G_OutBegin_AggR_1100
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
    					int TIPO_APORTE;
    					String NOMBRE_TIPO_RECAUDO;
    					BigDecimal ID;
    					String PERIODO;
    					BigDecimal ENTAPORTANTES_ID;
    					String NOMBRE_ENTAPORTANTE;
    					String NUMERO_DOCUMENTO;
    					String NOMBRE_TIPO_SOMETIDO;
    					BigDecimal TSOMETIDO_ID;
    					BigDecimal FUERZAS_ID;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
									result = prime * result + (int) this.TIPO_APORTE;
									
								result = prime * result + ((this.NOMBRE_TIPO_RECAUDO == null) ? 0 : this.NOMBRE_TIPO_RECAUDO.hashCode());
								
								result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
								
								result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
								
								result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
								
								result = prime * result + ((this.NOMBRE_ENTAPORTANTE == null) ? 0 : this.NOMBRE_ENTAPORTANTE.hashCode());
								
								result = prime * result + ((this.NUMERO_DOCUMENTO == null) ? 0 : this.NUMERO_DOCUMENTO.hashCode());
								
								result = prime * result + ((this.NOMBRE_TIPO_SOMETIDO == null) ? 0 : this.NOMBRE_TIPO_SOMETIDO.hashCode());
								
								result = prime * result + ((this.TSOMETIDO_ID == null) ? 0 : this.TSOMETIDO_ID.hashCode());
								
								result = prime * result + ((this.FUERZAS_ID == null) ? 0 : this.FUERZAS_ID.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2 other = (AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2) obj;
				
									if (this.TIPO_APORTE != other.TIPO_APORTE) 
										return false;
								
									if (this.NOMBRE_TIPO_RECAUDO == null) {
										if (other.NOMBRE_TIPO_RECAUDO != null) 
											return false;
									} else if (!this.NOMBRE_TIPO_RECAUDO.equals(other.NOMBRE_TIPO_RECAUDO)) 
										return false;
								
									if (this.ID == null) {
										if (other.ID != null) 
											return false;
									} else if (!this.ID.equals(other.ID)) 
										return false;
								
									if (this.PERIODO == null) {
										if (other.PERIODO != null) 
											return false;
									} else if (!this.PERIODO.equals(other.PERIODO)) 
										return false;
								
									if (this.ENTAPORTANTES_ID == null) {
										if (other.ENTAPORTANTES_ID != null) 
											return false;
									} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)) 
										return false;
								
									if (this.NOMBRE_ENTAPORTANTE == null) {
										if (other.NOMBRE_ENTAPORTANTE != null) 
											return false;
									} else if (!this.NOMBRE_ENTAPORTANTE.equals(other.NOMBRE_ENTAPORTANTE)) 
										return false;
								
									if (this.NUMERO_DOCUMENTO == null) {
										if (other.NUMERO_DOCUMENTO != null) 
											return false;
									} else if (!this.NUMERO_DOCUMENTO.equals(other.NUMERO_DOCUMENTO)) 
										return false;
								
									if (this.NOMBRE_TIPO_SOMETIDO == null) {
										if (other.NOMBRE_TIPO_SOMETIDO != null) 
											return false;
									} else if (!this.NOMBRE_TIPO_SOMETIDO.equals(other.NOMBRE_TIPO_SOMETIDO)) 
										return false;
								
									if (this.TSOMETIDO_ID == null) {
										if (other.TSOMETIDO_ID != null) 
											return false;
									} else if (!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID)) 
										return false;
								
									if (this.FUERZAS_ID == null) {
										if (other.FUERZAS_ID != null) 
											return false;
									} else if (!this.FUERZAS_ID.equals(other.FUERZAS_ID)) 
										return false;
								
				
				return true;
			}
	  
	        
		} // G_OutBegin_AggR_1100

	

	class AggOperationStruct_tAggregateRow_2 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				int TIPO_APORTE;
    				String NOMBRE_TIPO_RECAUDO;
    				BigDecimal ID;
    				String PERIODO;
    				BigDecimal ENTAPORTANTES_ID;
    				String NOMBRE_ENTAPORTANTE;
    				String NOMBRE_TIPO_SOMETIDO;
    				BigDecimal TSOMETIDO_ID;
    				BigDecimal FUERZAS_ID;java.util.Set<AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2> distinctValues_CANTIDAD_PPCD = new java.util.HashSet<AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2>();
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
								result = prime * result + (int) this.TIPO_APORTE;
							
							result = prime * result + ((this.NOMBRE_TIPO_RECAUDO == null) ? 0 : this.NOMBRE_TIPO_RECAUDO.hashCode());
							
							result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
							
							result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
							
							result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
							
							result = prime * result + ((this.NOMBRE_ENTAPORTANTE == null) ? 0 : this.NOMBRE_ENTAPORTANTE.hashCode());
							
							result = prime * result + ((this.NOMBRE_TIPO_SOMETIDO == null) ? 0 : this.NOMBRE_TIPO_SOMETIDO.hashCode());
							
							result = prime * result + ((this.TSOMETIDO_ID == null) ? 0 : this.TSOMETIDO_ID.hashCode());
							
							result = prime * result + ((this.FUERZAS_ID == null) ? 0 : this.FUERZAS_ID.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_2 other = (AggOperationStruct_tAggregateRow_2) obj;
			
							if (this.TIPO_APORTE != other.TIPO_APORTE) 
								return false;
						
							if (this.NOMBRE_TIPO_RECAUDO == null) {
								if (other.NOMBRE_TIPO_RECAUDO != null) 
									return false;
							} else if (!this.NOMBRE_TIPO_RECAUDO.equals(other.NOMBRE_TIPO_RECAUDO)) 
								return false;
						
							if (this.ID == null) {
								if (other.ID != null) 
									return false;
							} else if (!this.ID.equals(other.ID)) 
								return false;
						
							if (this.PERIODO == null) {
								if (other.PERIODO != null) 
									return false;
							} else if (!this.PERIODO.equals(other.PERIODO)) 
								return false;
						
							if (this.ENTAPORTANTES_ID == null) {
								if (other.ENTAPORTANTES_ID != null) 
									return false;
							} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID)) 
								return false;
						
							if (this.NOMBRE_ENTAPORTANTE == null) {
								if (other.NOMBRE_ENTAPORTANTE != null) 
									return false;
							} else if (!this.NOMBRE_ENTAPORTANTE.equals(other.NOMBRE_ENTAPORTANTE)) 
								return false;
						
							if (this.NOMBRE_TIPO_SOMETIDO == null) {
								if (other.NOMBRE_TIPO_SOMETIDO != null) 
									return false;
							} else if (!this.NOMBRE_TIPO_SOMETIDO.equals(other.NOMBRE_TIPO_SOMETIDO)) 
								return false;
						
							if (this.TSOMETIDO_ID == null) {
								if (other.TSOMETIDO_ID != null) 
									return false;
							} else if (!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID)) 
								return false;
						
							if (this.FUERZAS_ID == null) {
								if (other.FUERZAS_ID != null) 
									return false;
							} else if (!this.FUERZAS_ID.equals(other.FUERZAS_ID)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_2 operation_result_tAggregateRow_2 = null;
	AggOperationStruct_tAggregateRow_2 operation_finder_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();
	java.util.Map<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2> hash_tAggregateRow_2 = new java.util.HashMap<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2>();
	

 



/**
 * [tAggregateRow_2_AGGOUT begin ] stop
 */





	
	/**
	 * [tSortRow_4_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_4_SortOut", false);
		start_Hash.put("tSortRow_4_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_4_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"REC_PPCD");
					}
				
		int tos_count_tSortRow_4_SortOut = 0;
		


class ComparableREC_PPCDStruct extends REC_PPCDStruct implements Comparable<ComparableREC_PPCDStruct> {
	
	public int compareTo(ComparableREC_PPCDStruct other) {

		if(this.ID == null && other.ID != null){
			return -1;
						
		}else if(this.ID != null && other.ID == null){
			return 1;
						
		}else if(this.ID != null && other.ID != null){
			if(!this.ID.equals(other.ID)){
				return this.ID.compareTo(other.ID);
			}
		}
		if(this.TIEMPO_ID == null && other.TIEMPO_ID != null){
			return -1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID == null){
			return 1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID != null){
			if(!this.TIEMPO_ID.equals(other.TIEMPO_ID)){
				return this.TIEMPO_ID.compareTo(other.TIEMPO_ID);
			}
		}
		if(this.ENTAPORTANTE_ID == null && other.ENTAPORTANTE_ID != null){
			return -1;
						
		}else if(this.ENTAPORTANTE_ID != null && other.ENTAPORTANTE_ID == null){
			return 1;
						
		}else if(this.ENTAPORTANTE_ID != null && other.ENTAPORTANTE_ID != null){
			if(!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID)){
				return this.ENTAPORTANTE_ID.compareTo(other.ENTAPORTANTE_ID);
			}
		}
		if(this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID){
						
				return this.TIPO_RECAUDO_ID > other.TIPO_RECAUDO_ID ? 1 : -1;
							
		}
		if(this.PERIODO == null && other.PERIODO != null){
			return -1;
						
		}else if(this.PERIODO != null && other.PERIODO == null){
			return 1;
						
		}else if(this.PERIODO != null && other.PERIODO != null){
			if(!this.PERIODO.equals(other.PERIODO)){
				return this.PERIODO.compareTo(other.PERIODO);
			}
		}
		if(this.NUMERO_DOCUMENTO == null && other.NUMERO_DOCUMENTO != null){
			return -1;
						
		}else if(this.NUMERO_DOCUMENTO != null && other.NUMERO_DOCUMENTO == null){
			return 1;
						
		}else if(this.NUMERO_DOCUMENTO != null && other.NUMERO_DOCUMENTO != null){
			if(!this.NUMERO_DOCUMENTO.equals(other.NUMERO_DOCUMENTO)){
				return this.NUMERO_DOCUMENTO.compareTo(other.NUMERO_DOCUMENTO);
			}
		}
		return 0;
	}
}

java.util.List<ComparableREC_PPCDStruct> list_tSortRow_4_SortOut = new java.util.ArrayList<ComparableREC_PPCDStruct>();


 



/**
 * [tSortRow_4_SortOut begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
REC_PPCDStruct REC_PPCD_tmp = new REC_PPCDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tReplicate_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_1", false);
		start_Hash.put("tReplicate_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tReplicate_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tReplicate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"SOMETIDO_PPDC");
					}
				
		int tos_count_tReplicate_1 = 0;
		

 



/**
 * [tReplicate_1 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"FUERZA_PPDC");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
	String FECHA;
	int TIPO_RECAUDO;
	String NOMBRE_TIPO_RECAUDO;
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIEMPO_PPDCStruct TIEMPO_PPDC_tmp = new TIEMPO_PPDCStruct();
SOMETIDO_PPDCStruct SOMETIDO_PPDC_tmp = new SOMETIDO_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TIPODOC_PPCD");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
FUERZA_PPDCStruct FUERZA_PPDC_tmp = new FUERZA_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ENTAPORTANTE_PPDC");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
TIPODOC_PPCDStruct TIPODOC_PPCD_tmp = new TIPODOC_PPCDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
					globalMap.get( "tHash_Lookup_row4" ))
					;					
					
	

row4Struct row4HashKey = new row4Struct();
row4Struct row4Default = new row4Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
ENTAPORTANTE_PPDCStruct ENTAPORTANTE_PPDC_tmp = new ENTAPORTANTE_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_1.setFetchSize(1000);


		    String dbquery_tOracleInput_1 = "SELECT \n  CG.ID, \n  DS.ID PPDC_ID, \n  CG.PERIODO, \n  CG.ENTAPORTANTES_ID, \n  DS.AFILIADOS_ID, \n  DS.TDOCUMENTOS_I"
+"D, \n  DS.DOCUMENTO,\n  REC.fnc_GetNombreCotizante(DS.PRIMER_NOMBRE, DS.SEGUNDO_NOMBRE, DS.PRIMER_APELLIDO,DS.SEGUNDO_AP"
+"ELLIDO) \n  NOMBRE_COTIZANTE, \n  DS.FECHA_INGRESO, \n  DS.FUERZAS_ID, \n  DS.TSOMETIDO_ID   \nFROM REC_CONTROLCARGUE CG"
+" \nINNER JOIN REC_AENTIDADES AE ON AE.CONTROLCARGUE_ID = CG.ID  AND AE.ESTREGISTRO_ID = 1\nINNER JOIN REC_DPPCD DS ON DS"
+".AENTIDADES_ID = AE.ID  AND DS.ESTREGISTRO_ID = 1\nWHERE CG.ESTREGISTRO_ID = 1 AND CG.ESTARCHIVO_ID = 3 AND CG.TPLANILLA"
+"S_ID = 1 AND CG.TARCHIVOS_ID = 3 AND CG.PERIODO = '" + context.PERIODO + "'";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row1.ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row1.ID = rs_tOracleInput_1.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row1.PPDC_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(2) != null) {
						row1.PPDC_ID = rs_tOracleInput_1.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row1.PERIODO = null;
							} else {
	                         		
        	row1.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row1.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(4) != null) {
						row1.ENTAPORTANTES_ID = rs_tOracleInput_1.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 5) {
								row1.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(5) != null) {
						row1.AFILIADOS_ID = rs_tOracleInput_1.getBigDecimal(5);
					} else {
				
						row1.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 6) {
								row1.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(6) != null) {
						row1.TDOCUMENTOS_ID = rs_tOracleInput_1.getBigDecimal(6);
					} else {
				
						row1.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 7) {
								row1.DOCUMENTO = null;
							} else {
	                         		
        	row1.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 8) {
								row1.NOMBRE_COTIZANTE = null;
							} else {
	                         		
        	row1.NOMBRE_COTIZANTE = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 9) {
								row1.FECHA_INGRESO = null;
							} else {
										
			row1.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_1, 9);
		                    }
							if(colQtyInRs_tOracleInput_1 < 10) {
								row1.FUERZAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(10) != null) {
						row1.FUERZAS_ID = rs_tOracleInput_1.getBigDecimal(10);
					} else {
				
						row1.FUERZAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 11) {
								row1.TSOMETIDO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(11) != null) {
						row1.TSOMETIDO_ID = rs_tOracleInput_1.getBigDecimal(11);
					} else {
				
						row1.TSOMETIDO_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row4Struct row4 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row4" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow4 = false;
       		  	    	
       		  	    	
 							row4Struct row4ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row4HashKey.ID = row1.ENTAPORTANTES_ID ;
                        		    		

								
		                        	row4HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row4.lookup( row4HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row4 != null && tHash_Lookup_row4.getCount(row4HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row4' and it contains more one result from keys :  row4.ID = '" + row4HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row4Struct fromLookup_row4 = null;
							row4 = row4Default;
										 
							
								 
							
							
								if (tHash_Lookup_row4 !=null && tHash_Lookup_row4.hasNext()) { // G 099
								
							
								
								fromLookup_row4 = tHash_Lookup_row4.next();

							
							
								} // G 099
							
							

							if(fromLookup_row4 != null) {
								row4 = fromLookup_row4;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

ENTAPORTANTE_PPDC = null;


// # Output table : 'ENTAPORTANTE_PPDC'
ENTAPORTANTE_PPDC_tmp.ID = row1.ID ;
ENTAPORTANTE_PPDC_tmp.ENTAPORTANTES_ID = row1.ENTAPORTANTES_ID ;
ENTAPORTANTE_PPDC_tmp.PERIODO = row1.PERIODO ;
ENTAPORTANTE_PPDC_tmp.NOMBRE_ENTAPORTANTE = row4.NOMBRE ;
ENTAPORTANTE_PPDC_tmp.DOCUMENTO_ENTAPORTANTE = row4.DOCUMENTO ;
ENTAPORTANTE_PPDC_tmp.AFILIADOS_ID = row1.AFILIADOS_ID ;
ENTAPORTANTE_PPDC_tmp.TDOCUMENTOS_ID = row1.TDOCUMENTOS_ID ;
ENTAPORTANTE_PPDC_tmp.DOCUMENTO = row1.DOCUMENTO ;
ENTAPORTANTE_PPDC_tmp.NOMBRE_COTIZANTE = row1.NOMBRE_COTIZANTE ;
ENTAPORTANTE_PPDC_tmp.FECHA_INGRESO = row1.FECHA_INGRESO ;
ENTAPORTANTE_PPDC_tmp.FUERZAS_ID = row1.FUERZAS_ID ;
ENTAPORTANTE_PPDC_tmp.TSOMETIDO_ID = row1.TSOMETIDO_ID ;
ENTAPORTANTE_PPDC_tmp.PPDC_ID = row1.PPDC_ID ;
ENTAPORTANTE_PPDC = ENTAPORTANTE_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "ENTAPORTANTE_PPDC"
if(ENTAPORTANTE_PPDC != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ENTAPORTANTE_PPDC"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row9Struct row9 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row9HashKey.ID = ENTAPORTANTE_PPDC.TDOCUMENTOS_ID ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row9 != null && tHash_Lookup_row9.getCount(row9HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row9' and it contains more one result from keys :  row9.ID = '" + row9HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								 
							
							
								if (tHash_Lookup_row9 !=null && tHash_Lookup_row9.hasNext()) { // G 099
								
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							
							
								} // G 099
							
							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

TIPODOC_PPCD = null;


// # Output table : 'TIPODOC_PPCD'
TIPODOC_PPCD_tmp.ID = ENTAPORTANTE_PPDC.ID ;
TIPODOC_PPCD_tmp.ENTAPORTANTES_ID = ENTAPORTANTE_PPDC.ENTAPORTANTES_ID ;
TIPODOC_PPCD_tmp.PERIODO = ENTAPORTANTE_PPDC.PERIODO ;
TIPODOC_PPCD_tmp.NOMBRE_ENTAPORTANTE = ENTAPORTANTE_PPDC.NOMBRE_ENTAPORTANTE ;
TIPODOC_PPCD_tmp.DOCUMENTO_ENTAPORTANTE = ENTAPORTANTE_PPDC.DOCUMENTO_ENTAPORTANTE ;
TIPODOC_PPCD_tmp.AFILIADOS_ID = ENTAPORTANTE_PPDC.AFILIADOS_ID ;
TIPODOC_PPCD_tmp.SIGLA = row9.SIGLA ;
TIPODOC_PPCD_tmp.DOCUMENTO = ENTAPORTANTE_PPDC.DOCUMENTO ;
TIPODOC_PPCD_tmp.NOMBRE_COTIZANTE = ENTAPORTANTE_PPDC.NOMBRE_COTIZANTE ;
TIPODOC_PPCD_tmp.FECHA_INGRESO = ENTAPORTANTE_PPDC.FECHA_INGRESO ;
TIPODOC_PPCD_tmp.FUERZAS_ID = ENTAPORTANTE_PPDC.FUERZAS_ID ;
TIPODOC_PPCD_tmp.TSOMETIDO_ID = ENTAPORTANTE_PPDC.TSOMETIDO_ID ;
TIPODOC_PPCD_tmp.PPDC_ID = ENTAPORTANTE_PPDC.PPDC_ID ;
TIPODOC_PPCD = TIPODOC_PPCD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "TIPODOC_PPCD"
if(TIPODOC_PPCD != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIPODOC_PPCD"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row10Struct row10 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row10HashKey.ID = TIPODOC_PPCD.FUERZAS_ID ;
                        		    		

								
		                        	row10HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row10' and it contains more one result from keys :  row10.ID = '" + row10HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								 
							
							
								if (tHash_Lookup_row10 !=null && tHash_Lookup_row10.hasNext()) { // G 099
								
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							
							
								} // G 099
							
							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

FUERZA_PPDC = null;


// # Output table : 'FUERZA_PPDC'
FUERZA_PPDC_tmp.ID = TIPODOC_PPCD.ID ;
FUERZA_PPDC_tmp.ENTAPORTANTES_ID = TIPODOC_PPCD.ENTAPORTANTES_ID ;
FUERZA_PPDC_tmp.PERIODO = TIPODOC_PPCD.PERIODO ;
FUERZA_PPDC_tmp.NOMBRE_ENTAPORTANTE = TIPODOC_PPCD.NOMBRE_ENTAPORTANTE ;
FUERZA_PPDC_tmp.DOCUMENTO_ENTAPORTANTE = TIPODOC_PPCD.DOCUMENTO_ENTAPORTANTE ;
FUERZA_PPDC_tmp.AFILIADOS_ID = TIPODOC_PPCD.AFILIADOS_ID ;
FUERZA_PPDC_tmp.SIGLA = TIPODOC_PPCD.SIGLA ;
FUERZA_PPDC_tmp.DOCUMENTO = TIPODOC_PPCD.DOCUMENTO ;
FUERZA_PPDC_tmp.NOMBRE_COTIZANTE = TIPODOC_PPCD.NOMBRE_COTIZANTE ;
FUERZA_PPDC_tmp.FECHA_INGRESO = TIPODOC_PPCD.FECHA_INGRESO ;
FUERZA_PPDC_tmp.SIGLA_FUERZA = row10.SIGLA ;
FUERZA_PPDC_tmp.TSOMETIDO_ID = TIPODOC_PPCD.TSOMETIDO_ID ;
FUERZA_PPDC_tmp.PPDC_ID = TIPODOC_PPCD.PPDC_ID ;
FUERZA_PPDC_tmp.FUERZAS_ID = row10.ID ;
FUERZA_PPDC = FUERZA_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "FUERZA_PPDC"
if(FUERZA_PPDC != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"FUERZA_PPDC"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row11Struct row11 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row11HashKey.ID = FUERZA_PPDC.TSOMETIDO_ID ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.ID = '" + row11HashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;
Var.FECHA = TalendDate.formatDate("yyyy-MM-dd",TalendDate.getLastDayOfMonth(
TalendDate.parseDate("yyyy-MM-dd", (FUERZA_PPDC.PERIODO + "-01")))) ;
Var.TIPO_RECAUDO = 6;
Var.NOMBRE_TIPO_RECAUDO = "NOMINA PPDC";// ###############################
        // ###############################
        // # Output tables

TIEMPO_PPDC = null;
SOMETIDO_PPDC = null;


// # Output table : 'TIEMPO_PPDC'
TIEMPO_PPDC_tmp.ID = FUERZA_PPDC.ID ;
TIEMPO_PPDC_tmp.TIPO_RECAUDO = Var.TIPO_RECAUDO ;
TIEMPO_PPDC_tmp.PERIODO = FUERZA_PPDC.PERIODO ;
TIEMPO_PPDC_tmp.FECHA = Var.FECHA ;
TIEMPO_PPDC = TIEMPO_PPDC_tmp;

// # Output table : 'SOMETIDO_PPDC'
SOMETIDO_PPDC_tmp.TIPO_APORTE = Var.TIPO_RECAUDO ;
SOMETIDO_PPDC_tmp.NOMBRE_TIPO_RECAUDO = Var.NOMBRE_TIPO_RECAUDO ;
SOMETIDO_PPDC_tmp.ID = FUERZA_PPDC.ID ;
SOMETIDO_PPDC_tmp.PERIODO = FUERZA_PPDC.PERIODO ;
SOMETIDO_PPDC_tmp.ENTAPORTANTES_ID = FUERZA_PPDC.ENTAPORTANTES_ID ;
SOMETIDO_PPDC_tmp.NOMBRE_ENTAPORTANTE = FUERZA_PPDC.NOMBRE_ENTAPORTANTE ;
SOMETIDO_PPDC_tmp.DOCUMENTO_ENTAPORTANTE = FUERZA_PPDC.DOCUMENTO_ENTAPORTANTE ;
SOMETIDO_PPDC_tmp.AFILIADOS_ID = FUERZA_PPDC.AFILIADOS_ID ;
SOMETIDO_PPDC_tmp.NOMBRE_TIPO_DOCUMENTO = FUERZA_PPDC.SIGLA ;
SOMETIDO_PPDC_tmp.NUMERO_DOCUMENTO = FUERZA_PPDC.DOCUMENTO ;
SOMETIDO_PPDC_tmp.NOMBRE_COTIZANTE = FUERZA_PPDC.NOMBRE_COTIZANTE ;
SOMETIDO_PPDC_tmp.FECHA_INGRESO = FUERZA_PPDC.FECHA_INGRESO ;
SOMETIDO_PPDC_tmp.SIGLA_FUERZA = FUERZA_PPDC.SIGLA_FUERZA ;
SOMETIDO_PPDC_tmp.NOMBRE_TIPO_SOMETIDO = row11.NOMBRE ;
SOMETIDO_PPDC_tmp.CANTIDAD_PPCD = null;
SOMETIDO_PPDC_tmp.PPDC_ID = FUERZA_PPDC.PPDC_ID ;
SOMETIDO_PPDC_tmp.SIGLA_TIPO_SOMETIDO = row11.SIGLA ;
SOMETIDO_PPDC_tmp.TSOMETIDO_ID = FUERZA_PPDC.TSOMETIDO_ID ;
SOMETIDO_PPDC_tmp.FUERZAS_ID = FUERZA_PPDC.FUERZAS_ID ;
SOMETIDO_PPDC = SOMETIDO_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PPDC"
if(TIEMPO_PPDC != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PPDC"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;
Var.Anio = TalendDate.getPartOfDate("YEAR", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_PPDC.FECHA)) ;
Var.Mes = TalendDate.getPartOfDate("MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_PPDC.FECHA)) + 1 ;
Var.Dia = TalendDate.getPartOfDate("DAY_OF_MONTH", TalendDate.parseDate("yyyy-MM-dd", TIEMPO_PPDC.FECHA)) ;
Var.FECHA = TalendDate.parseDate("yyyy-MM-dd", TIEMPO_PPDC.FECHA) ;// ###############################
        // ###############################
        // # Output tables

TIEMPO_PART_PPDC = null;


// # Output table : 'TIEMPO_PART_PPDC'
TIEMPO_PART_PPDC_tmp.ID = TIEMPO_PPDC.ID ;
TIEMPO_PART_PPDC_tmp.TIPO_RECAUDO_ID = TIEMPO_PPDC.TIPO_RECAUDO ;
TIEMPO_PART_PPDC_tmp.FECHA = Var.FECHA ;
TIEMPO_PART_PPDC_tmp.PERIODO = TIEMPO_PPDC.PERIODO ;
TIEMPO_PART_PPDC_tmp.Anio = Var.Anio ;
TIEMPO_PART_PPDC_tmp.Mes = Var.Mes ;
TIEMPO_PART_PPDC_tmp.Dia = Var.Dia ;
TIEMPO_PART_PPDC = TIEMPO_PART_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "TIEMPO_PART_PPDC"
if(TIEMPO_PART_PPDC != null) { 



	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TIEMPO_PART_PPDC"
						
						);
					}
					
row43 = null;			
finder_tUniqRow_2.ID = TIEMPO_PART_PPDC.ID;
finder_tUniqRow_2.TIPO_RECAUDO_ID = TIEMPO_PART_PPDC.TIPO_RECAUDO_ID;
if(TIEMPO_PART_PPDC.PERIODO == null){
	finder_tUniqRow_2.PERIODO = null;
}else{
	finder_tUniqRow_2.PERIODO = TIEMPO_PART_PPDC.PERIODO.toLowerCase();
}	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
new_tUniqRow_2.ID = TIEMPO_PART_PPDC.ID;
new_tUniqRow_2.TIPO_RECAUDO_ID = TIEMPO_PART_PPDC.TIPO_RECAUDO_ID;
if(TIEMPO_PART_PPDC.PERIODO == null){
	new_tUniqRow_2.PERIODO = null;
}else{
	new_tUniqRow_2.PERIODO = TIEMPO_PART_PPDC.PERIODO.toLowerCase();
}
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row43 == null){ 
	
	row43 = new row43Struct();
}row43.ID = TIEMPO_PART_PPDC.ID;			row43.TIPO_RECAUDO_ID = TIEMPO_PART_PPDC.TIPO_RECAUDO_ID;			row43.FECHA = TIEMPO_PART_PPDC.FECHA;			row43.PERIODO = TIEMPO_PART_PPDC.PERIODO;			row43.Anio = TIEMPO_PART_PPDC.Anio;			row43.Mes = TIEMPO_PART_PPDC.Mes;			row43.Dia = TIEMPO_PART_PPDC.Dia;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row43"
if(row43 != null) { 



	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					



        query_tOracleOutput_1 = new StringBuffer("");
        whetherReject_tOracleOutput_1 = false;
                        pstmt_tOracleOutput_1.setBigDecimal(1, row43.ID);

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(insertSQLSplits_tOracleOutput_1[0]).append(row43.ID== null ?  "null" :String.valueOf(row43.ID)).append(insertSQLSplits_tOracleOutput_1[1]);
                        pstmt_tOracleOutput_1.setInt(2, row43.TIPO_RECAUDO_ID);

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(String.valueOf(row43.TIPO_RECAUDO_ID)).append(insertSQLSplits_tOracleOutput_1[2]);
                        if(row43.FECHA != null) {
pstmt_tOracleOutput_1.setObject(3, new java.sql.Timestamp(row43.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_1.setNull(3, java.sql.Types.DATE);
}

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(row43.FECHA== null ?  "null" :"'" + new java.text.SimpleDateFormat("dd/MM/yyyy").format(row43.FECHA) + "'").append(insertSQLSplits_tOracleOutput_1[3]);
                        if(row43.PERIODO == null) {
pstmt_tOracleOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(4, row43.PERIODO);
}

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(row43.PERIODO== null ?  "null" :"'" + row43.PERIODO + "'").append(insertSQLSplits_tOracleOutput_1[4]);
                        pstmt_tOracleOutput_1.setInt(5, row43.Anio);

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(String.valueOf(row43.Anio)).append(insertSQLSplits_tOracleOutput_1[5]);
                        pstmt_tOracleOutput_1.setInt(6, row43.Mes);

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(String.valueOf(row43.Mes)).append(insertSQLSplits_tOracleOutput_1[6]);
                        pstmt_tOracleOutput_1.setInt(7, row43.Dia);

                        query_tOracleOutput_1 = query_tOracleOutput_1.append(String.valueOf(row43.Dia)).append(insertSQLSplits_tOracleOutput_1[7]);
                globalMap.put("tOracleOutput_1_QUERY", query_tOracleOutput_1.toString().trim());
                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    insertedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */

} // End of branch "row43"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */

} // End of branch "TIEMPO_PART_PPDC"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "TIEMPO_PPDC"




// Start of branch "SOMETIDO_PPDC"
if(SOMETIDO_PPDC != null) { 



	
	/**
	 * [tReplicate_1 main ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"SOMETIDO_PPDC"
						
						);
					}
					


	row44 = new row44Struct();
						
	row44.TIPO_APORTE = SOMETIDO_PPDC.TIPO_APORTE;								
	row44.NOMBRE_TIPO_RECAUDO = SOMETIDO_PPDC.NOMBRE_TIPO_RECAUDO;								
	row44.ID = SOMETIDO_PPDC.ID;								
	row44.PERIODO = SOMETIDO_PPDC.PERIODO;								
	row44.ENTAPORTANTES_ID = SOMETIDO_PPDC.ENTAPORTANTES_ID;								
	row44.NOMBRE_ENTAPORTANTE = SOMETIDO_PPDC.NOMBRE_ENTAPORTANTE;								
	row44.DOCUMENTO_ENTAPORTANTE = SOMETIDO_PPDC.DOCUMENTO_ENTAPORTANTE;								
	row44.AFILIADOS_ID = SOMETIDO_PPDC.AFILIADOS_ID;								
	row44.NOMBRE_TIPO_DOCUMENTO = SOMETIDO_PPDC.NOMBRE_TIPO_DOCUMENTO;								
	row44.NUMERO_DOCUMENTO = SOMETIDO_PPDC.NUMERO_DOCUMENTO;								
	row44.NOMBRE_COTIZANTE = SOMETIDO_PPDC.NOMBRE_COTIZANTE;								
	row44.FECHA_INGRESO = SOMETIDO_PPDC.FECHA_INGRESO;								
	row44.SIGLA_FUERZA = SOMETIDO_PPDC.SIGLA_FUERZA;								
	row44.NOMBRE_TIPO_SOMETIDO = SOMETIDO_PPDC.NOMBRE_TIPO_SOMETIDO;								
	row44.CANTIDAD_PPCD = SOMETIDO_PPDC.CANTIDAD_PPCD;								
	row44.PPDC_ID = SOMETIDO_PPDC.PPDC_ID;								
	row44.SIGLA_TIPO_SOMETIDO = SOMETIDO_PPDC.SIGLA_TIPO_SOMETIDO;								
	row44.TSOMETIDO_ID = SOMETIDO_PPDC.TSOMETIDO_ID;								
	row44.FUERZAS_ID = SOMETIDO_PPDC.FUERZAS_ID;			
	row50 = new row50Struct();
						
	row50.TIPO_APORTE = SOMETIDO_PPDC.TIPO_APORTE;								
	row50.NOMBRE_TIPO_RECAUDO = SOMETIDO_PPDC.NOMBRE_TIPO_RECAUDO;								
	row50.ID = SOMETIDO_PPDC.ID;								
	row50.PERIODO = SOMETIDO_PPDC.PERIODO;								
	row50.ENTAPORTANTES_ID = SOMETIDO_PPDC.ENTAPORTANTES_ID;								
	row50.NOMBRE_ENTAPORTANTE = SOMETIDO_PPDC.NOMBRE_ENTAPORTANTE;								
	row50.DOCUMENTO_ENTAPORTANTE = SOMETIDO_PPDC.DOCUMENTO_ENTAPORTANTE;								
	row50.AFILIADOS_ID = SOMETIDO_PPDC.AFILIADOS_ID;								
	row50.NOMBRE_TIPO_DOCUMENTO = SOMETIDO_PPDC.NOMBRE_TIPO_DOCUMENTO;								
	row50.NUMERO_DOCUMENTO = SOMETIDO_PPDC.NUMERO_DOCUMENTO;								
	row50.NOMBRE_COTIZANTE = SOMETIDO_PPDC.NOMBRE_COTIZANTE;								
	row50.FECHA_INGRESO = SOMETIDO_PPDC.FECHA_INGRESO;								
	row50.SIGLA_FUERZA = SOMETIDO_PPDC.SIGLA_FUERZA;								
	row50.NOMBRE_TIPO_SOMETIDO = SOMETIDO_PPDC.NOMBRE_TIPO_SOMETIDO;								
	row50.CANTIDAD_PPCD = SOMETIDO_PPDC.CANTIDAD_PPCD;								
	row50.PPDC_ID = SOMETIDO_PPDC.PPDC_ID;								
	row50.SIGLA_TIPO_SOMETIDO = SOMETIDO_PPDC.SIGLA_TIPO_SOMETIDO;								
	row50.TSOMETIDO_ID = SOMETIDO_PPDC.TSOMETIDO_ID;								
	row50.FUERZAS_ID = SOMETIDO_PPDC.FUERZAS_ID;			


 


	tos_count_tReplicate_1++;

/**
 * [tReplicate_1 main ] stop
 */
	
	/**
	 * [tReplicate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					
	
operation_finder_tAggregateRow_2.TIPO_APORTE = row44.TIPO_APORTE;
			operation_finder_tAggregateRow_2.NOMBRE_TIPO_RECAUDO = row44.NOMBRE_TIPO_RECAUDO;
			operation_finder_tAggregateRow_2.ID = row44.ID;
			operation_finder_tAggregateRow_2.PERIODO = row44.PERIODO;
			operation_finder_tAggregateRow_2.ENTAPORTANTES_ID = row44.ENTAPORTANTES_ID;
			operation_finder_tAggregateRow_2.NOMBRE_ENTAPORTANTE = row44.NOMBRE_ENTAPORTANTE;
			operation_finder_tAggregateRow_2.NOMBRE_TIPO_SOMETIDO = row44.NOMBRE_TIPO_SOMETIDO;
			operation_finder_tAggregateRow_2.TSOMETIDO_ID = row44.TSOMETIDO_ID;
			operation_finder_tAggregateRow_2.FUERZAS_ID = row44.FUERZAS_ID;
			

	operation_finder_tAggregateRow_2.hashCodeDirty = true;
	
	operation_result_tAggregateRow_2 = hash_tAggregateRow_2.get(operation_finder_tAggregateRow_2);

	

	if(operation_result_tAggregateRow_2 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();

		operation_result_tAggregateRow_2.TIPO_APORTE = operation_finder_tAggregateRow_2.TIPO_APORTE;
				operation_result_tAggregateRow_2.NOMBRE_TIPO_RECAUDO = operation_finder_tAggregateRow_2.NOMBRE_TIPO_RECAUDO;
				operation_result_tAggregateRow_2.ID = operation_finder_tAggregateRow_2.ID;
				operation_result_tAggregateRow_2.PERIODO = operation_finder_tAggregateRow_2.PERIODO;
				operation_result_tAggregateRow_2.ENTAPORTANTES_ID = operation_finder_tAggregateRow_2.ENTAPORTANTES_ID;
				operation_result_tAggregateRow_2.NOMBRE_ENTAPORTANTE = operation_finder_tAggregateRow_2.NOMBRE_ENTAPORTANTE;
				operation_result_tAggregateRow_2.NOMBRE_TIPO_SOMETIDO = operation_finder_tAggregateRow_2.NOMBRE_TIPO_SOMETIDO;
				operation_result_tAggregateRow_2.TSOMETIDO_ID = operation_finder_tAggregateRow_2.TSOMETIDO_ID;
				operation_result_tAggregateRow_2.FUERZAS_ID = operation_finder_tAggregateRow_2.FUERZAS_ID;
				
		
		

		hash_tAggregateRow_2.put(operation_result_tAggregateRow_2, operation_result_tAggregateRow_2);
	
	} // G_OutMain_AggR_001


	
				
				AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2 countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2 = new AggCountDistinctValuesStruct_NUMERO_DOCUMENTO_tAggregateRow_2();
			
				countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.TIPO_APORTE = row44.TIPO_APORTE;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.NOMBRE_TIPO_RECAUDO = row44.NOMBRE_TIPO_RECAUDO;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.ID = row44.ID;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.PERIODO = row44.PERIODO;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.ENTAPORTANTES_ID = row44.ENTAPORTANTES_ID;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.NOMBRE_ENTAPORTANTE = row44.NOMBRE_ENTAPORTANTE;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.NOMBRE_TIPO_SOMETIDO = row44.NOMBRE_TIPO_SOMETIDO;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.TSOMETIDO_ID = row44.TSOMETIDO_ID;
						countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.FUERZAS_ID = row44.FUERZAS_ID;
						
				countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2.NUMERO_DOCUMENTO = row44.NUMERO_DOCUMENTO;
				operation_result_tAggregateRow_2.distinctValues_CANTIDAD_PPCD.add(countDistinctValues_CANTIDAD_PPCD_tAggregateRow_2);
				


 


	tos_count_tAggregateRow_2_AGGOUT++;

/**
 * [tAggregateRow_2_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_end ] stop
 */




	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

REC_PPCD = null;


// # Output table : 'REC_PPCD'
REC_PPCD_tmp.ID = row50.PPDC_ID ;
REC_PPCD_tmp.ENTAPORTANTE_ID = row50.ENTAPORTANTES_ID ;
REC_PPCD_tmp.TIEMPO_ID = row50.ID ;
REC_PPCD_tmp.TIPO_RECAUDO_ID = row50.TIPO_APORTE ;
REC_PPCD_tmp.PERIODO = row50.PERIODO ;
REC_PPCD_tmp.AFILIADO_ID = row50.AFILIADOS_ID ;
REC_PPCD_tmp.NOMBRE_ENTAPORTANTE = row50.NOMBRE_ENTAPORTANTE ;
REC_PPCD_tmp.NOMBRE_TIPO_DOCUMENTO = row50.NOMBRE_TIPO_DOCUMENTO ;
REC_PPCD_tmp.NUMERO_DOCUMENTO = row50.NUMERO_DOCUMENTO ;
REC_PPCD_tmp.NOMBRE_COTIZANTE = row50.NOMBRE_COTIZANTE ;
REC_PPCD_tmp.FECHA_INGRESO = row50.FECHA_INGRESO ;
REC_PPCD_tmp.SIGLA_FUERZA = row50.SIGLA_FUERZA ;
REC_PPCD_tmp.NOMBRE_TIPO_SOMETIDO = row50.NOMBRE_TIPO_SOMETIDO ;
REC_PPCD_tmp.NOMBRE_TIPO_RECAUDO = row50.NOMBRE_TIPO_RECAUDO ;
REC_PPCD_tmp.SIGLA_TIPO_SOMETIDO = row50.SIGLA_TIPO_SOMETIDO ;
REC_PPCD_tmp.TSOMETIDO_ID = row50.TSOMETIDO_ID ;
REC_PPCD_tmp.FUERZAS_ID = row50.FUERZAS_ID ;
REC_PPCD = REC_PPCD_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "REC_PPCD"
if(REC_PPCD != null) { 



	
	/**
	 * [tSortRow_4_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"REC_PPCD"
						
						);
					}
					



	ComparableREC_PPCDStruct arrayRowtSortRow_4_SortOut = new ComparableREC_PPCDStruct();

	arrayRowtSortRow_4_SortOut.ID = REC_PPCD.ID;
	arrayRowtSortRow_4_SortOut.ENTAPORTANTE_ID = REC_PPCD.ENTAPORTANTE_ID;
	arrayRowtSortRow_4_SortOut.TIEMPO_ID = REC_PPCD.TIEMPO_ID;
	arrayRowtSortRow_4_SortOut.TIPO_RECAUDO_ID = REC_PPCD.TIPO_RECAUDO_ID;
	arrayRowtSortRow_4_SortOut.PERIODO = REC_PPCD.PERIODO;
	arrayRowtSortRow_4_SortOut.AFILIADO_ID = REC_PPCD.AFILIADO_ID;
	arrayRowtSortRow_4_SortOut.NOMBRE_ENTAPORTANTE = REC_PPCD.NOMBRE_ENTAPORTANTE;
	arrayRowtSortRow_4_SortOut.NOMBRE_TIPO_DOCUMENTO = REC_PPCD.NOMBRE_TIPO_DOCUMENTO;
	arrayRowtSortRow_4_SortOut.NUMERO_DOCUMENTO = REC_PPCD.NUMERO_DOCUMENTO;
	arrayRowtSortRow_4_SortOut.NOMBRE_COTIZANTE = REC_PPCD.NOMBRE_COTIZANTE;
	arrayRowtSortRow_4_SortOut.FECHA_INGRESO = REC_PPCD.FECHA_INGRESO;
	arrayRowtSortRow_4_SortOut.SIGLA_FUERZA = REC_PPCD.SIGLA_FUERZA;
	arrayRowtSortRow_4_SortOut.NOMBRE_TIPO_SOMETIDO = REC_PPCD.NOMBRE_TIPO_SOMETIDO;
	arrayRowtSortRow_4_SortOut.NOMBRE_TIPO_RECAUDO = REC_PPCD.NOMBRE_TIPO_RECAUDO;
	arrayRowtSortRow_4_SortOut.SIGLA_TIPO_SOMETIDO = REC_PPCD.SIGLA_TIPO_SOMETIDO;
	arrayRowtSortRow_4_SortOut.TSOMETIDO_ID = REC_PPCD.TSOMETIDO_ID;
	arrayRowtSortRow_4_SortOut.FUERZAS_ID = REC_PPCD.FUERZAS_ID;	
	list_tSortRow_4_SortOut.add(arrayRowtSortRow_4_SortOut);

 


	tos_count_tSortRow_4_SortOut++;

/**
 * [tSortRow_4_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_4_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_4_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut process_data_end ] stop
 */

} // End of branch "REC_PPCD"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_end ] stop
 */

} // End of branch "SOMETIDO_PPDC"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "FUERZA_PPDC"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "TIPODOC_PPCD"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "ENTAPORTANTE_PPDC"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_1", end_Hash.get("tOracleInput_1")-start_Hash.get("tOracleInput_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row4 != null) {
						tHash_Lookup_row4.endGet();
					}
					globalMap.remove( "tHash_Lookup_row4" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ENTAPORTANTE_PPDC");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIPODOC_PPCD");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"FUERZA_PPDC");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIEMPO_PPDC");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TIEMPO_PART_PPDC");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tUniqRow_2", end_Hash.get("tUniqRow_2")-start_Hash.get("tUniqRow_2"));
tStatCatcher_1Process(globalMap);



/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_1", end_Hash.get("tOracleOutput_1")-start_Hash.get("tOracleOutput_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_1 end ] stop
 */










	
	/**
	 * [tReplicate_1 end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"SOMETIDO_PPDC");
			  	}
			  	
 

ok_Hash.put("tReplicate_1", true);
end_Hash.put("tReplicate_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tReplicate_1", end_Hash.get("tReplicate_1")-start_Hash.get("tReplicate_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tReplicate_1 end ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_2_AGGOUT", true);
end_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tAggregateRow_2_AGGOUT", end_Hash.get("tAggregateRow_2_AGGOUT")-start_Hash.get("tAggregateRow_2_AGGOUT"));
tStatCatcher_1Process(globalMap);



/**
 * [tAggregateRow_2_AGGOUT end ] stop
 */



	
	/**
	 * [tSortRow_3_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_3_SortOut", false);
		start_Hash.put("tSortRow_3_SortOut", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_3_SortOut");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TOTALES_PPDC");
					}
				
		int tos_count_tSortRow_3_SortOut = 0;
		


class ComparableTOTALES_PPDCStruct extends TOTALES_PPDCStruct implements Comparable<ComparableTOTALES_PPDCStruct> {
	
	public int compareTo(ComparableTOTALES_PPDCStruct other) {

		if(this.TIEMPO_ID == null && other.TIEMPO_ID != null){
			return -1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID == null){
			return 1;
						
		}else if(this.TIEMPO_ID != null && other.TIEMPO_ID != null){
			if(!this.TIEMPO_ID.equals(other.TIEMPO_ID)){
				return this.TIEMPO_ID.compareTo(other.TIEMPO_ID);
			}
		}
		if(this.TIPO_RECAUDO_ID != other.TIPO_RECAUDO_ID){
						
				return this.TIPO_RECAUDO_ID > other.TIPO_RECAUDO_ID ? 1 : -1;
							
		}
		if(this.ENTAPORTANTE_ID == null && other.ENTAPORTANTE_ID != null){
			return -1;
						
		}else if(this.ENTAPORTANTE_ID != null && other.ENTAPORTANTE_ID == null){
			return 1;
						
		}else if(this.ENTAPORTANTE_ID != null && other.ENTAPORTANTE_ID != null){
			if(!this.ENTAPORTANTE_ID.equals(other.ENTAPORTANTE_ID)){
				return this.ENTAPORTANTE_ID.compareTo(other.ENTAPORTANTE_ID);
			}
		}
		if(this.PERIODO == null && other.PERIODO != null){
			return -1;
						
		}else if(this.PERIODO != null && other.PERIODO == null){
			return 1;
						
		}else if(this.PERIODO != null && other.PERIODO != null){
			if(!this.PERIODO.equals(other.PERIODO)){
				return this.PERIODO.compareTo(other.PERIODO);
			}
		}
		if(this.TSOMETIDO_ID == null && other.TSOMETIDO_ID != null){
			return -1;
						
		}else if(this.TSOMETIDO_ID != null && other.TSOMETIDO_ID == null){
			return 1;
						
		}else if(this.TSOMETIDO_ID != null && other.TSOMETIDO_ID != null){
			if(!this.TSOMETIDO_ID.equals(other.TSOMETIDO_ID)){
				return this.TSOMETIDO_ID.compareTo(other.TSOMETIDO_ID);
			}
		}
		if(this.FUERZAS_ID == null && other.FUERZAS_ID != null){
			return -1;
						
		}else if(this.FUERZAS_ID != null && other.FUERZAS_ID == null){
			return 1;
						
		}else if(this.FUERZAS_ID != null && other.FUERZAS_ID != null){
			if(!this.FUERZAS_ID.equals(other.FUERZAS_ID)){
				return this.FUERZAS_ID.compareTo(other.FUERZAS_ID);
			}
		}
		return 0;
	}
}

java.util.List<ComparableTOTALES_PPDCStruct> list_tSortRow_3_SortOut = new java.util.ArrayList<ComparableTOTALES_PPDCStruct>();


 



/**
 * [tSortRow_3_SortOut begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
TOTALES_PPDCStruct TOTALES_PPDC_tmp = new TOTALES_PPDCStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGIN", false);
		start_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tAggregateRow_2_AGGIN");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	
		int tos_count_tAggregateRow_2_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_2> values_tAggregateRow_2 = hash_tAggregateRow_2.values();

globalMap.put("tAggregateRow_2_NB_LINE", values_tAggregateRow_2.size());

for(AggOperationStruct_tAggregateRow_2 aggregated_row_tAggregateRow_2 : values_tAggregateRow_2) { // G_AggR_600



 



/**
 * [tAggregateRow_2_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

            				    row17.TIPO_APORTE = aggregated_row_tAggregateRow_2.TIPO_APORTE;
            				    
            				    row17.NOMBRE_TIPO_RECAUDO = aggregated_row_tAggregateRow_2.NOMBRE_TIPO_RECAUDO;
            				    
            				    row17.ID = aggregated_row_tAggregateRow_2.ID;
            				    
            				    row17.PERIODO = aggregated_row_tAggregateRow_2.PERIODO;
            				    
            				    row17.ENTAPORTANTES_ID = aggregated_row_tAggregateRow_2.ENTAPORTANTES_ID;
            				    
            				    row17.NOMBRE_ENTAPORTANTE = aggregated_row_tAggregateRow_2.NOMBRE_ENTAPORTANTE;
            				    
            				    row17.NOMBRE_TIPO_SOMETIDO = aggregated_row_tAggregateRow_2.NOMBRE_TIPO_SOMETIDO;
            				    
    								row17.CANTIDAD_PPCD = new BigDecimal(aggregated_row_tAggregateRow_2.distinctValues_CANTIDAD_PPCD.size());
								
            				    row17.TSOMETIDO_ID = aggregated_row_tAggregateRow_2.TSOMETIDO_ID;
            				    
            				    row17.FUERZAS_ID = aggregated_row_tAggregateRow_2.FUERZAS_ID;
            				    

 


	tos_count_tAggregateRow_2_AGGIN++;

/**
 * [tAggregateRow_2_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

TOTALES_PPDC = null;


// # Output table : 'TOTALES_PPDC'
TOTALES_PPDC_tmp.ENTAPORTANTE_ID = row17.ENTAPORTANTES_ID ;
TOTALES_PPDC_tmp.TIEMPO_ID = row17.ID ;
TOTALES_PPDC_tmp.TIPO_RECAUDO_ID = row17.TIPO_APORTE ;
TOTALES_PPDC_tmp.NOMBRE_ENTAPORTANTE = row17.NOMBRE_ENTAPORTANTE ;
TOTALES_PPDC_tmp.NOMBRE_TIPO_RECAUDO = row17.NOMBRE_TIPO_RECAUDO ;
TOTALES_PPDC_tmp.PERIODO = row17.PERIODO ;
TOTALES_PPDC_tmp.CANTIDAD_PPCD = row17.CANTIDAD_PPCD ;
TOTALES_PPDC_tmp.TSOMETIDO_ID = row17.TSOMETIDO_ID ;
TOTALES_PPDC_tmp.FUERZAS_ID = row17.FUERZAS_ID ;
TOTALES_PPDC = TOTALES_PPDC_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "TOTALES_PPDC"
if(TOTALES_PPDC != null) { 



	
	/**
	 * [tSortRow_3_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TOTALES_PPDC"
						
						);
					}
					



	ComparableTOTALES_PPDCStruct arrayRowtSortRow_3_SortOut = new ComparableTOTALES_PPDCStruct();

	arrayRowtSortRow_3_SortOut.ENTAPORTANTE_ID = TOTALES_PPDC.ENTAPORTANTE_ID;
	arrayRowtSortRow_3_SortOut.TIEMPO_ID = TOTALES_PPDC.TIEMPO_ID;
	arrayRowtSortRow_3_SortOut.TIPO_RECAUDO_ID = TOTALES_PPDC.TIPO_RECAUDO_ID;
	arrayRowtSortRow_3_SortOut.NOMBRE_ENTAPORTANTE = TOTALES_PPDC.NOMBRE_ENTAPORTANTE;
	arrayRowtSortRow_3_SortOut.NOMBRE_TIPO_RECAUDO = TOTALES_PPDC.NOMBRE_TIPO_RECAUDO;
	arrayRowtSortRow_3_SortOut.PERIODO = TOTALES_PPDC.PERIODO;
	arrayRowtSortRow_3_SortOut.CANTIDAD_PPCD = TOTALES_PPDC.CANTIDAD_PPCD;
	arrayRowtSortRow_3_SortOut.TSOMETIDO_ID = TOTALES_PPDC.TSOMETIDO_ID;
	arrayRowtSortRow_3_SortOut.FUERZAS_ID = TOTALES_PPDC.FUERZAS_ID;	
	list_tSortRow_3_SortOut.add(arrayRowtSortRow_3_SortOut);

 


	tos_count_tSortRow_3_SortOut++;

/**
 * [tSortRow_3_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_3_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_3_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut process_data_end ] stop
 */

} // End of branch "TOTALES_PPDC"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_2_AGGIN", true);
end_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tAggregateRow_2_AGGIN", end_Hash.get("tAggregateRow_2_AGGIN")-start_Hash.get("tAggregateRow_2_AGGIN"));
tStatCatcher_1Process(globalMap);



/**
 * [tAggregateRow_2_AGGIN end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tSortRow_3_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

TOTALES_PPDCStruct[] array_tSortRow_3_SortOut = list_tSortRow_3_SortOut.toArray(new ComparableTOTALES_PPDCStruct[0]);

java.util.Arrays.sort(array_tSortRow_3_SortOut);

globalMap.put("tSortRow_3",array_tSortRow_3_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TOTALES_PPDC");
			  	}
			  	
 

ok_Hash.put("tSortRow_3_SortOut", true);
end_Hash.put("tSortRow_3_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_3_SortOut", end_Hash.get("tSortRow_3_SortOut")-start_Hash.get("tSortRow_3_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_3_SortOut end ] stop
 */


	
	/**
	 * [tOracleOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_5", false);
		start_Hash.put("tOracleOutput_5", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_5");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tOracleOutput_5 = 0;
		






    
    int nb_line_tOracleOutput_5 = 0;
    int nb_line_update_tOracleOutput_5 = 0;
    int nb_line_inserted_tOracleOutput_5 = 0;
    int nb_line_deleted_tOracleOutput_5 = 0;
    int nb_line_rejected_tOracleOutput_5 = 0;

    int tmp_batchUpdateCount_tOracleOutput_5 = 0;

    int deletedCount_tOracleOutput_5=0;
    int updatedCount_tOracleOutput_5=0;
    int insertedCount_tOracleOutput_5=0;
    int rowsToCommitCount_tOracleOutput_5=0;
    int rejectedCount_tOracleOutput_5=0;

    boolean whetherReject_tOracleOutput_5 = false;

    java.sql.Connection conn_tOracleOutput_5 = null;

    //optional table
    String dbschema_tOracleOutput_5 = null;
    String tableName_tOracleOutput_5 = null;
        dbschema_tOracleOutput_5 = (String)globalMap.get("dbschema_tOracleConnection_2");
		
        conn_tOracleOutput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
        int count_tOracleOutput_5=0;

        if(dbschema_tOracleOutput_5 == null || dbschema_tOracleOutput_5.trim().length() == 0) {
            tableName_tOracleOutput_5 = ("BREC_TOTALPPDC").toUpperCase();
        } else {
            tableName_tOracleOutput_5 = dbschema_tOracleOutput_5 + "." + ("BREC_TOTALPPDC").toUpperCase();
        }
                String insert_tOracleOutput_5 = "INSERT INTO " + tableName_tOracleOutput_5 + " (ENTAPORTANTE_ID,TIEMPO_ID,TIPO_RECAUDO_ID,NOMBRE_ENTAPORTANTE,NOMBRE_TIPO_RECAUDO,PERIODO,CANTIDAD_PPCD,TSOMETIDO_ID,FUERZAS_ID) VALUES (?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(insert_tOracleOutput_5);
                        resourceMap.put("pstmt_tOracleOutput_5", pstmt_tOracleOutput_5);





 



/**
 * [tOracleOutput_5 begin ] stop
 */



	
	/**
	 * [tSortRow_3_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_3_SortIn", false);
		start_Hash.put("tSortRow_3_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_3_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	
		int tos_count_tSortRow_3_SortIn = 0;
		


TOTALES_PPDCStruct[] array_tSortRow_3_SortIn = (TOTALES_PPDCStruct[]) globalMap.remove("tSortRow_3");

int nb_line_tSortRow_3_SortIn = 0;

TOTALES_PPDCStruct current_tSortRow_3_SortIn = null;

for(int i_tSortRow_3_SortIn = 0; i_tSortRow_3_SortIn < array_tSortRow_3_SortIn.length; i_tSortRow_3_SortIn++){
	current_tSortRow_3_SortIn = array_tSortRow_3_SortIn[i_tSortRow_3_SortIn];
	row48.ENTAPORTANTE_ID = current_tSortRow_3_SortIn.ENTAPORTANTE_ID;
	row48.TIEMPO_ID = current_tSortRow_3_SortIn.TIEMPO_ID;
	row48.TIPO_RECAUDO_ID = current_tSortRow_3_SortIn.TIPO_RECAUDO_ID;
	row48.NOMBRE_ENTAPORTANTE = current_tSortRow_3_SortIn.NOMBRE_ENTAPORTANTE;
	row48.NOMBRE_TIPO_RECAUDO = current_tSortRow_3_SortIn.NOMBRE_TIPO_RECAUDO;
	row48.PERIODO = current_tSortRow_3_SortIn.PERIODO;
	row48.CANTIDAD_PPCD = current_tSortRow_3_SortIn.CANTIDAD_PPCD;
	row48.TSOMETIDO_ID = current_tSortRow_3_SortIn.TSOMETIDO_ID;
	row48.FUERZAS_ID = current_tSortRow_3_SortIn.FUERZAS_ID;
	// increase number of line sorted
	nb_line_tSortRow_3_SortIn++;

 



/**
 * [tSortRow_3_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 


	tos_count_tSortRow_3_SortIn++;

/**
 * [tSortRow_3_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					



        whetherReject_tOracleOutput_5 = false;
                        pstmt_tOracleOutput_5.setBigDecimal(1, row48.ENTAPORTANTE_ID);

                        pstmt_tOracleOutput_5.setBigDecimal(2, row48.TIEMPO_ID);

                        pstmt_tOracleOutput_5.setInt(3, row48.TIPO_RECAUDO_ID);

                        if(row48.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_5.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(4, row48.NOMBRE_ENTAPORTANTE);
}

                        if(row48.NOMBRE_TIPO_RECAUDO == null) {
pstmt_tOracleOutput_5.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(5, row48.NOMBRE_TIPO_RECAUDO);
}

                        if(row48.PERIODO == null) {
pstmt_tOracleOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(6, row48.PERIODO);
}

                        pstmt_tOracleOutput_5.setBigDecimal(7, row48.CANTIDAD_PPCD);

                        pstmt_tOracleOutput_5.setBigDecimal(8, row48.TSOMETIDO_ID);

                        pstmt_tOracleOutput_5.setBigDecimal(9, row48.FUERZAS_ID);

                try {
                    nb_line_tOracleOutput_5++;
                    int processedCount_tOracleOutput_5 = pstmt_tOracleOutput_5.executeUpdate();
                    insertedCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    rowsToCommitCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                } catch(java.lang.Exception e_tOracleOutput_5) {
globalMap.put("tOracleOutput_5_ERROR_MESSAGE",e_tOracleOutput_5.getMessage());
                    whetherReject_tOracleOutput_5 = true;
                            System.err.print(e_tOracleOutput_5.getMessage());
                }

 


	tos_count_tOracleOutput_5++;

/**
 * [tOracleOutput_5 main ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_3_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_3_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	


}

globalMap.put("tSortRow_3_SortIn_NB_LINE",nb_line_tSortRow_3_SortIn);

 

ok_Hash.put("tSortRow_3_SortIn", true);
end_Hash.put("tSortRow_3_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_3_SortIn", end_Hash.get("tSortRow_3_SortIn")-start_Hash.get("tSortRow_3_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_3_SortIn end ] stop
 */

	
	/**
	 * [tOracleOutput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
	



	
        if(pstmt_tOracleOutput_5 != null) {
			
				pstmt_tOracleOutput_5.close();
				resourceMap.remove("pstmt_tOracleOutput_5");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_5", true);

	
	nb_line_deleted_tOracleOutput_5=nb_line_deleted_tOracleOutput_5+ deletedCount_tOracleOutput_5;
	nb_line_update_tOracleOutput_5=nb_line_update_tOracleOutput_5 + updatedCount_tOracleOutput_5;
	nb_line_inserted_tOracleOutput_5=nb_line_inserted_tOracleOutput_5 + insertedCount_tOracleOutput_5;
	nb_line_rejected_tOracleOutput_5=nb_line_rejected_tOracleOutput_5 + rejectedCount_tOracleOutput_5;
	
        globalMap.put("tOracleOutput_5_NB_LINE",nb_line_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_UPDATED",nb_line_update_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_5);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_5", true);
end_Hash.put("tOracleOutput_5", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_5", end_Hash.get("tOracleOutput_5")-start_Hash.get("tOracleOutput_5"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_5 end ] stop
 */



















	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tSortRow_4_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

REC_PPCDStruct[] array_tSortRow_4_SortOut = list_tSortRow_4_SortOut.toArray(new ComparableREC_PPCDStruct[0]);

java.util.Arrays.sort(array_tSortRow_4_SortOut);

globalMap.put("tSortRow_4",array_tSortRow_4_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"REC_PPCD");
			  	}
			  	
 

ok_Hash.put("tSortRow_4_SortOut", true);
end_Hash.put("tSortRow_4_SortOut", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_4_SortOut", end_Hash.get("tSortRow_4_SortOut")-start_Hash.get("tSortRow_4_SortOut"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_4_SortOut end ] stop
 */


	
	/**
	 * [tOracleOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_7", false);
		start_Hash.put("tOracleOutput_7", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_7");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tOracleOutput_7 = 0;
		






    
    int nb_line_tOracleOutput_7 = 0;
    int nb_line_update_tOracleOutput_7 = 0;
    int nb_line_inserted_tOracleOutput_7 = 0;
    int nb_line_deleted_tOracleOutput_7 = 0;
    int nb_line_rejected_tOracleOutput_7 = 0;

    int tmp_batchUpdateCount_tOracleOutput_7 = 0;

    int deletedCount_tOracleOutput_7=0;
    int updatedCount_tOracleOutput_7=0;
    int insertedCount_tOracleOutput_7=0;
    int rowsToCommitCount_tOracleOutput_7=0;
    int rejectedCount_tOracleOutput_7=0;

    boolean whetherReject_tOracleOutput_7 = false;

    java.sql.Connection conn_tOracleOutput_7 = null;

    //optional table
    String dbschema_tOracleOutput_7 = null;
    String tableName_tOracleOutput_7 = null;
                    String driverClass_tOracleOutput_7 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_7);
                String url_tOracleOutput_7 = null;
                    url_tOracleOutput_7 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_7 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_7 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_7 = decryptedPassword_tOracleOutput_7;
                dbschema_tOracleOutput_7 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_7 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_7.put("user",dbUser_tOracleOutput_7);
                    atnParamsPrope_tOracleOutput_7.put("password",dbPwd_tOracleOutput_7);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_7.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_7 = java.sql.DriverManager.getConnection(url_tOracleOutput_7, atnParamsPrope_tOracleOutput_7);
        resourceMap.put("conn_tOracleOutput_7", conn_tOracleOutput_7);
            conn_tOracleOutput_7.setAutoCommit(false);
            int commitEvery_tOracleOutput_7 = 1000;
            int commitCounter_tOracleOutput_7 = 0;
        int batchSize_tOracleOutput_7 = 10000;
        int batchSizeCounter_tOracleOutput_7=0;
        int count_tOracleOutput_7=0;

        if(dbschema_tOracleOutput_7 == null || dbschema_tOracleOutput_7.trim().length() == 0) {
            tableName_tOracleOutput_7 = ("BREC_PPCD");
        } else {
            tableName_tOracleOutput_7 = dbschema_tOracleOutput_7 + "." + ("BREC_PPCD");
        }
                String insert_tOracleOutput_7 = "INSERT INTO " + tableName_tOracleOutput_7 + " (ID,ENTAPORTANTE_ID,TIEMPO_ID,TIPO_RECAUDO_ID,PERIODO,AFILIADO_ID,NOMBRE_ENTAPORTANTE,NOMBRE_TIPO_DOCUMENTO,NUMERO_DOCUMENTO,NOMBRE_COTIZANTE,FECHA_INGRESO,SIGLA_FUERZA,NOMBRE_TIPO_SOMETIDO,NOMBRE_TIPO_RECAUDO,SIGLA_TIPO_SOMETIDO,TSOMETIDO_ID,FUERZAS_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement(insert_tOracleOutput_7);
                        resourceMap.put("pstmt_tOracleOutput_7", pstmt_tOracleOutput_7);





 



/**
 * [tOracleOutput_7 begin ] stop
 */



	
	/**
	 * [tSortRow_4_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_4_SortIn", false);
		start_Hash.put("tSortRow_4_SortIn", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tSortRow_4_SortIn");
				tStatCatcher_1Process(globalMap);
			
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	
		int tos_count_tSortRow_4_SortIn = 0;
		


REC_PPCDStruct[] array_tSortRow_4_SortIn = (REC_PPCDStruct[]) globalMap.remove("tSortRow_4");

int nb_line_tSortRow_4_SortIn = 0;

REC_PPCDStruct current_tSortRow_4_SortIn = null;

for(int i_tSortRow_4_SortIn = 0; i_tSortRow_4_SortIn < array_tSortRow_4_SortIn.length; i_tSortRow_4_SortIn++){
	current_tSortRow_4_SortIn = array_tSortRow_4_SortIn[i_tSortRow_4_SortIn];
	row47.ID = current_tSortRow_4_SortIn.ID;
	row47.ENTAPORTANTE_ID = current_tSortRow_4_SortIn.ENTAPORTANTE_ID;
	row47.TIEMPO_ID = current_tSortRow_4_SortIn.TIEMPO_ID;
	row47.TIPO_RECAUDO_ID = current_tSortRow_4_SortIn.TIPO_RECAUDO_ID;
	row47.PERIODO = current_tSortRow_4_SortIn.PERIODO;
	row47.AFILIADO_ID = current_tSortRow_4_SortIn.AFILIADO_ID;
	row47.NOMBRE_ENTAPORTANTE = current_tSortRow_4_SortIn.NOMBRE_ENTAPORTANTE;
	row47.NOMBRE_TIPO_DOCUMENTO = current_tSortRow_4_SortIn.NOMBRE_TIPO_DOCUMENTO;
	row47.NUMERO_DOCUMENTO = current_tSortRow_4_SortIn.NUMERO_DOCUMENTO;
	row47.NOMBRE_COTIZANTE = current_tSortRow_4_SortIn.NOMBRE_COTIZANTE;
	row47.FECHA_INGRESO = current_tSortRow_4_SortIn.FECHA_INGRESO;
	row47.SIGLA_FUERZA = current_tSortRow_4_SortIn.SIGLA_FUERZA;
	row47.NOMBRE_TIPO_SOMETIDO = current_tSortRow_4_SortIn.NOMBRE_TIPO_SOMETIDO;
	row47.NOMBRE_TIPO_RECAUDO = current_tSortRow_4_SortIn.NOMBRE_TIPO_RECAUDO;
	row47.SIGLA_TIPO_SOMETIDO = current_tSortRow_4_SortIn.SIGLA_TIPO_SOMETIDO;
	row47.TSOMETIDO_ID = current_tSortRow_4_SortIn.TSOMETIDO_ID;
	row47.FUERZAS_ID = current_tSortRow_4_SortIn.FUERZAS_ID;
	// increase number of line sorted
	nb_line_tSortRow_4_SortIn++;

 



/**
 * [tSortRow_4_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 


	tos_count_tSortRow_4_SortIn++;

/**
 * [tSortRow_4_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					



        whetherReject_tOracleOutput_7 = false;
                        pstmt_tOracleOutput_7.setBigDecimal(1, row47.ID);

                        pstmt_tOracleOutput_7.setBigDecimal(2, row47.ENTAPORTANTE_ID);

                        pstmt_tOracleOutput_7.setBigDecimal(3, row47.TIEMPO_ID);

                        pstmt_tOracleOutput_7.setInt(4, row47.TIPO_RECAUDO_ID);

                        if(row47.PERIODO == null) {
pstmt_tOracleOutput_7.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(5, row47.PERIODO);
}

                        pstmt_tOracleOutput_7.setBigDecimal(6, row47.AFILIADO_ID);

                        if(row47.NOMBRE_ENTAPORTANTE == null) {
pstmt_tOracleOutput_7.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(7, row47.NOMBRE_ENTAPORTANTE);
}

                        if(row47.NOMBRE_TIPO_DOCUMENTO == null) {
pstmt_tOracleOutput_7.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(8, row47.NOMBRE_TIPO_DOCUMENTO);
}

                        if(row47.NUMERO_DOCUMENTO == null) {
pstmt_tOracleOutput_7.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(9, row47.NUMERO_DOCUMENTO);
}

                        if(row47.NOMBRE_COTIZANTE == null) {
pstmt_tOracleOutput_7.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(10, row47.NOMBRE_COTIZANTE);
}

                        if(row47.FECHA_INGRESO != null) {
pstmt_tOracleOutput_7.setObject(11, new java.sql.Timestamp(row47.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_7.setNull(11, java.sql.Types.DATE);
}

                        if(row47.SIGLA_FUERZA == null) {
pstmt_tOracleOutput_7.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(12, row47.SIGLA_FUERZA);
}

                        if(row47.NOMBRE_TIPO_SOMETIDO == null) {
pstmt_tOracleOutput_7.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(13, row47.NOMBRE_TIPO_SOMETIDO);
}

                        if(row47.NOMBRE_TIPO_RECAUDO == null) {
pstmt_tOracleOutput_7.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(14, row47.NOMBRE_TIPO_RECAUDO);
}

                        if(row47.SIGLA_TIPO_SOMETIDO == null) {
pstmt_tOracleOutput_7.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(15, row47.SIGLA_TIPO_SOMETIDO);
}

                        pstmt_tOracleOutput_7.setBigDecimal(16, row47.TSOMETIDO_ID);

                        pstmt_tOracleOutput_7.setBigDecimal(17, row47.FUERZAS_ID);

                pstmt_tOracleOutput_7.addBatch();
                nb_line_tOracleOutput_7++;
                batchSizeCounter_tOracleOutput_7++;
            if (batchSize_tOracleOutput_7 > 0 &&  batchSize_tOracleOutput_7 <= batchSizeCounter_tOracleOutput_7) {
                try {
                    pstmt_tOracleOutput_7.executeBatch();
                }catch (java.sql.BatchUpdateException e_tOracleOutput_7){
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
			        java.sql.SQLException ne_tOracleOutput_7 = e_tOracleOutput_7.getNextException(),sqle_tOracleOutput_7=null;
			    	String errormessage_tOracleOutput_7;
					if (ne_tOracleOutput_7 != null) {
						// build new exception to provide the original cause
						sqle_tOracleOutput_7 = new java.sql.SQLException(e_tOracleOutput_7.getMessage() + "\ncaused by: " + ne_tOracleOutput_7.getMessage(), ne_tOracleOutput_7.getSQLState(), ne_tOracleOutput_7.getErrorCode(), ne_tOracleOutput_7);
						errormessage_tOracleOutput_7 = sqle_tOracleOutput_7.getMessage();
					}else{
						errormessage_tOracleOutput_7 = e_tOracleOutput_7.getMessage();
					}
	            	
	                	System.err.println(errormessage_tOracleOutput_7);
	            	
	        	}
                tmp_batchUpdateCount_tOracleOutput_7 = pstmt_tOracleOutput_7.getUpdateCount();
                    insertedCount_tOracleOutput_7
                += (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
                rowsToCommitCount_tOracleOutput_7 += (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
                batchSizeCounter_tOracleOutput_7 = 0;
            }
                commitCounter_tOracleOutput_7++;
                if(commitEvery_tOracleOutput_7 <= commitCounter_tOracleOutput_7) {
                    if(batchSizeCounter_tOracleOutput_7 > 0) {
                        try {
                            pstmt_tOracleOutput_7.executeBatch();
                        }catch (java.sql.BatchUpdateException e_tOracleOutput_7){
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
					        java.sql.SQLException ne_tOracleOutput_7 = e_tOracleOutput_7.getNextException(),sqle_tOracleOutput_7=null;
					    	String errormessage_tOracleOutput_7;
							if (ne_tOracleOutput_7 != null) {
								// build new exception to provide the original cause
								sqle_tOracleOutput_7 = new java.sql.SQLException(e_tOracleOutput_7.getMessage() + "\ncaused by: " + ne_tOracleOutput_7.getMessage(), ne_tOracleOutput_7.getSQLState(), ne_tOracleOutput_7.getErrorCode(), ne_tOracleOutput_7);
								errormessage_tOracleOutput_7 = sqle_tOracleOutput_7.getMessage();
							}else{
								errormessage_tOracleOutput_7 = e_tOracleOutput_7.getMessage();
							}
			            	
			                	System.err.println(errormessage_tOracleOutput_7);
			            	
			        	}
                        tmp_batchUpdateCount_tOracleOutput_7 = pstmt_tOracleOutput_7.getUpdateCount();
                            insertedCount_tOracleOutput_7
                        += (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
                        rowsToCommitCount_tOracleOutput_7 += (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
                    }
                    if(rowsToCommitCount_tOracleOutput_7 != 0){
                    	
                    }
                    conn_tOracleOutput_7.commit();
                    if(rowsToCommitCount_tOracleOutput_7 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_7 = 0;
                    }
                    commitCounter_tOracleOutput_7=0;
                    	batchSizeCounter_tOracleOutput_7=0;
                }

 


	tos_count_tOracleOutput_7++;

/**
 * [tOracleOutput_7 main ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_4_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_4_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	


}

globalMap.put("tSortRow_4_SortIn_NB_LINE",nb_line_tSortRow_4_SortIn);

 

ok_Hash.put("tSortRow_4_SortIn", true);
end_Hash.put("tSortRow_4_SortIn", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tSortRow_4_SortIn", end_Hash.get("tSortRow_4_SortIn")-start_Hash.get("tSortRow_4_SortIn"));
tStatCatcher_1Process(globalMap);



/**
 * [tSortRow_4_SortIn end ] stop
 */

	
	/**
	 * [tOracleOutput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
	



	
        if(batchSizeCounter_tOracleOutput_7 > 0) {
            try {
            	if (pstmt_tOracleOutput_7 != null) {
					
					pstmt_tOracleOutput_7.executeBatch();
					
        	    }
            }catch (java.sql.BatchUpdateException e_tOracleOutput_7){
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
		        java.sql.SQLException ne_tOracleOutput_7 = e_tOracleOutput_7.getNextException(),sqle_tOracleOutput_7=null;
		    	String errormessage_tOracleOutput_7;
				if (ne_tOracleOutput_7 != null) {
					// build new exception to provide the original cause
					sqle_tOracleOutput_7 = new java.sql.SQLException(e_tOracleOutput_7.getMessage() + "\ncaused by: " + ne_tOracleOutput_7.getMessage(), ne_tOracleOutput_7.getSQLState(), ne_tOracleOutput_7.getErrorCode(), ne_tOracleOutput_7);
					errormessage_tOracleOutput_7 = sqle_tOracleOutput_7.getMessage();
				}else{
					errormessage_tOracleOutput_7 = e_tOracleOutput_7.getMessage();
				}
            	
                	System.err.println(errormessage_tOracleOutput_7);
            	
        	}
        	if (pstmt_tOracleOutput_7 != null) {
            	tmp_batchUpdateCount_tOracleOutput_7 = pstmt_tOracleOutput_7.getUpdateCount();
    	    	
    	    		insertedCount_tOracleOutput_7
    	    	
    	    	+= (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
				rowsToCommitCount_tOracleOutput_7 += (tmp_batchUpdateCount_tOracleOutput_7!=-1?tmp_batchUpdateCount_tOracleOutput_7:0);
            }
        }
        if(pstmt_tOracleOutput_7 != null) {
			
				pstmt_tOracleOutput_7.close();
				resourceMap.remove("pstmt_tOracleOutput_7");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_7", true);
		if(commitCounter_tOracleOutput_7 > 0 && rowsToCommitCount_tOracleOutput_7 != 0) {
			
		}
		conn_tOracleOutput_7.commit();
		if(commitCounter_tOracleOutput_7 > 0 && rowsToCommitCount_tOracleOutput_7 != 0) {
			
			rowsToCommitCount_tOracleOutput_7 = 0;
		}
		commitCounter_tOracleOutput_7 = 0;
		
		
		conn_tOracleOutput_7 .close();
		
		resourceMap.put("finish_tOracleOutput_7", true);
   	

	
	nb_line_deleted_tOracleOutput_7=nb_line_deleted_tOracleOutput_7+ deletedCount_tOracleOutput_7;
	nb_line_update_tOracleOutput_7=nb_line_update_tOracleOutput_7 + updatedCount_tOracleOutput_7;
	nb_line_inserted_tOracleOutput_7=nb_line_inserted_tOracleOutput_7 + insertedCount_tOracleOutput_7;
	nb_line_rejected_tOracleOutput_7=nb_line_rejected_tOracleOutput_7 + rejectedCount_tOracleOutput_7;
	
        globalMap.put("tOracleOutput_7_NB_LINE",nb_line_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_UPDATED",nb_line_update_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_7);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_7", true);
end_Hash.put("tOracleOutput_7", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_7", end_Hash.get("tOracleOutput_7")-start_Hash.get("tOracleOutput_7"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_7 end ] stop
 */



























				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_4_SortIn"
							globalMap.remove("tSortRow_4");
						
							//free memory for "tSortRow_3_SortIn"
							globalMap.remove("tSortRow_3");
						
							//free memory for "tAggregateRow_2_AGGIN"
							globalMap.remove("tAggregateRow_2");
						
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row4"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */










	
	/**
	 * [tReplicate_1 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tSortRow_3_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortOut";
	
	

 



/**
 * [tSortRow_3_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_3_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_3";
	
	currentComponent="tSortRow_3_SortIn";
	
	

 



/**
 * [tSortRow_3_SortIn finally ] stop
 */

	
	/**
	 * [tOracleOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_5 = null;
                if ((pstmtToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_5")) != null) {
                    pstmtToClose_tOracleOutput_5.close();
                }
    }
 



/**
 * [tOracleOutput_5 finally ] stop
 */



















	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tSortRow_4_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortOut";
	
	

 



/**
 * [tSortRow_4_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_4_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_4";
	
	currentComponent="tSortRow_4_SortIn";
	
	

 



/**
 * [tSortRow_4_SortIn finally ] stop
 */

	
	/**
	 * [tOracleOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_7") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_7 = null;
                if ((pstmtToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_7")) != null) {
                    pstmtToClose_tOracleOutput_7.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_7") == null){
            java.sql.Connection ctn_tOracleOutput_7 = null;
            if((ctn_tOracleOutput_7 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_7")) != null){
                try {
                    ctn_tOracleOutput_7.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_7) {
                    String errorMessage_tOracleOutput_7 = "failed to close the connection in tOracleOutput_7 :" + sqlEx_tOracleOutput_7.getMessage();
                    System.err.println(errorMessage_tOracleOutput_7);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_7 finally ] stop
 */



























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println(TalendDate.getCurrentDate());
System.out.println("--> End Aportes PPCD");
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tOracleInput_9Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk26", 0, "ok");
				}
				tOracleInput_28Process(globalMap);



/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return null;
				}
				public Integer PERIODOPrecision(){
				    return null;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return true;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public BigDecimal TDOCUMENTO_ID;

				public BigDecimal getTDOCUMENTO_ID () {
					return this.TDOCUMENTO_ID;
				}

				public Boolean TDOCUMENTO_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTO_IDIsKey(){
				    return true;
				}
				public Integer TDOCUMENTO_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTO_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTO_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTO_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTO_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTO_IDOriginalDbColumnName(){
				
					return "TDOCUMENTO_ID";
				
				}

				
			    public BigDecimal CONTEO;

				public BigDecimal getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return null;
				}
				public Integer CONTEOPrecision(){
				    return null;
				}
				public String CONTEODefault(){
				
					return "";
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.DOCUMENTO == null) ? 0 : this.DOCUMENTO.hashCode());
					
						result = prime * result + ((this.TDOCUMENTO_ID == null) ? 0 : this.TDOCUMENTO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.DOCUMENTO == null) {
							if (other.DOCUMENTO != null)
								return false;
						
						} else if (!this.DOCUMENTO.equals(other.DOCUMENTO))
						
							return false;
					
						if (this.TDOCUMENTO_ID == null) {
							if (other.TDOCUMENTO_ID != null)
								return false;
						
						} else if (!this.TDOCUMENTO_ID.equals(other.TDOCUMENTO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.PERIODO = this.PERIODO;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.DOCUMENTO = this.DOCUMENTO;
	            other.TDOCUMENTO_ID = this.TDOCUMENTO_ID;
	            other.CONTEO = this.CONTEO;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.PERIODO = this.PERIODO;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.DOCUMENTO = this.DOCUMENTO;
	            	other.TDOCUMENTO_ID = this.TDOCUMENTO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
						this.TDOCUMENTO_ID = (BigDecimal) dis.readObject();
					
						this.CONTEO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.PERIODO = readString(dis);
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
					this.DOCUMENTO = readString(dis);
					
						this.TDOCUMENTO_ID = (BigDecimal) dis.readObject();
					
						this.CONTEO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDOCUMENTO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CONTEO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDOCUMENTO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTEO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERIODO="+PERIODO);
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TDOCUMENTO_ID="+String.valueOf(TDOCUMENTO_ID));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DOCUMENTO, other.DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TDOCUMENTO_ID, other.TDOCUMENTO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tOracleOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_10", false);
		start_Hash.put("tOracleOutput_10", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleOutput_10");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tOracleOutput_10 = 0;
		






    
    int nb_line_tOracleOutput_10 = 0;
    int nb_line_update_tOracleOutput_10 = 0;
    int nb_line_inserted_tOracleOutput_10 = 0;
    int nb_line_deleted_tOracleOutput_10 = 0;
    int nb_line_rejected_tOracleOutput_10 = 0;

    int tmp_batchUpdateCount_tOracleOutput_10 = 0;

    int deletedCount_tOracleOutput_10=0;
    int updatedCount_tOracleOutput_10=0;
    int insertedCount_tOracleOutput_10=0;
    int rowsToCommitCount_tOracleOutput_10=0;
    int rejectedCount_tOracleOutput_10=0;

    boolean whetherReject_tOracleOutput_10 = false;

    java.sql.Connection conn_tOracleOutput_10 = null;

    //optional table
    String dbschema_tOracleOutput_10 = null;
    String tableName_tOracleOutput_10 = null;
                    String driverClass_tOracleOutput_10 = "oracle.jdbc.OracleDriver";


                java.lang.Class.forName(driverClass_tOracleOutput_10);
                String url_tOracleOutput_10 = null;
                    url_tOracleOutput_10 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
                String dbUser_tOracleOutput_10 = context.db_destino_Login;

	final String decryptedPassword_tOracleOutput_10 = context.db_destino_Password; 

                String dbPwd_tOracleOutput_10 = decryptedPassword_tOracleOutput_10;
                dbschema_tOracleOutput_10 = context.db_destino_Schema;


                    java.util.Properties atnParamsPrope_tOracleOutput_10 = new java.util.Properties();
                    atnParamsPrope_tOracleOutput_10.put("user",dbUser_tOracleOutput_10);
                    atnParamsPrope_tOracleOutput_10.put("password",dbPwd_tOracleOutput_10);
                    if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                        atnParamsPrope_tOracleOutput_10.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
                    }
                    conn_tOracleOutput_10 = java.sql.DriverManager.getConnection(url_tOracleOutput_10, atnParamsPrope_tOracleOutput_10);
        resourceMap.put("conn_tOracleOutput_10", conn_tOracleOutput_10);
            conn_tOracleOutput_10.setAutoCommit(false);
            int commitEvery_tOracleOutput_10 = 1000;
            int commitCounter_tOracleOutput_10 = 0;
        int batchSize_tOracleOutput_10 = 1000;
        int batchSizeCounter_tOracleOutput_10=0;
        int count_tOracleOutput_10=0;

        if(dbschema_tOracleOutput_10 == null || dbschema_tOracleOutput_10.trim().length() == 0) {
            tableName_tOracleOutput_10 = ("BREC_TOTALBENEFICIARIOS");
        } else {
            tableName_tOracleOutput_10 = dbschema_tOracleOutput_10 + "." + ("BREC_TOTALBENEFICIARIOS");
        }
                String insert_tOracleOutput_10 = "INSERT INTO " + tableName_tOracleOutput_10 + " (PERIODO,ENTAPORTANTES_ID,DOCUMENTO,TDOCUMENTO_ID,CONTEO) VALUES (?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_10 = conn_tOracleOutput_10.prepareStatement(insert_tOracleOutput_10);
                        resourceMap.put("pstmt_tOracleOutput_10", pstmt_tOracleOutput_10);





 



/**
 * [tOracleOutput_10 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_9");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_9.setFetchSize(1000);


		    String dbquery_tOracleInput_9 = "SELECT DISTINCT \n     CG.PERIODO,\n     CG.ENTAPORTANTES_ID,   \n     DS.DOCUMENTO,\n     DS.TDOCUMENTOS_ID AS TDOCUME"
+"NTO_ID,\n    COUNT (DISTINCT  PER_BENEFI.DOCUMENTO)  AS CONTEO\n        \n FROM VM_REC_CONSOLIDADO CG \n   INNER JOIN RE"
+"C_DSALUD DS  ON DS.id = CG.Ds_Id                                           \n   inner JOIN GEN_PERSONAS PERSONAS  ON PER"
+"SONAS.DOCUMENTO = TO_CHAR(DS.DOCUMENTO) and PERSONAS.TDOCUMENTOS_ID = DS.TDOCUMENTOS_ID  AND PERSONAS.ESTREGISTRO_ID = 1"
+"\n   inner JOIN GEN_AFILIADOS AFI  ON AFI.PERSONAS_ID = PERSONAS.ID and AFI.ESTREGISTRO_ID = 1\n   inner JOIN GEN_AFILIA"
+"DOS AFI_BENEFI  ON AFI_BENEFI.PADRE_ID = AFI.ID AND AFI_BENEFI.ESTREGISTRO_ID = 1 and AFI_BENEFI.ESTAFILIACION IN ('Acti"
+"vo','Provisional')\n   inner JOIN GEN_PERSONAS PER_BENEFI  ON PER_BENEFI.ID = AFI_BENEFI.PERSONAS_ID AND PER_BENEFI.ESTR"
+"EGISTRO_ID = 1\n WHERE  CG.TPLANILLAS_ID = 1\n   AND CG.TARCHIVOS_ID = 1\n   AND CG.PERIODO =  '"+context.PERIODO+"'\n GROUP BY CG.ENTAPORTANTES_ID, CG.PERIODO,DS.DOCUMENTO,DS.TDOCUMENTOS_ID ";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row15.PERIODO = null;
							} else {
	                         		
        	row15.PERIODO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row15.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(2) != null) {
						row15.ENTAPORTANTES_ID = rs_tOracleInput_9.getBigDecimal(2);
					} else {
				
						row15.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row15.DOCUMENTO = null;
							} else {
	                         		
        	row15.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row15.TDOCUMENTO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(4) != null) {
						row15.TDOCUMENTO_ID = rs_tOracleInput_9.getBigDecimal(4);
					} else {
				
						row15.TDOCUMENTO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 5) {
								row15.CONTEO = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(5) != null) {
						row15.CONTEO = rs_tOracleInput_9.getBigDecimal(5);
					} else {
				
						row15.CONTEO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					



        whetherReject_tOracleOutput_10 = false;
                        if(row15.PERIODO == null) {
pstmt_tOracleOutput_10.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_10.setString(1, row15.PERIODO);
}

                        pstmt_tOracleOutput_10.setBigDecimal(2, row15.ENTAPORTANTES_ID);

                        if(row15.DOCUMENTO == null) {
pstmt_tOracleOutput_10.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_10.setString(3, row15.DOCUMENTO);
}

                        pstmt_tOracleOutput_10.setBigDecimal(4, row15.TDOCUMENTO_ID);

                        pstmt_tOracleOutput_10.setBigDecimal(5, row15.CONTEO);

                pstmt_tOracleOutput_10.addBatch();
                nb_line_tOracleOutput_10++;
                batchSizeCounter_tOracleOutput_10++;
            if (batchSize_tOracleOutput_10 > 0 &&  batchSize_tOracleOutput_10 <= batchSizeCounter_tOracleOutput_10) {
                try {
                    pstmt_tOracleOutput_10.executeBatch();
                }catch (java.sql.BatchUpdateException e_tOracleOutput_10){
globalMap.put("tOracleOutput_10_ERROR_MESSAGE",e_tOracleOutput_10.getMessage());
			        java.sql.SQLException ne_tOracleOutput_10 = e_tOracleOutput_10.getNextException(),sqle_tOracleOutput_10=null;
			    	String errormessage_tOracleOutput_10;
					if (ne_tOracleOutput_10 != null) {
						// build new exception to provide the original cause
						sqle_tOracleOutput_10 = new java.sql.SQLException(e_tOracleOutput_10.getMessage() + "\ncaused by: " + ne_tOracleOutput_10.getMessage(), ne_tOracleOutput_10.getSQLState(), ne_tOracleOutput_10.getErrorCode(), ne_tOracleOutput_10);
						errormessage_tOracleOutput_10 = sqle_tOracleOutput_10.getMessage();
					}else{
						errormessage_tOracleOutput_10 = e_tOracleOutput_10.getMessage();
					}
	            	
	                	System.err.println(errormessage_tOracleOutput_10);
	            	
	        	}
                tmp_batchUpdateCount_tOracleOutput_10 = pstmt_tOracleOutput_10.getUpdateCount();
                    insertedCount_tOracleOutput_10
                += (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
                rowsToCommitCount_tOracleOutput_10 += (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
                batchSizeCounter_tOracleOutput_10 = 0;
            }
                commitCounter_tOracleOutput_10++;
                if(commitEvery_tOracleOutput_10 <= commitCounter_tOracleOutput_10) {
                    if(batchSizeCounter_tOracleOutput_10 > 0) {
                        try {
                            pstmt_tOracleOutput_10.executeBatch();
                        }catch (java.sql.BatchUpdateException e_tOracleOutput_10){
globalMap.put("tOracleOutput_10_ERROR_MESSAGE",e_tOracleOutput_10.getMessage());
					        java.sql.SQLException ne_tOracleOutput_10 = e_tOracleOutput_10.getNextException(),sqle_tOracleOutput_10=null;
					    	String errormessage_tOracleOutput_10;
							if (ne_tOracleOutput_10 != null) {
								// build new exception to provide the original cause
								sqle_tOracleOutput_10 = new java.sql.SQLException(e_tOracleOutput_10.getMessage() + "\ncaused by: " + ne_tOracleOutput_10.getMessage(), ne_tOracleOutput_10.getSQLState(), ne_tOracleOutput_10.getErrorCode(), ne_tOracleOutput_10);
								errormessage_tOracleOutput_10 = sqle_tOracleOutput_10.getMessage();
							}else{
								errormessage_tOracleOutput_10 = e_tOracleOutput_10.getMessage();
							}
			            	
			                	System.err.println(errormessage_tOracleOutput_10);
			            	
			        	}
                        tmp_batchUpdateCount_tOracleOutput_10 = pstmt_tOracleOutput_10.getUpdateCount();
                            insertedCount_tOracleOutput_10
                        += (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
                        rowsToCommitCount_tOracleOutput_10 += (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
                    }
                    if(rowsToCommitCount_tOracleOutput_10 != 0){
                    	
                    }
                    conn_tOracleOutput_10.commit();
                    if(rowsToCommitCount_tOracleOutput_10 != 0){
                    	
                    	rowsToCommitCount_tOracleOutput_10 = 0;
                    }
                    commitCounter_tOracleOutput_10=0;
                    	batchSizeCounter_tOracleOutput_10=0;
                }

 


	tos_count_tOracleOutput_10++;

/**
 * [tOracleOutput_10 main ] stop
 */
	
	/**
	 * [tOracleOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	

 



/**
 * [tOracleOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	

 



/**
 * [tOracleOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_9", end_Hash.get("tOracleInput_9")-start_Hash.get("tOracleInput_9"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tOracleOutput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	
	



	
        if(batchSizeCounter_tOracleOutput_10 > 0) {
            try {
            	if (pstmt_tOracleOutput_10 != null) {
					
					pstmt_tOracleOutput_10.executeBatch();
					
        	    }
            }catch (java.sql.BatchUpdateException e_tOracleOutput_10){
globalMap.put("tOracleOutput_10_ERROR_MESSAGE",e_tOracleOutput_10.getMessage());
		        java.sql.SQLException ne_tOracleOutput_10 = e_tOracleOutput_10.getNextException(),sqle_tOracleOutput_10=null;
		    	String errormessage_tOracleOutput_10;
				if (ne_tOracleOutput_10 != null) {
					// build new exception to provide the original cause
					sqle_tOracleOutput_10 = new java.sql.SQLException(e_tOracleOutput_10.getMessage() + "\ncaused by: " + ne_tOracleOutput_10.getMessage(), ne_tOracleOutput_10.getSQLState(), ne_tOracleOutput_10.getErrorCode(), ne_tOracleOutput_10);
					errormessage_tOracleOutput_10 = sqle_tOracleOutput_10.getMessage();
				}else{
					errormessage_tOracleOutput_10 = e_tOracleOutput_10.getMessage();
				}
            	
                	System.err.println(errormessage_tOracleOutput_10);
            	
        	}
        	if (pstmt_tOracleOutput_10 != null) {
            	tmp_batchUpdateCount_tOracleOutput_10 = pstmt_tOracleOutput_10.getUpdateCount();
    	    	
    	    		insertedCount_tOracleOutput_10
    	    	
    	    	+= (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
				rowsToCommitCount_tOracleOutput_10 += (tmp_batchUpdateCount_tOracleOutput_10!=-1?tmp_batchUpdateCount_tOracleOutput_10:0);
            }
        }
        if(pstmt_tOracleOutput_10 != null) {
			
				pstmt_tOracleOutput_10.close();
				resourceMap.remove("pstmt_tOracleOutput_10");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_10", true);
		if(commitCounter_tOracleOutput_10 > 0 && rowsToCommitCount_tOracleOutput_10 != 0) {
			
		}
		conn_tOracleOutput_10.commit();
		if(commitCounter_tOracleOutput_10 > 0 && rowsToCommitCount_tOracleOutput_10 != 0) {
			
			rowsToCommitCount_tOracleOutput_10 = 0;
		}
		commitCounter_tOracleOutput_10 = 0;
		
		
		conn_tOracleOutput_10 .close();
		
		resourceMap.put("finish_tOracleOutput_10", true);
   	

	
	nb_line_deleted_tOracleOutput_10=nb_line_deleted_tOracleOutput_10+ deletedCount_tOracleOutput_10;
	nb_line_update_tOracleOutput_10=nb_line_update_tOracleOutput_10 + updatedCount_tOracleOutput_10;
	nb_line_inserted_tOracleOutput_10=nb_line_inserted_tOracleOutput_10 + insertedCount_tOracleOutput_10;
	nb_line_rejected_tOracleOutput_10=nb_line_rejected_tOracleOutput_10 + rejectedCount_tOracleOutput_10;
	
        globalMap.put("tOracleOutput_10_NB_LINE",nb_line_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_UPDATED",nb_line_update_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_10);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_10", true);
end_Hash.put("tOracleOutput_10", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleOutput_10", end_Hash.get("tOracleOutput_10")-start_Hash.get("tOracleOutput_10"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleOutput_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tOracleOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	



    try {
    if (resourceMap.get("statementClosed_tOracleOutput_10") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_10 = null;
                if ((pstmtToClose_tOracleOutput_10 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_10")) != null) {
                    pstmtToClose_tOracleOutput_10.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tOracleOutput_10") == null){
            java.sql.Connection ctn_tOracleOutput_10 = null;
            if((ctn_tOracleOutput_10 = (java.sql.Connection)resourceMap.get("conn_tOracleOutput_10")) != null){
                try {
                    ctn_tOracleOutput_10.close();
                } catch (java.sql.SQLException sqlEx_tOracleOutput_10) {
                    String errorMessage_tOracleOutput_10 = "failed to close the connection in tOracleOutput_10 :" + sqlEx_tOracleOutput_10.getMessage();
                    System.err.println(errorMessage_tOracleOutput_10);
                }
            }
        }
    }
 



/**
 * [tOracleOutput_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row75Struct other = (row75Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row75Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            
	}

	public void copyKeysDataTo(row75Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class XML_API_tFileInputXML_1{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();

String[] queryPaths_tFileInputXML_1 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"	
	,"SMTPHost"		
	,"SMTPHost"+"/@xsi:nil"	
	,"SMTPPort"		
	,"SMTPPort"+"/@xsi:nil"	
	,"UsernameMail"		
	,"UsernameMail"+"/@xsi:nil"	
	,"PasswordMail"		
	,"PasswordMail"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_1 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_1 = "";
String[] node_tFileInputXML_1 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_1 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_1,asXMLs_tFileInputXML_1);
looper_tFileInputXML_1.setEncoding("UTF-8");
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_1 instanceof java.io.InputStream){
	looper_tFileInputXML_1.parse((java.io.InputStream)filename_tFileInputXML_1);
}else{
	looper_tFileInputXML_1.parse(String.valueOf(filename_tFileInputXML_1));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_1  = looper_tFileInputXML_1.iterator();
while (it_tFileInputXML_1.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_1 = it_tFileInputXML_1.next();
	if (nb_line_tFileInputXML_1>=50) {
	
			looper_tFileInputXML_1.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row75 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row75 = new row75Struct();
	try{
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Host");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Host =null;
									}else{
		row75.Host = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Port");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Port =null;
									}else{
		row75.Port = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Sid");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Sid =null;
									}else{
		row75.Sid = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("ServiceName");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.ServiceName =null;
									}else{
		row75.ServiceName = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Schema");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Schema =null;
									}else{
		row75.Schema = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("User");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.User =null;
									}else{
		row75.User = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Password");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.Password =null;
									}else{
		row75.Password = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPHost");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPHost"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.SMTPHost =null;
									}else{
		row75.SMTPHost = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPPort");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPPort"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.SMTPPort =null;
									}else{
		row75.SMTPPort = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("UsernameMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("UsernameMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.UsernameMail =null;
									}else{
		row75.UsernameMail = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PasswordMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PasswordMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row75.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row75.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row75.PasswordMail =null;
									}else{
		row75.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					

    context.db_origen_Server = row75.Host;
context.db_origen_Port = row75.Port;
//context.db_origen_Sid = row75.Sid;
context.db_origen_Login = row75.User;
context.db_origen_Password = row75.Password;
//context.db_origen_Schema = row75.Schema;
context.db_origen_ServiceName = row75.ServiceName;

context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");





    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


	}
	try {
		looper_tFileInputXML_1.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tFileInputXML_2Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public static class row77Struct implements routines.system.IPersistableRow<row77Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 12;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row77Struct other = (row77Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row77Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            
	}

	public void copyKeysDataTo(row77Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row77Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row77Struct row77 = new row77Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row77");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFileInputXML_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_2", false);
		start_Hash.put("tFileInputXML_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_2";
	
	
		int tos_count_tFileInputXML_2 = 0;
		

	

int nb_line_tFileInputXML_2 = 0;

	String os_tFileInputXML_2 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_2=false;
	if(os_tFileInputXML_2.indexOf("windows") > -1 || os_tFileInputXML_2.indexOf("nt") > -1){
		isWindows_tFileInputXML_2=true;
	}
class XML_API_tFileInputXML_2{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_2 xml_api_tFileInputXML_2 = new XML_API_tFileInputXML_2();

String[] queryPaths_tFileInputXML_2 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_2 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_2 = "";
String[] node_tFileInputXML_2 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_2 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_2,asXMLs_tFileInputXML_2);
looper_tFileInputXML_2.setEncoding("UTF-8");
Object filename_tFileInputXML_2 = null;
try {
	filename_tFileInputXML_2 = context.BODEGA;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_2 != null && filename_tFileInputXML_2 instanceof String && filename_tFileInputXML_2.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_2){
		filename_tFileInputXML_2 = filename_tFileInputXML_2.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_2 instanceof java.io.InputStream){
	looper_tFileInputXML_2.parse((java.io.InputStream)filename_tFileInputXML_2);
}else{
	looper_tFileInputXML_2.parse(String.valueOf(filename_tFileInputXML_2));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_2  = looper_tFileInputXML_2.iterator();
while (it_tFileInputXML_2.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_2 = it_tFileInputXML_2.next();
	if (nb_line_tFileInputXML_2>=50) {
	
			looper_tFileInputXML_2.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_2++;
		
	row77 = null;			
	boolean whetherReject_tFileInputXML_2 = false;
	row77 = new row77Struct();
	try{
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Host");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Host =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Host ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Host =null;
									}else{
		row77.Host = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Port");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Port =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Port ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Port =null;
									}else{
		row77.Port = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Sid");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Sid =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Sid ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Sid =null;
									}else{
		row77.Sid = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("ServiceName");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.ServiceName =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.ServiceName ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.ServiceName =null;
									}else{
		row77.ServiceName = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Schema");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Schema =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Schema ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Schema =null;
									}else{
		row77.Schema = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("User");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.User =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.User ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.User =null;
									}else{
		row77.User = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Password");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row77.Password =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row77.Password ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row77.Password =null;
									}else{
		row77.Password = str_tFileInputXML_2;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_2 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_2 begin ] stop
 */
	
	/**
	 * [tFileInputXML_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 


	tos_count_tFileInputXML_2++;

/**
 * [tFileInputXML_2 main ] stop
 */
	
	/**
	 * [tFileInputXML_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_begin ] stop
 */
// Start of branch "row77"
if(row77 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row77"
						
						);
					}
					

    context.db_destino_Server = row77.Host;
context.db_destino_Port = row77.Port;
//context.db_destino_Sid = row77.Sid;
context.db_destino_Login = row77.User;
context.db_destino_Password = row77.Password;
//context.db_destino_Schema = row77.Schema;
context.db_destino_ServiceName = row77.ServiceName;

if(context.PERIODO.equals(null) || context.PERIODO.equals(""))
{
	context.PERIODO = TalendDate.formatDate("yyyy-MM",TalendDate.addDate(TalendDate.getCurrentDate(),-1,"MM") );
}

//System.out.println("getCurrentDate: " + TalendDate.getCurrentDate());
System.out.println("Periodo: " + context.PERIODO);


    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row77"




	
	/**
	 * [tFileInputXML_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	


	}
	try {
		looper_tFileInputXML_2.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_2_NB_LINE",nb_line_tFileInputXML_2);

	

 

ok_Hash.put("tFileInputXML_2", true);
end_Hash.put("tFileInputXML_2", System.currentTimeMillis());




/**
 * [tFileInputXML_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row77");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableComparableLookupRow<row4Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 20;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row4Struct other = (row4Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row4Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.TDOCUMENTOS_ID = this.TDOCUMENTOS_ID;
	            other.DOCUMENTO = this.DOCUMENTO;
	            
	}

	public void copyKeysDataTo(row4Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) ois.readObject();
					
						this.DOCUMENTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) objectIn.readObject();
					
						this.DOCUMENTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tAdvancedHash_row4 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row4", false);
		start_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tAdvancedHash_row4 = 0;
		

			   		// connection name:row4
			   		// source node:tOracleInput_2 - inputs:(after_tOracleInput_1) outputs:(row4,row4) | target node:tAdvancedHash_row4 - inputs:(row4) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row4) outputs:(ENTAPORTANTE_PPDC)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row4 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row4Struct>getLookup(matchingModeEnum_row4);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row4", tHash_Lookup_row4);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row4 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.\"ID\", \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.NOMBRE, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.TDOCUMENTOS_ID, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.DOCUMENTO\nFROM "+context.db_origen_Schema+".GEN_ENTAPORTANTES WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row4.ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(1) != null) {
						row4.ID = rs_tOracleInput_2.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row4.NOMBRE = null;
							} else {
	                         		
        	row4.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row4.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(3) != null) {
						row4.TDOCUMENTOS_ID = rs_tOracleInput_2.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row4.DOCUMENTO = null;
							} else {
	                         		
        	row4.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 4, false);
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


			   
			   

					row4Struct row4_HashRow = new row4Struct();
		   	   	   
				
				row4_HashRow.ID = row4.ID;
				
				row4_HashRow.NOMBRE = row4.NOMBRE;
				
				row4_HashRow.TDOCUMENTOS_ID = row4.TDOCUMENTOS_ID;
				
				row4_HashRow.DOCUMENTO = row4.DOCUMENTO;
				
			tHash_Lookup_row4.put(row4_HashRow);
			
            




 


	tos_count_tAdvancedHash_row4++;

/**
 * [tAdvancedHash_row4 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_2", end_Hash.get("tOracleInput_2")-start_Hash.get("tOracleInput_2"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

tHash_Lookup_row4.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row4", true);
end_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());




/**
 * [tAdvancedHash_row4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tOracleInput_3 - inputs:(after_tOracleInput_1) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_2 - inputs:(ENTAPORTANTE_PPDC,row9) outputs:(TIPODOC_PPCD)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_3");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_3.setFetchSize(1000);


		    String dbquery_tOracleInput_3 = "SELECT \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.\"ID\", \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.NOMBRE, \n  "+context.db_origen_Schema+".GEN_TDOCUMENTOS.SIGLA\nFROM "+context.db_origen_Schema+".GEN_TDOCUMENTOS WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row9.ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row9.ID = rs_tOracleInput_3.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row9.NOMBRE = null;
							} else {
	                         		
        	row9.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row9.SIGLA = null;
							} else {
	                         		
        	row9.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.ID = row9.ID;
				
				row9_HashRow.NOMBRE = row9.NOMBRE;
				
				row9_HashRow.SIGLA = row9.SIGLA;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_3", end_Hash.get("tOracleInput_3")-start_Hash.get("tOracleInput_3"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tOracleInput_4 - inputs:(after_tOracleInput_1) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_3 - inputs:(TIPODOC_PPCD,row10) outputs:(FUERZA_PPDC)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_4");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_4.setFetchSize(1000);


		    String dbquery_tOracleInput_4 = "SELECT \n  "+context.db_origen_Schema+".GEN_FUERZAS.\"ID\", \n  "+context.db_origen_Schema+".GEN_FUERZAS.NOMBRE, \n  "+context.db_origen_Schema+".GEN_FUERZAS.SIGLA\nFROM "+context.db_origen_Schema+".GEN_FUERZAS WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row10.ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row10.ID = rs_tOracleInput_4.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row10.NOMBRE = null;
							} else {
	                         		
        	row10.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row10.SIGLA = null;
							} else {
	                         		
        	row10.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 3, false);
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.ID = row10.ID;
				
				row10_HashRow.NOMBRE = row10.NOMBRE;
				
				row10_HashRow.SIGLA = row10.SIGLA;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_4", end_Hash.get("tOracleInput_4")-start_Hash.get("tOracleInput_4"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 3;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tOracleInput_5 - inputs:(after_tOracleInput_1) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_4 - inputs:(FUERZA_PPDC,row11) outputs:(TIEMPO_PPDC,SOMETIDO_PPDC)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_5");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_5.setFetchSize(1000);


		    String dbquery_tOracleInput_5 = "SELECT \n  "+context.db_origen_Schema+".REC_TSOMETIDO.\"ID\", \n  "+context.db_origen_Schema+".REC_TSOMETIDO.NOMBRE, \n  "+context.db_origen_Schema+".REC_TSOMETIDO.SIGLA\nFROM "+context.db_origen_Schema+".REC_TSOMETIDO WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row11.ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row11.ID = rs_tOracleInput_5.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row11.NOMBRE = null;
							} else {
	                         		
        	row11.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 3) {
								row11.SIGLA = null;
							} else {
	                         		
        	row11.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 3, false);
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.ID = row11.ID;
				
				row11_HashRow.NOMBRE = row11.NOMBRE;
				
				row11_HashRow.SIGLA = row11.SIGLA;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_5", end_Hash.get("tOracleInput_5")-start_Hash.get("tOracleInput_5"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


String foo = "bar";
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tOracleClose_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk27", 0, "ok");
				}
				tOracleClose_2Process(globalMap);



/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleClose_1");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleClose_1", end_Hash.get("tOracleClose_1")-start_Hash.get("tOracleClose_1"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_2", false);
		start_Hash.put("tOracleClose_2", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleClose_2");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleClose_2";
	
	
		int tos_count_tOracleClose_2 = 0;
		

 



/**
 * [tOracleClose_2 begin ] stop
 */
	
	/**
	 * [tOracleClose_2 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

	java.sql.Connection conn_tOracleClose_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_2");
	
	if(conn_tOracleClose_2 != null && !conn_tOracleClose_2.isClosed())
	{
		
			conn_tOracleClose_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_2++;

/**
 * [tOracleClose_2 main ] stop
 */
	
	/**
	 * [tOracleClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_2 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 

ok_Hash.put("tOracleClose_2", true);
end_Hash.put("tOracleClose_2", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleClose_2", end_Hash.get("tOracleClose_2")-start_Hash.get("tOracleClose_2"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_2";
	
	

 



/**
 * [tOracleClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_2_SUBPROCESS_STATE", 1);
	}
	


public static class row56Struct implements routines.system.IPersistableRow<row56Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row56Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();
row81Struct row56 = row81;





	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row56");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("root_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("father_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("priority");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("code");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row81.type = lcm.getType();
		row81.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row81.priority = lcm.getPriority();
		row81.message = lcm.getMessage();
		row81.code = lcm.getCode();
		
		row81.moment = java.util.Calendar.getInstance().getTime();
	
    	row81.pid = pid;
		row81.root_pid = rootPid;
		row81.father_pid = fatherPid;
	
    	row81.project = projectName;
    	row81.job = jobName;
    	row81.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row81.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(row81.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.root_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.father_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.priority != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.priority
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.message
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row81.code != null) {
                        sb_tFileOutputDelimited_1.append(
                            row81.code
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

                    }



 
     row56 = row81;


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row56"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xercesImpl-2.12.2.jar;../lib/xml-apis-1.4.01.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/TalendSAX.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;mail_1_3.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_diario_recaudo.mail_1_3.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xercesImpl-2.12.2.jar:$ROOT_PATH/../lib/xml-apis-1.4.01.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/TalendSAX.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/mail_1_3.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_diario_recaudo.mail_1_3.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = row56.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = row56.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = row56.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = row56.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = row56.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = row56.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_ServiceName;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param service_name_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param service_name_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param service_name_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("service_name_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_ServiceName;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param service_name_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param service_name_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param service_name_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("service_name_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = "REC_"+context.PERIODO;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param periodo=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param periodo=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param periodo=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("periodo", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row56");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public static class row64Struct implements routines.system.IPersistableComparableLookupRow<row64Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public BigDecimal TDOCUMENTOS_ID;

				public BigDecimal getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 20;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row64Struct other = (row64Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row64Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.TDOCUMENTOS_ID = this.TDOCUMENTOS_ID;
	            other.DOCUMENTO = this.DOCUMENTO;
	            
	}

	public void copyKeysDataTo(row64Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) ois.readObject();
					
						this.DOCUMENTO = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.TDOCUMENTOS_ID = (BigDecimal) objectIn.readObject();
					
						this.DOCUMENTO = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TDOCUMENTOS_ID);
					
						writeString(this.DOCUMENTO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row64Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_35Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row64Struct row64 = new row64Struct();




	
	/**
	 * [tAdvancedHash_row64 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row64", false);
		start_Hash.put("tAdvancedHash_row64", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row64";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row64");
					}
				
		int tos_count_tAdvancedHash_row64 = 0;
		

			   		// connection name:row64
			   		// source node:tOracleInput_35 - inputs:(after_tHashInput_2) outputs:(row64,row64) | target node:tAdvancedHash_row64 - inputs:(row64) outputs:()
			   		// linked node: tMap_15 - inputs:(row76,row64,row65,row66) outputs:(INGRESO_ENTAPORTANTE)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row64 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct> tHash_Lookup_row64 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row64Struct>getLookup(matchingModeEnum_row64);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row64", tHash_Lookup_row64);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row64 begin ] stop
 */



	
	/**
	 * [tOracleInput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_35", false);
		start_Hash.put("tOracleInput_35", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_35");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_35";
	
	
		int tos_count_tOracleInput_35 = 0;
		
	


	
		    int nb_line_tOracleInput_35 = 0;
		    java.sql.Connection conn_tOracleInput_35 = null;
				conn_tOracleInput_35 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_35 = false;
				boolean isConnectionWrapped_tOracleInput_35 = !(conn_tOracleInput_35 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_35.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_35 = null;
                if (isConnectionWrapped_tOracleInput_35) {
					unwrappedOraConn_tOracleInput_35 = conn_tOracleInput_35.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_35 != null) {
                        isTimeZoneNull_tOracleInput_35 = (unwrappedOraConn_tOracleInput_35.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_35 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_35).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_35) {
					java.sql.Statement stmtGetTZ_tOracleInput_35 = conn_tOracleInput_35.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_35 = stmtGetTZ_tOracleInput_35.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_35 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_35.next()) {
						sessionTimezone_tOracleInput_35 = rsGetTZ_tOracleInput_35.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_35 && unwrappedOraConn_tOracleInput_35 != null) {
                        unwrappedOraConn_tOracleInput_35.setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_35).setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_35 = conn_tOracleInput_35.createStatement();

		    String dbquery_tOracleInput_35 = "SELECT \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.\"ID\", \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.NOMBRE, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.TDOCUMENTOS_ID, \n  "+context.db_origen_Schema+".GEN_ENTAPORTANTES.DOCUMENTO\nFROM "+context.db_origen_Schema+".GEN_ENTAPORTANTES WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_35_QUERY",dbquery_tOracleInput_35);

		    java.sql.ResultSet rs_tOracleInput_35 = null;

		    try {
		    	rs_tOracleInput_35 = stmt_tOracleInput_35.executeQuery(dbquery_tOracleInput_35);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_35 = rs_tOracleInput_35.getMetaData();
		    	int colQtyInRs_tOracleInput_35 = rsmd_tOracleInput_35.getColumnCount();

		    String tmpContent_tOracleInput_35 = null;
		    
		    
		    while (rs_tOracleInput_35.next()) {
		        nb_line_tOracleInput_35++;
		        
							if(colQtyInRs_tOracleInput_35 < 1) {
								row64.ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(1) != null) {
						row64.ID = rs_tOracleInput_35.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 2) {
								row64.NOMBRE = null;
							} else {
	                         		
        	row64.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_35 < 3) {
								row64.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(3) != null) {
						row64.TDOCUMENTOS_ID = rs_tOracleInput_35.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 4) {
								row64.DOCUMENTO = null;
							} else {
	                         		
        	row64.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 4, false);
		                    }
					




 



/**
 * [tOracleInput_35 begin ] stop
 */
	
	/**
	 * [tOracleInput_35 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 


	tos_count_tOracleInput_35++;

/**
 * [tOracleInput_35 main ] stop
 */
	
	/**
	 * [tOracleInput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row64"
						
						);
					}
					


			   
			   

					row64Struct row64_HashRow = new row64Struct();
		   	   	   
				
				row64_HashRow.ID = row64.ID;
				
				row64_HashRow.NOMBRE = row64.NOMBRE;
				
				row64_HashRow.TDOCUMENTOS_ID = row64.TDOCUMENTOS_ID;
				
				row64_HashRow.DOCUMENTO = row64.DOCUMENTO;
				
			tHash_Lookup_row64.put(row64_HashRow);
			
            




 


	tos_count_tAdvancedHash_row64++;

/**
 * [tAdvancedHash_row64 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row64 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row64 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_35 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

}
}finally{
	if (rs_tOracleInput_35 != null) {
		rs_tOracleInput_35.close();
	}
	if (stmt_tOracleInput_35 != null) {
		stmt_tOracleInput_35.close();
	}
}

globalMap.put("tOracleInput_35_NB_LINE",nb_line_tOracleInput_35);
 

ok_Hash.put("tOracleInput_35", true);
end_Hash.put("tOracleInput_35", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_35", end_Hash.get("tOracleInput_35")-start_Hash.get("tOracleInput_35"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_35 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

tHash_Lookup_row64.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row64");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row64", true);
end_Hash.put("tAdvancedHash_row64", System.currentTimeMillis());




/**
 * [tAdvancedHash_row64 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_35 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 1);
	}
	


public static class row65Struct implements routines.system.IPersistableComparableLookupRow<row65Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 200;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row65Struct other = (row65Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row65Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row65Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row65Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_36Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row65Struct row65 = new row65Struct();




	
	/**
	 * [tAdvancedHash_row65 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row65", false);
		start_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row65");
					}
				
		int tos_count_tAdvancedHash_row65 = 0;
		

			   		// connection name:row65
			   		// source node:tOracleInput_36 - inputs:(after_tHashInput_2) outputs:(row65,row65) | target node:tAdvancedHash_row65 - inputs:(row65) outputs:()
			   		// linked node: tMap_15 - inputs:(row76,row64,row65,row66) outputs:(INGRESO_ENTAPORTANTE)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row65 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row65Struct>getLookup(matchingModeEnum_row65);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row65", tHash_Lookup_row65);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row65 begin ] stop
 */



	
	/**
	 * [tOracleInput_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_36", false);
		start_Hash.put("tOracleInput_36", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_36");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_36";
	
	
		int tos_count_tOracleInput_36 = 0;
		
	


	
		    int nb_line_tOracleInput_36 = 0;
		    java.sql.Connection conn_tOracleInput_36 = null;
				conn_tOracleInput_36 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_36 = false;
				boolean isConnectionWrapped_tOracleInput_36 = !(conn_tOracleInput_36 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_36.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_36 = null;
                if (isConnectionWrapped_tOracleInput_36) {
					unwrappedOraConn_tOracleInput_36 = conn_tOracleInput_36.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_36 != null) {
                        isTimeZoneNull_tOracleInput_36 = (unwrappedOraConn_tOracleInput_36.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_36 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_36).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_36) {
					java.sql.Statement stmtGetTZ_tOracleInput_36 = conn_tOracleInput_36.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_36 = stmtGetTZ_tOracleInput_36.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_36 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_36.next()) {
						sessionTimezone_tOracleInput_36 = rsGetTZ_tOracleInput_36.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_36 && unwrappedOraConn_tOracleInput_36 != null) {
                        unwrappedOraConn_tOracleInput_36.setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_36).setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_36 = conn_tOracleInput_36.createStatement();

		    String dbquery_tOracleInput_36 = "SELECT ID, NOMBRE FROM AFI_TVINCULACIONES WHERE ESTREGISTRO_ID = 1 AND TVINCULACIONES = 'RC'";
		    

		    globalMap.put("tOracleInput_36_QUERY",dbquery_tOracleInput_36);

		    java.sql.ResultSet rs_tOracleInput_36 = null;

		    try {
		    	rs_tOracleInput_36 = stmt_tOracleInput_36.executeQuery(dbquery_tOracleInput_36);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_36 = rs_tOracleInput_36.getMetaData();
		    	int colQtyInRs_tOracleInput_36 = rsmd_tOracleInput_36.getColumnCount();

		    String tmpContent_tOracleInput_36 = null;
		    
		    
		    while (rs_tOracleInput_36.next()) {
		        nb_line_tOracleInput_36++;
		        
							if(colQtyInRs_tOracleInput_36 < 1) {
								row65.ID = null;
							} else {
		                          
					if(rs_tOracleInput_36.getObject(1) != null) {
						row65.ID = rs_tOracleInput_36.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_36 < 2) {
								row65.NOMBRE = null;
							} else {
	                         		
        	row65.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_36, 2, false);
		                    }
					




 



/**
 * [tOracleInput_36 begin ] stop
 */
	
	/**
	 * [tOracleInput_36 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 


	tos_count_tOracleInput_36++;

/**
 * [tOracleInput_36 main ] stop
 */
	
	/**
	 * [tOracleInput_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row65"
						
						);
					}
					


			   
			   

					row65Struct row65_HashRow = new row65Struct();
		   	   	   
				
				row65_HashRow.ID = row65.ID;
				
				row65_HashRow.NOMBRE = row65.NOMBRE;
				
			tHash_Lookup_row65.put(row65_HashRow);
			
            




 


	tos_count_tAdvancedHash_row65++;

/**
 * [tAdvancedHash_row65 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_36 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

}
}finally{
	if (rs_tOracleInput_36 != null) {
		rs_tOracleInput_36.close();
	}
	if (stmt_tOracleInput_36 != null) {
		stmt_tOracleInput_36.close();
	}
}

globalMap.put("tOracleInput_36_NB_LINE",nb_line_tOracleInput_36);
 

ok_Hash.put("tOracleInput_36", true);
end_Hash.put("tOracleInput_36", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_36", end_Hash.get("tOracleInput_36")-start_Hash.get("tOracleInput_36"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_36 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

tHash_Lookup_row65.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row65");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row65", true);
end_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());




/**
 * [tAdvancedHash_row65 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_36 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 1);
	}
	


public static class row66Struct implements routines.system.IPersistableComparableLookupRow<row66Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row66Struct other = (row66Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row66Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row66Struct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row66Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_41Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row66Struct row66 = new row66Struct();




	
	/**
	 * [tAdvancedHash_row66 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row66", false);
		start_Hash.put("tAdvancedHash_row66", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row66";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row66");
					}
				
		int tos_count_tAdvancedHash_row66 = 0;
		

			   		// connection name:row66
			   		// source node:tOracleInput_41 - inputs:(after_tHashInput_2) outputs:(row66,row66) | target node:tAdvancedHash_row66 - inputs:(row66) outputs:()
			   		// linked node: tMap_15 - inputs:(row76,row64,row65,row66) outputs:(INGRESO_ENTAPORTANTE)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row66 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct> tHash_Lookup_row66 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row66Struct>getLookup(matchingModeEnum_row66);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row66", tHash_Lookup_row66);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row66 begin ] stop
 */



	
	/**
	 * [tOracleInput_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_41", false);
		start_Hash.put("tOracleInput_41", System.currentTimeMillis());
		
				tStatCatcher_1.addMessage("begin","tOracleInput_41");
				tStatCatcher_1Process(globalMap);
			
	
	currentComponent="tOracleInput_41";
	
	
		int tos_count_tOracleInput_41 = 0;
		
	


	
		    int nb_line_tOracleInput_41 = 0;
		    java.sql.Connection conn_tOracleInput_41 = null;
				String driverClass_tOracleInput_41 = "oracle.jdbc.OracleDriver";
				java.lang.Class.forName(driverClass_tOracleInput_41);
				
			String url_tOracleInput_41 = null;
				url_tOracleInput_41 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";

				String dbUser_tOracleInput_41 = context.db_origen_Login;

				

				
	final String decryptedPassword_tOracleInput_41 = context.db_origen_Password; 

				String dbPwd_tOracleInput_41 = decryptedPassword_tOracleInput_41;

				
					java.util.Properties atnParamsPrope_tOracleInput_41 = new java.util.Properties();
					atnParamsPrope_tOracleInput_41.put("user",dbUser_tOracleInput_41);
					atnParamsPrope_tOracleInput_41.put("password",dbPwd_tOracleInput_41);
                    if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                        atnParamsPrope_tOracleInput_41.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
                    }
					conn_tOracleInput_41 = java.sql.DriverManager.getConnection(url_tOracleInput_41, atnParamsPrope_tOracleInput_41);
				java.sql.Statement stmtGetTZ_tOracleInput_41 = conn_tOracleInput_41.createStatement();
				java.sql.ResultSet rsGetTZ_tOracleInput_41 = stmtGetTZ_tOracleInput_41.executeQuery("select sessiontimezone from dual");
				String sessionTimezone_tOracleInput_41 = java.util.TimeZone.getDefault().getID();
				while (rsGetTZ_tOracleInput_41.next()) {
					sessionTimezone_tOracleInput_41 = rsGetTZ_tOracleInput_41.getString(1);
				}
                                if (!(conn_tOracleInput_41 instanceof oracle.jdbc.OracleConnection) &&
                                        conn_tOracleInput_41.isWrapperFor(oracle.jdbc.OracleConnection.class)) {
                                    if (conn_tOracleInput_41.unwrap(oracle.jdbc.OracleConnection.class) != null) {
                                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_41.unwrap(oracle.jdbc.OracleConnection.class)).setSessionTimeZone(sessionTimezone_tOracleInput_41);
                                    }
                                } else {
                                    ((oracle.jdbc.OracleConnection)conn_tOracleInput_41).setSessionTimeZone(sessionTimezone_tOracleInput_41);
                                }
		    
			java.sql.Statement stmt_tOracleInput_41 = conn_tOracleInput_41.createStatement();

		    String dbquery_tOracleInput_41 = "SELECT ID, NOMBRE FROM AFI_TCOTIZACION WHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_41_QUERY",dbquery_tOracleInput_41);

		    java.sql.ResultSet rs_tOracleInput_41 = null;

		    try {
		    	rs_tOracleInput_41 = stmt_tOracleInput_41.executeQuery(dbquery_tOracleInput_41);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_41 = rs_tOracleInput_41.getMetaData();
		    	int colQtyInRs_tOracleInput_41 = rsmd_tOracleInput_41.getColumnCount();

		    String tmpContent_tOracleInput_41 = null;
		    
		    
		    while (rs_tOracleInput_41.next()) {
		        nb_line_tOracleInput_41++;
		        
							if(colQtyInRs_tOracleInput_41 < 1) {
								row66.ID = null;
							} else {
		                          
					if(rs_tOracleInput_41.getObject(1) != null) {
						row66.ID = rs_tOracleInput_41.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_41 < 2) {
								row66.NOMBRE = null;
							} else {
	                         		
        	row66.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_41, 2, false);
		                    }
					




 



/**
 * [tOracleInput_41 begin ] stop
 */
	
	/**
	 * [tOracleInput_41 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 


	tos_count_tOracleInput_41++;

/**
 * [tOracleInput_41 main ] stop
 */
	
	/**
	 * [tOracleInput_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row66"
						
						);
					}
					


			   
			   

					row66Struct row66_HashRow = new row66Struct();
		   	   	   
				
				row66_HashRow.ID = row66.ID;
				
				row66_HashRow.NOMBRE = row66.NOMBRE;
				
			tHash_Lookup_row66.put(row66_HashRow);
			
            




 


	tos_count_tAdvancedHash_row66++;

/**
 * [tAdvancedHash_row66 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row66 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row66 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_41 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

}
}finally{
	if (rs_tOracleInput_41 != null) {
		rs_tOracleInput_41.close();
	}
	if (stmt_tOracleInput_41 != null) {
		stmt_tOracleInput_41.close();
	}
	if(conn_tOracleInput_41 != null && !conn_tOracleInput_41.isClosed()) {
	
			conn_tOracleInput_41.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}
	
}

globalMap.put("tOracleInput_41_NB_LINE",nb_line_tOracleInput_41);
 

ok_Hash.put("tOracleInput_41", true);
end_Hash.put("tOracleInput_41", System.currentTimeMillis());

tStatCatcher_1.addMessage("end","tOracleInput_41", end_Hash.get("tOracleInput_41")-start_Hash.get("tOracleInput_41"));
tStatCatcher_1Process(globalMap);



/**
 * [tOracleInput_41 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

tHash_Lookup_row66.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row66");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row66", true);
end_Hash.put("tAdvancedHash_row66", System.currentTimeMillis());




/**
 * [tAdvancedHash_row66 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_41 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 1);
	}
	


public static class row71Struct implements routines.system.IPersistableRow<row71Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return 0;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return false;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return 0;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row71Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row71Struct row71 = new row71Struct();




	
	/**
	 * [tAdvancedHash_row71 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row71", false);
		start_Hash.put("tAdvancedHash_row71", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row71";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row71");
					}
				
		int tos_count_tAdvancedHash_row71 = 0;
		

			   		// connection name:row71
			   		// source node:tHashInput_1 - inputs:(after_tHashInput_2) outputs:(row71,row71) | target node:tAdvancedHash_row71 - inputs:(row71) outputs:()
			   		// linked node: tMap_43 - inputs:(COTIZANTES,row71) outputs:(ALL_COTIZANTES)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row71 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct> tHash_Lookup_row71 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row71Struct>getLookup(matchingModeEnum_row71);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row71", tHash_Lookup_row71);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row71 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row61Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row61Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row61Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row71.ID = next_tHashInput_1.ID;
	row71.ENTAPORTANTES_ID = next_tHashInput_1.ENTAPORTANTES_ID;
	row71.TVINCULACIONES_ID = next_tHashInput_1.TVINCULACIONES_ID;
	row71.TCOTIZACION_ID = next_tHashInput_1.TCOTIZACION_ID;
	row71.PERIODO = next_tHashInput_1.PERIODO;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row71"
						
						);
					}
					


			   
			   

					row71Struct row71_HashRow = new row71Struct();
		   	   	   
				
				row71_HashRow.ID = row71.ID;
				
				row71_HashRow.ENTAPORTANTES_ID = row71.ENTAPORTANTES_ID;
				
				row71_HashRow.TVINCULACIONES_ID = row71.TVINCULACIONES_ID;
				
				row71_HashRow.TCOTIZACION_ID = row71.TCOTIZACION_ID;
				
				row71_HashRow.PERIODO = row71.PERIODO;
				
			tHash_Lookup_row71.put(row71_HashRow);
			
            




 


	tos_count_tAdvancedHash_row71++;

/**
 * [tAdvancedHash_row71 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row71 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row71 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

tHash_Lookup_row71.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row71");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row71", true);
end_Hash.put("tAdvancedHash_row71", System.currentTimeMillis());




/**
 * [tAdvancedHash_row71 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row72Struct implements routines.system.IPersistableRow<row72Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return 0;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return 0;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return false;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return 0;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return false;
				}
				public Boolean PERIODOIsKey(){
				    return false;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row72Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row72Struct row72 = new row72Struct();




	
	/**
	 * [tAdvancedHash_row72 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row72", false);
		start_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row72";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row72");
					}
				
		int tos_count_tAdvancedHash_row72 = 0;
		

			   		// connection name:row72
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_4) outputs:(row72,row72) | target node:tAdvancedHash_row72 - inputs:(row72) outputs:()
			   		// linked node: tMap_44 - inputs:(row72,BENEFICIARIOS) outputs:(ALL_BENEFICIARIOS,ALL_BENEFICIARIOS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row72 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row72Struct>getLookup(matchingModeEnum_row72);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row72", tHash_Lookup_row72);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row72 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row61Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row61Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row61Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row72.ID = next_tHashInput_3.ID;
	row72.ENTAPORTANTES_ID = next_tHashInput_3.ENTAPORTANTES_ID;
	row72.TVINCULACIONES_ID = next_tHashInput_3.TVINCULACIONES_ID;
	row72.TCOTIZACION_ID = next_tHashInput_3.TCOTIZACION_ID;
	row72.PERIODO = next_tHashInput_3.PERIODO;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row72"
						
						);
					}
					


			   
			   

					row72Struct row72_HashRow = new row72Struct();
		   	   	   
				
				row72_HashRow.ID = row72.ID;
				
				row72_HashRow.ENTAPORTANTES_ID = row72.ENTAPORTANTES_ID;
				
				row72_HashRow.TVINCULACIONES_ID = row72.TVINCULACIONES_ID;
				
				row72_HashRow.TCOTIZACION_ID = row72.TCOTIZACION_ID;
				
				row72_HashRow.PERIODO = row72.PERIODO;
				
			tHash_Lookup_row72.put(row72_HashRow);
			
            




 


	tos_count_tAdvancedHash_row72++;

/**
 * [tAdvancedHash_row72 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row72 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row72 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

tHash_Lookup_row72.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row72");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row72", true);
end_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());




/**
 * [tAdvancedHash_row72 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class ALL_BENEFICIARIOSStruct implements routines.system.IPersistableComparableLookupRow<ALL_BENEFICIARIOSStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final ALL_BENEFICIARIOSStruct other = (ALL_BENEFICIARIOSStruct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(ALL_BENEFICIARIOSStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(ALL_BENEFICIARIOSStruct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,ois);
					
       			    	this.CANTIDAD_BENEFICIARIOS = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,objectIn);
					
       			    	this.CANTIDAD_BENEFICIARIOS = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.GRUPO_ETAREO, dos, oos);
					
       			    	oos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.GRUPO_ETAREO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ALL_BENEFICIARIOSStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class BENEFICIARIOSStruct implements routines.system.IPersistableRow<BENEFICIARIOSStruct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(BENEFICIARIOSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row69Struct implements routines.system.IPersistableRow<row69Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row69Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_4Struct other = (after_tHashInput_4Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_4Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            
	}

	public void copyKeysDataTo(after_tHashInput_4Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);
		tHashInput_7Process(globalMap);

		row69Struct row69 = new row69Struct();
BENEFICIARIOSStruct BENEFICIARIOS = new BENEFICIARIOSStruct();
ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOS = new ALL_BENEFICIARIOSStruct();






	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_ALL_BENEFICIARIOS", false);
		start_Hash.put("tAdvancedHash_ALL_BENEFICIARIOS", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ALL_BENEFICIARIOS");
					}
				
		int tos_count_tAdvancedHash_ALL_BENEFICIARIOS = 0;
		

			   		// connection name:ALL_BENEFICIARIOS
			   		// source node:tMap_44 - inputs:(row72,BENEFICIARIOS) outputs:(ALL_BENEFICIARIOS,ALL_BENEFICIARIOS) | target node:tAdvancedHash_ALL_BENEFICIARIOS - inputs:(ALL_BENEFICIARIOS) outputs:()
			   		// linked node: tMap_42 - inputs:(ALL_COTIZANTES,ALL_BENEFICIARIOS) outputs:(TODOS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_ALL_BENEFICIARIOS = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<ALL_BENEFICIARIOSStruct> tHash_Lookup_ALL_BENEFICIARIOS =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<ALL_BENEFICIARIOSStruct>getLookup(matchingModeEnum_ALL_BENEFICIARIOS);
	   						   
		   	   	   globalMap.put("tHash_Lookup_ALL_BENEFICIARIOS", tHash_Lookup_ALL_BENEFICIARIOS);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_ALL_BENEFICIARIOS begin ] stop
 */



	
	/**
	 * [tMap_44 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_44", false);
		start_Hash.put("tMap_44", System.currentTimeMillis());
		
	
	currentComponent="tMap_44";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"BENEFICIARIOS");
					}
				
		int tos_count_tMap_44 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) 
					globalMap.get( "tHash_Lookup_row72" ))
					;					
					
	

row72Struct row72HashKey = new row72Struct();
row72Struct row72Default = new row72Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_44__Struct  {
}
Var__tMap_44__Struct Var__tMap_44 = new Var__tMap_44__Struct();
// ###############################

// ###############################
// # Outputs initialization
ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOS_tmp = new ALL_BENEFICIARIOSStruct();
// ###############################

        
        



        









 



/**
 * [tMap_44 begin ] stop
 */



	
	/**
	 * [tMap_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_41", false);
		start_Hash.put("tMap_41", System.currentTimeMillis());
		
	
	currentComponent="tMap_41";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row69");
					}
				
		int tos_count_tMap_41 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct> tHash_Lookup_row70 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct>) 
					globalMap.get( "tHash_Lookup_row70" ))
					;					
					
	
		tHash_Lookup_row70.initGet();
	

row70Struct row70HashKey = new row70Struct();
row70Struct row70Default = new row70Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_41__Struct  {
}
Var__tMap_41__Struct Var__tMap_41 = new Var__tMap_41__Struct();
// ###############################

// ###############################
// # Outputs initialization
BENEFICIARIOSStruct BENEFICIARIOS_tmp = new BENEFICIARIOSStruct();
// ###############################

        
        



        









 



/**
 * [tMap_41 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row55Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row55Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row69.GRUPO_ETAREO_ID = next_tHashInput_4.GRUPO_ETAREO_ID;
	row69.GRUPO_ETAREO = next_tHashInput_4.GRUPO_ETAREO;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_41 main ] start
	 */

	

	
	
	currentComponent="tMap_41";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row69"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_41 = false;
		
						row70Struct row70 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_41 = false;
		boolean mainRowRejected_tMap_41 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row70" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow70 = false;
       		  	    	
       		  	    	
 							row70Struct row70ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_41) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row70.lookup( row70HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row70.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow70 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow70 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row70 != null && tHash_Lookup_row70.hasNext()) || forceLooprow70) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row70'
									
                    		  	 
							   
                    		  	 
	       		  	    	row70Struct fromLookup_row70 = null;
							row70 = row70Default;
										 
							
								
								if(!forceLooprow70) { // G 46
								
							
								 
							
								
								fromLookup_row70 = tHash_Lookup_row70.next();

							

							if(fromLookup_row70 != null) {
								row70 = fromLookup_row70;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow70 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_41__Struct Var = Var__tMap_41;// ###############################
        // ###############################
        // # Output tables

BENEFICIARIOS = null;


// # Output table : 'BENEFICIARIOS'
BENEFICIARIOS_tmp.GRUPO_ETAREO_ID = row69.GRUPO_ETAREO_ID ;
BENEFICIARIOS_tmp.GRUPO_ETAREO = row69.GRUPO_ETAREO ;
BENEFICIARIOS_tmp.ID = row70.ID ;
BENEFICIARIOS_tmp.ENTAPORTANTES_ID = row70.ENTAPORTANTES_ID ;
BENEFICIARIOS_tmp.TVINCULACIONES_ID = row70.TVINCULACIONES_ID ;
BENEFICIARIOS_tmp.TCOTIZACION_ID = row70.TCOTIZACION_ID ;
BENEFICIARIOS_tmp.PERIODO = row70.PERIODO == null ? context.PERIODO : row70.PERIODO ;
BENEFICIARIOS_tmp.CANTIDAD_BENEFICIARIOS = row70.CANTIDAD_BENEFICIARIOS ;
BENEFICIARIOS = BENEFICIARIOS_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_41 = false;










 


	tos_count_tMap_41++;

/**
 * [tMap_41 main ] stop
 */
	
	/**
	 * [tMap_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_41";
	
	

 



/**
 * [tMap_41 process_data_begin ] stop
 */
// Start of branch "BENEFICIARIOS"
if(BENEFICIARIOS != null) { 



	
	/**
	 * [tMap_44 main ] start
	 */

	

	
	
	currentComponent="tMap_44";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"BENEFICIARIOS"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_44 = false;
		
						row72Struct row72 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_44 = false;
		boolean mainRowRejected_tMap_44 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row72" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow72 = false;
       		  	    	
       		  	    	
 							row72Struct row72ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_44) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row72.lookup( row72HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row72 != null && tHash_Lookup_row72.getCount(row72HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row72' and it contains more one result from keys : ");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row72Struct fromLookup_row72 = null;
							row72 = row72Default;
										 
							
								 
							
							
								if (tHash_Lookup_row72 !=null && tHash_Lookup_row72.hasNext()) { // G 099
								
							
								
								fromLookup_row72 = tHash_Lookup_row72.next();

							
							
								} // G 099
							
							

							if(fromLookup_row72 != null) {
								row72 = fromLookup_row72;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_44__Struct Var = Var__tMap_44;// ###############################
        // ###############################
        // # Output tables

ALL_BENEFICIARIOS = null;


// # Output table : 'ALL_BENEFICIARIOS'
ALL_BENEFICIARIOS_tmp.GRUPO_ETAREO_ID = BENEFICIARIOS.GRUPO_ETAREO_ID ;
ALL_BENEFICIARIOS_tmp.GRUPO_ETAREO = BENEFICIARIOS.GRUPO_ETAREO ;
ALL_BENEFICIARIOS_tmp.ID = BENEFICIARIOS.ID == null ? row72.ID : BENEFICIARIOS.ID ;
ALL_BENEFICIARIOS_tmp.ENTAPORTANTES_ID = BENEFICIARIOS.ENTAPORTANTES_ID == null ? row72.ENTAPORTANTES_ID : BENEFICIARIOS.ENTAPORTANTES_ID ;
ALL_BENEFICIARIOS_tmp.TVINCULACIONES_ID = BENEFICIARIOS.TVINCULACIONES_ID == null ? row72.TVINCULACIONES_ID : BENEFICIARIOS.TVINCULACIONES_ID ;
ALL_BENEFICIARIOS_tmp.TCOTIZACION_ID = BENEFICIARIOS.TCOTIZACION_ID == null ? row72.TCOTIZACION_ID : BENEFICIARIOS.TCOTIZACION_ID ;
ALL_BENEFICIARIOS_tmp.PERIODO = BENEFICIARIOS.PERIODO ;
ALL_BENEFICIARIOS_tmp.CANTIDAD_BENEFICIARIOS = BENEFICIARIOS.ID == null ? BigDecimal.ZERO : BENEFICIARIOS.CANTIDAD_BENEFICIARIOS ;
ALL_BENEFICIARIOS = ALL_BENEFICIARIOS_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_44 = false;










 


	tos_count_tMap_44++;

/**
 * [tMap_44 main ] stop
 */
	
	/**
	 * [tMap_44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_44";
	
	

 



/**
 * [tMap_44 process_data_begin ] stop
 */
// Start of branch "ALL_BENEFICIARIOS"
if(ALL_BENEFICIARIOS != null) { 



	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ALL_BENEFICIARIOS"
						
						);
					}
					


			   
			   

					ALL_BENEFICIARIOSStruct ALL_BENEFICIARIOS_HashRow = new ALL_BENEFICIARIOSStruct();
		   	   	   
				
				ALL_BENEFICIARIOS_HashRow.GRUPO_ETAREO_ID = ALL_BENEFICIARIOS.GRUPO_ETAREO_ID;
				
				ALL_BENEFICIARIOS_HashRow.GRUPO_ETAREO = ALL_BENEFICIARIOS.GRUPO_ETAREO;
				
				ALL_BENEFICIARIOS_HashRow.ID = ALL_BENEFICIARIOS.ID;
				
				ALL_BENEFICIARIOS_HashRow.ENTAPORTANTES_ID = ALL_BENEFICIARIOS.ENTAPORTANTES_ID;
				
				ALL_BENEFICIARIOS_HashRow.TVINCULACIONES_ID = ALL_BENEFICIARIOS.TVINCULACIONES_ID;
				
				ALL_BENEFICIARIOS_HashRow.TCOTIZACION_ID = ALL_BENEFICIARIOS.TCOTIZACION_ID;
				
				ALL_BENEFICIARIOS_HashRow.PERIODO = ALL_BENEFICIARIOS.PERIODO;
				
				ALL_BENEFICIARIOS_HashRow.CANTIDAD_BENEFICIARIOS = ALL_BENEFICIARIOS.CANTIDAD_BENEFICIARIOS;
				
			tHash_Lookup_ALL_BENEFICIARIOS.put(ALL_BENEFICIARIOS_HashRow);
			
            




 


	tos_count_tAdvancedHash_ALL_BENEFICIARIOS++;

/**
 * [tAdvancedHash_ALL_BENEFICIARIOS main ] stop
 */
	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	

 



/**
 * [tAdvancedHash_ALL_BENEFICIARIOS process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	

 



/**
 * [tAdvancedHash_ALL_BENEFICIARIOS process_data_end ] stop
 */

} // End of branch "ALL_BENEFICIARIOS"




	
	/**
	 * [tMap_44 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_44";
	
	

 



/**
 * [tMap_44 process_data_end ] stop
 */

} // End of branch "BENEFICIARIOS"



	
		} // close loop of lookup 'row70' // G_TM_M_043
	
	
	/**
	 * [tMap_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_41";
	
	

 



/**
 * [tMap_41 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_41 end ] start
	 */

	

	
	
	currentComponent="tMap_41";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row70 != null) {
						tHash_Lookup_row70.endGet();
					}
					globalMap.remove( "tHash_Lookup_row70" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row69");
			  	}
			  	
 

ok_Hash.put("tMap_41", true);
end_Hash.put("tMap_41", System.currentTimeMillis());




/**
 * [tMap_41 end ] stop
 */

	
	/**
	 * [tMap_44 end ] start
	 */

	

	
	
	currentComponent="tMap_44";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row72 != null) {
						tHash_Lookup_row72.endGet();
					}
					globalMap.remove( "tHash_Lookup_row72" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"BENEFICIARIOS");
			  	}
			  	
 

ok_Hash.put("tMap_44", true);
end_Hash.put("tMap_44", System.currentTimeMillis());




/**
 * [tMap_44 end ] stop
 */

	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	

tHash_Lookup_ALL_BENEFICIARIOS.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ALL_BENEFICIARIOS");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_ALL_BENEFICIARIOS", true);
end_Hash.put("tAdvancedHash_ALL_BENEFICIARIOS", System.currentTimeMillis());




/**
 * [tAdvancedHash_ALL_BENEFICIARIOS end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_44"
					     			globalMap.remove("tHash_Lookup_row72"); 
				     			
					     			//free memory for "tMap_41"
					     			globalMap.remove("tHash_Lookup_row70"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_41 finally ] start
	 */

	

	
	
	currentComponent="tMap_41";
	
	

 



/**
 * [tMap_41 finally ] stop
 */

	
	/**
	 * [tMap_44 finally ] start
	 */

	

	
	
	currentComponent="tMap_44";
	
	

 



/**
 * [tMap_44 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_ALL_BENEFICIARIOS finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_ALL_BENEFICIARIOS";
	
	

 



/**
 * [tAdvancedHash_ALL_BENEFICIARIOS finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row68Struct implements routines.system.IPersistableRow<row68Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.APORTE_EMPLEADO = (BigDecimal) dis.readObject();
					
						this.APORTE_EMPLEADOR = (BigDecimal) dis.readObject();
					
						this.CANTIDAD_COTIZANTES = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.APORTE_EMPLEADOR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();




	
	/**
	 * [tAdvancedHash_row68 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row68", false);
		start_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tAdvancedHash_row68 = 0;
		

			   		// connection name:row68
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_2) outputs:(row68,row68) | target node:tAdvancedHash_row68 - inputs:(row68) outputs:()
			   		// linked node: tMap_40 - inputs:(row67,row68) outputs:(COTIZANTES)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row68 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row68Struct>getLookup(matchingModeEnum_row68);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row68", tHash_Lookup_row68);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row68 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row78Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row78Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row68.GRUPO_ETAREO_ID = next_tHashInput_5.GRUPO_ETAREO_ID;
	row68.GRUPO_ETAREO = next_tHashInput_5.GRUPO_ETAREO;
	row68.ID = next_tHashInput_5.ID;
	row68.ENTAPORTANTES_ID = next_tHashInput_5.ENTAPORTANTES_ID;
	row68.TVINCULACIONES_ID = next_tHashInput_5.TVINCULACIONES_ID;
	row68.TCOTIZACION_ID = next_tHashInput_5.TCOTIZACION_ID;
	row68.PERIODO = next_tHashInput_5.PERIODO;
	row68.APORTE_EMPLEADO = next_tHashInput_5.APORTE_EMPLEADO;
	row68.APORTE_EMPLEADOR = next_tHashInput_5.APORTE_EMPLEADOR;
	row68.CANTIDAD_COTIZANTES = next_tHashInput_5.CANTIDAD_COTIZANTES;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					


			   
			   

					row68Struct row68_HashRow = new row68Struct();
		   	   	   
				
				row68_HashRow.GRUPO_ETAREO_ID = row68.GRUPO_ETAREO_ID;
				
				row68_HashRow.GRUPO_ETAREO = row68.GRUPO_ETAREO;
				
				row68_HashRow.ID = row68.ID;
				
				row68_HashRow.ENTAPORTANTES_ID = row68.ENTAPORTANTES_ID;
				
				row68_HashRow.TVINCULACIONES_ID = row68.TVINCULACIONES_ID;
				
				row68_HashRow.TCOTIZACION_ID = row68.TCOTIZACION_ID;
				
				row68_HashRow.PERIODO = row68.PERIODO;
				
				row68_HashRow.APORTE_EMPLEADO = row68.APORTE_EMPLEADO;
				
				row68_HashRow.APORTE_EMPLEADOR = row68.APORTE_EMPLEADOR;
				
				row68_HashRow.CANTIDAD_COTIZANTES = row68.CANTIDAD_COTIZANTES;
				
			tHash_Lookup_row68.put(row68_HashRow);
			
            




 


	tos_count_tAdvancedHash_row68++;

/**
 * [tAdvancedHash_row68 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

tHash_Lookup_row68.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row68", true);
end_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());




/**
 * [tAdvancedHash_row68 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row84Struct implements routines.system.IPersistableComparableLookupRow<row84Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADO;

				public BigDecimal getAPORTE_EMPLEADO () {
					return this.APORTE_EMPLEADO;
				}

				public Boolean APORTE_EMPLEADOIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADOIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADOLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADOPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADODefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADOPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOOriginalDbColumnName(){
				
					return "APORTE_EMPLEADO";
				
				}

				
			    public BigDecimal APORTE_EMPLEADOR;

				public BigDecimal getAPORTE_EMPLEADOR () {
					return this.APORTE_EMPLEADOR;
				}

				public Boolean APORTE_EMPLEADORIsNullable(){
				    return true;
				}
				public Boolean APORTE_EMPLEADORIsKey(){
				    return false;
				}
				public Integer APORTE_EMPLEADORLength(){
				    return 0;
				}
				public Integer APORTE_EMPLEADORPrecision(){
				    return 0;
				}
				public String APORTE_EMPLEADORDefault(){
				
					return "";
				
				}
				public String APORTE_EMPLEADORComment(){
				
				    return "";
				
				}
				public String APORTE_EMPLEADORPattern(){
				
					return "";
				
				}
				public String APORTE_EMPLEADOROriginalDbColumnName(){
				
					return "APORTE_EMPLEADOR";
				
				}

				
			    public BigDecimal CANTIDAD_COTIZANTES;

				public BigDecimal getCANTIDAD_COTIZANTES () {
					return this.CANTIDAD_COTIZANTES;
				}

				public Boolean CANTIDAD_COTIZANTESIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_COTIZANTESIsKey(){
				    return false;
				}
				public Integer CANTIDAD_COTIZANTESLength(){
				    return 0;
				}
				public Integer CANTIDAD_COTIZANTESPrecision(){
				    return 0;
				}
				public String CANTIDAD_COTIZANTESDefault(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESComment(){
				
				    return "";
				
				}
				public String CANTIDAD_COTIZANTESPattern(){
				
					return "";
				
				}
				public String CANTIDAD_COTIZANTESOriginalDbColumnName(){
				
					return "CANTIDAD_COTIZANTES";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row84Struct other = (row84Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row84Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.APORTE_EMPLEADO = this.APORTE_EMPLEADO;
	            other.APORTE_EMPLEADOR = this.APORTE_EMPLEADOR;
	            other.CANTIDAD_COTIZANTES = this.CANTIDAD_COTIZANTES;
	            
	}

	public void copyKeysDataTo(row84Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,ois);
					
       			    	this.APORTE_EMPLEADO = (BigDecimal) ois.readObject();
					
       			    	this.APORTE_EMPLEADOR = (BigDecimal) ois.readObject();
					
       			    	this.CANTIDAD_COTIZANTES = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,objectIn);
					
       			    	this.APORTE_EMPLEADO = (BigDecimal) objectIn.readObject();
					
       			    	this.APORTE_EMPLEADOR = (BigDecimal) objectIn.readObject();
					
       			    	this.CANTIDAD_COTIZANTES = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.GRUPO_ETAREO, dos, oos);
					
       			    	oos.writeObject(this.APORTE_EMPLEADO);
					
       			    	oos.writeObject(this.APORTE_EMPLEADOR);
					
       			    	oos.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.GRUPO_ETAREO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.APORTE_EMPLEADO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.APORTE_EMPLEADOR);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD_COTIZANTES);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",APORTE_EMPLEADO="+String.valueOf(APORTE_EMPLEADO));
		sb.append(",APORTE_EMPLEADOR="+String.valueOf(APORTE_EMPLEADOR));
		sb.append(",CANTIDAD_COTIZANTES="+String.valueOf(CANTIDAD_COTIZANTES));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row84Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row84Struct row84 = new row84Struct();




	
	/**
	 * [tAdvancedHash_row84 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row84", false);
		start_Hash.put("tAdvancedHash_row84", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row84";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row84");
					}
				
		int tos_count_tAdvancedHash_row84 = 0;
		

			   		// connection name:row84
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_2) outputs:(row84,row84) | target node:tAdvancedHash_row84 - inputs:(row84) outputs:()
			   		// linked node: tMap_46 - inputs:(row80,row84,row85) outputs:(ALL_XYZ)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row84 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct> tHash_Lookup_row84 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row84Struct>getLookup(matchingModeEnum_row84);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row84", tHash_Lookup_row84);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row84 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row78Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row78Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row78Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row84.GRUPO_ETAREO_ID = next_tHashInput_6.GRUPO_ETAREO_ID;
	row84.GRUPO_ETAREO = next_tHashInput_6.GRUPO_ETAREO;
	row84.ID = next_tHashInput_6.ID;
	row84.ENTAPORTANTES_ID = next_tHashInput_6.ENTAPORTANTES_ID;
	row84.TVINCULACIONES_ID = next_tHashInput_6.TVINCULACIONES_ID;
	row84.TCOTIZACION_ID = next_tHashInput_6.TCOTIZACION_ID;
	row84.PERIODO = next_tHashInput_6.PERIODO;
	row84.APORTE_EMPLEADO = next_tHashInput_6.APORTE_EMPLEADO;
	row84.APORTE_EMPLEADOR = next_tHashInput_6.APORTE_EMPLEADOR;
	row84.CANTIDAD_COTIZANTES = next_tHashInput_6.CANTIDAD_COTIZANTES;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row84"
						
						);
					}
					


			   
			   

					row84Struct row84_HashRow = new row84Struct();
		   	   	   
				
				row84_HashRow.GRUPO_ETAREO_ID = row84.GRUPO_ETAREO_ID;
				
				row84_HashRow.GRUPO_ETAREO = row84.GRUPO_ETAREO;
				
				row84_HashRow.ID = row84.ID;
				
				row84_HashRow.ENTAPORTANTES_ID = row84.ENTAPORTANTES_ID;
				
				row84_HashRow.TVINCULACIONES_ID = row84.TVINCULACIONES_ID;
				
				row84_HashRow.TCOTIZACION_ID = row84.TCOTIZACION_ID;
				
				row84_HashRow.PERIODO = row84.PERIODO;
				
				row84_HashRow.APORTE_EMPLEADO = row84.APORTE_EMPLEADO;
				
				row84_HashRow.APORTE_EMPLEADOR = row84.APORTE_EMPLEADOR;
				
				row84_HashRow.CANTIDAD_COTIZANTES = row84.CANTIDAD_COTIZANTES;
				
			tHash_Lookup_row84.put(row84_HashRow);
			
            




 


	tos_count_tAdvancedHash_row84++;

/**
 * [tAdvancedHash_row84 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row84 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row84 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

tHash_Lookup_row84.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row84");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row84", true);
end_Hash.put("tAdvancedHash_row84", System.currentTimeMillis());




/**
 * [tAdvancedHash_row84 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row85Struct implements routines.system.IPersistableComparableLookupRow<row85Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.GRUPO_ETAREO_ID == null) ? 0 : this.GRUPO_ETAREO_ID.hashCode());
					
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
						result = prime * result + ((this.ENTAPORTANTES_ID == null) ? 0 : this.ENTAPORTANTES_ID.hashCode());
					
						result = prime * result + ((this.TVINCULACIONES_ID == null) ? 0 : this.TVINCULACIONES_ID.hashCode());
					
						result = prime * result + ((this.TCOTIZACION_ID == null) ? 0 : this.TCOTIZACION_ID.hashCode());
					
						result = prime * result + ((this.PERIODO == null) ? 0 : this.PERIODO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row85Struct other = (row85Struct) obj;
		
						if (this.GRUPO_ETAREO_ID == null) {
							if (other.GRUPO_ETAREO_ID != null)
								return false;
						
						} else if (!this.GRUPO_ETAREO_ID.equals(other.GRUPO_ETAREO_ID))
						
							return false;
					
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					
						if (this.ENTAPORTANTES_ID == null) {
							if (other.ENTAPORTANTES_ID != null)
								return false;
						
						} else if (!this.ENTAPORTANTES_ID.equals(other.ENTAPORTANTES_ID))
						
							return false;
					
						if (this.TVINCULACIONES_ID == null) {
							if (other.TVINCULACIONES_ID != null)
								return false;
						
						} else if (!this.TVINCULACIONES_ID.equals(other.TVINCULACIONES_ID))
						
							return false;
					
						if (this.TCOTIZACION_ID == null) {
							if (other.TCOTIZACION_ID != null)
								return false;
						
						} else if (!this.TCOTIZACION_ID.equals(other.TCOTIZACION_ID))
						
							return false;
					
						if (this.PERIODO == null) {
							if (other.PERIODO != null)
								return false;
						
						} else if (!this.PERIODO.equals(other.PERIODO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row85Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            other.GRUPO_ETAREO = this.GRUPO_ETAREO;
	            other.ID = this.ID;
	            other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            other.PERIODO = this.PERIODO;
	            other.CANTIDAD_BENEFICIARIOS = this.CANTIDAD_BENEFICIARIOS;
	            
	}

	public void copyKeysDataTo(row85Struct other) {

		other.GRUPO_ETAREO_ID = this.GRUPO_ETAREO_ID;
	            	other.ID = this.ID;
	            	other.ENTAPORTANTES_ID = this.ENTAPORTANTES_ID;
	            	other.TVINCULACIONES_ID = this.TVINCULACIONES_ID;
	            	other.TCOTIZACION_ID = this.TCOTIZACION_ID;
	            	other.PERIODO = this.PERIODO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,ois);
					
       			    	this.CANTIDAD_BENEFICIARIOS = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.GRUPO_ETAREO = readString(dis,objectIn);
					
       			    	this.CANTIDAD_BENEFICIARIOS = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.GRUPO_ETAREO, dos, oos);
					
       			    	oos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.GRUPO_ETAREO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row85Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.GRUPO_ETAREO_ID, other.GRUPO_ETAREO_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ENTAPORTANTES_ID, other.ENTAPORTANTES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TVINCULACIONES_ID, other.TVINCULACIONES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TCOTIZACION_ID, other.TCOTIZACION_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.PERIODO, other.PERIODO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row85Struct row85 = new row85Struct();




	
	/**
	 * [tAdvancedHash_row85 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row85", false);
		start_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row85");
					}
				
		int tos_count_tAdvancedHash_row85 = 0;
		

			   		// connection name:row85
			   		// source node:tHashInput_8 - inputs:(after_tHashInput_2) outputs:(row85,row85) | target node:tAdvancedHash_row85 - inputs:(row85) outputs:()
			   		// linked node: tMap_46 - inputs:(row80,row84,row85) outputs:(ALL_XYZ)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row85 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row85Struct>getLookup(matchingModeEnum_row85);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row85", tHash_Lookup_row85);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row85 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row79Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row79Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row79Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row85.GRUPO_ETAREO_ID = next_tHashInput_8.GRUPO_ETAREO_ID;
	row85.GRUPO_ETAREO = next_tHashInput_8.GRUPO_ETAREO;
	row85.ID = next_tHashInput_8.ID;
	row85.ENTAPORTANTES_ID = next_tHashInput_8.ENTAPORTANTES_ID;
	row85.TVINCULACIONES_ID = next_tHashInput_8.TVINCULACIONES_ID;
	row85.TCOTIZACION_ID = next_tHashInput_8.TCOTIZACION_ID;
	row85.PERIODO = next_tHashInput_8.PERIODO;
	row85.CANTIDAD_BENEFICIARIOS = next_tHashInput_8.CANTIDAD_BENEFICIARIOS;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row85"
						
						);
					}
					


			   
			   

					row85Struct row85_HashRow = new row85Struct();
		   	   	   
				
				row85_HashRow.GRUPO_ETAREO_ID = row85.GRUPO_ETAREO_ID;
				
				row85_HashRow.GRUPO_ETAREO = row85.GRUPO_ETAREO;
				
				row85_HashRow.ID = row85.ID;
				
				row85_HashRow.ENTAPORTANTES_ID = row85.ENTAPORTANTES_ID;
				
				row85_HashRow.TVINCULACIONES_ID = row85.TVINCULACIONES_ID;
				
				row85_HashRow.TCOTIZACION_ID = row85.TCOTIZACION_ID;
				
				row85_HashRow.PERIODO = row85.PERIODO;
				
				row85_HashRow.CANTIDAD_BENEFICIARIOS = row85.CANTIDAD_BENEFICIARIOS;
				
			tHash_Lookup_row85.put(row85_HashRow);
			
            




 


	tos_count_tAdvancedHash_row85++;

/**
 * [tAdvancedHash_row85 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

tHash_Lookup_row85.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row85");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row85", true);
end_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());




/**
 * [tAdvancedHash_row85 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row70Struct implements routines.system.IPersistableRow<row70Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public BigDecimal GRUPO_ETAREO_ID;

				public BigDecimal getGRUPO_ETAREO_ID () {
					return this.GRUPO_ETAREO_ID;
				}

				public Boolean GRUPO_ETAREO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREO_IDIsKey(){
				    return true;
				}
				public Integer GRUPO_ETAREO_IDLength(){
				    return 0;
				}
				public Integer GRUPO_ETAREO_IDPrecision(){
				    return null;
				}
				public String GRUPO_ETAREO_IDDefault(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREO_IDPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREO_IDOriginalDbColumnName(){
				
					return "GRUPO_ETAREO_ID";
				
				}

				
			    public String GRUPO_ETAREO;

				public String getGRUPO_ETAREO () {
					return this.GRUPO_ETAREO;
				}

				public Boolean GRUPO_ETAREOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_ETAREOIsKey(){
				    return false;
				}
				public Integer GRUPO_ETAREOLength(){
				    return 50;
				}
				public Integer GRUPO_ETAREOPrecision(){
				    return 0;
				}
				public String GRUPO_ETAREODefault(){
				
					return null;
				
				}
				public String GRUPO_ETAREOComment(){
				
				    return "";
				
				}
				public String GRUPO_ETAREOPattern(){
				
					return "";
				
				}
				public String GRUPO_ETAREOOriginalDbColumnName(){
				
					return "GRUPO_ETAREO";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal ENTAPORTANTES_ID;

				public BigDecimal getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return true;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public BigDecimal TVINCULACIONES_ID;

				public BigDecimal getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return true;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public BigDecimal TCOTIZACION_ID;

				public BigDecimal getTCOTIZACION_ID () {
					return this.TCOTIZACION_ID;
				}

				public Boolean TCOTIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean TCOTIZACION_IDIsKey(){
				    return true;
				}
				public Integer TCOTIZACION_IDLength(){
				    return 0;
				}
				public Integer TCOTIZACION_IDPrecision(){
				    return null;
				}
				public String TCOTIZACION_IDDefault(){
				
					return "";
				
				}
				public String TCOTIZACION_IDComment(){
				
				    return "";
				
				}
				public String TCOTIZACION_IDPattern(){
				
					return "";
				
				}
				public String TCOTIZACION_IDOriginalDbColumnName(){
				
					return "TCOTIZACION_ID";
				
				}

				
			    public String PERIODO;

				public String getPERIODO () {
					return this.PERIODO;
				}

				public Boolean PERIODOIsNullable(){
				    return true;
				}
				public Boolean PERIODOIsKey(){
				    return true;
				}
				public Integer PERIODOLength(){
				    return 7;
				}
				public Integer PERIODOPrecision(){
				    return 0;
				}
				public String PERIODODefault(){
				
					return null;
				
				}
				public String PERIODOComment(){
				
				    return "";
				
				}
				public String PERIODOPattern(){
				
					return "";
				
				}
				public String PERIODOOriginalDbColumnName(){
				
					return "PERIODO";
				
				}

				
			    public BigDecimal CANTIDAD_BENEFICIARIOS;

				public BigDecimal getCANTIDAD_BENEFICIARIOS () {
					return this.CANTIDAD_BENEFICIARIOS;
				}

				public Boolean CANTIDAD_BENEFICIARIOSIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_BENEFICIARIOSIsKey(){
				    return false;
				}
				public Integer CANTIDAD_BENEFICIARIOSLength(){
				    return 0;
				}
				public Integer CANTIDAD_BENEFICIARIOSPrecision(){
				    return 0;
				}
				public String CANTIDAD_BENEFICIARIOSDefault(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSComment(){
				
				    return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSPattern(){
				
					return "";
				
				}
				public String CANTIDAD_BENEFICIARIOSOriginalDbColumnName(){
				
					return "CANTIDAD_BENEFICIARIOS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
						this.GRUPO_ETAREO_ID = (BigDecimal) dis.readObject();
					
					this.GRUPO_ETAREO = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
						this.ENTAPORTANTES_ID = (BigDecimal) dis.readObject();
					
						this.TVINCULACIONES_ID = (BigDecimal) dis.readObject();
					
						this.TCOTIZACION_ID = (BigDecimal) dis.readObject();
					
					this.PERIODO = readString(dis);
					
						this.CANTIDAD_BENEFICIARIOS = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GRUPO_ETAREO_ID);
					
					// String
				
						writeString(this.GRUPO_ETAREO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENTAPORTANTES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TVINCULACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TCOTIZACION_ID);
					
					// String
				
						writeString(this.PERIODO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CANTIDAD_BENEFICIARIOS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("GRUPO_ETAREO_ID="+String.valueOf(GRUPO_ETAREO_ID));
		sb.append(",GRUPO_ETAREO="+GRUPO_ETAREO);
		sb.append(",ID="+String.valueOf(ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",TCOTIZACION_ID="+String.valueOf(TCOTIZACION_ID));
		sb.append(",PERIODO="+PERIODO);
		sb.append(",CANTIDAD_BENEFICIARIOS="+String.valueOf(CANTIDAD_BENEFICIARIOS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row70Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row70Struct row70 = new row70Struct();




	
	/**
	 * [tAdvancedHash_row70 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row70", false);
		start_Hash.put("tAdvancedHash_row70", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row70";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row70");
					}
				
		int tos_count_tAdvancedHash_row70 = 0;
		

			   		// connection name:row70
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_4) outputs:(row70,row70) | target node:tAdvancedHash_row70 - inputs:(row70) outputs:()
			   		// linked node: tMap_41 - inputs:(row69,row70) outputs:(BENEFICIARIOS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row70 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct> tHash_Lookup_row70 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row70Struct>getLookup(matchingModeEnum_row70);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row70", tHash_Lookup_row70);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row70 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row79Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_RecAportes_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row79Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row79Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row70.GRUPO_ETAREO_ID = next_tHashInput_7.GRUPO_ETAREO_ID;
	row70.GRUPO_ETAREO = next_tHashInput_7.GRUPO_ETAREO;
	row70.ID = next_tHashInput_7.ID;
	row70.ENTAPORTANTES_ID = next_tHashInput_7.ENTAPORTANTES_ID;
	row70.TVINCULACIONES_ID = next_tHashInput_7.TVINCULACIONES_ID;
	row70.TCOTIZACION_ID = next_tHashInput_7.TCOTIZACION_ID;
	row70.PERIODO = next_tHashInput_7.PERIODO;
	row70.CANTIDAD_BENEFICIARIOS = next_tHashInput_7.CANTIDAD_BENEFICIARIOS;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row70"
						
						);
					}
					


			   
			   

					row70Struct row70_HashRow = new row70Struct();
		   	   	   
				
				row70_HashRow.GRUPO_ETAREO_ID = row70.GRUPO_ETAREO_ID;
				
				row70_HashRow.GRUPO_ETAREO = row70.GRUPO_ETAREO;
				
				row70_HashRow.ID = row70.ID;
				
				row70_HashRow.ENTAPORTANTES_ID = row70.ENTAPORTANTES_ID;
				
				row70_HashRow.TVINCULACIONES_ID = row70.TVINCULACIONES_ID;
				
				row70_HashRow.TCOTIZACION_ID = row70.TCOTIZACION_ID;
				
				row70_HashRow.PERIODO = row70.PERIODO;
				
				row70_HashRow.CANTIDAD_BENEFICIARIOS = row70.CANTIDAD_BENEFICIARIOS;
				
			tHash_Lookup_row70.put(row70_HashRow);
			
            




 


	tos_count_tAdvancedHash_row70++;

/**
 * [tAdvancedHash_row70 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row70 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row70 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_RecAportes_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

tHash_Lookup_row70.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row70");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row70", true);
end_Hash.put("tAdvancedHash_row70", System.currentTimeMillis());




/**
 * [tAdvancedHash_row70 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes = new byte[0];
    static byte[] commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return "";
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return "";
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return "";
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return "";
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public Long system_pid;

				public Long getSystem_pid () {
					return this.system_pid;
				}

				public Boolean system_pidIsNullable(){
				    return true;
				}
				public Boolean system_pidIsKey(){
				    return false;
				}
				public Integer system_pidLength(){
				    return 8;
				}
				public Integer system_pidPrecision(){
				    return 0;
				}
				public String system_pidDefault(){
				
					return "";
				
				}
				public String system_pidComment(){
				
				    return null;
				
				}
				public String system_pidPattern(){
				
				    return null;
				
				}
				public String system_pidOriginalDbColumnName(){
				
					return "system_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return "";
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return "";
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String job_repository_id;

				public String getJob_repository_id () {
					return this.job_repository_id;
				}

				public Boolean job_repository_idIsNullable(){
				    return true;
				}
				public Boolean job_repository_idIsKey(){
				    return false;
				}
				public Integer job_repository_idLength(){
				    return 255;
				}
				public Integer job_repository_idPrecision(){
				    return 0;
				}
				public String job_repository_idDefault(){
				
					return "";
				
				}
				public String job_repository_idComment(){
				
				    return null;
				
				}
				public String job_repository_idPattern(){
				
				    return null;
				
				}
				public String job_repository_idOriginalDbColumnName(){
				
					return "job_repository_id";
				
				}

				
			    public String job_version;

				public String getJob_version () {
					return this.job_version;
				}

				public Boolean job_versionIsNullable(){
				    return true;
				}
				public Boolean job_versionIsKey(){
				    return false;
				}
				public Integer job_versionLength(){
				    return 255;
				}
				public Integer job_versionPrecision(){
				    return 0;
				}
				public String job_versionDefault(){
				
					return "";
				
				}
				public String job_versionComment(){
				
				    return null;
				
				}
				public String job_versionPattern(){
				
				    return null;
				
				}
				public String job_versionOriginalDbColumnName(){
				
					return "job_version";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return "";
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return "";
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message_type;

				public String getMessage_type () {
					return this.message_type;
				}

				public Boolean message_typeIsNullable(){
				    return true;
				}
				public Boolean message_typeIsKey(){
				    return false;
				}
				public Integer message_typeLength(){
				    return 255;
				}
				public Integer message_typePrecision(){
				    return 0;
				}
				public String message_typeDefault(){
				
					return "";
				
				}
				public String message_typeComment(){
				
				    return null;
				
				}
				public String message_typePattern(){
				
				    return null;
				
				}
				public String message_typeOriginalDbColumnName(){
				
					return "message_type";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return "";
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Long duration;

				public Long getDuration () {
					return this.duration;
				}

				public Boolean durationIsNullable(){
				    return true;
				}
				public Boolean durationIsKey(){
				    return false;
				}
				public Integer durationLength(){
				    return 8;
				}
				public Integer durationPrecision(){
				    return 0;
				}
				public String durationDefault(){
				
					return "";
				
				}
				public String durationComment(){
				
				    return null;
				
				}
				public String durationPattern(){
				
				    return null;
				
				}
				public String durationOriginalDbColumnName(){
				
					return "duration";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length) {
				if(length < 1024 && commonByteArray_REP_DIARIO_RECAUDO_RecAportes.length == 0) {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[1024];
				} else {
   					commonByteArray_REP_DIARIO_RECAUDO_RecAportes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length);
			strReturn = new String(commonByteArray_REP_DIARIO_RECAUDO_RecAportes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.root_pid = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_pid = null;
           				} else {
           			    	this.system_pid = dis.readLong();
           				}
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.job_repository_id = readString(dis);
					
					this.job_version = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message_type = readString(dis);
					
					this.message = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.duration = null;
           				} else {
           			    	this.duration = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_DIARIO_RECAUDO_RecAportes) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.root_pid = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.system_pid = null;
           				} else {
           			    	this.system_pid = dis.readLong();
           				}
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.job_repository_id = readString(dis);
					
					this.job_version = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message_type = readString(dis);
					
					this.message = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.duration = null;
           				} else {
           			    	this.duration = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// Long
				
						if(this.system_pid == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.system_pid);
		            	}
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.job_repository_id,dos);
					
					// String
				
						writeString(this.job_version,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message_type,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Long
				
						if(this.duration == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.duration);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// Long
				
						if(this.system_pid == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.system_pid);
		            	}
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.job_repository_id,dos);
					
					// String
				
						writeString(this.job_version,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message_type,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Long
				
						if(this.duration == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.duration);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",system_pid="+String.valueOf(system_pid));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",job_repository_id="+job_repository_id);
		sb.append(",job_version="+job_version);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message_type="+message_type);
		sb.append(",message="+message);
		sb.append(",duration="+String.valueOf(duration));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tStatCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tStatCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_STAT)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("moment");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("father_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("root_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("system_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("project");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job_repository_id");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job_version");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("context");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("origin");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("message_type");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("message");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("duration");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tStatCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tStatCatcher_1", false);
		start_Hash.put("tStatCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tStatCatcher_1";
	
	
		int tos_count_tStatCatcher_1 = 0;
		

	for (StatCatcherUtils.StatCatcherMessage scm : tStatCatcher_1.getMessages()) {
		row16.pid = pid;
		row16.root_pid = rootPid;
		row16.father_pid = fatherPid;	
    	row16.project = projectName;
    	row16.job = jobName;
    	row16.context = contextStr;
		row16.origin = (scm.getOrigin()==null || scm.getOrigin().length()<1 ? null : scm.getOrigin());
		row16.message = scm.getMessage();
		row16.duration = scm.getDuration();
		row16.moment = scm.getMoment();
		row16.message_type = scm.getMessageType();
		row16.job_version = scm.getJobVersion();
		row16.job_repository_id = scm.getJobId();
		row16.system_pid = scm.getSystemPid();

 



/**
 * [tStatCatcher_1 begin ] stop
 */
	
	/**
	 * [tStatCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tStatCatcher_1";
	
	

 


	tos_count_tStatCatcher_1++;

/**
 * [tStatCatcher_1 main ] stop
 */
	
	/**
	 * [tStatCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tStatCatcher_1";
	
	

 



/**
 * [tStatCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row16.moment != null) {
                        sb_tFileOutputDelimited_2.append(
                            FormatterUtils.format_Date(row16.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.father_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.root_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.system_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.system_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.project != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.project
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.job != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.job
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.job_repository_id != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.job_repository_id
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.job_version != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.job_version
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.context != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.context
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.origin != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.origin
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.message_type != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.message_type
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.message != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.message
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row16.duration != null) {
                        sb_tFileOutputDelimited_2.append(
                            row16.duration
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());

                    }



 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tStatCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tStatCatcher_1";
	
	

 



/**
 * [tStatCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tStatCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tStatCatcher_1";
	
	

	}


 

ok_Hash.put("tStatCatcher_1", true);
end_Hash.put("tStatCatcher_1", System.currentTimeMillis());




/**
 * [tStatCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tStatCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tStatCatcher_1";
	
	

 



/**
 * [tStatCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tStatCatcher_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final RecAportes RecAportesClass = new RecAportes();

        int exitCode = RecAportesClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = RecAportes.class.getClassLoader().getResourceAsStream("rep_diario_recaudo/recaportes_4_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = RecAportes.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("PERIODO", "id_String");
                        if(context.getStringValue("PERIODO") == null) {
                            context.PERIODO = null;
                        } else {
                            context.PERIODO=(String) context.getProperty("PERIODO");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_Password");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            String pwd_db_origen_Password_value = context.getProperty("db_origen_Password");
                            context.db_origen_Password = null;
                            if(pwd_db_origen_Password_value!=null) {
                                if(context_param.containsKey("db_origen_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_origen_Password = pwd_db_origen_Password_value;
                                } else if (!pwd_db_origen_Password_value.isEmpty()) {
                                    try {
                                        context.db_origen_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_origen_Password_value);
                                        context.put("db_origen_Password",context.db_origen_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("db_origen_Sid", "id_String");
                        if(context.getStringValue("db_origen_Sid") == null) {
                            context.db_origen_Sid = null;
                        } else {
                            context.db_origen_Sid=(String) context.getProperty("db_origen_Sid");
                        }
                        context.setContextType("db_destino_AdditionalParams", "id_String");
                        if(context.getStringValue("db_destino_AdditionalParams") == null) {
                            context.db_destino_AdditionalParams = null;
                        } else {
                            context.db_destino_AdditionalParams=(String) context.getProperty("db_destino_AdditionalParams");
                        }
                        context.setContextType("db_destino_Login", "id_String");
                        if(context.getStringValue("db_destino_Login") == null) {
                            context.db_destino_Login = null;
                        } else {
                            context.db_destino_Login=(String) context.getProperty("db_destino_Login");
                        }
                        context.setContextType("db_destino_Password", "id_Password");
                        if(context.getStringValue("db_destino_Password") == null) {
                            context.db_destino_Password = null;
                        } else {
                            String pwd_db_destino_Password_value = context.getProperty("db_destino_Password");
                            context.db_destino_Password = null;
                            if(pwd_db_destino_Password_value!=null) {
                                if(context_param.containsKey("db_destino_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_destino_Password = pwd_db_destino_Password_value;
                                } else if (!pwd_db_destino_Password_value.isEmpty()) {
                                    try {
                                        context.db_destino_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_destino_Password_value);
                                        context.put("db_destino_Password",context.db_destino_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_destino_Port", "id_String");
                        if(context.getStringValue("db_destino_Port") == null) {
                            context.db_destino_Port = null;
                        } else {
                            context.db_destino_Port=(String) context.getProperty("db_destino_Port");
                        }
                        context.setContextType("db_destino_Schema", "id_String");
                        if(context.getStringValue("db_destino_Schema") == null) {
                            context.db_destino_Schema = null;
                        } else {
                            context.db_destino_Schema=(String) context.getProperty("db_destino_Schema");
                        }
                        context.setContextType("db_destino_Server", "id_String");
                        if(context.getStringValue("db_destino_Server") == null) {
                            context.db_destino_Server = null;
                        } else {
                            context.db_destino_Server=(String) context.getProperty("db_destino_Server");
                        }
                        context.setContextType("db_destino_ServiceName", "id_String");
                        if(context.getStringValue("db_destino_ServiceName") == null) {
                            context.db_destino_ServiceName = null;
                        } else {
                            context.db_destino_ServiceName=(String) context.getProperty("db_destino_ServiceName");
                        }
                        context.setContextType("db_destino_Sid", "id_String");
                        if(context.getStringValue("db_destino_Sid") == null) {
                            context.db_destino_Sid = null;
                        } else {
                            context.db_destino_Sid=(String) context.getProperty("db_destino_Sid");
                        }
                        context.setContextType("ACTUALIZACION_TOTAL", "id_Boolean");
                        if(context.getStringValue("ACTUALIZACION_TOTAL") == null) {
                            context.ACTUALIZACION_TOTAL = null;
                        } else {
                            try{
                                context.ACTUALIZACION_TOTAL=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("ACTUALIZACION_TOTAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ACTUALIZACION_TOTAL", e.getMessage()));
                                context.ACTUALIZACION_TOTAL=null;
                            }
                        }
                        context.setContextType("BODEGA", "id_String");
                        if(context.getStringValue("BODEGA") == null) {
                            context.BODEGA = null;
                        } else {
                            context.BODEGA=(String) context.getProperty("BODEGA");
                        }
                        context.setContextType("CCARGUE_ID", "id_Integer");
                        if(context.getStringValue("CCARGUE_ID") == null) {
                            context.CCARGUE_ID = null;
                        } else {
                            try{
                                context.CCARGUE_ID=routines.system.ParserUtils.parseTo_Integer (context.getProperty("CCARGUE_ID"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "CCARGUE_ID", e.getMessage()));
                                context.CCARGUE_ID=null;
                            }
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FANTERIOR", "id_String");
                        if(context.getStringValue("FANTERIOR") == null) {
                            context.FANTERIOR = null;
                        } else {
                            context.FANTERIOR=(String) context.getProperty("FANTERIOR");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("ID_SOLICITUD", "id_Integer");
                        if(context.getStringValue("ID_SOLICITUD") == null) {
                            context.ID_SOLICITUD = null;
                        } else {
                            try{
                                context.ID_SOLICITUD=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ID_SOLICITUD"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID_SOLICITUD", e.getMessage()));
                                context.ID_SOLICITUD=null;
                            }
                        }
                        context.setContextType("LAST_DAYS", "id_Integer");
                        if(context.getStringValue("LAST_DAYS") == null) {
                            context.LAST_DAYS = null;
                        } else {
                            try{
                                context.LAST_DAYS=routines.system.ParserUtils.parseTo_Integer (context.getProperty("LAST_DAYS"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "LAST_DAYS", e.getMessage()));
                                context.LAST_DAYS=null;
                            }
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("LOGS_STAT", "id_String");
                        if(context.getStringValue("LOGS_STAT") == null) {
                            context.LOGS_STAT = null;
                        } else {
                            context.LOGS_STAT=(String) context.getProperty("LOGS_STAT");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("ULTIMO_PERIODO", "id_String");
                        if(context.getStringValue("ULTIMO_PERIODO") == null) {
                            context.ULTIMO_PERIODO = null;
                        } else {
                            context.ULTIMO_PERIODO=(String) context.getProperty("ULTIMO_PERIODO");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("PERIODO")) {
                context.PERIODO = (String) parentContextMap.get("PERIODO");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (java.lang.String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("db_origen_Sid")) {
                context.db_origen_Sid = (String) parentContextMap.get("db_origen_Sid");
            }if (parentContextMap.containsKey("db_destino_AdditionalParams")) {
                context.db_destino_AdditionalParams = (String) parentContextMap.get("db_destino_AdditionalParams");
            }if (parentContextMap.containsKey("db_destino_Login")) {
                context.db_destino_Login = (String) parentContextMap.get("db_destino_Login");
            }if (parentContextMap.containsKey("db_destino_Password")) {
                context.db_destino_Password = (java.lang.String) parentContextMap.get("db_destino_Password");
            }if (parentContextMap.containsKey("db_destino_Port")) {
                context.db_destino_Port = (String) parentContextMap.get("db_destino_Port");
            }if (parentContextMap.containsKey("db_destino_Schema")) {
                context.db_destino_Schema = (String) parentContextMap.get("db_destino_Schema");
            }if (parentContextMap.containsKey("db_destino_Server")) {
                context.db_destino_Server = (String) parentContextMap.get("db_destino_Server");
            }if (parentContextMap.containsKey("db_destino_ServiceName")) {
                context.db_destino_ServiceName = (String) parentContextMap.get("db_destino_ServiceName");
            }if (parentContextMap.containsKey("db_destino_Sid")) {
                context.db_destino_Sid = (String) parentContextMap.get("db_destino_Sid");
            }if (parentContextMap.containsKey("ACTUALIZACION_TOTAL")) {
                context.ACTUALIZACION_TOTAL = (Boolean) parentContextMap.get("ACTUALIZACION_TOTAL");
            }if (parentContextMap.containsKey("BODEGA")) {
                context.BODEGA = (String) parentContextMap.get("BODEGA");
            }if (parentContextMap.containsKey("CCARGUE_ID")) {
                context.CCARGUE_ID = (Integer) parentContextMap.get("CCARGUE_ID");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FANTERIOR")) {
                context.FANTERIOR = (String) parentContextMap.get("FANTERIOR");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("ID_SOLICITUD")) {
                context.ID_SOLICITUD = (Integer) parentContextMap.get("ID_SOLICITUD");
            }if (parentContextMap.containsKey("LAST_DAYS")) {
                context.LAST_DAYS = (Integer) parentContextMap.get("LAST_DAYS");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("LOGS_STAT")) {
                context.LOGS_STAT = (String) parentContextMap.get("LOGS_STAT");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("ULTIMO_PERIODO")) {
                context.ULTIMO_PERIODO = (String) parentContextMap.get("ULTIMO_PERIODO");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("db_origen_Password");
			parametersToEncrypt.add("db_destino_Password");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();
        tStatCatcher_1.addMessage("begin");


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}



        try {
            tStatCatcher_1Process(globalMap);
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }

this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : RecAportes");
        }
        tStatCatcher_1.addMessage(status==""?"end":status, (end-startTime));
        try {
            tStatCatcher_1Process(globalMap);
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tOracleConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));
            connections.put("conn_tOracleConnection_2", globalMap.get("conn_tOracleConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     4228946 characters generated by Talend Open Studio for ESB 
 *     on the November 1, 2024, 2:44:32 PM COT
 ************************************************************************************************/