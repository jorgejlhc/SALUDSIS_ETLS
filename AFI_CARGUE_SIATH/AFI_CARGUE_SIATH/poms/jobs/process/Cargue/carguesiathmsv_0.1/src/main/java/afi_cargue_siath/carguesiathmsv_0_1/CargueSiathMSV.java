// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package afi_cargue_siath.carguesiathmsv_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.ValidarEmail;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.ObtenerPosicionCaracter;
import routines.ExtraerBlob;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_31
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_30
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_14
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_17
	//import java.util.List;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJavaRow_18
	//import java.util.List;

	//the import part of tJavaRow_12
	//import java.util.List;

	//the import part of tJavaRow_19
	//import java.util.List;

	//the import part of tJavaRow_15
	//import java.util.List;

	//the import part of tJavaRow_13
	//import java.util.List;

	//the import part of tJavaRow_20
	//import java.util.List;

	//the import part of tJavaRow_16
	//import java.util.List;

	//the import part of tJavaRow_24
	//import java.util.List;

	//the import part of tJavaRow_25
	//import java.util.List;

	//the import part of tJavaRow_21
	//import java.util.List;

	//the import part of tJavaRow_22
	//import java.util.List;

	//the import part of tJavaRow_23
	//import java.util.List;

	//the import part of tJavaRow_26
	//import java.util.List;

	//the import part of tJavaRow_27
	//import java.util.List;

	//the import part of tJavaRow_28
	//import java.util.List;

	//the import part of tJavaRow_29
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: CargueSiathMSV Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class CargueSiathMSV implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_destino_ServiceName != null){
				
					this.setProperty("db_destino_ServiceName", db_destino_ServiceName.toString());
				
			}
			
			if(db_destino_AdditionalParams != null){
				
					this.setProperty("db_destino_AdditionalParams", db_destino_AdditionalParams.toString());
				
			}
			
			if(db_destino_Login != null){
				
					this.setProperty("db_destino_Login", db_destino_Login.toString());
				
			}
			
			if(db_destino_Port != null){
				
					this.setProperty("db_destino_Port", db_destino_Port.toString());
				
			}
			
			if(db_destino_Schema != null){
				
					this.setProperty("db_destino_Schema", db_destino_Schema.toString());
				
			}
			
			if(db_destino_Server != null){
				
					this.setProperty("db_destino_Server", db_destino_Server.toString());
				
			}
			
			if(db_destino_Password != null){
				
					this.setProperty("db_destino_Password", db_destino_Password.toString());
				
			}
			
			if(Project != null){
				
					this.setProperty("Project", Project.toString());
				
			}
			
			if(server_destino != null){
				
					this.setProperty("server_destino", server_destino.toString());
				
			}
			
			if(user_origen != null){
				
					this.setProperty("user_origen", user_origen.toString());
				
			}
			
			if(user_destino != null){
				
					this.setProperty("user_destino", user_destino.toString());
				
			}
			
			if(context != null){
				
					this.setProperty("context", context.toString());
				
			}
			
			if(origen != null){
				
					this.setProperty("origen", origen.toString());
				
			}
			
			if(service_name_origen != null){
				
					this.setProperty("service_name_origen", service_name_origen.toString());
				
			}
			
			if(job != null){
				
					this.setProperty("job", job.toString());
				
			}
			
			if(message != null){
				
					this.setProperty("message", message.toString());
				
			}
			
			if(server_origen != null){
				
					this.setProperty("server_origen", server_origen.toString());
				
			}
			
			if(moment != null){
				
					this.setProperty("moment", moment.toString());
				
			}
			
			if(service_name_destino != null){
				
					this.setProperty("service_name_destino", service_name_destino.toString());
				
			}
			
			if(BODEGA != null){
				
					this.setProperty("BODEGA", BODEGA.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(JOB != null){
				
					this.setProperty("JOB", JOB.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(mail_SenderName != null){
				
					this.setProperty("mail_SenderName", mail_SenderName.toString());
				
			}
			
			if(mail_User != null){
				
					this.setProperty("mail_User", mail_User.toString());
				
			}
			
			if(mail_Message != null){
				
					this.setProperty("mail_Message", mail_Message.toString());
				
			}
			
			if(mail_To != null){
				
					this.setProperty("mail_To", mail_To.toString());
				
			}
			
			if(mail_SMTP_Port != null){
				
					this.setProperty("mail_SMTP_Port", mail_SMTP_Port.toString());
				
			}
			
			if(mail_Password != null){
				
					this.setProperty("mail_Password", mail_Password.toString());
				
			}
			
			if(mail_SMTP_Host != null){
				
					this.setProperty("mail_SMTP_Host", mail_SMTP_Host.toString());
				
			}
			
			if(mail_Subject != null){
				
					this.setProperty("mail_Subject", mail_Subject.toString());
				
			}
			
			if(UrlEndPointToken != null){
				
					this.setProperty("UrlEndPointToken", UrlEndPointToken.toString());
				
			}
			
			if(UrlActionSoapToken != null){
				
					this.setProperty("UrlActionSoapToken", UrlActionSoapToken.toString());
				
			}
			
			if(token != null){
				
					this.setProperty("token", token.toString());
				
			}
			
			if(UrlEndPointMasivo != null){
				
					this.setProperty("UrlEndPointMasivo", UrlEndPointMasivo.toString());
				
			}
			
			if(UrlActionSoapMasivo != null){
				
					this.setProperty("UrlActionSoapMasivo", UrlActionSoapMasivo.toString());
				
			}
			
			if(vafiarchivos_id != null){
				
					this.setProperty("vafiarchivos_id", vafiarchivos_id.toString());
				
			}
			
			if(vprocesos_id != null){
				
					this.setProperty("vprocesos_id", vprocesos_id.toString());
				
			}
			
			if(vusuarios_id != null){
				
					this.setProperty("vusuarios_id", vusuarios_id.toString());
				
			}
			
			if(vcount_registros != null){
				
					this.setProperty("vcount_registros", vcount_registros.toString());
				
			}
			
			if(vfinicio != null){
				
					String pattern_vfinicio = "yyyy-MM-dd HH:mm:ss";
					String value_vfinicio = "";
					String[] parts_vfinicio = value_vfinicio.split(";");
					if(parts_vfinicio.length > 1){
						pattern_vfinicio = parts_vfinicio[0];
						this.setProperty("vfinicio", pattern_vfinicio + ";" + FormatterUtils.format_Date(vfinicio, pattern_vfinicio));
					}else{
						this.setProperty("vfinicio", FormatterUtils.format_Date(vfinicio, pattern_vfinicio));
					}
				
			}
			
			if(vtarchivo_id != null){
				
					this.setProperty("vtarchivo_id", vtarchivo_id.toString());
				
			}
			
			if(mensaje != null){
				
					this.setProperty("mensaje", mensaje.toString());
				
			}
			
			if(verror_datos != null){
				
					this.setProperty("verror_datos", verror_datos.toString());
				
			}
			
			if(verror_estructura != null){
				
					this.setProperty("verror_estructura", verror_estructura.toString());
				
			}
			
			if(verror_nombres_fnac_arc != null){
				
					this.setProperty("verror_nombres_fnac_arc", verror_nombres_fnac_arc.toString());
				
			}
			
			if(vtotal_registros != null){
				
					this.setProperty("vtotal_registros", vtotal_registros.toString());
				
			}
			
			if(verror_td_doc_arc != null){
				
					this.setProperty("verror_td_doc_arc", verror_td_doc_arc.toString());
				
			}
			
			if(verror_nombres_fnac_sis != null){
				
					this.setProperty("verror_nombres_fnac_sis", verror_nombres_fnac_sis.toString());
				
			}
			
			if(verror_pn_pa_doc_sis != null){
				
					this.setProperty("verror_pn_pa_doc_sis", verror_pn_pa_doc_sis.toString());
				
			}
			
			if(verror_td_doc_sis != null){
				
					this.setProperty("verror_td_doc_sis", verror_td_doc_sis.toString());
				
			}
			
			if(vtotal_registrados != null){
				
					this.setProperty("vtotal_registrados", vtotal_registrados.toString());
				
			}
			
			if(vtotal_errores != null){
				
					this.setProperty("vtotal_errores", vtotal_errores.toString());
				
			}
			
			if(verror_pn_pa_doc_arc != null){
				
					this.setProperty("verror_pn_pa_doc_arc", verror_pn_pa_doc_arc.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public java.lang.String db_origen_Password;
public java.lang.String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_destino_ServiceName;
public String getDb_destino_ServiceName(){
	return this.db_destino_ServiceName;
}
public String db_destino_AdditionalParams;
public String getDb_destino_AdditionalParams(){
	return this.db_destino_AdditionalParams;
}
public String db_destino_Login;
public String getDb_destino_Login(){
	return this.db_destino_Login;
}
public String db_destino_Port;
public String getDb_destino_Port(){
	return this.db_destino_Port;
}
public String db_destino_Schema;
public String getDb_destino_Schema(){
	return this.db_destino_Schema;
}
public String db_destino_Server;
public String getDb_destino_Server(){
	return this.db_destino_Server;
}
public java.lang.String db_destino_Password;
public java.lang.String getDb_destino_Password(){
	return this.db_destino_Password;
}
public String Project;
public String getProject(){
	return this.Project;
}
public String server_destino;
public String getServer_destino(){
	return this.server_destino;
}
public String user_origen;
public String getUser_origen(){
	return this.user_origen;
}
public String user_destino;
public String getUser_destino(){
	return this.user_destino;
}
public String context;
public String getContext(){
	return this.context;
}
public String origen;
public String getOrigen(){
	return this.origen;
}
public String service_name_origen;
public String getService_name_origen(){
	return this.service_name_origen;
}
public String job;
public String getJob(){
	return this.job;
}
public String message;
public String getMessage(){
	return this.message;
}
public String server_origen;
public String getServer_origen(){
	return this.server_origen;
}
public String moment;
public String getMoment(){
	return this.moment;
}
public String service_name_destino;
public String getService_name_destino(){
	return this.service_name_destino;
}
public String BODEGA;
public String getBODEGA(){
	return this.BODEGA;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String JOB;
public String getJOB(){
	return this.JOB;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public String mail_SenderName;
public String getMail_SenderName(){
	return this.mail_SenderName;
}
public String mail_User;
public String getMail_User(){
	return this.mail_User;
}
public String mail_Message;
public String getMail_Message(){
	return this.mail_Message;
}
public String mail_To;
public String getMail_To(){
	return this.mail_To;
}
public String mail_SMTP_Port;
public String getMail_SMTP_Port(){
	return this.mail_SMTP_Port;
}
public String mail_Password;
public String getMail_Password(){
	return this.mail_Password;
}
public String mail_SMTP_Host;
public String getMail_SMTP_Host(){
	return this.mail_SMTP_Host;
}
public String mail_Subject;
public String getMail_Subject(){
	return this.mail_Subject;
}
public String UrlEndPointToken;
public String getUrlEndPointToken(){
	return this.UrlEndPointToken;
}
public String UrlActionSoapToken;
public String getUrlActionSoapToken(){
	return this.UrlActionSoapToken;
}
public String token;
public String getToken(){
	return this.token;
}
public String UrlEndPointMasivo;
public String getUrlEndPointMasivo(){
	return this.UrlEndPointMasivo;
}
public String UrlActionSoapMasivo;
public String getUrlActionSoapMasivo(){
	return this.UrlActionSoapMasivo;
}
public Integer vafiarchivos_id;
public Integer getVafiarchivos_id(){
	return this.vafiarchivos_id;
}
public Integer vprocesos_id;
public Integer getVprocesos_id(){
	return this.vprocesos_id;
}
public Integer vusuarios_id;
public Integer getVusuarios_id(){
	return this.vusuarios_id;
}
public Integer vcount_registros;
public Integer getVcount_registros(){
	return this.vcount_registros;
}
public java.util.Date vfinicio;
public java.util.Date getVfinicio(){
	return this.vfinicio;
}
public Integer vtarchivo_id;
public Integer getVtarchivo_id(){
	return this.vtarchivo_id;
}
public String mensaje;
public String getMensaje(){
	return this.mensaje;
}
public Integer verror_datos;
public Integer getVerror_datos(){
	return this.verror_datos;
}
public Integer verror_estructura;
public Integer getVerror_estructura(){
	return this.verror_estructura;
}
public Integer verror_nombres_fnac_arc;
public Integer getVerror_nombres_fnac_arc(){
	return this.verror_nombres_fnac_arc;
}
public Integer vtotal_registros;
public Integer getVtotal_registros(){
	return this.vtotal_registros;
}
public Integer verror_td_doc_arc;
public Integer getVerror_td_doc_arc(){
	return this.verror_td_doc_arc;
}
public Integer verror_nombres_fnac_sis;
public Integer getVerror_nombres_fnac_sis(){
	return this.verror_nombres_fnac_sis;
}
public Integer verror_pn_pa_doc_sis;
public Integer getVerror_pn_pa_doc_sis(){
	return this.verror_pn_pa_doc_sis;
}
public Integer verror_td_doc_sis;
public Integer getVerror_td_doc_sis(){
	return this.verror_td_doc_sis;
}
public Integer vtotal_registrados;
public Integer getVtotal_registrados(){
	return this.vtotal_registrados;
}
public Integer vtotal_errores;
public Integer getVtotal_errores(){
	return this.vtotal_errores;
}
public Integer verror_pn_pa_doc_arc;
public Integer getVerror_pn_pa_doc_arc(){
	return this.verror_pn_pa_doc_arc;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "CargueSiathMSV";
	private final String projectName = "AFI_CARGUE_SIATH";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				CargueSiathMSV.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(CargueSiathMSV.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputPositional_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_38_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_33_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_36_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_36_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_40_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_41_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_41_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_42_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_42_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_29_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_30_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_31_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_31_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_32_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_32_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_37_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_37_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_39_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputPositional_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_39_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tREST_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tREST_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tREST_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row119_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row56_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row83_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row104_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row106_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row108_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row85_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row86_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_34_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row88_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row89_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_35_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row121_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tREST_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_38_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_33_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_27_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_36_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_40_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_41_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_42_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_19_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_20_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_23_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_25_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_26_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_28_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_29_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_30_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_31_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_32_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_34_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_35_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_37_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_39_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tREST_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File("LOGS_ERROR_SIATH.txt")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("root_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("father_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("priority");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("code");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row3.type = lcm.getType();
		row3.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row3.priority = lcm.getPriority();
		row3.message = lcm.getMessage();
		row3.code = lcm.getCode();
		
		row3.moment = java.util.Calendar.getInstance().getTime();
	
    	row3.pid = pid;
		row3.root_pid = rootPid;
		row3.father_pid = fatherPid;
	
    	row3.project = projectName;
    	row3.job = jobName;
    	row3.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row3.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(row3.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.root_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.father_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.priority != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.priority
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.message
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row3.code != null) {
                        sb_tFileOutputDelimited_1.append(
                            row3.code
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleInput_38Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row114Struct implements routines.system.IPersistableRow<row114Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 100;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String TEXTO;

				public String getTEXTO () {
					return this.TEXTO;
				}

				public Boolean TEXTOIsNullable(){
				    return true;
				}
				public Boolean TEXTOIsKey(){
				    return false;
				}
				public Integer TEXTOLength(){
				    return 4000;
				}
				public Integer TEXTOPrecision(){
				    return 0;
				}
				public String TEXTODefault(){
				
					return null;
				
				}
				public String TEXTOComment(){
				
				    return "";
				
				}
				public String TEXTOPattern(){
				
					return "";
				
				}
				public String TEXTOOriginalDbColumnName(){
				
					return "TEXTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.TEXTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.TEXTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.TEXTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.TEXTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TEXTO="+TEXTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row114Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_38Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row114Struct row114 = new row114Struct();




	
	/**
	 * [tFileOutputPositional_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputPositional_1", false);
		start_Hash.put("tFileOutputPositional_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputPositional_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row114");
					}
				
		int tos_count_tFileOutputPositional_1 = 0;
		

        if (false) {
            throw new RuntimeException("tFileOutputPositional doesn't support to work with tSetDynamicSchema when 'Guess schema from file' option is activated");
        }
		int nb_line_tFileOutputPositional_1 = 0;
		resourceMap.put("nb_line_tFileOutputPositional_1", nb_line_tFileOutputPositional_1);
				
		class PositionUtil_tFileOutputPositional_1{
		
              void writeHeader_0(String tempStringBtFileOutputPositional_1,int tempLengthBtFileOutputPositional_1,final java.io.BufferedWriter outtFileOutputPositional_1)throws IOException,java.io.UnsupportedEncodingException{
              
                 int tempLengthMtFileOutputPositional_1= 0;
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_1="SIGLA";
    			
    			tempLengthBtFileOutputPositional_1=tempStringBtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_1 > 10) {
                }else if(tempLengthBtFileOutputPositional_1<10){
                    StringBuilder resulttFileOutputPositional_1 = new StringBuilder();
                        resulttFileOutputPositional_1.append(tempStringBtFileOutputPositional_1);
                        for(int itFileOutputPositional_1=0; itFileOutputPositional_1< 10-tempLengthBtFileOutputPositional_1; itFileOutputPositional_1++){
                            resulttFileOutputPositional_1.append(' ');
                        }
                        tempStringBtFileOutputPositional_1 = resulttFileOutputPositional_1.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_1.write(tempStringBtFileOutputPositional_1);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_1="DOCUMENTO";
    			
    			tempLengthBtFileOutputPositional_1=tempStringBtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_1 > 20) {
                }else if(tempLengthBtFileOutputPositional_1<20){
                    StringBuilder resulttFileOutputPositional_1 = new StringBuilder();
                        resulttFileOutputPositional_1.append(tempStringBtFileOutputPositional_1);
                        for(int itFileOutputPositional_1=0; itFileOutputPositional_1< 20-tempLengthBtFileOutputPositional_1; itFileOutputPositional_1++){
                            resulttFileOutputPositional_1.append(' ');
                        }
                        tempStringBtFileOutputPositional_1 = resulttFileOutputPositional_1.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_1.write(tempStringBtFileOutputPositional_1);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_1="TEXTO";
    			
    			tempLengthBtFileOutputPositional_1=tempStringBtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_1 > 4000) {
                }else if(tempLengthBtFileOutputPositional_1<4000){
                    StringBuilder resulttFileOutputPositional_1 = new StringBuilder();
                        resulttFileOutputPositional_1.append(tempStringBtFileOutputPositional_1);
                        for(int itFileOutputPositional_1=0; itFileOutputPositional_1< 4000-tempLengthBtFileOutputPositional_1; itFileOutputPositional_1++){
                            resulttFileOutputPositional_1.append(' ');
                        }
                        tempStringBtFileOutputPositional_1 = resulttFileOutputPositional_1.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_1.write(tempStringBtFileOutputPositional_1);
              }  
				  void setValue_0(final row114Struct row114,StringBuilder sb_tFileOutputPositional_1,String tempStringMtFileOutputPositional_1,int tempLengthMtFileOutputPositional_1)throws IOException,java.io.UnsupportedEncodingException{
				//get  and format output String begin
    			tempStringMtFileOutputPositional_1=
					(row114.SIGLA == null) ? 
					"": row114.SIGLA ;
				
    			tempLengthMtFileOutputPositional_1=tempStringMtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_1 >=10) {
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                }else if(tempLengthMtFileOutputPositional_1<10){
                   
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                        for(int i_tFileOutputPositional_1=0; i_tFileOutputPositional_1< 10-tempLengthMtFileOutputPositional_1; i_tFileOutputPositional_1++){
                            sb_tFileOutputPositional_1.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_1=
					(row114.DOCUMENTO == null) ? 
					"": row114.DOCUMENTO ;
				
    			tempLengthMtFileOutputPositional_1=tempStringMtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_1 >=20) {
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                }else if(tempLengthMtFileOutputPositional_1<20){
                   
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                        for(int i_tFileOutputPositional_1=0; i_tFileOutputPositional_1< 20-tempLengthMtFileOutputPositional_1; i_tFileOutputPositional_1++){
                            sb_tFileOutputPositional_1.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_1=
					(row114.TEXTO == null) ? 
					"": row114.TEXTO ;
				
    			tempLengthMtFileOutputPositional_1=tempStringMtFileOutputPositional_1.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_1 >=4000) {
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                }else if(tempLengthMtFileOutputPositional_1<4000){
                   
                        sb_tFileOutputPositional_1.append(tempStringMtFileOutputPositional_1);
                        for(int i_tFileOutputPositional_1=0; i_tFileOutputPositional_1< 4000-tempLengthMtFileOutputPositional_1; i_tFileOutputPositional_1++){
                            sb_tFileOutputPositional_1.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
                   }
		
		}
		
		PositionUtil_tFileOutputPositional_1 positionUtil_tFileOutputPositional_1=new PositionUtil_tFileOutputPositional_1();
		
		String fileNewName_tFileOutputPositional_1 = java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"ERR_AFI_CMSIATH.txt";
		java.io.File createFiletFileOutputPositional_1 = new java.io.File(fileNewName_tFileOutputPositional_1);
		boolean isFileGenerated_tFileOutputPositional_1 = true;
		resourceMap.put("createFiletFileOutputPositional_1", createFiletFileOutputPositional_1);
		resourceMap.put("isFileGenerated_tFileOutputPositional_1", isFileGenerated_tFileOutputPositional_1);
		if(createFiletFileOutputPositional_1.exists()){
			isFileGenerated_tFileOutputPositional_1 = false;
			resourceMap.put("isFileGenerated_tFileOutputPositional_1", isFileGenerated_tFileOutputPositional_1);
		}
        //create directory only if not exists
        java.io.File parentFile_tFileOutputPositional_1 = createFiletFileOutputPositional_1.getParentFile();
        if(parentFile_tFileOutputPositional_1 != null && !parentFile_tFileOutputPositional_1.exists()) {
            parentFile_tFileOutputPositional_1.mkdirs();
        }
		final java.io.BufferedWriter outtFileOutputPositional_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
        		new java.io.FileOutputStream(fileNewName_tFileOutputPositional_1, true),"UTF-8"));
        		resourceMap.put("outtFileOutputPositional_1", outtFileOutputPositional_1);
		if(createFiletFileOutputPositional_1.length()==0){
    		
    		String tempStringBtFileOutputPositional_1=null;
    		int tempLengthBtFileOutputPositional_1=0;
            positionUtil_tFileOutputPositional_1.writeHeader_0(tempStringBtFileOutputPositional_1,tempLengthBtFileOutputPositional_1,outtFileOutputPositional_1);
    		outtFileOutputPositional_1.write("\n");
    	}

 



/**
 * [tFileOutputPositional_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_38 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_38", false);
		start_Hash.put("tOracleInput_38", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_38";
	
	
		int tos_count_tOracleInput_38 = 0;
		
	


	
		    int nb_line_tOracleInput_38 = 0;
		    java.sql.Connection conn_tOracleInput_38 = null;
				conn_tOracleInput_38 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_38 = false;
				boolean isConnectionWrapped_tOracleInput_38 = !(conn_tOracleInput_38 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_38.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_38 = null;
                if (isConnectionWrapped_tOracleInput_38) {
					unwrappedOraConn_tOracleInput_38 = conn_tOracleInput_38.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_38 != null) {
                        isTimeZoneNull_tOracleInput_38 = (unwrappedOraConn_tOracleInput_38.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_38 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_38).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_38) {
					java.sql.Statement stmtGetTZ_tOracleInput_38 = conn_tOracleInput_38.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_38 = stmtGetTZ_tOracleInput_38.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_38 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_38.next()) {
						sessionTimezone_tOracleInput_38 = rsGetTZ_tOracleInput_38.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_38 && unwrappedOraConn_tOracleInput_38 != null) {
                        unwrappedOraConn_tOracleInput_38.setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_38).setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_38 = conn_tOracleInput_38.createStatement();

		    String dbquery_tOracleInput_38 = "SELECT GT.SIGLA, \n       TE.DOCUMENTO, \n       TE.MENSAJE AS TEXTO\nFROM TST_ERRCMASIVO TE\nLEFT JOIN GEN_TDOCUMENTOS"
+" GT ON GT.ID = TE.TDOCUMENTOS_ID";
		    

		    globalMap.put("tOracleInput_38_QUERY",dbquery_tOracleInput_38);

		    java.sql.ResultSet rs_tOracleInput_38 = null;

		    try {
		    	rs_tOracleInput_38 = stmt_tOracleInput_38.executeQuery(dbquery_tOracleInput_38);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_38 = rs_tOracleInput_38.getMetaData();
		    	int colQtyInRs_tOracleInput_38 = rsmd_tOracleInput_38.getColumnCount();

		    String tmpContent_tOracleInput_38 = null;
		    
		    
		    while (rs_tOracleInput_38.next()) {
		        nb_line_tOracleInput_38++;
		        
							if(colQtyInRs_tOracleInput_38 < 1) {
								row114.SIGLA = null;
							} else {
	                         		
        	row114.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 2) {
								row114.DOCUMENTO = null;
							} else {
	                         		
        	row114.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 3) {
								row114.TEXTO = null;
							} else {
	                         		
        	row114.TEXTO = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 3, false);
		                    }
					




 



/**
 * [tOracleInput_38 begin ] stop
 */
	
	/**
	 * [tOracleInput_38 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 


	tos_count_tOracleInput_38++;

/**
 * [tOracleInput_38 main ] stop
 */
	
	/**
	 * [tOracleInput_38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputPositional_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row114"
						
						);
					}
					



				String tempStringMtFileOutputPositional_1= null;
				
				int tempLengthMtFileOutputPositional_1= 0;
				
				StringBuilder sb_tFileOutputPositional_1 = new StringBuilder();
    				positionUtil_tFileOutputPositional_1.setValue_0(row114,sb_tFileOutputPositional_1,tempStringMtFileOutputPositional_1,tempLengthMtFileOutputPositional_1);
			sb_tFileOutputPositional_1.append("\n");
			
			outtFileOutputPositional_1.write(sb_tFileOutputPositional_1.toString());
    		
    		 						
			nb_line_tFileOutputPositional_1++;
			resourceMap.put("nb_line_tFileOutputPositional_1", nb_line_tFileOutputPositional_1);

 


	tos_count_tFileOutputPositional_1++;

/**
 * [tFileOutputPositional_1 main ] stop
 */
	
	/**
	 * [tFileOutputPositional_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_1";
	
	

 



/**
 * [tFileOutputPositional_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputPositional_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_1";
	
	

 



/**
 * [tFileOutputPositional_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_38 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_38 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

}
}finally{
	if (rs_tOracleInput_38 != null) {
		rs_tOracleInput_38.close();
	}
	if (stmt_tOracleInput_38 != null) {
		stmt_tOracleInput_38.close();
	}
}

globalMap.put("tOracleInput_38_NB_LINE",nb_line_tOracleInput_38);
 

ok_Hash.put("tOracleInput_38", true);
end_Hash.put("tOracleInput_38", System.currentTimeMillis());




/**
 * [tOracleInput_38 end ] stop
 */

	
	/**
	 * [tFileOutputPositional_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_1";
	
	
	
	
	
	
	outtFileOutputPositional_1.close();
	
	globalMap.put("tFileOutputPositional_1_NB_LINE",nb_line_tFileOutputPositional_1);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row114");
			  	}
			  	
 

ok_Hash.put("tFileOutputPositional_1", true);
end_Hash.put("tFileOutputPositional_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk41", 0, "ok");
				}
				tFixedFlowInput_11Process(globalMap);



/**
 * [tFileOutputPositional_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_38:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk28", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_38 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 finally ] stop
 */

	
	/**
	 * [tFileOutputPositional_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_1";
	
	
	
	
	
	java.io.Writer outtFileOutputPositional_1 = (java.io.Writer)resourceMap.get("outtFileOutputPositional_1");
	outtFileOutputPositional_1.close();
	

 



/**
 * [tFileOutputPositional_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 1);
	}
	


public static class row116Struct implements routines.system.IPersistableRow<row116Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row116Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row115Struct implements routines.system.IPersistableRow<row115Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row115Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row115Struct row115 = new row115Struct();
row116Struct row116 = new row116Struct();





	
	/**
	 * [tFileDelete_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_3", false);
		start_Hash.put("tFileDelete_3", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row116");
					}
				
		int tos_count_tFileDelete_3 = 0;
		

 



/**
 * [tFileDelete_3 begin ] stop
 */



	
	/**
	 * [tOracleOutput_37 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_37", false);
		start_Hash.put("tOracleOutput_37", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_37";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row115");
					}
				
		int tos_count_tOracleOutput_37 = 0;
		






    
    int nb_line_tOracleOutput_37 = 0;
    int nb_line_update_tOracleOutput_37 = 0;
    int nb_line_inserted_tOracleOutput_37 = 0;
    int nb_line_deleted_tOracleOutput_37 = 0;
    int nb_line_rejected_tOracleOutput_37 = 0;

    int tmp_batchUpdateCount_tOracleOutput_37 = 0;

    int deletedCount_tOracleOutput_37=0;
    int updatedCount_tOracleOutput_37=0;
    int insertedCount_tOracleOutput_37=0;
    int rowsToCommitCount_tOracleOutput_37=0;
    int rejectedCount_tOracleOutput_37=0;

    boolean whetherReject_tOracleOutput_37 = false;

    java.sql.Connection conn_tOracleOutput_37 = null;

    //optional table
    String dbschema_tOracleOutput_37 = null;
    String tableName_tOracleOutput_37 = null;
        dbschema_tOracleOutput_37 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_37 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_37=0;

        if(dbschema_tOracleOutput_37 == null || dbschema_tOracleOutput_37.trim().length() == 0) {
            tableName_tOracleOutput_37 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_37 = dbschema_tOracleOutput_37 + "." + ("AFI_ARCHIVOS");
        }
                String insert_tOracleOutput_37 = "INSERT INTO " + tableName_tOracleOutput_37 + " (estado,archivo,tarchivos_id,usuarios_id,codigo,archivofs,fecha,extension,contenido,padre_id,fecha_inicio,fecha_fin,proceso_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_37 = conn_tOracleOutput_37.prepareStatement(insert_tOracleOutput_37);
                        resourceMap.put("pstmt_tOracleOutput_37", pstmt_tOracleOutput_37);

        class BlobTypeUtil_tOracleOutput_37 {
            public Object getBLOB(Object data, java.sql.Connection conn) throws java.sql.SQLException {
            	boolean containBlobFromOtherDB = false;
                if(!(data instanceof java.sql.Blob) || (data instanceof oracle.sql.BLOB && !containBlobFromOtherDB)) {
                	return data;
                }

                oracle.sql.BLOB blob = null;
                java.io.InputStream in = null;
                java.io.OutputStream out = null;
                try{
                	//in
                	java.sql.Blob blobData = (java.sql.Blob) data;
                	in = blobData.getBinaryStream();

                	//out
                	blob = oracle.sql.BLOB.createTemporary(conn, true, oracle.sql.BLOB.DURATION_SESSION);
                    blob.open(oracle.sql.BLOB.MODE_READWRITE);
                    //blob = conn.createBlob(); oracle jdbc don't support it
                	out = blob.setBinaryStream(1);

                    byte[] cache = new byte[8192];
                    int len = 0;
                    while ((len = in.read(cache)) != -1) {
                        out.write(cache, 0, len);
                    }

                    return blob;
                } catch(java.sql.SQLException sqlexp){
globalMap.put("tOracleOutput_37_ERROR_MESSAGE",sqlexp.getMessage());
                	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_37) {
                    		//keep quiet
                    	}
                    }
                    sqlexp.printStackTrace();
                } catch(java.lang.Exception exp){
globalMap.put("tOracleOutput_37_ERROR_MESSAGE",exp.getMessage());
                   	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_37) {
                    		//keep quiet
                    	}
                    }
                    exp.printStackTrace();
                } finally {
                	if(out!=null) {
                		try {
                			out.flush();
                    		out.close();
                    	} catch(java.io.IOException e_tOracleOutput_37) {
                    		//keep quiet
                    	}
                    }

            	 	if(in!=null) {
                		try {
                    		in.close();
                    	} catch(java.io.IOException e_tOracleOutput_37) {
                    		//keep quiet
                    	}
                    }

                    if(blob!=null) {
                		try {
                    		blob.close();
                    	} catch(java.sql.SQLException e_tOracleOutput_37) {
                    		//keep quiet
                    	}
                    }
                }

                return null;

            }

        }
        BlobTypeUtil_tOracleOutput_37 blobTypeUtil_tOracleOutput_37=new BlobTypeUtil_tOracleOutput_37();





 



/**
 * [tOracleOutput_37 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_11", false);
		start_Hash.put("tFixedFlowInput_11", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_11";
	
	
		int tos_count_tFixedFlowInput_11 = 0;
		

	    for (int i_tFixedFlowInput_11 = 0 ; i_tFixedFlowInput_11 < 1 ; i_tFixedFlowInput_11++) {
	                	            	
    	            		row115.estado = 7;
    	            	        	            	
    	            		row115.archivo = "ERR_AFI_CMSIATH.txt";
    	            	        	            	
    	            		row115.tarchivos_id = 16;
    	            	        	            	
    	            		row115.usuarios_id = context.vusuarios_id;
    	            	        	            	
    	            		row115.codigo = "AFI_CMSIATH";
    	            	        	            	
    	            		row115.archivofs = "ERR_AFI_CMSIATH.txt";
    	            	        	            	
    	            		row115.fecha = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row115.extension = "txt";
    	            	        	            	
    	            		row115.contenido = ExtraerBlob.ByteArrayFromFile(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"ERR_AFI_CMSIATH.txt");
    	            	        	            	
    	            		row115.padre_id = context.vafiarchivos_id;
    	            	        	            	
    	            		row115.fecha_inicio = context.vfinicio;
    	            	        	            	
    	            		row115.fecha_fin = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row115.procesos_id = context.vprocesos_id;
    	            	

 



/**
 * [tFixedFlowInput_11 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 


	tos_count_tFixedFlowInput_11++;

/**
 * [tFixedFlowInput_11 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_37 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_37";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row115"
						
						);
					}
					



            row116 = null;
        whetherReject_tOracleOutput_37 = false;
                        if(row115.estado == null) {
pstmt_tOracleOutput_37.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_37.setInt(1, row115.estado);
}

                        if(row115.archivo == null) {
pstmt_tOracleOutput_37.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_37.setString(2, row115.archivo);
}

                        if(row115.tarchivos_id == null) {
pstmt_tOracleOutput_37.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_37.setInt(3, row115.tarchivos_id);
}

                        if(row115.usuarios_id == null) {
pstmt_tOracleOutput_37.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_37.setInt(4, row115.usuarios_id);
}

                        if(row115.codigo == null) {
pstmt_tOracleOutput_37.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_37.setString(5, row115.codigo);
}

                        if(row115.archivofs == null) {
pstmt_tOracleOutput_37.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_37.setString(6, row115.archivofs);
}

                        if(row115.fecha != null) {
pstmt_tOracleOutput_37.setObject(7, new java.sql.Timestamp(row115.fecha.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_37.setNull(7, java.sql.Types.DATE);
}

                        if(row115.extension == null) {
pstmt_tOracleOutput_37.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_37.setString(8, row115.extension);
}

                        if(row115.contenido == null) {
pstmt_tOracleOutput_37.setNull(9, java.sql.Types.BLOB);
} else {pstmt_tOracleOutput_37.setObject(9,  blobTypeUtil_tOracleOutput_37.getBLOB(row115.contenido, conn_tOracleOutput_37));
}

                        if(row115.padre_id == null) {
pstmt_tOracleOutput_37.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_37.setInt(10, row115.padre_id);
}

                        if(row115.fecha_inicio != null) {
pstmt_tOracleOutput_37.setObject(11, new java.sql.Timestamp(row115.fecha_inicio.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_37.setNull(11, java.sql.Types.DATE);
}

                        if(row115.fecha_fin != null) {
pstmt_tOracleOutput_37.setObject(12, new java.sql.Timestamp(row115.fecha_fin.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_37.setNull(12, java.sql.Types.DATE);
}

                        if(row115.procesos_id == null) {
pstmt_tOracleOutput_37.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_37.setInt(13, row115.procesos_id);
}

                try {
                    nb_line_tOracleOutput_37++;
                    int processedCount_tOracleOutput_37 = pstmt_tOracleOutput_37.executeUpdate();
                    insertedCount_tOracleOutput_37 += processedCount_tOracleOutput_37;
                    rowsToCommitCount_tOracleOutput_37 += processedCount_tOracleOutput_37;
                } catch(java.lang.Exception e_tOracleOutput_37) {
globalMap.put("tOracleOutput_37_ERROR_MESSAGE",e_tOracleOutput_37.getMessage());
                    whetherReject_tOracleOutput_37 = true;
                            System.err.print(e_tOracleOutput_37.getMessage());
                }
            if(!whetherReject_tOracleOutput_37) {
                            row116 = new row116Struct();
                                row116.estado = row115.estado;
                                row116.archivo = row115.archivo;
                                row116.tarchivos_id = row115.tarchivos_id;
                                row116.usuarios_id = row115.usuarios_id;
                                row116.codigo = row115.codigo;
                                row116.archivofs = row115.archivofs;
                                row116.fecha = row115.fecha;
                                row116.extension = row115.extension;
                                row116.contenido = row115.contenido;
                                row116.padre_id = row115.padre_id;
                                row116.fecha_inicio = row115.fecha_inicio;
                                row116.fecha_fin = row115.fecha_fin;
                                row116.procesos_id = row115.procesos_id;
            }

 


	tos_count_tOracleOutput_37++;

/**
 * [tOracleOutput_37 main ] stop
 */
	
	/**
	 * [tOracleOutput_37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_37";
	
	

 



/**
 * [tOracleOutput_37 process_data_begin ] stop
 */
// Start of branch "row116"
if(row116 != null) { 



	
	/**
	 * [tFileDelete_3 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row116"
						
						);
					}
					

 

class DeleteFoldertFileDelete_3{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_3=new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"ERR_AFI_CMSIATH.txt");
    if(file_tFileDelete_3.exists()&& file_tFileDelete_3.isFile()){
    	if(file_tFileDelete_3.delete()){
    		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_3_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_3_DELETE_PATH",java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"ERR_AFI_CMSIATH.txt");
 


	tos_count_tFileDelete_3++;

/**
 * [tFileDelete_3 main ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_end ] stop
 */

} // End of branch "row116"




	
	/**
	 * [tOracleOutput_37 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_37";
	
	

 



/**
 * [tOracleOutput_37 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

        }
        globalMap.put("tFixedFlowInput_11_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_11", true);
end_Hash.put("tFixedFlowInput_11", System.currentTimeMillis());




/**
 * [tFixedFlowInput_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_37 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_37";
	
	
	



	
        if(pstmt_tOracleOutput_37 != null) {
			
				pstmt_tOracleOutput_37.close();
				resourceMap.remove("pstmt_tOracleOutput_37");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_37", true);

	
	nb_line_deleted_tOracleOutput_37=nb_line_deleted_tOracleOutput_37+ deletedCount_tOracleOutput_37;
	nb_line_update_tOracleOutput_37=nb_line_update_tOracleOutput_37 + updatedCount_tOracleOutput_37;
	nb_line_inserted_tOracleOutput_37=nb_line_inserted_tOracleOutput_37 + insertedCount_tOracleOutput_37;
	nb_line_rejected_tOracleOutput_37=nb_line_rejected_tOracleOutput_37 + rejectedCount_tOracleOutput_37;
	
        globalMap.put("tOracleOutput_37_NB_LINE",nb_line_tOracleOutput_37);
        globalMap.put("tOracleOutput_37_NB_LINE_UPDATED",nb_line_update_tOracleOutput_37);
        globalMap.put("tOracleOutput_37_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_37);
        globalMap.put("tOracleOutput_37_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_37);
        globalMap.put("tOracleOutput_37_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_37);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row115");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_37", true);
end_Hash.put("tOracleOutput_37", System.currentTimeMillis());




/**
 * [tOracleOutput_37 end ] stop
 */

	
	/**
	 * [tFileDelete_3 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row116");
			  	}
			  	
 

ok_Hash.put("tFileDelete_3", true);
end_Hash.put("tFileDelete_3", System.currentTimeMillis());




/**
 * [tFileDelete_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_11 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_37 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_37";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_37") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_37 = null;
                if ((pstmtToClose_tOracleOutput_37 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_37")) != null) {
                    pstmtToClose_tOracleOutput_37.close();
                }
    }
 



/**
 * [tOracleOutput_37 finally ] stop
 */

	
	/**
	 * [tFileDelete_3 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_11_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


//Guarda en variables de contexto la hora final de ejecución del etl, actualiza el estado a succes y los imprime en consola

context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");
context.ESTADO_EXEC = "Succes";

System.out.println("- End: "+context.HORA_FINAL );
System.out.println("- Estado: "+context.ESTADO_EXEC );
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleClose_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_INICIO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_FINAL");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ESTADO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("JOBS");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row4.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row4.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row4.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row4.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row4.JOBS = context.JOB;
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row4.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            row4.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row4.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row4.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row4.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_2.append(
                            row4.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row4.ESTADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row4.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row4.JOBS != null) {
                        sb_tFileOutputDelimited_2.append(
                            row4.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tFileInputXML_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row127Struct implements routines.system.IPersistableRow<row127Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return false;
				}
				public Integer HostLength(){
				    return 15;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return false;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return false;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 7;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 8;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 15;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 44;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row127Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row127Struct row127 = new row127Struct();




	
	/**
	 * [tJavaRow_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_31", false);
		start_Hash.put("tJavaRow_31", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_31";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row127");
					}
				
		int tos_count_tJavaRow_31 = 0;
		

int nb_line_tJavaRow_31 = 0;

 



/**
 * [tJavaRow_31 begin ] stop
 */



	
	/**
	 * [tFileInputXML_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_2", false);
		start_Hash.put("tFileInputXML_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_2";
	
	
		int tos_count_tFileInputXML_2 = 0;
		

	

int nb_line_tFileInputXML_2 = 0;

	String os_tFileInputXML_2 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_2=false;
	if(os_tFileInputXML_2.indexOf("windows") > -1 || os_tFileInputXML_2.indexOf("nt") > -1){
		isWindows_tFileInputXML_2=true;
	}
class XML_API_tFileInputXML_2{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_2 xml_api_tFileInputXML_2 = new XML_API_tFileInputXML_2();

String[] queryPaths_tFileInputXML_2 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"	
	,"PathStorage"		
	,"PathStorage"+"/@xsi:nil"	
	,"SMTPHost"		
	,"SMTPHost"+"/@xsi:nil"	
	,"SMTPPort"		
	,"SMTPPort"+"/@xsi:nil"	
	,"UsernameMail"		
	,"UsernameMail"+"/@xsi:nil"	
	,"PasswordMail"		
	,"PasswordMail"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_2 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_2 = "";
String[] node_tFileInputXML_2 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_2 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_2,asXMLs_tFileInputXML_2);
looper_tFileInputXML_2.setEncoding("ISO-8859-15");
Object filename_tFileInputXML_2 = null;
try {
	filename_tFileInputXML_2 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_2 != null && filename_tFileInputXML_2 instanceof String && filename_tFileInputXML_2.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_2){
		filename_tFileInputXML_2 = filename_tFileInputXML_2.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_2 instanceof java.io.InputStream){
	looper_tFileInputXML_2.parse((java.io.InputStream)filename_tFileInputXML_2);
}else{
	looper_tFileInputXML_2.parse(String.valueOf(filename_tFileInputXML_2));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_2  = looper_tFileInputXML_2.iterator();
while (it_tFileInputXML_2.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_2 = it_tFileInputXML_2.next();
		nb_line_tFileInputXML_2++;
		
	row127 = null;			
	boolean whetherReject_tFileInputXML_2 = false;
	row127 = new row127Struct();
	try{
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Host");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.Host =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.Host ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.Host =null;
									}else{
		row127.Host = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Port");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.Port =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.Port ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.Port =null;
									}else{
		row127.Port = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Sid");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.Sid =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.Sid ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.Sid =null;
									}else{
		row127.Sid = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("ServiceName");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.ServiceName =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.ServiceName ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.ServiceName =null;
									}else{
		row127.ServiceName = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Schema");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.Schema =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.Schema ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.Schema =null;
									}else{
		row127.Schema = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("User");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.User =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.User ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.User =null;
									}else{
		row127.User = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Password");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.Password =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.Password ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.Password =null;
									}else{
		row127.Password = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("PathStorage");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("PathStorage"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.PathStorage =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.PathStorage ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.PathStorage =null;
									}else{
		row127.PathStorage = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("SMTPHost");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("SMTPHost"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.SMTPHost =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.SMTPHost ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.SMTPHost =null;
									}else{
		row127.SMTPHost = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("SMTPPort");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("SMTPPort"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.SMTPPort =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.SMTPPort ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.SMTPPort =null;
									}else{
		row127.SMTPPort = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("UsernameMail");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("UsernameMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.UsernameMail =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.UsernameMail ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.UsernameMail =null;
									}else{
		row127.UsernameMail = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("PasswordMail");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("PasswordMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row127.PasswordMail =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row127.PasswordMail ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row127.PasswordMail =null;
									}else{
		row127.PasswordMail = str_tFileInputXML_2;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_2 = true;
                System.err.println(e.getMessage());
                row127 = null;
    }
			
			

 



/**
 * [tFileInputXML_2 begin ] stop
 */
	
	/**
	 * [tFileInputXML_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 


	tos_count_tFileInputXML_2++;

/**
 * [tFileInputXML_2 main ] stop
 */
	
	/**
	 * [tFileInputXML_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_begin ] stop
 */
// Start of branch "row127"
if(row127 != null) { 



	
	/**
	 * [tJavaRow_31 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_31";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row127"
						
						);
					}
					

    //Guarda en variables de contexto los parametros de conexión a la bd saludsis
context.db_origen_Server = row127.Host;
context.db_origen_Port = row127.Port;
context.db_origen_ServiceName = row127.ServiceName;
context.db_origen_Schema = row127.Schema;
context.db_origen_Login = row127.User;
context.db_origen_Password = row127.Password;


//Guarda en variables de contexto la fecha de ejecución y la hora de inicio
context.vfinicio = TalendDate.getCurrentDate();
context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
context.JOB = "Inicial";

//Imprime en consola el job, la fecha de ejecución y la hora de inicio
System.out.println(context.JOB+" :-Start: "+context.FECHA_EJECUCION+" "+context.HORA_INICIO);


    nb_line_tJavaRow_31++;   

 


	tos_count_tJavaRow_31++;

/**
 * [tJavaRow_31 main ] stop
 */
	
	/**
	 * [tJavaRow_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_31";
	
	

 



/**
 * [tJavaRow_31 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_31";
	
	

 



/**
 * [tJavaRow_31 process_data_end ] stop
 */

} // End of branch "row127"




	
	/**
	 * [tFileInputXML_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	


	}
	try {
		looper_tFileInputXML_2.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		
		System.err.println(e.getMessage());	
	
	}
	globalMap.put("tFileInputXML_2_NB_LINE",nb_line_tFileInputXML_2);

	

 

ok_Hash.put("tFileInputXML_2", true);
end_Hash.put("tFileInputXML_2", System.currentTimeMillis());




/**
 * [tFileInputXML_2 end ] stop
 */

	
	/**
	 * [tJavaRow_31 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_31";
	
	

globalMap.put("tJavaRow_31_NB_LINE",nb_line_tJavaRow_31);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row127");
			  	}
			  	
 

ok_Hash.put("tJavaRow_31", true);
end_Hash.put("tJavaRow_31", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk49", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_31 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_31 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_31";
	
	

 



/**
 * [tJavaRow_31 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(false);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tOracleInput_2Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk47", 0, "ok");
				}
				tFixedFlowInput_14Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT AWG.SIGLA, \n       AWG.DESCRIPCION, \n       AWG.SIGLA_SALUDSIS,\n       GS.ID AS ID_SALUDSIS\nFROM AFI_WS_GENE"
+"RO_SIATH AWG\nINNER JOIN GEN_SEXOS GS ON GS.SIGLA = AWG.SIGLA_SALUDSIS\nWHERE AWG.ESTADO = 'Activo'\n      AND GS.ESTREG"
+"ISTRO_ID = 1 \n      AND AWG.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row8.SIGLA = null;
							} else {
	                         		
        	row8.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row8.DESCRIPCION = null;
							} else {
	                         		
        	row8.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row8.SIGLA_SALUDSIS = null;
							} else {
	                         		
        	row8.SIGLA_SALUDSIS = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row8.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(4) != null) {
						row8.ID_SALUDSIS = rs_tOracleInput_2.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					



    
		row8Struct oneRow_tHashOutput_2 = new row8Struct();
				
					oneRow_tHashOutput_2.SIGLA = row8.SIGLA;
					oneRow_tHashOutput_2.DESCRIPCION = row8.DESCRIPCION;
					oneRow_tHashOutput_2.SIGLA_SALUDSIS = row8.SIGLA_SALUDSIS;
					oneRow_tHashOutput_2.ID_SALUDSIS = row8.ID_SALUDSIS;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tOracleInput_12Process(globalMap);



/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal CODIGO;

				public BigDecimal getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 0;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return "";
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODIGO="+String.valueOf(CODIGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row18Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row18Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_12.setFetchSize(1000);


		    String dbquery_tOracleInput_12 = "SELECT GD.ID, \n       TO_NUMBER(REPLACE(GD.CODIGO,GD.CODPAIS,'')) AS CODIGO\nFROM GEN_DIVIPOLA GD        \nWHERE GD.TC"
+"CPP = 'CABECERA MUNICIPAL (CM)' OR GD.TCCPP = 'CORREGIMIENTO DEPARTAMENTAL (CD)'\nAND GD.ESTREGISTRO_ID = 1\nUNION\nSELE"
+"CT GD2.ID, \n       TO_NUMBER(REPLACE(GD.CODIGO,GD.CODPAIS,'')) AS CODIGO\nFROM GEN_DIVIPOLA GD        \nINNER JOIN GEN_"
+"DIVIPOLA GD2 ON GD2.CODMCPIO = GD.CODMCPIO\nWHERE GD.TCCPP = 'INSPECCION DE POLICIA (IP)'\nAND (GD2.TCCPP = 'CABECERA MU"
+"NICIPAL (CM)' OR GD2.TCCPP = 'CORREGIMIENTO DEPARTAMENTAL (CD)')\nAND GD.ESTREGISTRO_ID = 1\nUNION\nSELECT GD2.ID, \n   "
+"    TO_NUMBER(REPLACE(GD.CODIGO,GD.CODPAIS,'')) AS CODIGO\nFROM GEN_DIVIPOLA GD        \nINNER JOIN GEN_DIVIPOLA GD2 ON "
+"GD2.CODMCPIO = GD.CODMCPIO\nWHERE GD.TCCPP = 'CASERIO (CAS)'\nAND (GD2.TCCPP = 'CABECERA MUNICIPAL (CM)' OR GD2.TCCPP = "
+"'CORREGIMIENTO DEPARTAMENTAL (CD)')\nAND GD.ESTREGISTRO_ID = 1\nUNION\nSELECT GD2.ID, \n       TO_NUMBER(REPLACE(GD.CODI"
+"GO,GD.CODPAIS,'')) AS CODIGO\nFROM GEN_DIVIPOLA GD        \nINNER JOIN GEN_DIVIPOLA GD2 ON GD2.CODMCPIO = GD.CODMCPIO\nW"
+"HERE GD.TCCPP = 'CENTRO POBLADO (CP)'\nAND (GD2.TCCPP = 'CABECERA MUNICIPAL (CM)' OR GD2.TCCPP = 'CORREGIMIENTO DEPARTAM"
+"ENTAL (CD)')\nAND GD.ESTREGISTRO_ID = 1\nUNION\nSELECT GD2.ID, \n       TO_NUMBER(REPLACE(GD.CODIGO,GD.CODPAIS,'')) AS C"
+"ODIGO\nFROM GEN_DIVIPOLA GD        \nINNER JOIN GEN_DIVIPOLA GD2 ON GD2.CODMCPIO = GD.CODMCPIO\nWHERE GD.TCCPP = 'CORREG"
+"IMIENTO DEPARTAMENTAL (CD)'\nAND (GD2.TCCPP = 'CABECERA MUNICIPAL (CM)' OR GD2.TCCPP = 'CORREGIMIENTO DEPARTAMENTAL (CD)"
+"')\nAND GD.ESTREGISTRO_ID = 1\nUNION\nSELECT GD2.ID, \n       TO_NUMBER(REPLACE(GD.CODIGO,GD.CODPAIS,'')) AS CODIGO\nFRO"
+"M GEN_DIVIPOLA GD        \nINNER JOIN GEN_DIVIPOLA GD2 ON GD2.CODMCPIO = GD.CODMCPIO\nWHERE GD.TCCPP = 'CORREGIMIENTO MU"
+"NICIPAL (C)'\nAND (GD2.TCCPP = 'CABECERA MUNICIPAL (CM)' OR GD2.TCCPP = 'CORREGIMIENTO DEPARTAMENTAL (CD)')\nAND GD.ESTR"
+"EGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row18.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(1) != null) {
						row18.ID = rs_tOracleInput_12.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row18.CODIGO = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(2) != null) {
						row18.CODIGO = rs_tOracleInput_12.getBigDecimal(2);
					} else {
				
						row18.CODIGO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					



    
		row18Struct oneRow_tHashOutput_12 = new row18Struct();
				
					oneRow_tHashOutput_12.ID = row18.ID;
					oneRow_tHashOutput_12.CODIGO = row18.CODIGO;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk31", 0, "ok");
				}
				tOracleInput_22Process(globalMap);



/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();




	
	/**
	 * [tHashOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_14", false);
		start_Hash.put("tHashOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tHashOutput_14 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row45Struct> tHashFile_tHashOutput_14 = null;
		String hashKey_tHashOutput_14 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_14";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_14)){
			    if(mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14) == null){
	      		    mf_tHashOutput_14.getResourceMap().put(hashKey_tHashOutput_14, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row45Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }else{
			    	tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }
			}
        int nb_line_tHashOutput_14 = 0;

 



/**
 * [tHashOutput_14 begin ] stop
 */



	
	/**
	 * [tOracleInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_22", false);
		start_Hash.put("tOracleInput_22", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_22";
	
	
		int tos_count_tOracleInput_22 = 0;
		
	


	
		    int nb_line_tOracleInput_22 = 0;
		    java.sql.Connection conn_tOracleInput_22 = null;
				conn_tOracleInput_22 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_22 = false;
				boolean isConnectionWrapped_tOracleInput_22 = !(conn_tOracleInput_22 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_22.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_22 = null;
                if (isConnectionWrapped_tOracleInput_22) {
					unwrappedOraConn_tOracleInput_22 = conn_tOracleInput_22.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_22 != null) {
                        isTimeZoneNull_tOracleInput_22 = (unwrappedOraConn_tOracleInput_22.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_22 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_22).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_22) {
					java.sql.Statement stmtGetTZ_tOracleInput_22 = conn_tOracleInput_22.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_22 = stmtGetTZ_tOracleInput_22.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_22 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_22.next()) {
						sessionTimezone_tOracleInput_22 = rsGetTZ_tOracleInput_22.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_22 && unwrappedOraConn_tOracleInput_22 != null) {
                        unwrappedOraConn_tOracleInput_22.setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_22).setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_22 = conn_tOracleInput_22.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_22.setFetchSize(1000);


		    String dbquery_tOracleInput_22 = "SELECT AWE.SIGLA,\n       AWE.DESCRIPCION,\n       AWE.SIGLA_SALUDSIS,\n       GE.ID AS ID_SALUDSIS\nFROM AFI_WS_ESTCIV"
+"IL_SIATH AWE\nINNER JOIN GEN_ESTCIVILES GE ON GE.SIGLA = AWE.SIGLA_SALUDSIS\nWHERE AWE.ESTADO = 'Activo'\n      AND GE.E"
+"STREGISTRO_ID = 1\n      AND AWE.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_22_QUERY",dbquery_tOracleInput_22);

		    java.sql.ResultSet rs_tOracleInput_22 = null;

		    try {
		    	rs_tOracleInput_22 = stmt_tOracleInput_22.executeQuery(dbquery_tOracleInput_22);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_22 = rs_tOracleInput_22.getMetaData();
		    	int colQtyInRs_tOracleInput_22 = rsmd_tOracleInput_22.getColumnCount();

		    String tmpContent_tOracleInput_22 = null;
		    
		    
		    while (rs_tOracleInput_22.next()) {
		        nb_line_tOracleInput_22++;
		        
							if(colQtyInRs_tOracleInput_22 < 1) {
								row45.SIGLA = null;
							} else {
	                         		
        	row45.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_22, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_22 < 2) {
								row45.DESCRIPCION = null;
							} else {
	                         		
        	row45.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_22, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_22 < 3) {
								row45.SIGLA_SALUDSIS = null;
							} else {
	                         		
        	row45.SIGLA_SALUDSIS = routines.system.JDBCUtil.getString(rs_tOracleInput_22, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_22 < 4) {
								row45.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_22.getObject(4) != null) {
						row45.ID_SALUDSIS = rs_tOracleInput_22.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_22 begin ] stop
 */
	
	/**
	 * [tOracleInput_22 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 


	tos_count_tOracleInput_22++;

/**
 * [tOracleInput_22 main ] stop
 */
	
	/**
	 * [tOracleInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_14 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					



    
		row45Struct oneRow_tHashOutput_14 = new row45Struct();
				
					oneRow_tHashOutput_14.SIGLA = row45.SIGLA;
					oneRow_tHashOutput_14.DESCRIPCION = row45.DESCRIPCION;
					oneRow_tHashOutput_14.SIGLA_SALUDSIS = row45.SIGLA_SALUDSIS;
					oneRow_tHashOutput_14.ID_SALUDSIS = row45.ID_SALUDSIS;
		
        tHashFile_tHashOutput_14.put(oneRow_tHashOutput_14);
        nb_line_tHashOutput_14 ++;

 


	tos_count_tHashOutput_14++;

/**
 * [tHashOutput_14 main ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_22 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

}
}finally{
	if (rs_tOracleInput_22 != null) {
		rs_tOracleInput_22.close();
	}
	if (stmt_tOracleInput_22 != null) {
		stmt_tOracleInput_22.close();
	}
}

globalMap.put("tOracleInput_22_NB_LINE",nb_line_tOracleInput_22);
 

ok_Hash.put("tOracleInput_22", true);
end_Hash.put("tOracleInput_22", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tOracleInput_1Process(globalMap);



/**
 * [tOracleInput_22 end ] stop
 */

	
	/**
	 * [tHashOutput_14 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
globalMap.put("tHashOutput_14_NB_LINE", nb_line_tHashOutput_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tHashOutput_14", true);
end_Hash.put("tHashOutput_14", System.currentTimeMillis());




/**
 * [tHashOutput_14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_22 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 finally ] stop
 */

	
	/**
	 * [tHashOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 100;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 500;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_1.setFetchSize(1000);


		    String dbquery_tOracleInput_1 = "SELECT GF.ID,\n       GF.SIGLA,\n       GF.NOMBRE\nFROM GEN_FUERZAS GF \nWHERE GF.ESTADO = 'Activo' \n      AND GF.ESTR"
+"EGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row35.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row35.ID = rs_tOracleInput_1.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row35.SIGLA = null;
							} else {
	                         		
        	row35.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row35.NOMBRE = null;
							} else {
	                         		
        	row35.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 3, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					



    
		row35Struct oneRow_tHashOutput_1 = new row35Struct();
				
					oneRow_tHashOutput_1.ID = row35.ID;
					oneRow_tHashOutput_1.SIGLA = row35.SIGLA;
					oneRow_tHashOutput_1.NOMBRE = row35.NOMBRE;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk20", 0, "ok");
				}
				tOracleInput_5Process(globalMap);



/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 5;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CODIGO="+CODIGO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				String driverClass_tOracleInput_5 = "oracle.jdbc.OracleDriver";
				java.lang.Class.forName(driverClass_tOracleInput_5);
				
			String url_tOracleInput_5 = null;
				url_tOracleInput_5 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";

				String dbUser_tOracleInput_5 = context.db_origen_Login;

				

				
	final String decryptedPassword_tOracleInput_5 = context.db_origen_Password; 

				String dbPwd_tOracleInput_5 = decryptedPassword_tOracleInput_5;

				
					java.util.Properties atnParamsPrope_tOracleInput_5 = new java.util.Properties();
					atnParamsPrope_tOracleInput_5.put("user",dbUser_tOracleInput_5);
					atnParamsPrope_tOracleInput_5.put("password",dbPwd_tOracleInput_5);
                    if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                        atnParamsPrope_tOracleInput_5.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
                    }
					conn_tOracleInput_5 = java.sql.DriverManager.getConnection(url_tOracleInput_5, atnParamsPrope_tOracleInput_5);
				java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
				java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
				String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
				while (rsGetTZ_tOracleInput_5.next()) {
					sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
				}
                                if (!(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) &&
                                        conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class)) {
                                    if (conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class) != null) {
                                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class)).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                                    }
                                } else {
                                    ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                                }
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_5.setFetchSize(1000);


		    String dbquery_tOracleInput_5 = "SELECT GE.ID, \n       GE.NOMBRE, \n       GE.CODIGO \nFROM GEN_ETNICAS GE \nWHERE GE.ESTADO = 'Activo' \n      AND GE."
+"ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row55.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row55.ID = rs_tOracleInput_5.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row55.NOMBRE = null;
							} else {
	                         		
        	row55.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 3) {
								row55.CODIGO = null;
							} else {
	                         		
        	row55.CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 3, false);
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					



    
		row55Struct oneRow_tHashOutput_5 = new row55Struct();
				
					oneRow_tHashOutput_5.ID = row55.ID;
					oneRow_tHashOutput_5.NOMBRE = row55.NOMBRE;
					oneRow_tHashOutput_5.CODIGO = row55.CODIGO;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
	if(conn_tOracleInput_5 != null && !conn_tOracleInput_5.isClosed()) {
	
			conn_tOracleInput_5.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}
	
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk32", 0, "ok");
				}
				tOracleInput_33Process(globalMap);



/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row82Struct implements routines.system.IPersistableRow<row82Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row82Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_33Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row82Struct row82 = new row82Struct();




	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row82");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tOracleInput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_33", false);
		start_Hash.put("tOracleInput_33", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_33";
	
	
		int tos_count_tOracleInput_33 = 0;
		
	


	
		    int nb_line_tOracleInput_33 = 0;
		    java.sql.Connection conn_tOracleInput_33 = null;
				conn_tOracleInput_33 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_33 = false;
				boolean isConnectionWrapped_tOracleInput_33 = !(conn_tOracleInput_33 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_33.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_33 = null;
                if (isConnectionWrapped_tOracleInput_33) {
					unwrappedOraConn_tOracleInput_33 = conn_tOracleInput_33.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_33 != null) {
                        isTimeZoneNull_tOracleInput_33 = (unwrappedOraConn_tOracleInput_33.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_33 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_33).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_33) {
					java.sql.Statement stmtGetTZ_tOracleInput_33 = conn_tOracleInput_33.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_33 = stmtGetTZ_tOracleInput_33.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_33 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_33.next()) {
						sessionTimezone_tOracleInput_33 = rsGetTZ_tOracleInput_33.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_33 && unwrappedOraConn_tOracleInput_33 != null) {
                        unwrappedOraConn_tOracleInput_33.setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_33).setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_33 = conn_tOracleInput_33.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_33.setFetchSize(1000);


		    String dbquery_tOracleInput_33 = "SELECT AE.ID,\n       AE.SIGLA,\n       AE.NOMBRE \nFROM AFI_ESTADOS AE \nWHERE AE.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_33_QUERY",dbquery_tOracleInput_33);

		    java.sql.ResultSet rs_tOracleInput_33 = null;

		    try {
		    	rs_tOracleInput_33 = stmt_tOracleInput_33.executeQuery(dbquery_tOracleInput_33);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_33 = rs_tOracleInput_33.getMetaData();
		    	int colQtyInRs_tOracleInput_33 = rsmd_tOracleInput_33.getColumnCount();

		    String tmpContent_tOracleInput_33 = null;
		    
		    
		    while (rs_tOracleInput_33.next()) {
		        nb_line_tOracleInput_33++;
		        
							if(colQtyInRs_tOracleInput_33 < 1) {
								row82.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_33.getObject(1) != null) {
						row82.ID = rs_tOracleInput_33.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_33 < 2) {
								row82.SIGLA = null;
							} else {
	                         		
        	row82.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_33 < 3) {
								row82.NOMBRE = null;
							} else {
	                         		
        	row82.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 3, false);
		                    }
					




 



/**
 * [tOracleInput_33 begin ] stop
 */
	
	/**
	 * [tOracleInput_33 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 


	tos_count_tOracleInput_33++;

/**
 * [tOracleInput_33 main ] stop
 */
	
	/**
	 * [tOracleInput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row82"
						
						);
					}
					



    
		row82Struct oneRow_tHashOutput_9 = new row82Struct();
				
					oneRow_tHashOutput_9.ID = row82.ID;
					oneRow_tHashOutput_9.SIGLA = row82.SIGLA;
					oneRow_tHashOutput_9.NOMBRE = row82.NOMBRE;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_33 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

}
}finally{
	if (rs_tOracleInput_33 != null) {
		rs_tOracleInput_33.close();
	}
	if (stmt_tOracleInput_33 != null) {
		stmt_tOracleInput_33.close();
	}
}

globalMap.put("tOracleInput_33_NB_LINE",nb_line_tOracleInput_33);
 

ok_Hash.put("tOracleInput_33", true);
end_Hash.put("tOracleInput_33", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk38", 0, "ok");
				}
				tOracleInput_4Process(globalMap);



/**
 * [tOracleInput_33 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row82");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_33 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_4.setFetchSize(1000);


		    String dbquery_tOracleInput_4 = "SELECT AWO.CATEGORIA, \n       AWO.DESCRIPCION, \n       AWO.SIGLA_SALUDSIS,\n       AWO.ID AS ID_SALUDSIS\nFROM AFI_WS"
+"_OCUPACION_SIATH AWO\nINNER JOIN GEN_OCUPACIONES GOC ON GOC.SIGLA = AWO.SIGLA_SALUDSIS\nWHERE AWO.ESTADO = 'Activo'\n   "
+"   AND GOC.ESTREGISTRO_ID = 1\n      AND AWO.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row10.CATEGORIA = 0;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row10.CATEGORIA = rs_tOracleInput_4.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row10.DESCRIPCION = null;
							} else {
	                         		
        	row10.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row10.SIGLA_SALUDSIS = null;
							} else {
	                         		
        	row10.SIGLA_SALUDSIS = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 4) {
								row10.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(4) != null) {
						row10.ID_SALUDSIS = rs_tOracleInput_4.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					



    
		row10Struct oneRow_tHashOutput_4 = new row10Struct();
				
					oneRow_tHashOutput_4.CATEGORIA = row10.CATEGORIA;
					oneRow_tHashOutput_4.DESCRIPCION = row10.DESCRIPCION;
					oneRow_tHashOutput_4.SIGLA_SALUDSIS = row10.SIGLA_SALUDSIS;
					oneRow_tHashOutput_4.ID_SALUDSIS = row10.ID_SALUDSIS;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tOracleInput_6Process(globalMap);



/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 50;
				}
				public Integer CATEGORIAPrecision(){
				    return 0;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_6.setFetchSize(1000);


		    String dbquery_tOracleInput_6 = "SELECT TO_NUMBER(AWT.CATEGORIA) AS CATEGORIA, \n       AWT.DESCRIPCION, \n       AWT.SIGLA_SALUDSIS,\n       ATV.ID AS "
+"ID_SALUDSIS\nFROM AFI_WS_TVINCULACION_SIATH AWT\nINNER JOIN AFI_TVINCULACIONES ATV ON ATV.SIGLA = AWT.SIGLA_SALUDSIS\nWH"
+"ERE AWT.ESTADO = 'Activo'\n      AND ATV.ESTADO = 'Activo'\n      AND ATV.ESTREGISTRO_ID = 1\n      AND AWT.ESTREGISTRO_"
+"ID = 1\n      AND AWT.SIGLA_SALUDSIS <> 'V35'";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row12.CATEGORIA = 0;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(1) != null) {
						row12.CATEGORIA = rs_tOracleInput_6.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row12.DESCRIPCION = null;
							} else {
	                         		
        	row12.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 3) {
								row12.SIGLA_SALUDSIS = null;
							} else {
	                         		
        	row12.SIGLA_SALUDSIS = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 4) {
								row12.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(4) != null) {
						row12.ID_SALUDSIS = rs_tOracleInput_6.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					



    
		row12Struct oneRow_tHashOutput_6 = new row12Struct();
				
					oneRow_tHashOutput_6.CATEGORIA = row12.CATEGORIA;
					oneRow_tHashOutput_6.DESCRIPCION = row12.DESCRIPCION;
					oneRow_tHashOutput_6.SIGLA_SALUDSIS = row12.SIGLA_SALUDSIS;
					oneRow_tHashOutput_6.ID_SALUDSIS = row12.ID_SALUDSIS;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tOracleInput_8Process(globalMap);



/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String TIPO;

				public String getTIPO () {
					return this.TIPO;
				}

				public Boolean TIPOIsNullable(){
				    return false;
				}
				public Boolean TIPOIsKey(){
				    return false;
				}
				public Integer TIPOLength(){
				    return 50;
				}
				public Integer TIPOPrecision(){
				    return 0;
				}
				public String TIPODefault(){
				
					return null;
				
				}
				public String TIPOComment(){
				
				    return "";
				
				}
				public String TIPOPattern(){
				
					return "";
				
				}
				public String TIPOOriginalDbColumnName(){
				
					return "TIPO";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.TIPO = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
					this.TIPO = readString(dis);
					
					this.SIGLA_SALUDSIS = readString(dis);
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.TIPO,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.TIPO,dos);
					
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",TIPO="+TIPO);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				conn_tOracleInput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_8 = false;
				boolean isConnectionWrapped_tOracleInput_8 = !(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_8 = null;
                if (isConnectionWrapped_tOracleInput_8) {
					unwrappedOraConn_tOracleInput_8 = conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_8 != null) {
                        isTimeZoneNull_tOracleInput_8 = (unwrappedOraConn_tOracleInput_8.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_8 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_8).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_8) {
					java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_8.next()) {
						sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_8 && unwrappedOraConn_tOracleInput_8 != null) {
                        unwrappedOraConn_tOracleInput_8.setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_8.setFetchSize(1000);


		    String dbquery_tOracleInput_8 = "SELECT AWT.SIGLA, \n       AWT.TIPO, \n       AWT.SIGLA_SALUDSIS,\n       GT.ID AS ID_SALUDSIS \nFROM AFI_WS_TDOCUMENTO"
+"_SIATH AWT\nINNER JOIN GEN_TDOCUMENTOS GT ON GT.SIGLA = AWT.SIGLA_SALUDSIS\nWHERE AWT.ESTADO = 'Activo'\n      AND GT.ES"
+"TADO = 'Activo'\n      AND GT.ESTREGISTRO_ID = 1\n      AND AWT.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row14.SIGLA = null;
							} else {
	                         		
        	row14.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row14.TIPO = null;
							} else {
	                         		
        	row14.TIPO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 3) {
								row14.SIGLA_SALUDSIS = null;
							} else {
	                         		
        	row14.SIGLA_SALUDSIS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 4) {
								row14.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(4) != null) {
						row14.ID_SALUDSIS = rs_tOracleInput_8.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					



    
		row14Struct oneRow_tHashOutput_8 = new row14Struct();
				
					oneRow_tHashOutput_8.SIGLA = row14.SIGLA;
					oneRow_tHashOutput_8.TIPO = row14.TIPO;
					oneRow_tHashOutput_8.SIGLA_SALUDSIS = row14.SIGLA_SALUDSIS;
					oneRow_tHashOutput_8.ID_SALUDSIS = row14.ID_SALUDSIS;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk18", 0, "ok");
				}
				tOracleInput_10Process(globalMap);



/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public int CODIGO_SALUDSIS;

				public int getCODIGO_SALUDSIS () {
					return this.CODIGO_SALUDSIS;
				}

				public Boolean CODIGO_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean CODIGO_SALUDSISIsKey(){
				    return false;
				}
				public Integer CODIGO_SALUDSISLength(){
				    return 0;
				}
				public Integer CODIGO_SALUDSISPrecision(){
				    return null;
				}
				public String CODIGO_SALUDSISDefault(){
				
					return "";
				
				}
				public String CODIGO_SALUDSISComment(){
				
				    return "";
				
				}
				public String CODIGO_SALUDSISPattern(){
				
					return "";
				
				}
				public String CODIGO_SALUDSISOriginalDbColumnName(){
				
					return "CODIGO_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
			        this.CODIGO_SALUDSIS = dis.readInt();
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
					this.DESCRIPCION = readString(dis);
					
			        this.CODIGO_SALUDSIS = dis.readInt();
					
			        this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// int
				
		            	dos.writeInt(this.CODIGO_SALUDSIS);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// String
				
						writeString(this.DESCRIPCION,dos);
					
					// int
				
		            	dos.writeInt(this.CODIGO_SALUDSIS);
					
					// int
				
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",CODIGO_SALUDSIS="+String.valueOf(CODIGO_SALUDSIS));
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_10.setFetchSize(1000);


		    String dbquery_tOracleInput_10 = "SELECT AWP.CATEGORIA, \n       AWP.DESCRIPCION, \n       AWP.CODIGO_SALUDSIS,\n       AP.ID AS ID_SALUDSIS \nFROM AFI_W"
+"S_PLANAFI_SIATH AWP\nINNER JOIN AFI_PLANAFILIACIONES AP ON AP.CODIGO = AWP.CODIGO_SALUDSIS\nWHERE AWP.ESTADO = 'Activo'"
+"\n      AND AP.ESTREGISTRO_ID = 1\n      AND AWP.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row16.CATEGORIA = 0;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(1) != null) {
						row16.CATEGORIA = rs_tOracleInput_10.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_10 < 2) {
								row16.DESCRIPCION = null;
							} else {
	                         		
        	row16.DESCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 3) {
								row16.CODIGO_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(3) != null) {
						row16.CODIGO_SALUDSIS = rs_tOracleInput_10.getInt(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_10 < 4) {
								row16.ID_SALUDSIS = 0;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(4) != null) {
						row16.ID_SALUDSIS = rs_tOracleInput_10.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					



    
		row16Struct oneRow_tHashOutput_10 = new row16Struct();
				
					oneRow_tHashOutput_10.CATEGORIA = row16.CATEGORIA;
					oneRow_tHashOutput_10.DESCRIPCION = row16.DESCRIPCION;
					oneRow_tHashOutput_10.CODIGO_SALUDSIS = row16.CODIGO_SALUDSIS;
					oneRow_tHashOutput_10.ID_SALUDSIS = row16.ID_SALUDSIS;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk34", 0, "ok");
				}
				tOracleInput_27Process(globalMap);



/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 20;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_27Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();




	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row46Struct> tHashFile_tHashOutput_15 = null;
		String hashKey_tHashOutput_15 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_15";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_15)){
			    if(mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15) == null){
	      		    mf_tHashOutput_15.getResourceMap().put(hashKey_tHashOutput_15, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row46Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }else{
			    	tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }
			}
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tOracleInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_27", false);
		start_Hash.put("tOracleInput_27", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_27";
	
	
		int tos_count_tOracleInput_27 = 0;
		
	


	
		    int nb_line_tOracleInput_27 = 0;
		    java.sql.Connection conn_tOracleInput_27 = null;
				conn_tOracleInput_27 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_27 = false;
				boolean isConnectionWrapped_tOracleInput_27 = !(conn_tOracleInput_27 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_27.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_27 = null;
                if (isConnectionWrapped_tOracleInput_27) {
					unwrappedOraConn_tOracleInput_27 = conn_tOracleInput_27.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_27 != null) {
                        isTimeZoneNull_tOracleInput_27 = (unwrappedOraConn_tOracleInput_27.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_27 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_27).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_27) {
					java.sql.Statement stmtGetTZ_tOracleInput_27 = conn_tOracleInput_27.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_27 = stmtGetTZ_tOracleInput_27.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_27 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_27.next()) {
						sessionTimezone_tOracleInput_27 = rsGetTZ_tOracleInput_27.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_27 && unwrappedOraConn_tOracleInput_27 != null) {
                        unwrappedOraConn_tOracleInput_27.setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_27).setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_27 = conn_tOracleInput_27.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_27.setFetchSize(1000);


		    String dbquery_tOracleInput_27 = "SELECT GS.ID, \n       GS.NOMBRE \nFROM GEN_GSANGUINEOS GS\nWHERE GS.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_27_QUERY",dbquery_tOracleInput_27);

		    java.sql.ResultSet rs_tOracleInput_27 = null;

		    try {
		    	rs_tOracleInput_27 = stmt_tOracleInput_27.executeQuery(dbquery_tOracleInput_27);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_27 = rs_tOracleInput_27.getMetaData();
		    	int colQtyInRs_tOracleInput_27 = rsmd_tOracleInput_27.getColumnCount();

		    String tmpContent_tOracleInput_27 = null;
		    
		    
		    while (rs_tOracleInput_27.next()) {
		        nb_line_tOracleInput_27++;
		        
							if(colQtyInRs_tOracleInput_27 < 1) {
								row46.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_27.getObject(1) != null) {
						row46.ID = rs_tOracleInput_27.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_27 < 2) {
								row46.NOMBRE = null;
							} else {
	                         		
        	row46.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_27, 2, false);
		                    }
					




 



/**
 * [tOracleInput_27 begin ] stop
 */
	
	/**
	 * [tOracleInput_27 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 


	tos_count_tOracleInput_27++;

/**
 * [tOracleInput_27 main ] stop
 */
	
	/**
	 * [tOracleInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					



    
		row46Struct oneRow_tHashOutput_15 = new row46Struct();
				
					oneRow_tHashOutput_15.ID = row46.ID;
					oneRow_tHashOutput_15.NOMBRE = row46.NOMBRE;
		
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_27 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

}
}finally{
	if (rs_tOracleInput_27 != null) {
		rs_tOracleInput_27.close();
	}
	if (stmt_tOracleInput_27 != null) {
		stmt_tOracleInput_27.close();
	}
}

globalMap.put("tOracleInput_27_NB_LINE",nb_line_tOracleInput_27);
 

ok_Hash.put("tOracleInput_27", true);
end_Hash.put("tOracleInput_27", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tOracleInput_11Process(globalMap);



/**
 * [tOracleInput_27 end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());




/**
 * [tHashOutput_15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_27 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 20;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public Integer ENTAPORTANTE_ID;

				public Integer getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_FUERZA = readString(dis);
					
						this.ENTAPORTANTE_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_FUERZA = readString(dis);
					
						this.ENTAPORTANTE_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_11.setFetchSize(1000);


		    String dbquery_tOracleInput_11 = "SELECT AWE.SIGLA_FUERZA, \n       AWE.ENTAPORTANTE_ID \nFROM AFI_WS_ENTAPOR_SIATH AWE\nWHERE AWE.ESTREGISTRO_ID = 1\n  "
+"    AND AWE.ESTADO = 'Activo'";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row17.SIGLA_FUERZA = null;
							} else {
	                         		
        	row17.SIGLA_FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row17.ENTAPORTANTE_ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(2) != null) {
						row17.ENTAPORTANTE_ID = rs_tOracleInput_11.getInt(2);
					} else {
				
						row17.ENTAPORTANTE_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					



    
		row17Struct oneRow_tHashOutput_11 = new row17Struct();
				
					oneRow_tHashOutput_11.SIGLA_FUERZA = row17.SIGLA_FUERZA;
					oneRow_tHashOutput_11.ENTAPORTANTE_ID = row17.ENTAPORTANTE_ID;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk35", 0, "ok");
				}
				tOracleInput_3Process(globalMap);



/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row53Struct row53 = new row53Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_3.setFetchSize(1000);


		    String dbquery_tOracleInput_3 = "SELECT GT.ID, \n       GT.NOMBRE, \n       GT.SIGLA \nFROM GEN_TDISCAPACIDADES GT \nWHERE GT.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row53.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row53.ID = rs_tOracleInput_3.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row53.NOMBRE = null;
							} else {
	                         		
        	row53.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row53.SIGLA = null;
							} else {
	                         		
        	row53.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					



    
		row53Struct oneRow_tHashOutput_3 = new row53Struct();
				
					oneRow_tHashOutput_3.ID = row53.ID;
					oneRow_tHashOutput_3.NOMBRE = row53.NOMBRE;
					oneRow_tHashOutput_3.SIGLA = row53.SIGLA;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk36", 0, "ok");
				}
				tOracleInput_7Process(globalMap);



/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public int VINCULACION;

				public int getVINCULACION () {
					return this.VINCULACION;
				}

				public Boolean VINCULACIONIsNullable(){
				    return false;
				}
				public Boolean VINCULACIONIsKey(){
				    return false;
				}
				public Integer VINCULACIONLength(){
				    return 0;
				}
				public Integer VINCULACIONPrecision(){
				    return null;
				}
				public String VINCULACIONDefault(){
				
					return "";
				
				}
				public String VINCULACIONComment(){
				
				    return "";
				
				}
				public String VINCULACIONPattern(){
				
					return "";
				
				}
				public String VINCULACIONOriginalDbColumnName(){
				
					return "VINCULACION";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 50;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public int TREGIMEN_ID;

				public int getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return false;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return 0;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
			        this.VINCULACION = dis.readInt();
					
					this.SIGLA = readString(dis);
					
			        this.TREGIMEN_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
			        this.VINCULACION = dis.readInt();
					
					this.SIGLA = readString(dis);
					
			        this.TREGIMEN_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// int
				
		            	dos.writeInt(this.VINCULACION);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// int
				
		            	dos.writeInt(this.TREGIMEN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
					// int
				
		            	dos.writeInt(this.VINCULACION);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// int
				
		            	dos.writeInt(this.TREGIMEN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",VINCULACION="+String.valueOf(VINCULACION));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row42Struct row42 = new row42Struct();




	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_7.setFetchSize(1000);


		    String dbquery_tOracleInput_7 = "SELECT AWR.CATEGORIA,\n       AWR.VINCULACION,\n       AWR.SIGLA,\n       AWR.TREGIMEN_ID \nFROM AFI_WS_REGIMEN AWR \nW"
+"HERE AWR.ESTADO = 'Activo'\n      AND AWR.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row42.CATEGORIA = 0;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(1) != null) {
						row42.CATEGORIA = rs_tOracleInput_7.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row42.VINCULACION = 0;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(2) != null) {
						row42.VINCULACION = rs_tOracleInput_7.getInt(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 3) {
								row42.SIGLA = null;
							} else {
	                         		
        	row42.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 4) {
								row42.TREGIMEN_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(4) != null) {
						row42.TREGIMEN_ID = rs_tOracleInput_7.getInt(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					



    
		row42Struct oneRow_tHashOutput_7 = new row42Struct();
				
					oneRow_tHashOutput_7.CATEGORIA = row42.CATEGORIA;
					oneRow_tHashOutput_7.VINCULACION = row42.VINCULACION;
					oneRow_tHashOutput_7.SIGLA = row42.SIGLA;
					oneRow_tHashOutput_7.TREGIMEN_ID = row42.TREGIMEN_ID;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk37", 0, "ok");
				}
				tOracleInput_36Process(globalMap);



/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row1191Struct implements routines.system.IPersistableRow<row1191Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Integer CODIGO;

				public Integer getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 0;
				}
				public Integer CODIGOPrecision(){
				    return null;
				}
				public String CODIGODefault(){
				
					return "";
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
						this.CODIGO = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
						this.CODIGO = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODIGO="+String.valueOf(CODIGO));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1191Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_36Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1191Struct row1191 = new row1191Struct();




	
	/**
	 * [tHashOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_19", false);
		start_Hash.put("tHashOutput_19", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1191");
					}
				
		int tos_count_tHashOutput_19 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_19=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1191Struct> tHashFile_tHashOutput_19 = null;
		String hashKey_tHashOutput_19 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_19";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_19)){
			    if(mf_tHashOutput_19.getResourceMap().get(hashKey_tHashOutput_19) == null){
	      		    mf_tHashOutput_19.getResourceMap().put(hashKey_tHashOutput_19, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1191Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_19 = mf_tHashOutput_19.getResourceMap().get(hashKey_tHashOutput_19);
			    }else{
			    	tHashFile_tHashOutput_19 = mf_tHashOutput_19.getResourceMap().get(hashKey_tHashOutput_19);
			    }
			}
        int nb_line_tHashOutput_19 = 0;

 



/**
 * [tHashOutput_19 begin ] stop
 */



	
	/**
	 * [tOracleInput_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_36", false);
		start_Hash.put("tOracleInput_36", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_36";
	
	
		int tos_count_tOracleInput_36 = 0;
		
	


	
		    int nb_line_tOracleInput_36 = 0;
		    java.sql.Connection conn_tOracleInput_36 = null;
				conn_tOracleInput_36 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_36 = false;
				boolean isConnectionWrapped_tOracleInput_36 = !(conn_tOracleInput_36 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_36.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_36 = null;
                if (isConnectionWrapped_tOracleInput_36) {
					unwrappedOraConn_tOracleInput_36 = conn_tOracleInput_36.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_36 != null) {
                        isTimeZoneNull_tOracleInput_36 = (unwrappedOraConn_tOracleInput_36.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_36 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_36).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_36) {
					java.sql.Statement stmtGetTZ_tOracleInput_36 = conn_tOracleInput_36.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_36 = stmtGetTZ_tOracleInput_36.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_36 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_36.next()) {
						sessionTimezone_tOracleInput_36 = rsGetTZ_tOracleInput_36.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_36 && unwrappedOraConn_tOracleInput_36 != null) {
                        unwrappedOraConn_tOracleInput_36.setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_36).setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_36 = conn_tOracleInput_36.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_36.setFetchSize(1000);


		    String dbquery_tOracleInput_36 = "SELECT GP.ID,\n       GP.CODIGO,\n       GP.NOMBRE \nFROM GEN_PARENTESCOS GP \nWHERE GP.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_36_QUERY",dbquery_tOracleInput_36);

		    java.sql.ResultSet rs_tOracleInput_36 = null;

		    try {
		    	rs_tOracleInput_36 = stmt_tOracleInput_36.executeQuery(dbquery_tOracleInput_36);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_36 = rs_tOracleInput_36.getMetaData();
		    	int colQtyInRs_tOracleInput_36 = rsmd_tOracleInput_36.getColumnCount();

		    String tmpContent_tOracleInput_36 = null;
		    
		    
		    while (rs_tOracleInput_36.next()) {
		        nb_line_tOracleInput_36++;
		        
							if(colQtyInRs_tOracleInput_36 < 1) {
								row1191.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_36.getObject(1) != null) {
						row1191.ID = rs_tOracleInput_36.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_36 < 2) {
								row1191.CODIGO = null;
							} else {
		                          
					if(rs_tOracleInput_36.getObject(2) != null) {
						row1191.CODIGO = rs_tOracleInput_36.getInt(2);
					} else {
				
						row1191.CODIGO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_36 < 3) {
								row1191.NOMBRE = null;
							} else {
	                         		
        	row1191.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_36, 3, false);
		                    }
					




 



/**
 * [tOracleInput_36 begin ] stop
 */
	
	/**
	 * [tOracleInput_36 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 


	tos_count_tOracleInput_36++;

/**
 * [tOracleInput_36 main ] stop
 */
	
	/**
	 * [tOracleInput_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_19 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1191"
						
						);
					}
					



    
		row1191Struct oneRow_tHashOutput_19 = new row1191Struct();
				
					oneRow_tHashOutput_19.ID = row1191.ID;
					oneRow_tHashOutput_19.CODIGO = row1191.CODIGO;
					oneRow_tHashOutput_19.NOMBRE = row1191.NOMBRE;
		
        tHashFile_tHashOutput_19.put(oneRow_tHashOutput_19);
        nb_line_tHashOutput_19 ++;

 


	tos_count_tHashOutput_19++;

/**
 * [tHashOutput_19 main ] stop
 */
	
	/**
	 * [tHashOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_19";
	
	

 



/**
 * [tHashOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_19";
	
	

 



/**
 * [tHashOutput_19 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_36 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

}
}finally{
	if (rs_tOracleInput_36 != null) {
		rs_tOracleInput_36.close();
	}
	if (stmt_tOracleInput_36 != null) {
		stmt_tOracleInput_36.close();
	}
}

globalMap.put("tOracleInput_36_NB_LINE",nb_line_tOracleInput_36);
 

ok_Hash.put("tOracleInput_36", true);
end_Hash.put("tOracleInput_36", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk43", 0, "ok");
				}
				tOracleInput_40Process(globalMap);



/**
 * [tOracleInput_36 end ] stop
 */

	
	/**
	 * [tHashOutput_19 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_19";
	
	
globalMap.put("tHashOutput_19_NB_LINE", nb_line_tHashOutput_19);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1191");
			  	}
			  	
 

ok_Hash.put("tHashOutput_19", true);
end_Hash.put("tHashOutput_19", System.currentTimeMillis());




/**
 * [tHashOutput_19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_36 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 finally ] stop
 */

	
	/**
	 * [tHashOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_19";
	
	

 



/**
 * [tHashOutput_19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 1);
	}
	


public static class row103Struct implements routines.system.IPersistableRow<row103Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public Integer VIGENCIA;

				public Integer getVIGENCIA () {
					return this.VIGENCIA;
				}

				public Boolean VIGENCIAIsNullable(){
				    return true;
				}
				public Boolean VIGENCIAIsKey(){
				    return false;
				}
				public Integer VIGENCIALength(){
				    return null;
				}
				public Integer VIGENCIAPrecision(){
				    return null;
				}
				public String VIGENCIADefault(){
				
					return null;
				
				}
				public String VIGENCIAComment(){
				
				    return "";
				
				}
				public String VIGENCIAPattern(){
				
					return "";
				
				}
				public String VIGENCIAOriginalDbColumnName(){
				
					return "VIGENCIA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
						this.VIGENCIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
						this.VIGENCIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// Integer
				
						writeInteger(this.VIGENCIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// Integer
				
						writeInteger(this.VIGENCIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",VIGENCIA="+String.valueOf(VIGENCIA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row103Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_40Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row103Struct row103 = new row103Struct();




	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row103");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row103Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row103Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tOracleInput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_40", false);
		start_Hash.put("tOracleInput_40", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_40";
	
	
		int tos_count_tOracleInput_40 = 0;
		
	


	
		    int nb_line_tOracleInput_40 = 0;
		    java.sql.Connection conn_tOracleInput_40 = null;
				conn_tOracleInput_40 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_40 = false;
				boolean isConnectionWrapped_tOracleInput_40 = !(conn_tOracleInput_40 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_40.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_40 = null;
                if (isConnectionWrapped_tOracleInput_40) {
					unwrappedOraConn_tOracleInput_40 = conn_tOracleInput_40.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_40 != null) {
                        isTimeZoneNull_tOracleInput_40 = (unwrappedOraConn_tOracleInput_40.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_40 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_40).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_40) {
					java.sql.Statement stmtGetTZ_tOracleInput_40 = conn_tOracleInput_40.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_40 = stmtGetTZ_tOracleInput_40.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_40 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_40.next()) {
						sessionTimezone_tOracleInput_40 = rsGetTZ_tOracleInput_40.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_40 && unwrappedOraConn_tOracleInput_40 != null) {
                        unwrappedOraConn_tOracleInput_40.setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_40).setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_40 = conn_tOracleInput_40.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_40.setFetchSize(1000);


		    String dbquery_tOracleInput_40 = "SELECT GD.ID, \n       GD.SIGLA,\n	   GD.VIGENCIA\nFROM GEN_GRDMILITARES GD \nWHERE GD.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_40_QUERY",dbquery_tOracleInput_40);

		    java.sql.ResultSet rs_tOracleInput_40 = null;

		    try {
		    	rs_tOracleInput_40 = stmt_tOracleInput_40.executeQuery(dbquery_tOracleInput_40);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_40 = rs_tOracleInput_40.getMetaData();
		    	int colQtyInRs_tOracleInput_40 = rsmd_tOracleInput_40.getColumnCount();

		    String tmpContent_tOracleInput_40 = null;
		    
		    
		    while (rs_tOracleInput_40.next()) {
		        nb_line_tOracleInput_40++;
		        
							if(colQtyInRs_tOracleInput_40 < 1) {
								row103.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(1) != null) {
						row103.ID = rs_tOracleInput_40.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_40 < 2) {
								row103.SIGLA = null;
							} else {
	                         		
        	row103.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 3) {
								row103.VIGENCIA = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(3) != null) {
						row103.VIGENCIA = rs_tOracleInput_40.getInt(3);
					} else {
				
						row103.VIGENCIA = null;
					}
		                    }
					




 



/**
 * [tOracleInput_40 begin ] stop
 */
	
	/**
	 * [tOracleInput_40 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 


	tos_count_tOracleInput_40++;

/**
 * [tOracleInput_40 main ] stop
 */
	
	/**
	 * [tOracleInput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row103"
						
						);
					}
					



    
		row103Struct oneRow_tHashOutput_13 = new row103Struct();
				
					oneRow_tHashOutput_13.ID = row103.ID;
					oneRow_tHashOutput_13.SIGLA = row103.SIGLA;
					oneRow_tHashOutput_13.VIGENCIA = row103.VIGENCIA;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_40 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

}
}finally{
	if (rs_tOracleInput_40 != null) {
		rs_tOracleInput_40.close();
	}
	if (stmt_tOracleInput_40 != null) {
		stmt_tOracleInput_40.close();
	}
}

globalMap.put("tOracleInput_40_NB_LINE",nb_line_tOracleInput_40);
 

ok_Hash.put("tOracleInput_40", true);
end_Hash.put("tOracleInput_40", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk44", 0, "ok");
				}
				tOracleInput_41Process(globalMap);



/**
 * [tOracleInput_40 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row103");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_40 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 1);
	}
	


public static class row105Struct implements routines.system.IPersistableRow<row105Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return null;
				}
				public Integer CODIGOPrecision(){
				    return null;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.SIGLA = readString(dis);
					
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",CODIGO="+CODIGO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row105Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_41Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row105Struct row105 = new row105Struct();




	
	/**
	 * [tHashOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_16", false);
		start_Hash.put("tHashOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row105");
					}
				
		int tos_count_tHashOutput_16 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row105Struct> tHashFile_tHashOutput_16 = null;
		String hashKey_tHashOutput_16 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_16";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_16)){
			    if(mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16) == null){
	      		    mf_tHashOutput_16.getResourceMap().put(hashKey_tHashOutput_16, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row105Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }else{
			    	tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }
			}
        int nb_line_tHashOutput_16 = 0;

 



/**
 * [tHashOutput_16 begin ] stop
 */



	
	/**
	 * [tOracleInput_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_41", false);
		start_Hash.put("tOracleInput_41", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_41";
	
	
		int tos_count_tOracleInput_41 = 0;
		
	


	
		    int nb_line_tOracleInput_41 = 0;
		    java.sql.Connection conn_tOracleInput_41 = null;
				conn_tOracleInput_41 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_41 = false;
				boolean isConnectionWrapped_tOracleInput_41 = !(conn_tOracleInput_41 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_41.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_41 = null;
                if (isConnectionWrapped_tOracleInput_41) {
					unwrappedOraConn_tOracleInput_41 = conn_tOracleInput_41.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_41 != null) {
                        isTimeZoneNull_tOracleInput_41 = (unwrappedOraConn_tOracleInput_41.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_41 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_41).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_41) {
					java.sql.Statement stmtGetTZ_tOracleInput_41 = conn_tOracleInput_41.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_41 = stmtGetTZ_tOracleInput_41.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_41 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_41.next()) {
						sessionTimezone_tOracleInput_41 = rsGetTZ_tOracleInput_41.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_41 && unwrappedOraConn_tOracleInput_41 != null) {
                        unwrappedOraConn_tOracleInput_41.setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_41).setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_41 = conn_tOracleInput_41.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_41.setFetchSize(1000);


		    String dbquery_tOracleInput_41 = "SELECT GU.ID, \n       GU.SIGLA,\n       TRIM(GU.CODIGO) AS CODIGO\nFROM GEN_UMILITARES GU\nWHERE GU.ESTADO = 'Activo'"
+"\n      AND GU.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_41_QUERY",dbquery_tOracleInput_41);

		    java.sql.ResultSet rs_tOracleInput_41 = null;

		    try {
		    	rs_tOracleInput_41 = stmt_tOracleInput_41.executeQuery(dbquery_tOracleInput_41);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_41 = rs_tOracleInput_41.getMetaData();
		    	int colQtyInRs_tOracleInput_41 = rsmd_tOracleInput_41.getColumnCount();

		    String tmpContent_tOracleInput_41 = null;
		    
		    
		    while (rs_tOracleInput_41.next()) {
		        nb_line_tOracleInput_41++;
		        
							if(colQtyInRs_tOracleInput_41 < 1) {
								row105.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_41.getObject(1) != null) {
						row105.ID = rs_tOracleInput_41.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_41 < 2) {
								row105.SIGLA = null;
							} else {
	                         		
        	row105.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_41, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_41 < 3) {
								row105.CODIGO = null;
							} else {
	                         		
        	row105.CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_41, 3, false);
		                    }
					




 



/**
 * [tOracleInput_41 begin ] stop
 */
	
	/**
	 * [tOracleInput_41 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 


	tos_count_tOracleInput_41++;

/**
 * [tOracleInput_41 main ] stop
 */
	
	/**
	 * [tOracleInput_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_16 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row105"
						
						);
					}
					



    
		row105Struct oneRow_tHashOutput_16 = new row105Struct();
				
					oneRow_tHashOutput_16.ID = row105.ID;
					oneRow_tHashOutput_16.SIGLA = row105.SIGLA;
					oneRow_tHashOutput_16.CODIGO = row105.CODIGO;
		
        tHashFile_tHashOutput_16.put(oneRow_tHashOutput_16);
        nb_line_tHashOutput_16 ++;

 


	tos_count_tHashOutput_16++;

/**
 * [tHashOutput_16 main ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_41 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

}
}finally{
	if (rs_tOracleInput_41 != null) {
		rs_tOracleInput_41.close();
	}
	if (stmt_tOracleInput_41 != null) {
		stmt_tOracleInput_41.close();
	}
}

globalMap.put("tOracleInput_41_NB_LINE",nb_line_tOracleInput_41);
 

ok_Hash.put("tOracleInput_41", true);
end_Hash.put("tOracleInput_41", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk45", 0, "ok");
				}
				tOracleInput_42Process(globalMap);



/**
 * [tOracleInput_41 end ] stop
 */

	
	/**
	 * [tHashOutput_16 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
globalMap.put("tHashOutput_16_NB_LINE", nb_line_tHashOutput_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row105");
			  	}
			  	
 

ok_Hash.put("tHashOutput_16", true);
end_Hash.put("tHashOutput_16", System.currentTimeMillis());




/**
 * [tHashOutput_16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_41 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 finally ] stop
 */

	
	/**
	 * [tHashOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 1);
	}
	


public static class row107Struct implements routines.system.IPersistableRow<row107Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ESM;

				public int getESM () {
					return this.ESM;
				}

				public Boolean ESMIsNullable(){
				    return false;
				}
				public Boolean ESMIsKey(){
				    return false;
				}
				public Integer ESMLength(){
				    return 0;
				}
				public Integer ESMPrecision(){
				    return null;
				}
				public String ESMDefault(){
				
					return "";
				
				}
				public String ESMComment(){
				
				    return "";
				
				}
				public String ESMPattern(){
				
					return "";
				
				}
				public String ESMOriginalDbColumnName(){
				
					return "ESM";
				
				}

				
			    public int UMILITARES_ID;

				public int getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return false;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return 0;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ESM = dis.readInt();
					
			        this.UMILITARES_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ESM = dis.readInt();
					
			        this.UMILITARES_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESM);
					
					// int
				
		            	dos.writeInt(this.UMILITARES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESM);
					
					// int
				
		            	dos.writeInt(this.UMILITARES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESM="+String.valueOf(ESM));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row107Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row107Struct row107 = new row107Struct();




	
	/**
	 * [tHashOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_17", false);
		start_Hash.put("tHashOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row107");
					}
				
		int tos_count_tHashOutput_17 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row107Struct> tHashFile_tHashOutput_17 = null;
		String hashKey_tHashOutput_17 = "tHashFile_CargueSiathMSV_" + pid + "_tHashOutput_17";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_17)){
			    if(mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17) == null){
	      		    mf_tHashOutput_17.getResourceMap().put(hashKey_tHashOutput_17, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row107Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_17 = mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17);
			    }else{
			    	tHashFile_tHashOutput_17 = mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17);
			    }
			}
        int nb_line_tHashOutput_17 = 0;

 



/**
 * [tHashOutput_17 begin ] stop
 */



	
	/**
	 * [tOracleInput_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_42", false);
		start_Hash.put("tOracleInput_42", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_42";
	
	
		int tos_count_tOracleInput_42 = 0;
		
	


	
		    int nb_line_tOracleInput_42 = 0;
		    java.sql.Connection conn_tOracleInput_42 = null;
				conn_tOracleInput_42 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_42 = false;
				boolean isConnectionWrapped_tOracleInput_42 = !(conn_tOracleInput_42 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_42.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_42 = null;
                if (isConnectionWrapped_tOracleInput_42) {
					unwrappedOraConn_tOracleInput_42 = conn_tOracleInput_42.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_42 != null) {
                        isTimeZoneNull_tOracleInput_42 = (unwrappedOraConn_tOracleInput_42.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_42 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_42).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_42) {
					java.sql.Statement stmtGetTZ_tOracleInput_42 = conn_tOracleInput_42.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_42 = stmtGetTZ_tOracleInput_42.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_42 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_42.next()) {
						sessionTimezone_tOracleInput_42 = rsGetTZ_tOracleInput_42.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_42 && unwrappedOraConn_tOracleInput_42 != null) {
                        unwrappedOraConn_tOracleInput_42.setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_42).setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_42 = conn_tOracleInput_42.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_42.setFetchSize(1000);


		    String dbquery_tOracleInput_42 = "SELECT ESM_SIATH AS ESM, ID as UMILITARES_ID \nFROM GEN_UMILITARES gu WHERE ESTADO = 'Activo' AND ESTREGISTRO_ID = 1 AN"
+"D ESM_SIATH IS NOT NULL";
		    

		    globalMap.put("tOracleInput_42_QUERY",dbquery_tOracleInput_42);

		    java.sql.ResultSet rs_tOracleInput_42 = null;

		    try {
		    	rs_tOracleInput_42 = stmt_tOracleInput_42.executeQuery(dbquery_tOracleInput_42);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_42 = rs_tOracleInput_42.getMetaData();
		    	int colQtyInRs_tOracleInput_42 = rsmd_tOracleInput_42.getColumnCount();

		    String tmpContent_tOracleInput_42 = null;
		    
		    
		    while (rs_tOracleInput_42.next()) {
		        nb_line_tOracleInput_42++;
		        
							if(colQtyInRs_tOracleInput_42 < 1) {
								row107.ESM = 0;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(1) != null) {
						row107.ESM = rs_tOracleInput_42.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_42 < 2) {
								row107.UMILITARES_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(2) != null) {
						row107.UMILITARES_ID = rs_tOracleInput_42.getInt(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_42 begin ] stop
 */
	
	/**
	 * [tOracleInput_42 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 


	tos_count_tOracleInput_42++;

/**
 * [tOracleInput_42 main ] stop
 */
	
	/**
	 * [tOracleInput_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_17 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row107"
						
						);
					}
					



    
		row107Struct oneRow_tHashOutput_17 = new row107Struct();
				
					oneRow_tHashOutput_17.ESM = row107.ESM;
					oneRow_tHashOutput_17.UMILITARES_ID = row107.UMILITARES_ID;
		
        tHashFile_tHashOutput_17.put(oneRow_tHashOutput_17);
        nb_line_tHashOutput_17 ++;

 


	tos_count_tHashOutput_17++;

/**
 * [tHashOutput_17 main ] stop
 */
	
	/**
	 * [tHashOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_42 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

}
}finally{
	if (rs_tOracleInput_42 != null) {
		rs_tOracleInput_42.close();
	}
	if (stmt_tOracleInput_42 != null) {
		stmt_tOracleInput_42.close();
	}
}

globalMap.put("tOracleInput_42_NB_LINE",nb_line_tOracleInput_42);
 

ok_Hash.put("tOracleInput_42", true);
end_Hash.put("tOracleInput_42", System.currentTimeMillis());




/**
 * [tOracleInput_42 end ] stop
 */

	
	/**
	 * [tHashOutput_17 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	
globalMap.put("tHashOutput_17_NB_LINE", nb_line_tHashOutput_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row107");
			  	}
			  	
 

ok_Hash.put("tHashOutput_17", true);
end_Hash.put("tHashOutput_17", System.currentTimeMillis());




/**
 * [tHashOutput_17 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_42 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 finally ] stop
 */

	
	/**
	 * [tHashOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				
			    public Integer estado_;

				public Integer getEstado_ () {
					return this.estado_;
				}

				public Boolean estado_IsNullable(){
				    return true;
				}
				public Boolean estado_IsKey(){
				    return false;
				}
				public Integer estado_Length(){
				    return null;
				}
				public Integer estado_Precision(){
				    return null;
				}
				public String estado_Default(){
				
					return null;
				
				}
				public String estado_Comment(){
				
				    return "";
				
				}
				public String estado_Pattern(){
				
					return "";
				
				}
				public String estado_OriginalDbColumnName(){
				
					return "estado_";
				
				}

				
			    public java.util.Date finicio_;

				public java.util.Date getFinicio_ () {
					return this.finicio_;
				}

				public Boolean finicio_IsNullable(){
				    return true;
				}
				public Boolean finicio_IsKey(){
				    return false;
				}
				public Integer finicio_Length(){
				    return null;
				}
				public Integer finicio_Precision(){
				    return null;
				}
				public String finicio_Default(){
				
					return null;
				
				}
				public String finicio_Comment(){
				
				    return "";
				
				}
				public String finicio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String finicio_OriginalDbColumnName(){
				
					return "finicio_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("archivos_id_="+String.valueOf(archivos_id_));
		sb.append(",estado_="+String.valueOf(estado_));
		sb.append(",finicio_="+String.valueOf(finicio_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tOracleSP_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_6", false);
		start_Hash.put("tOracleSP_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tOracleSP_6 = 0;
		

	java.sql.Connection connection_tOracleSP_6 = null;
	connection_tOracleSP_6 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_6 = connection_tOracleSP_6.prepareCall("{call " + "cms2.updestadoarchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_6;
String tmpString_tOracleSP_6;

 



/**
 * [tOracleSP_6 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_14", false);
		start_Hash.put("tFixedFlowInput_14", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_14";
	
	
		int tos_count_tFixedFlowInput_14 = 0;
		

	    for (int i_tFixedFlowInput_14 = 0 ; i_tFixedFlowInput_14 < 1 ; i_tFixedFlowInput_14++) {
	                	            	
    	            		row5.archivos_id_ = context.vafiarchivos_id;
    	            	        	            	
    	            		row5.estado_ = 5;
    	            	        	            	
    	            		row5.finicio_ = context.vfinicio;
    	            	

 



/**
 * [tFixedFlowInput_14 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 


	tos_count_tFixedFlowInput_14++;

/**
 * [tFixedFlowInput_14 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_6 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

			// code for the argument 1 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row5.archivos_id_ == null) {
    						statement_tOracleSP_6.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_6.setInt(1, row5.archivos_id_);
    					}
    					
			// code for the argument 2 (estado_) of type 'IN AUTOMAPPING'
    					if (row5.estado_ == null) {
    						statement_tOracleSP_6.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_6.setInt(2, row5.estado_);
    					}
    					
			// code for the argument 3 (finicio_) of type 'IN TIMESTAMP'
    					if (row5.finicio_ == null) {
    						statement_tOracleSP_6.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_6.setTimestamp(3, new java.sql.Timestamp(row5.finicio_.getTime()));
    					
    					}
    					
		statement_tOracleSP_6.execute();
		

 


	tos_count_tOracleSP_6++;

/**
 * [tOracleSP_6 main ] stop
 */
	
	/**
	 * [tOracleSP_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_6";
	
	

 



/**
 * [tOracleSP_6 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_6";
	
	

 



/**
 * [tOracleSP_6 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

        }
        globalMap.put("tFixedFlowInput_14_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_14", true);
end_Hash.put("tFixedFlowInput_14", System.currentTimeMillis());




/**
 * [tFixedFlowInput_14 end ] stop
 */

	
	/**
	 * [tOracleSP_6 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_6";
	
	


	statement_tOracleSP_6.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tOracleSP_6", true);
end_Hash.put("tOracleSP_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tOracleRow_1Process(globalMap);



/**
 * [tOracleSP_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_14 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 finally ] stop
 */

	
	/**
	 * [tOracleSP_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_6";
	
	

 



/**
 * [tOracleSP_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_14_SUBPROCESS_STATE", 1);
	}
	


public void tOracleRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_1", false);
		start_Hash.put("tOracleRow_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_1";
	
	
		int tos_count_tOracleRow_1 = 0;
		

	java.sql.Connection conn_tOracleRow_1 = null;
	String query_tOracleRow_1 = "";
	boolean whetherReject_tOracleRow_1 = false;
	int count_tOracleRow_1 = 0;
				conn_tOracleRow_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_1", conn_tOracleRow_1);
        java.sql.Statement stmt_tOracleRow_1 = conn_tOracleRow_1.createStatement();
        resourceMap.put("stmt_tOracleRow_1", stmt_tOracleRow_1);
				int nb_line_inserted_tOracleRow_1 = 0;
			

 



/**
 * [tOracleRow_1 begin ] stop
 */
	
	/**
	 * [tOracleRow_1 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

query_tOracleRow_1 = "truncate table tst_archivo";
whetherReject_tOracleRow_1 = false;
globalMap.put("tOracleRow_1_QUERY",query_tOracleRow_1);
try {
		stmt_tOracleRow_1.execute(query_tOracleRow_1);
		
		nb_line_inserted_tOracleRow_1 += stmt_tOracleRow_1.getUpdateCount();
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_1_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_1 = true;
		
				System.err.print(e.getMessage());
				
	}
	

 


	tos_count_tOracleRow_1++;

/**
 * [tOracleRow_1 main ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_1 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

	globalMap.put("tOracleRow_1_NB_LINE", count_tOracleRow_1);
        stmt_tOracleRow_1.close();
        resourceMap.remove("stmt_tOracleRow_1");
    resourceMap.put("statementClosed_tOracleRow_1", true);
    resourceMap.put("finish_tOracleRow_1", true);

    globalMap.put("tOracleRow_1_NB_LINE_INSERTED",nb_line_inserted_tOracleRow_1);
 

ok_Hash.put("tOracleRow_1", true);
end_Hash.put("tOracleRow_1", System.currentTimeMillis());




/**
 * [tOracleRow_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_1") == null) {
            java.sql.Statement stmtToClose_tOracleRow_1 = null;
            if ((stmtToClose_tOracleRow_1 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_1")) != null) {
                stmtToClose_tOracleRow_1.close();
            }
    }
 



/**
 * [tOracleRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return 400;
				}
				public Integer GENEROPrecision(){
				    return 0;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 10;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return 400;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return 0;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return 400;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return 0;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public String MUNICIPIO_RESIDENCIA;

				public String getMUNICIPIO_RESIDENCIA () {
					return this.MUNICIPIO_RESIDENCIA;
				}

				public Boolean MUNICIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_RESIDENCIALength(){
				    return 400;
				}
				public Integer MUNICIPIO_RESIDENCIAPrecision(){
				    return 0;
				}
				public String MUNICIPIO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String MUNICIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "MUNICIPIO_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 400;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return 400;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return 0;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return 400;
				}
				public Integer FACTOR_RHPrecision(){
				    return 0;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String SIGLA_GRDMILITAR;

				public String getSIGLA_GRDMILITAR () {
					return this.SIGLA_GRDMILITAR;
				}

				public Boolean SIGLA_GRDMILITARIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRDMILITARIsKey(){
				    return false;
				}
				public Integer SIGLA_GRDMILITARLength(){
				    return 400;
				}
				public Integer SIGLA_GRDMILITARPrecision(){
				    return 0;
				}
				public String SIGLA_GRDMILITARDefault(){
				
					return null;
				
				}
				public String SIGLA_GRDMILITARComment(){
				
				    return "";
				
				}
				public String SIGLA_GRDMILITARPattern(){
				
					return "";
				
				}
				public String SIGLA_GRDMILITAROriginalDbColumnName(){
				
					return "SIGLA_GRDMILITAR";
				
				}

				
			    public String FUERZA_MILITAR;

				public String getFUERZA_MILITAR () {
					return this.FUERZA_MILITAR;
				}

				public Boolean FUERZA_MILITARIsNullable(){
				    return true;
				}
				public Boolean FUERZA_MILITARIsKey(){
				    return false;
				}
				public Integer FUERZA_MILITARLength(){
				    return 400;
				}
				public Integer FUERZA_MILITARPrecision(){
				    return 0;
				}
				public String FUERZA_MILITARDefault(){
				
					return null;
				
				}
				public String FUERZA_MILITARComment(){
				
				    return "";
				
				}
				public String FUERZA_MILITARPattern(){
				
					return "";
				
				}
				public String FUERZA_MILITAROriginalDbColumnName(){
				
					return "FUERZA_MILITAR";
				
				}

				
			    public String UNIDAD_MILITAR;

				public String getUNIDAD_MILITAR () {
					return this.UNIDAD_MILITAR;
				}

				public Boolean UNIDAD_MILITARIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MILITARIsKey(){
				    return false;
				}
				public Integer UNIDAD_MILITARLength(){
				    return 400;
				}
				public Integer UNIDAD_MILITARPrecision(){
				    return 0;
				}
				public String UNIDAD_MILITARDefault(){
				
					return null;
				
				}
				public String UNIDAD_MILITARComment(){
				
				    return "";
				
				}
				public String UNIDAD_MILITARPattern(){
				
					return "";
				
				}
				public String UNIDAD_MILITAROriginalDbColumnName(){
				
					return "UNIDAD_MILITAR";
				
				}

				
			    public String ACTIVO;

				public String getACTIVO () {
					return this.ACTIVO;
				}

				public Boolean ACTIVOIsNullable(){
				    return true;
				}
				public Boolean ACTIVOIsKey(){
				    return false;
				}
				public Integer ACTIVOLength(){
				    return 400;
				}
				public Integer ACTIVOPrecision(){
				    return 0;
				}
				public String ACTIVODefault(){
				
					return null;
				
				}
				public String ACTIVOComment(){
				
				    return "";
				
				}
				public String ACTIVOPattern(){
				
					return "";
				
				}
				public String ACTIVOOriginalDbColumnName(){
				
					return "ACTIVO";
				
				}

				
			    public String FECHA_CADUCIDAD;

				public String getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return 10;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return 0;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return 10;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return 0;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String MUNICIPIO_EXP_DOCUMENTO;

				public String getMUNICIPIO_EXP_DOCUMENTO () {
					return this.MUNICIPIO_EXP_DOCUMENTO;
				}

				public Boolean MUNICIPIO_EXP_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_EXP_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOLength(){
				    return 400;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOPrecision(){
				    return 0;
				}
				public String MUNICIPIO_EXP_DOCUMENTODefault(){
				
					return null;
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOOriginalDbColumnName(){
				
					return "MUNICIPIO_EXP_DOCUMENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.MUNICIPIO_RESIDENCIA = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_GRDMILITAR = readString(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.UNIDAD_MILITAR = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.MUNICIPIO_EXP_DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.MUNICIPIO_RESIDENCIA = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_GRDMILITAR = readString(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.UNIDAD_MILITAR = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.MUNICIPIO_EXP_DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.MUNICIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_GRDMILITAR,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.MUNICIPIO_EXP_DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.MUNICIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_GRDMILITAR,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.MUNICIPIO_EXP_DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",GENERO="+GENERO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",MUNICIPIO_RESIDENCIA="+MUNICIPIO_RESIDENCIA);
		sb.append(",BARRIO="+BARRIO);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",SIGLA_GRDMILITAR="+SIGLA_GRDMILITAR);
		sb.append(",FUERZA_MILITAR="+FUERZA_MILITAR);
		sb.append(",UNIDAD_MILITAR="+UNIDAD_MILITAR);
		sb.append(",ACTIVO="+ACTIVO);
		sb.append(",FECHA_CADUCIDAD="+FECHA_CADUCIDAD);
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",MUNICIPIO_EXP_DOCUMENTO="+MUNICIPIO_EXP_DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"CMV_SIATH_" +context.FECHA_EJECUCION+".txt")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
                        if(fileToDelete_tFileOutputDelimited_3.exists()) {
                            fileToDelete_tFileOutputDelimited_3.delete();
                        }
                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, false),"UTF-8"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SIGLA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("DOCUMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GENERO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESTADO_CIVIL");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("DIRECCION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("TELEFONO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("CORREO_ELECTRONICO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("MUNICIPIO_RESIDENCIA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("BARRIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GRUPO_SANGUINEO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FACTOR_RH");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SIGLA_GRDMILITAR");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FUERZA_MILITAR");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("UNIDAD_MILITAR");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ACTIVO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_CADUCIDAD");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_VINCULACION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("MUNICIPIO_EXP_DOCUMENTO");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_15", false);
		start_Hash.put("tOracleInput_15", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_15";
	
	
		int tos_count_tOracleInput_15 = 0;
		
	


	
		    int nb_line_tOracleInput_15 = 0;
		    java.sql.Connection conn_tOracleInput_15 = null;
				conn_tOracleInput_15 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_15 = false;
				boolean isConnectionWrapped_tOracleInput_15 = !(conn_tOracleInput_15 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_15.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_15 = null;
                if (isConnectionWrapped_tOracleInput_15) {
					unwrappedOraConn_tOracleInput_15 = conn_tOracleInput_15.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_15 != null) {
                        isTimeZoneNull_tOracleInput_15 = (unwrappedOraConn_tOracleInput_15.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_15 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_15).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_15) {
					java.sql.Statement stmtGetTZ_tOracleInput_15 = conn_tOracleInput_15.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_15 = stmtGetTZ_tOracleInput_15.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_15 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_15.next()) {
						sessionTimezone_tOracleInput_15 = rsGetTZ_tOracleInput_15.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_15 && unwrappedOraConn_tOracleInput_15 != null) {
                        unwrappedOraConn_tOracleInput_15.setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_15).setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_15 = conn_tOracleInput_15.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_15.setFetchSize(1000);


		    String dbquery_tOracleInput_15 = "SELECT TA.PRIMER_NOMBRE,\n       TA.SEGUNDO_NOMBRE,\n       TA.PRIMER_APELLIDO,\n       TA.SEGUNDO_APELLIDO,\n       TA"
+".SIGLA_DOCUMENTO AS TIPO_DOCUMENTO,\n       TA.DOCUMENTO,\n       TA.SEXO AS GENERO,\n       TO_CHAR(TO_DATE(TA.FECHA_NA"
+"CIMIENTO,'YYYY/MM/DD'),'DD/MM/YYYY') AS FECHA_NACIMIENTO,\n       TA.ESTADO_CIVIL,\n       TA.DIRECCION,\n       TA.TELE"
+"FONO,\n       TA.CORREO_ELECTRONICO,\n       TA.MUNICIPIO_RESIDENCIA,\n       TA.LOCALIDAD_RESIDENCIA AS BARRIO,\n      "
+" TA.GRUPO_SANGUINEO,\n       TA.FACTOR_RH,\n       TA.SIGLA_GRDMILITAR,\n       TA.FUERZA_MILITAR,\n       TA.CODIGO_UMI"
+"LITAR as UNIDAD_MILITAR,\n       TA.ESTADO_AFILIACION AS ACTIVO, \n       TO_CHAR(TO_DATE(TA.FECHA_FIN_AFILIACION,'YYYY/"
+"MM/DD'),'DD/MM/YYYY') AS FECHA_CADUCIDAD,     \n       TO_CHAR(TO_DATE(TA.FECHA_VINCULACION,'YYYY/MM/DD'),'DD/MM/YYYY') "
+"AS FECHA_VINCULACION,\n       TA.MUNICIPIO_EXP_DOCUMENTO\n       FROM TST_ARCHIVO TA";
		    

		    globalMap.put("tOracleInput_15_QUERY",dbquery_tOracleInput_15);

		    java.sql.ResultSet rs_tOracleInput_15 = null;

		    try {
		    	rs_tOracleInput_15 = stmt_tOracleInput_15.executeQuery(dbquery_tOracleInput_15);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_15 = rs_tOracleInput_15.getMetaData();
		    	int colQtyInRs_tOracleInput_15 = rsmd_tOracleInput_15.getColumnCount();

		    String tmpContent_tOracleInput_15 = null;
		    
		    
		    while (rs_tOracleInput_15.next()) {
		        nb_line_tOracleInput_15++;
		        
							if(colQtyInRs_tOracleInput_15 < 1) {
								row22.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row22.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 2) {
								row22.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row22.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 3) {
								row22.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row22.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 4) {
								row22.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row22.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 5) {
								row22.SIGLA = null;
							} else {
	                         		
        	row22.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 6) {
								row22.DOCUMENTO = null;
							} else {
	                         		
        	row22.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 7) {
								row22.GENERO = null;
							} else {
	                         		
        	row22.GENERO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 8) {
								row22.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row22.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 9) {
								row22.ESTADO_CIVIL = null;
							} else {
	                         		
        	row22.ESTADO_CIVIL = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 10) {
								row22.DIRECCION = null;
							} else {
	                         		
        	row22.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 11) {
								row22.TELEFONO = null;
							} else {
	                         		
        	row22.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 12) {
								row22.CORREO_ELECTRONICO = null;
							} else {
	                         		
        	row22.CORREO_ELECTRONICO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 13) {
								row22.MUNICIPIO_RESIDENCIA = null;
							} else {
	                         		
        	row22.MUNICIPIO_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 14) {
								row22.BARRIO = null;
							} else {
	                         		
        	row22.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 15) {
								row22.GRUPO_SANGUINEO = null;
							} else {
	                         		
        	row22.GRUPO_SANGUINEO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 16) {
								row22.FACTOR_RH = null;
							} else {
	                         		
        	row22.FACTOR_RH = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 17) {
								row22.SIGLA_GRDMILITAR = null;
							} else {
	                         		
        	row22.SIGLA_GRDMILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 18) {
								row22.FUERZA_MILITAR = null;
							} else {
	                         		
        	row22.FUERZA_MILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 19) {
								row22.UNIDAD_MILITAR = null;
							} else {
	                         		
        	row22.UNIDAD_MILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 20) {
								row22.ACTIVO = null;
							} else {
	                         		
        	row22.ACTIVO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 21) {
								row22.FECHA_CADUCIDAD = null;
							} else {
	                         		
        	row22.FECHA_CADUCIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 22) {
								row22.FECHA_VINCULACION = null;
							} else {
	                         		
        	row22.FECHA_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 23) {
								row22.MUNICIPIO_EXP_DOCUMENTO = null;
							} else {
	                         		
        	row22.MUNICIPIO_EXP_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 23, false);
		                    }
					




 



/**
 * [tOracleInput_15 begin ] stop
 */
	
	/**
	 * [tOracleInput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 


	tos_count_tOracleInput_15++;

/**
 * [tOracleInput_15 main ] stop
 */
	
	/**
	 * [tOracleInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row22.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.SIGLA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.SIGLA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.GENERO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.GENERO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.ESTADO_CIVIL != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.ESTADO_CIVIL
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.DIRECCION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.DIRECCION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.TELEFONO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.TELEFONO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.CORREO_ELECTRONICO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.CORREO_ELECTRONICO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.MUNICIPIO_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.MUNICIPIO_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.BARRIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.BARRIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.GRUPO_SANGUINEO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.GRUPO_SANGUINEO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.FACTOR_RH != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.FACTOR_RH
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.SIGLA_GRDMILITAR != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.SIGLA_GRDMILITAR
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.FUERZA_MILITAR != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.FUERZA_MILITAR
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.UNIDAD_MILITAR != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.UNIDAD_MILITAR
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.ACTIVO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.ACTIVO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.FECHA_CADUCIDAD != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.FECHA_CADUCIDAD
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.FECHA_VINCULACION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.FECHA_VINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row22.MUNICIPIO_EXP_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row22.MUNICIPIO_EXP_DOCUMENTO
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());




 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

}
}finally{
	if (rs_tOracleInput_15 != null) {
		rs_tOracleInput_15.close();
	}
	if (stmt_tOracleInput_15 != null) {
		stmt_tOracleInput_15.close();
	}
}

globalMap.put("tOracleInput_15_NB_LINE",nb_line_tOracleInput_15);
 

ok_Hash.put("tOracleInput_15", true);
end_Hash.put("tOracleInput_15", System.currentTimeMillis());




/**
 * [tOracleInput_15 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk27", 0, "ok");
				}
				tOracleInput_14Process(globalMap);



/**
 * [tFileOutputDelimited_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_15:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tOracleRow_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tOracleInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_14", false);
		start_Hash.put("tOracleInput_14", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_14";
	
	
		int tos_count_tOracleInput_14 = 0;
		
	


	
		    int nb_line_tOracleInput_14 = 0;
		    java.sql.Connection conn_tOracleInput_14 = null;
				conn_tOracleInput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_14 = false;
				boolean isConnectionWrapped_tOracleInput_14 = !(conn_tOracleInput_14 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_14.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_14 = null;
                if (isConnectionWrapped_tOracleInput_14) {
					unwrappedOraConn_tOracleInput_14 = conn_tOracleInput_14.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_14 != null) {
                        isTimeZoneNull_tOracleInput_14 = (unwrappedOraConn_tOracleInput_14.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_14 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_14).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_14) {
					java.sql.Statement stmtGetTZ_tOracleInput_14 = conn_tOracleInput_14.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_14 = stmtGetTZ_tOracleInput_14.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_14 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_14.next()) {
						sessionTimezone_tOracleInput_14 = rsGetTZ_tOracleInput_14.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_14 && unwrappedOraConn_tOracleInput_14 != null) {
                        unwrappedOraConn_tOracleInput_14.setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_14).setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_14 = conn_tOracleInput_14.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_14.setFetchSize(1000);


		    String dbquery_tOracleInput_14 = "SELECT ATA.ID \nFROM AFI_TARCHIVOS ATA \nWHERE ATA.ESTREGISTRO_ID = 1 \nAND ATA.CODIGO = 22";
		    

		    globalMap.put("tOracleInput_14_QUERY",dbquery_tOracleInput_14);

		    java.sql.ResultSet rs_tOracleInput_14 = null;

		    try {
		    	rs_tOracleInput_14 = stmt_tOracleInput_14.executeQuery(dbquery_tOracleInput_14);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_14 = rs_tOracleInput_14.getMetaData();
		    	int colQtyInRs_tOracleInput_14 = rsmd_tOracleInput_14.getColumnCount();

		    String tmpContent_tOracleInput_14 = null;
		    
		    
		    while (rs_tOracleInput_14.next()) {
		        nb_line_tOracleInput_14++;
		        
							if(colQtyInRs_tOracleInput_14 < 1) {
								row21.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(1) != null) {
						row21.ID = rs_tOracleInput_14.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_14 begin ] stop
 */
	
	/**
	 * [tOracleInput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 


	tos_count_tOracleInput_14++;

/**
 * [tOracleInput_14 main ] stop
 */
	
	/**
	 * [tOracleInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.vtarchivo_id = row21.ID;

    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

}
}finally{
	if (rs_tOracleInput_14 != null) {
		rs_tOracleInput_14.close();
	}
	if (stmt_tOracleInput_14 != null) {
		stmt_tOracleInput_14.close();
	}
}

globalMap.put("tOracleInput_14_NB_LINE",nb_line_tOracleInput_14);
 

ok_Hash.put("tOracleInput_14", true);
end_Hash.put("tOracleInput_14", System.currentTimeMillis());




/**
 * [tOracleInput_14 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk29", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tJavaRow_8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row112Struct implements routines.system.IPersistableRow<row112Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
					this.fecha_inicio = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
					this.fecha_inicio = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
		sb.append(",id="+String.valueOf(id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row112Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row111Struct implements routines.system.IPersistableRow<row111Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				
			    public Integer id;

				public Integer getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
					this.fecha_inicio = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
					this.fecha_inicio = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
						this.id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
		sb.append(",id="+String.valueOf(id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row111Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row111Struct row111 = new row111Struct();
row112Struct row112 = new row112Struct();





	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row112");
					}
				
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */



	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row111");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






        int updateKeyCount_tOracleOutput_1 = 1;
        if(updateKeyCount_tOracleOutput_1 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_1 == 12 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("AFI_ARCHIVOS");
        }
                String update_tOracleOutput_1 = "UPDATE " + tableName_tOracleOutput_1 + " SET estado = ?,archivo = ?,tarchivos_id = ?,usuarios_id = ?,codigo = ?,archivofs = ?,fecha = ?,extension = ?,contenido = ?,fecha_inicio = ?,proceso_id = ? WHERE id = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(update_tOracleOutput_1);
                resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);

        class BlobTypeUtil_tOracleOutput_1 {
            public Object getBLOB(Object data, java.sql.Connection conn) throws java.sql.SQLException {
            	boolean containBlobFromOtherDB = false;
                if(!(data instanceof java.sql.Blob) || (data instanceof oracle.sql.BLOB && !containBlobFromOtherDB)) {
                	return data;
                }

                oracle.sql.BLOB blob = null;
                java.io.InputStream in = null;
                java.io.OutputStream out = null;
                try{
                	//in
                	java.sql.Blob blobData = (java.sql.Blob) data;
                	in = blobData.getBinaryStream();

                	//out
                	blob = oracle.sql.BLOB.createTemporary(conn, true, oracle.sql.BLOB.DURATION_SESSION);
                    blob.open(oracle.sql.BLOB.MODE_READWRITE);
                    //blob = conn.createBlob(); oracle jdbc don't support it
                	out = blob.setBinaryStream(1);

                    byte[] cache = new byte[8192];
                    int len = 0;
                    while ((len = in.read(cache)) != -1) {
                        out.write(cache, 0, len);
                    }

                    return blob;
                } catch(java.sql.SQLException sqlexp){
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",sqlexp.getMessage());
                	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_1) {
                    		//keep quiet
                    	}
                    }
                    sqlexp.printStackTrace();
                } catch(java.lang.Exception exp){
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",exp.getMessage());
                   	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_1) {
                    		//keep quiet
                    	}
                    }
                    exp.printStackTrace();
                } finally {
                	if(out!=null) {
                		try {
                			out.flush();
                    		out.close();
                    	} catch(java.io.IOException e_tOracleOutput_1) {
                    		//keep quiet
                    	}
                    }

            	 	if(in!=null) {
                		try {
                    		in.close();
                    	} catch(java.io.IOException e_tOracleOutput_1) {
                    		//keep quiet
                    	}
                    }

                    if(blob!=null) {
                		try {
                    		blob.close();
                    	} catch(java.sql.SQLException e_tOracleOutput_1) {
                    		//keep quiet
                    	}
                    }
                }

                return null;

            }

        }
        BlobTypeUtil_tOracleOutput_1 blobTypeUtil_tOracleOutput_1=new BlobTypeUtil_tOracleOutput_1();





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row111.estado = 5;
    	            	        	            	
    	            		row111.archivo = "CMV_SIATH_" +context.FECHA_EJECUCION+".txt";
    	            	        	            	
    	            		row111.tarchivos_id = context.vtarchivo_id;
    	            	        	            	
    	            		row111.usuarios_id = context.vusuarios_id;
    	            	        	            	
    	            		row111.codigo = "AFI_CMSV_SIATH";
    	            	        	            	
    	            		row111.archivofs = "AFI_CMSV_SIATH_ORIGEN";
    	            	        	            	
    	            		row111.fecha = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row111.extension = "txt";
    	            	        	            	
    	            		row111.contenido = ExtraerBlob.ByteArrayFromFile(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"CMV_SIATH_" +context.FECHA_EJECUCION+".txt");
    	            	        	            	
    	            		row111.fecha_inicio = context.vfinicio;
    	            	        	            	
    	            		row111.procesos_id = context.vprocesos_id;
    	            	        	            	
    	            		row111.id = context.vafiarchivos_id;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row111"
						
						);
					}
					



            row112 = null;
        whetherReject_tOracleOutput_1 = false;
                    if(row111.estado == null) {
pstmt_tOracleOutput_1.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(1, row111.estado);
}

                    if(row111.archivo == null) {
pstmt_tOracleOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(2, row111.archivo);
}

                    if(row111.tarchivos_id == null) {
pstmt_tOracleOutput_1.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(3, row111.tarchivos_id);
}

                    if(row111.usuarios_id == null) {
pstmt_tOracleOutput_1.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(4, row111.usuarios_id);
}

                    if(row111.codigo == null) {
pstmt_tOracleOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(5, row111.codigo);
}

                    if(row111.archivofs == null) {
pstmt_tOracleOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(6, row111.archivofs);
}

                    if(row111.fecha != null) {
pstmt_tOracleOutput_1.setObject(7, new java.sql.Timestamp(row111.fecha.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_1.setNull(7, java.sql.Types.DATE);
}

                    if(row111.extension == null) {
pstmt_tOracleOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(8, row111.extension);
}

                    if(row111.contenido == null) {
pstmt_tOracleOutput_1.setNull(9, java.sql.Types.BLOB);
} else {pstmt_tOracleOutput_1.setObject(9,  blobTypeUtil_tOracleOutput_1.getBLOB(row111.contenido, conn_tOracleOutput_1));
}

                    if(row111.fecha_inicio != null) {
pstmt_tOracleOutput_1.setObject(10, new java.sql.Timestamp(row111.fecha_inicio.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_1.setNull(10, java.sql.Types.DATE);
}

                    if(row111.procesos_id == null) {
pstmt_tOracleOutput_1.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(11, row111.procesos_id);
}


                    if(row111.id == null) {
pstmt_tOracleOutput_1.setNull(12 + count_tOracleOutput_1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(12 + count_tOracleOutput_1, row111.id);
}

                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    updatedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }
            if(!whetherReject_tOracleOutput_1) {
                            row112 = new row112Struct();
                                row112.estado = row111.estado;
                                row112.archivo = row111.archivo;
                                row112.tarchivos_id = row111.tarchivos_id;
                                row112.usuarios_id = row111.usuarios_id;
                                row112.codigo = row111.codigo;
                                row112.archivofs = row111.archivofs;
                                row112.fecha = row111.fecha;
                                row112.extension = row111.extension;
                                row112.contenido = row111.contenido;
                                row112.fecha_inicio = row111.fecha_inicio;
                                row112.procesos_id = row111.procesos_id;
                                row112.id = row111.id;
            }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
// Start of branch "row112"
if(row112 != null) { 



	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row112"
						
						);
					}
					

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_1=new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"CMV_SIATH_" +context.FECHA_EJECUCION+".txt");
    if(file_tFileDelete_1.exists()&& file_tFileDelete_1.isFile()){
    	if(file_tFileDelete_1.delete()){
    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_1_DELETE_PATH",java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"CMV_SIATH_" +context.FECHA_EJECUCION+".txt");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */

} // End of branch "row112"




	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row111");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());




/**
 * [tOracleOutput_1 end ] stop
 */

	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row112");
			  	}
			  	
 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */

	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "procesos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("procesos_id="+String.valueOf(procesos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleRow_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row49Struct row49 = new row49Struct();




	
	/**
	 * [tOracleRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_4", false);
		start_Hash.put("tOracleRow_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tOracleRow_4 = 0;
		

	java.sql.Connection conn_tOracleRow_4 = null;
	String query_tOracleRow_4 = "";
	boolean whetherReject_tOracleRow_4 = false;
	int count_tOracleRow_4 = 0;
				conn_tOracleRow_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_4", conn_tOracleRow_4);
        java.sql.Statement stmt_tOracleRow_4 = conn_tOracleRow_4.createStatement();
        resourceMap.put("stmt_tOracleRow_4", stmt_tOracleRow_4);

 



/**
 * [tOracleRow_4 begin ] stop
 */



	
	/**
	 * [tOracleRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_3", false);
		start_Hash.put("tOracleRow_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_3";
	
	
		int tos_count_tOracleRow_3 = 0;
		

	java.sql.Connection conn_tOracleRow_3 = null;
	String query_tOracleRow_3 = "";
	boolean whetherReject_tOracleRow_3 = false;
	int count_tOracleRow_3 = 0;
				conn_tOracleRow_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_3", conn_tOracleRow_3);
        java.sql.Statement stmt_tOracleRow_3 = conn_tOracleRow_3.createStatement();
        resourceMap.put("stmt_tOracleRow_3", stmt_tOracleRow_3);

 



/**
 * [tOracleRow_3 begin ] stop
 */
	
	/**
	 * [tOracleRow_3 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_3";
	
	

		row49 = null;
		
query_tOracleRow_3 = "truncate table tst_errcmasivo";
whetherReject_tOracleRow_3 = false;
globalMap.put("tOracleRow_3_QUERY",query_tOracleRow_3);
try {
		stmt_tOracleRow_3.execute(query_tOracleRow_3);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_3_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_3 = true;
		
				System.err.print(e.getMessage());
				
	}
	
	if(!whetherReject_tOracleRow_3) {
		
					row49 = new row49Struct();
					
	}
	

 


	tos_count_tOracleRow_3++;

/**
 * [tOracleRow_3 main ] stop
 */
	
	/**
	 * [tOracleRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_3";
	
	

 



/**
 * [tOracleRow_3 process_data_begin ] stop
 */
// Start of branch "row49"
if(row49 != null) { 



	
	/**
	 * [tOracleRow_4 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					

query_tOracleRow_4 = "truncate table tst_carguemasivo";
whetherReject_tOracleRow_4 = false;
globalMap.put("tOracleRow_4_QUERY",query_tOracleRow_4);
try {
		stmt_tOracleRow_4.execute(query_tOracleRow_4);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_4_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_4 = true;
		
				System.err.print(e.getMessage());
				
	}
	

 


	tos_count_tOracleRow_4++;

/**
 * [tOracleRow_4 main ] stop
 */
	
	/**
	 * [tOracleRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

 



/**
 * [tOracleRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

 



/**
 * [tOracleRow_4 process_data_end ] stop
 */

} // End of branch "row49"




	
	/**
	 * [tOracleRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_3";
	
	

 



/**
 * [tOracleRow_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_3 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_3";
	
	

	globalMap.put("tOracleRow_3_NB_LINE", count_tOracleRow_3);
        stmt_tOracleRow_3.close();
        resourceMap.remove("stmt_tOracleRow_3");
    resourceMap.put("statementClosed_tOracleRow_3", true);
    resourceMap.put("finish_tOracleRow_3", true);

 

ok_Hash.put("tOracleRow_3", true);
end_Hash.put("tOracleRow_3", System.currentTimeMillis());




/**
 * [tOracleRow_3 end ] stop
 */

	
	/**
	 * [tOracleRow_4 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

	globalMap.put("tOracleRow_4_NB_LINE", count_tOracleRow_4);
        stmt_tOracleRow_4.close();
        resourceMap.remove("stmt_tOracleRow_4");
    resourceMap.put("statementClosed_tOracleRow_4", true);
    resourceMap.put("finish_tOracleRow_4", true);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tOracleRow_4", true);
end_Hash.put("tOracleRow_4", System.currentTimeMillis());




/**
 * [tOracleRow_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleRow_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tOracleInput_17Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_3";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_3") == null) {
            java.sql.Statement stmtToClose_tOracleRow_3 = null;
            if ((stmtToClose_tOracleRow_3 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_3")) != null) {
                stmtToClose_tOracleRow_3.close();
            }
    }
 



/**
 * [tOracleRow_3 finally ] stop
 */

	
	/**
	 * [tOracleRow_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_4") == null) {
            java.sql.Statement stmtToClose_tOracleRow_4 = null;
            if ((stmtToClose_tOracleRow_4 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_4")) != null) {
                stmtToClose_tOracleRow_4.close();
            }
    }
 



/**
 * [tOracleRow_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_3_SUBPROCESS_STATE", 1);
	}
	


public static class row109Struct implements routines.system.IPersistableRow<row109Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row109Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PERSONAS_FAILUREStruct implements routines.system.IPersistableRow<PERSONAS_FAILUREStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return null;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return null;
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer ESM;

				public Integer getESM () {
					return this.ESM;
				}

				public Boolean ESMIsNullable(){
				    return true;
				}
				public Boolean ESMIsKey(){
				    return false;
				}
				public Integer ESMLength(){
				    return null;
				}
				public Integer ESMPrecision(){
				    return null;
				}
				public String ESMDefault(){
				
					return null;
				
				}
				public String ESMComment(){
				
				    return "";
				
				}
				public String ESMPattern(){
				
					return "";
				
				}
				public String ESMOriginalDbColumnName(){
				
					return "ESM";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.ESM = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.ESM = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.ESM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.ESM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",ESM="+String.valueOf(ESM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PERSONAS_FAILUREStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PERSONAL_SUCCESSStruct implements routines.system.IPersistableRow<PERSONAL_SUCCESSStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String TDOCUMENTO;

				public String getTDOCUMENTO () {
					return this.TDOCUMENTO;
				}

				public Boolean TDOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOLength(){
				    return null;
				}
				public Integer TDOCUMENTOPrecision(){
				    return null;
				}
				public String TDOCUMENTODefault(){
				
					return null;
				
				}
				public String TDOCUMENTOComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOOriginalDbColumnName(){
				
					return "TDOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public Integer LUGAR_EXP_DOC;

				public Integer getLUGAR_EXP_DOC () {
					return this.LUGAR_EXP_DOC;
				}

				public Boolean LUGAR_EXP_DOCIsNullable(){
				    return true;
				}
				public Boolean LUGAR_EXP_DOCIsKey(){
				    return false;
				}
				public Integer LUGAR_EXP_DOCLength(){
				    return null;
				}
				public Integer LUGAR_EXP_DOCPrecision(){
				    return null;
				}
				public String LUGAR_EXP_DOCDefault(){
				
					return "";
				
				}
				public String LUGAR_EXP_DOCComment(){
				
				    return "";
				
				}
				public String LUGAR_EXP_DOCPattern(){
				
					return "";
				
				}
				public String LUGAR_EXP_DOCOriginalDbColumnName(){
				
					return "LUGAR_EXP_DOC";
				
				}

				
			    public Integer SEXOS_ID;

				public Integer getSEXOS_ID () {
					return this.SEXOS_ID;
				}

				public Boolean SEXOS_IDIsNullable(){
				    return true;
				}
				public Boolean SEXOS_IDIsKey(){
				    return false;
				}
				public Integer SEXOS_IDLength(){
				    return null;
				}
				public Integer SEXOS_IDPrecision(){
				    return null;
				}
				public String SEXOS_IDDefault(){
				
					return "";
				
				}
				public String SEXOS_IDComment(){
				
				    return "";
				
				}
				public String SEXOS_IDPattern(){
				
					return "";
				
				}
				public String SEXOS_IDOriginalDbColumnName(){
				
					return "SEXOS_ID";
				
				}

				
			    public Integer ESTCIVILES_ID;

				public Integer getESTCIVILES_ID () {
					return this.ESTCIVILES_ID;
				}

				public Boolean ESTCIVILES_IDIsNullable(){
				    return true;
				}
				public Boolean ESTCIVILES_IDIsKey(){
				    return false;
				}
				public Integer ESTCIVILES_IDLength(){
				    return null;
				}
				public Integer ESTCIVILES_IDPrecision(){
				    return null;
				}
				public String ESTCIVILES_IDDefault(){
				
					return "";
				
				}
				public String ESTCIVILES_IDComment(){
				
				    return "";
				
				}
				public String ESTCIVILES_IDPattern(){
				
					return "";
				
				}
				public String ESTCIVILES_IDOriginalDbColumnName(){
				
					return "ESTCIVILES_ID";
				
				}

				
			    public Integer OCUPACIONES_ID;

				public Integer getOCUPACIONES_ID () {
					return this.OCUPACIONES_ID;
				}

				public Boolean OCUPACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean OCUPACIONES_IDIsKey(){
				    return false;
				}
				public Integer OCUPACIONES_IDLength(){
				    return null;
				}
				public Integer OCUPACIONES_IDPrecision(){
				    return null;
				}
				public String OCUPACIONES_IDDefault(){
				
					return "";
				
				}
				public String OCUPACIONES_IDComment(){
				
				    return "";
				
				}
				public String OCUPACIONES_IDPattern(){
				
					return "";
				
				}
				public String OCUPACIONES_IDOriginalDbColumnName(){
				
					return "OCUPACIONES_ID";
				
				}

				
			    public Integer ETNICAS_ID;

				public Integer getETNICAS_ID () {
					return this.ETNICAS_ID;
				}

				public Boolean ETNICAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNICAS_IDIsKey(){
				    return false;
				}
				public Integer ETNICAS_IDLength(){
				    return null;
				}
				public Integer ETNICAS_IDPrecision(){
				    return null;
				}
				public String ETNICAS_IDDefault(){
				
					return "";
				
				}
				public String ETNICAS_IDComment(){
				
				    return "";
				
				}
				public String ETNICAS_IDPattern(){
				
					return "";
				
				}
				public String ETNICAS_IDOriginalDbColumnName(){
				
					return "ETNICAS_ID";
				
				}

				
			    public Integer TDISCAPACIDADES_ID;

				public Integer getTDISCAPACIDADES_ID () {
					return this.TDISCAPACIDADES_ID;
				}

				public Boolean TDISCAPACIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TDISCAPACIDADES_IDIsKey(){
				    return false;
				}
				public Integer TDISCAPACIDADES_IDLength(){
				    return null;
				}
				public Integer TDISCAPACIDADES_IDPrecision(){
				    return null;
				}
				public String TDISCAPACIDADES_IDDefault(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDComment(){
				
				    return "";
				
				}
				public String TDISCAPACIDADES_IDPattern(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDOriginalDbColumnName(){
				
					return "TDISCAPACIDADES_ID";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return null;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return null;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public Integer LUGAR_RESIDENCIA;

				public Integer getLUGAR_RESIDENCIA () {
					return this.LUGAR_RESIDENCIA;
				}

				public Boolean LUGAR_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_RESIDENCIADefault(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return null;
				}
				public Integer BARRIOPrecision(){
				    return null;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public Integer GSANGUINEOS_ID;

				public Integer getGSANGUINEOS_ID () {
					return this.GSANGUINEOS_ID;
				}

				public Boolean GSANGUINEOS_IDIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOS_IDIsKey(){
				    return false;
				}
				public Integer GSANGUINEOS_IDLength(){
				    return null;
				}
				public Integer GSANGUINEOS_IDPrecision(){
				    return null;
				}
				public String GSANGUINEOS_IDDefault(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDComment(){
				
				    return "";
				
				}
				public String GSANGUINEOS_IDPattern(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDOriginalDbColumnName(){
				
					return "GSANGUINEOS_ID";
				
				}

				
			    public Integer ESMADSCRITO;

				public Integer getESMADSCRITO () {
					return this.ESMADSCRITO;
				}

				public Boolean ESMADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESMADSCRITOIsKey(){
				    return false;
				}
				public Integer ESMADSCRITOLength(){
				    return null;
				}
				public Integer ESMADSCRITOPrecision(){
				    return null;
				}
				public String ESMADSCRITODefault(){
				
					return "";
				
				}
				public String ESMADSCRITOComment(){
				
				    return "";
				
				}
				public String ESMADSCRITOPattern(){
				
					return "";
				
				}
				public String ESMADSCRITOOriginalDbColumnName(){
				
					return "ESMADSCRITO";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return null;
				}
				public Integer OBSERVACIONESPrecision(){
				    return null;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public java.util.Date FECHA_CADUCIDAD;

				public java.util.Date getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return null;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return null;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public Integer PLANAFILIACIONES_ID;

				public Integer getPLANAFILIACIONES_ID () {
					return this.PLANAFILIACIONES_ID;
				}

				public Boolean PLANAFILIACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONES_IDIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONES_IDLength(){
				    return null;
				}
				public Integer PLANAFILIACIONES_IDPrecision(){
				    return null;
				}
				public String PLANAFILIACIONES_IDDefault(){
				
					return "";
				
				}
				public String PLANAFILIACIONES_IDComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONES_IDPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONES_IDOriginalDbColumnName(){
				
					return "PLANAFILIACIONES_ID";
				
				}

				
			    public Integer ENTAPORTANTES_ID;

				public Integer getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return null;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return "";
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return null;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return null;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				
			    public Integer PRINCIPAL;

				public Integer getPRINCIPAL () {
					return this.PRINCIPAL;
				}

				public Boolean PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean PRINCIPALIsKey(){
				    return false;
				}
				public Integer PRINCIPALLength(){
				    return null;
				}
				public Integer PRINCIPALPrecision(){
				    return null;
				}
				public String PRINCIPALDefault(){
				
					return "";
				
				}
				public String PRINCIPALComment(){
				
				    return "";
				
				}
				public String PRINCIPALPattern(){
				
					return "";
				
				}
				public String PRINCIPALOriginalDbColumnName(){
				
					return "PRINCIPAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public java.util.Date FECHA_VINCULACION;

				public java.util.Date getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return null;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return null;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public Integer TREGIMEN_ID;

				public Integer getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return true;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return null;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				
			    public String ESTADO_ENTIDAD;

				public String getESTADO_ENTIDAD () {
					return this.ESTADO_ENTIDAD;
				}

				public Boolean ESTADO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ESTADO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ESTADO_ENTIDADLength(){
				    return null;
				}
				public Integer ESTADO_ENTIDADPrecision(){
				    return null;
				}
				public String ESTADO_ENTIDADDefault(){
				
					return null;
				
				}
				public String ESTADO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ESTADO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ESTADO_ENTIDADOriginalDbColumnName(){
				
					return "ESTADO_ENTIDAD";
				
				}

				
			    public Integer ESTADOS_ID;

				public Integer getESTADOS_ID () {
					return this.ESTADOS_ID;
				}

				public Boolean ESTADOS_IDIsNullable(){
				    return true;
				}
				public Boolean ESTADOS_IDIsKey(){
				    return false;
				}
				public Integer ESTADOS_IDLength(){
				    return null;
				}
				public Integer ESTADOS_IDPrecision(){
				    return null;
				}
				public String ESTADOS_IDDefault(){
				
					return "";
				
				}
				public String ESTADOS_IDComment(){
				
				    return "";
				
				}
				public String ESTADOS_IDPattern(){
				
					return "";
				
				}
				public String ESTADOS_IDOriginalDbColumnName(){
				
					return "ESTADOS_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return null;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return null;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer PROCESOS_ID;

				public Integer getPROCESOS_ID () {
					return this.PROCESOS_ID;
				}

				public Boolean PROCESOS_IDIsNullable(){
				    return true;
				}
				public Boolean PROCESOS_IDIsKey(){
				    return false;
				}
				public Integer PROCESOS_IDLength(){
				    return null;
				}
				public Integer PROCESOS_IDPrecision(){
				    return null;
				}
				public String PROCESOS_IDDefault(){
				
					return "";
				
				}
				public String PROCESOS_IDComment(){
				
				    return "";
				
				}
				public String PROCESOS_IDPattern(){
				
					return "";
				
				}
				public String PROCESOS_IDOriginalDbColumnName(){
				
					return "PROCESOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return null;
				}
				public Integer MOTIVOPrecision(){
				    return null;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return null;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer PARENTESCOS_ID;

				public Integer getPARENTESCOS_ID () {
					return this.PARENTESCOS_ID;
				}

				public Boolean PARENTESCOS_IDIsNullable(){
				    return true;
				}
				public Boolean PARENTESCOS_IDIsKey(){
				    return false;
				}
				public Integer PARENTESCOS_IDLength(){
				    return null;
				}
				public Integer PARENTESCOS_IDPrecision(){
				    return null;
				}
				public String PARENTESCOS_IDDefault(){
				
					return "";
				
				}
				public String PARENTESCOS_IDComment(){
				
				    return "";
				
				}
				public String PARENTESCOS_IDPattern(){
				
					return "";
				
				}
				public String PARENTESCOS_IDOriginalDbColumnName(){
				
					return "PARENTESCOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.LUGAR_EXP_DOC = readInteger(dis);
					
						this.SEXOS_ID = readInteger(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_VINCULACION = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ESTADOS_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.PROCESOS_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.LUGAR_EXP_DOC = readInteger(dis);
					
						this.SEXOS_ID = readInteger(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_VINCULACION = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ESTADOS_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.PROCESOS_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXP_DOC,dos);
					
					// Integer
				
						writeInteger(this.SEXOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// Integer
				
						writeInteger(this.ESTADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESOS_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXP_DOC,dos);
					
					// Integer
				
						writeInteger(this.SEXOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// Integer
				
						writeInteger(this.ESTADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESOS_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",TDOCUMENTO="+TDOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
		sb.append(",LUGAR_EXP_DOC="+String.valueOf(LUGAR_EXP_DOC));
		sb.append(",SEXOS_ID="+String.valueOf(SEXOS_ID));
		sb.append(",ESTCIVILES_ID="+String.valueOf(ESTCIVILES_ID));
		sb.append(",OCUPACIONES_ID="+String.valueOf(OCUPACIONES_ID));
		sb.append(",ETNICAS_ID="+String.valueOf(ETNICAS_ID));
		sb.append(",TDISCAPACIDADES_ID="+String.valueOf(TDISCAPACIDADES_ID));
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",LUGAR_RESIDENCIA="+String.valueOf(LUGAR_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",GSANGUINEOS_ID="+String.valueOf(GSANGUINEOS_ID));
		sb.append(",ESMADSCRITO="+String.valueOf(ESMADSCRITO));
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",FECHA_CADUCIDAD="+String.valueOf(FECHA_CADUCIDAD));
		sb.append(",PLANAFILIACIONES_ID="+String.valueOf(PLANAFILIACIONES_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
		sb.append(",PRINCIPAL="+String.valueOf(PRINCIPAL));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",FECHA_VINCULACION="+String.valueOf(FECHA_VINCULACION));
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
		sb.append(",ESTADO_ENTIDAD="+ESTADO_ENTIDAD);
		sb.append(",ESTADOS_ID="+String.valueOf(ESTADOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",PROCESOS_ID="+String.valueOf(PROCESOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",PARENTESCOS_ID="+String.valueOf(PARENTESCOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PERSONAL_SUCCESSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ErroresStruct implements routines.system.IPersistableRow<ErroresStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer ERROR;

				public Integer getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public String SIGLA_ESTADO;

				public String getSIGLA_ESTADO () {
					return this.SIGLA_ESTADO;
				}

				public Boolean SIGLA_ESTADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESTADOIsKey(){
				    return false;
				}
				public Integer SIGLA_ESTADOLength(){
				    return null;
				}
				public Integer SIGLA_ESTADOPrecision(){
				    return null;
				}
				public String SIGLA_ESTADODefault(){
				
					return null;
				
				}
				public String SIGLA_ESTADOComment(){
				
				    return "";
				
				}
				public String SIGLA_ESTADOPattern(){
				
					return "";
				
				}
				public String SIGLA_ESTADOOriginalDbColumnName(){
				
					return "SIGLA_ESTADO";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return null;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return null;
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.ERROR = readInteger(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.ERROR = readInteger(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ERROR="+String.valueOf(ERROR));
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",SIGLA_ESTADO="+SIGLA_ESTADO);
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ErroresStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class AptosRegistroStruct implements routines.system.IPersistableRow<AptosRegistroStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String TDOCUMENTO;

				public String getTDOCUMENTO () {
					return this.TDOCUMENTO;
				}

				public Boolean TDOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOLength(){
				    return null;
				}
				public Integer TDOCUMENTOPrecision(){
				    return null;
				}
				public String TDOCUMENTODefault(){
				
					return null;
				
				}
				public String TDOCUMENTOComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOOriginalDbColumnName(){
				
					return "TDOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public Integer LUGAR_EXP_DOC;

				public Integer getLUGAR_EXP_DOC () {
					return this.LUGAR_EXP_DOC;
				}

				public Boolean LUGAR_EXP_DOCIsNullable(){
				    return true;
				}
				public Boolean LUGAR_EXP_DOCIsKey(){
				    return false;
				}
				public Integer LUGAR_EXP_DOCLength(){
				    return null;
				}
				public Integer LUGAR_EXP_DOCPrecision(){
				    return null;
				}
				public String LUGAR_EXP_DOCDefault(){
				
					return null;
				
				}
				public String LUGAR_EXP_DOCComment(){
				
				    return "";
				
				}
				public String LUGAR_EXP_DOCPattern(){
				
					return "";
				
				}
				public String LUGAR_EXP_DOCOriginalDbColumnName(){
				
					return "LUGAR_EXP_DOC";
				
				}

				
			    public Integer SEXOS_ID;

				public Integer getSEXOS_ID () {
					return this.SEXOS_ID;
				}

				public Boolean SEXOS_IDIsNullable(){
				    return true;
				}
				public Boolean SEXOS_IDIsKey(){
				    return false;
				}
				public Integer SEXOS_IDLength(){
				    return null;
				}
				public Integer SEXOS_IDPrecision(){
				    return null;
				}
				public String SEXOS_IDDefault(){
				
					return null;
				
				}
				public String SEXOS_IDComment(){
				
				    return "";
				
				}
				public String SEXOS_IDPattern(){
				
					return "";
				
				}
				public String SEXOS_IDOriginalDbColumnName(){
				
					return "SEXOS_ID";
				
				}

				
			    public Integer ESTCIVILES_ID;

				public Integer getESTCIVILES_ID () {
					return this.ESTCIVILES_ID;
				}

				public Boolean ESTCIVILES_IDIsNullable(){
				    return true;
				}
				public Boolean ESTCIVILES_IDIsKey(){
				    return false;
				}
				public Integer ESTCIVILES_IDLength(){
				    return null;
				}
				public Integer ESTCIVILES_IDPrecision(){
				    return null;
				}
				public String ESTCIVILES_IDDefault(){
				
					return null;
				
				}
				public String ESTCIVILES_IDComment(){
				
				    return "";
				
				}
				public String ESTCIVILES_IDPattern(){
				
					return "";
				
				}
				public String ESTCIVILES_IDOriginalDbColumnName(){
				
					return "ESTCIVILES_ID";
				
				}

				
			    public Integer OCUPACIONES_ID;

				public Integer getOCUPACIONES_ID () {
					return this.OCUPACIONES_ID;
				}

				public Boolean OCUPACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean OCUPACIONES_IDIsKey(){
				    return false;
				}
				public Integer OCUPACIONES_IDLength(){
				    return null;
				}
				public Integer OCUPACIONES_IDPrecision(){
				    return null;
				}
				public String OCUPACIONES_IDDefault(){
				
					return null;
				
				}
				public String OCUPACIONES_IDComment(){
				
				    return "";
				
				}
				public String OCUPACIONES_IDPattern(){
				
					return "";
				
				}
				public String OCUPACIONES_IDOriginalDbColumnName(){
				
					return "OCUPACIONES_ID";
				
				}

				
			    public Integer ETNICAS_ID;

				public Integer getETNICAS_ID () {
					return this.ETNICAS_ID;
				}

				public Boolean ETNICAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNICAS_IDIsKey(){
				    return false;
				}
				public Integer ETNICAS_IDLength(){
				    return null;
				}
				public Integer ETNICAS_IDPrecision(){
				    return null;
				}
				public String ETNICAS_IDDefault(){
				
					return null;
				
				}
				public String ETNICAS_IDComment(){
				
				    return "";
				
				}
				public String ETNICAS_IDPattern(){
				
					return "";
				
				}
				public String ETNICAS_IDOriginalDbColumnName(){
				
					return "ETNICAS_ID";
				
				}

				
			    public Integer TDISCAPACIDADES_ID;

				public Integer getTDISCAPACIDADES_ID () {
					return this.TDISCAPACIDADES_ID;
				}

				public Boolean TDISCAPACIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TDISCAPACIDADES_IDIsKey(){
				    return false;
				}
				public Integer TDISCAPACIDADES_IDLength(){
				    return null;
				}
				public Integer TDISCAPACIDADES_IDPrecision(){
				    return null;
				}
				public String TDISCAPACIDADES_IDDefault(){
				
					return null;
				
				}
				public String TDISCAPACIDADES_IDComment(){
				
				    return "";
				
				}
				public String TDISCAPACIDADES_IDPattern(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDOriginalDbColumnName(){
				
					return "TDISCAPACIDADES_ID";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return null;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return null;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public Integer LUGAR_RESIDENCIA;

				public Integer getLUGAR_RESIDENCIA () {
					return this.LUGAR_RESIDENCIA;
				}

				public Boolean LUGAR_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LUGAR_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return null;
				}
				public Integer BARRIOPrecision(){
				    return null;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public Integer GSANGUINEOS_ID;

				public Integer getGSANGUINEOS_ID () {
					return this.GSANGUINEOS_ID;
				}

				public Boolean GSANGUINEOS_IDIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOS_IDIsKey(){
				    return false;
				}
				public Integer GSANGUINEOS_IDLength(){
				    return null;
				}
				public Integer GSANGUINEOS_IDPrecision(){
				    return null;
				}
				public String GSANGUINEOS_IDDefault(){
				
					return null;
				
				}
				public String GSANGUINEOS_IDComment(){
				
				    return "";
				
				}
				public String GSANGUINEOS_IDPattern(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDOriginalDbColumnName(){
				
					return "GSANGUINEOS_ID";
				
				}

				
			    public Integer ESMADSCRITO;

				public Integer getESMADSCRITO () {
					return this.ESMADSCRITO;
				}

				public Boolean ESMADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESMADSCRITOIsKey(){
				    return false;
				}
				public Integer ESMADSCRITOLength(){
				    return null;
				}
				public Integer ESMADSCRITOPrecision(){
				    return null;
				}
				public String ESMADSCRITODefault(){
				
					return null;
				
				}
				public String ESMADSCRITOComment(){
				
				    return "";
				
				}
				public String ESMADSCRITOPattern(){
				
					return "";
				
				}
				public String ESMADSCRITOOriginalDbColumnName(){
				
					return "ESMADSCRITO";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return null;
				}
				public Integer OBSERVACIONESPrecision(){
				    return null;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public java.util.Date FECHA_CADUCIDAD;

				public java.util.Date getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return null;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return null;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public Integer PLANAFILIACIONES_ID;

				public Integer getPLANAFILIACIONES_ID () {
					return this.PLANAFILIACIONES_ID;
				}

				public Boolean PLANAFILIACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONES_IDIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONES_IDLength(){
				    return null;
				}
				public Integer PLANAFILIACIONES_IDPrecision(){
				    return null;
				}
				public String PLANAFILIACIONES_IDDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONES_IDComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONES_IDPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONES_IDOriginalDbColumnName(){
				
					return "PLANAFILIACIONES_ID";
				
				}

				
			    public Integer ENTAPORTANTES_ID;

				public Integer getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return null;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return null;
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return null;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return null;
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return null;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return null;
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return null;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return null;
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				
			    public Integer PRINCIPAL;

				public Integer getPRINCIPAL () {
					return this.PRINCIPAL;
				}

				public Boolean PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean PRINCIPALIsKey(){
				    return false;
				}
				public Integer PRINCIPALLength(){
				    return null;
				}
				public Integer PRINCIPALPrecision(){
				    return null;
				}
				public String PRINCIPALDefault(){
				
					return null;
				
				}
				public String PRINCIPALComment(){
				
				    return "";
				
				}
				public String PRINCIPALPattern(){
				
					return "";
				
				}
				public String PRINCIPALOriginalDbColumnName(){
				
					return "PRINCIPAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return null;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return null;
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public java.util.Date FECHA_VINCULACION;

				public java.util.Date getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return null;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return null;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public Integer TREGIMEN_ID;

				public Integer getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return true;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return null;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return null;
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				
			    public String ESTADO_ENTIDAD;

				public String getESTADO_ENTIDAD () {
					return this.ESTADO_ENTIDAD;
				}

				public Boolean ESTADO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ESTADO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ESTADO_ENTIDADLength(){
				    return null;
				}
				public Integer ESTADO_ENTIDADPrecision(){
				    return null;
				}
				public String ESTADO_ENTIDADDefault(){
				
					return null;
				
				}
				public String ESTADO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ESTADO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ESTADO_ENTIDADOriginalDbColumnName(){
				
					return "ESTADO_ENTIDAD";
				
				}

				
			    public Integer ESTADOS_ID;

				public Integer getESTADOS_ID () {
					return this.ESTADOS_ID;
				}

				public Boolean ESTADOS_IDIsNullable(){
				    return true;
				}
				public Boolean ESTADOS_IDIsKey(){
				    return false;
				}
				public Integer ESTADOS_IDLength(){
				    return null;
				}
				public Integer ESTADOS_IDPrecision(){
				    return null;
				}
				public String ESTADOS_IDDefault(){
				
					return null;
				
				}
				public String ESTADOS_IDComment(){
				
				    return "";
				
				}
				public String ESTADOS_IDPattern(){
				
					return "";
				
				}
				public String ESTADOS_IDOriginalDbColumnName(){
				
					return "ESTADOS_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return null;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return null;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return null;
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer PROCESOS_ID;

				public Integer getPROCESOS_ID () {
					return this.PROCESOS_ID;
				}

				public Boolean PROCESOS_IDIsNullable(){
				    return true;
				}
				public Boolean PROCESOS_IDIsKey(){
				    return false;
				}
				public Integer PROCESOS_IDLength(){
				    return null;
				}
				public Integer PROCESOS_IDPrecision(){
				    return null;
				}
				public String PROCESOS_IDDefault(){
				
					return null;
				
				}
				public String PROCESOS_IDComment(){
				
				    return "";
				
				}
				public String PROCESOS_IDPattern(){
				
					return "";
				
				}
				public String PROCESOS_IDOriginalDbColumnName(){
				
					return "PROCESOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return null;
				}
				public Integer MOTIVOPrecision(){
				    return null;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return null;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return null;
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer PARENTESCOS_ID;

				public Integer getPARENTESCOS_ID () {
					return this.PARENTESCOS_ID;
				}

				public Boolean PARENTESCOS_IDIsNullable(){
				    return true;
				}
				public Boolean PARENTESCOS_IDIsKey(){
				    return false;
				}
				public Integer PARENTESCOS_IDLength(){
				    return null;
				}
				public Integer PARENTESCOS_IDPrecision(){
				    return null;
				}
				public String PARENTESCOS_IDDefault(){
				
					return null;
				
				}
				public String PARENTESCOS_IDComment(){
				
				    return "";
				
				}
				public String PARENTESCOS_IDPattern(){
				
					return "";
				
				}
				public String PARENTESCOS_IDOriginalDbColumnName(){
				
					return "PARENTESCOS_ID";
				
				}

				
			    public String SIGLA_GRADO;

				public String getSIGLA_GRADO () {
					return this.SIGLA_GRADO;
				}

				public Boolean SIGLA_GRADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRADOIsKey(){
				    return false;
				}
				public Integer SIGLA_GRADOLength(){
				    return null;
				}
				public Integer SIGLA_GRADOPrecision(){
				    return null;
				}
				public String SIGLA_GRADODefault(){
				
					return null;
				
				}
				public String SIGLA_GRADOComment(){
				
				    return "";
				
				}
				public String SIGLA_GRADOPattern(){
				
					return "";
				
				}
				public String SIGLA_GRADOOriginalDbColumnName(){
				
					return "SIGLA_GRADO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.LUGAR_EXP_DOC = readInteger(dis);
					
						this.SEXOS_ID = readInteger(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_VINCULACION = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ESTADOS_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.PROCESOS_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.LUGAR_EXP_DOC = readInteger(dis);
					
						this.SEXOS_ID = readInteger(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_VINCULACION = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ESTADOS_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.PROCESOS_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXP_DOC,dos);
					
					// Integer
				
						writeInteger(this.SEXOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// Integer
				
						writeInteger(this.ESTADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESOS_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXP_DOC,dos);
					
					// Integer
				
						writeInteger(this.SEXOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_VINCULACION,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// Integer
				
						writeInteger(this.ESTADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESOS_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",TDOCUMENTO="+TDOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
		sb.append(",LUGAR_EXP_DOC="+String.valueOf(LUGAR_EXP_DOC));
		sb.append(",SEXOS_ID="+String.valueOf(SEXOS_ID));
		sb.append(",ESTCIVILES_ID="+String.valueOf(ESTCIVILES_ID));
		sb.append(",OCUPACIONES_ID="+String.valueOf(OCUPACIONES_ID));
		sb.append(",ETNICAS_ID="+String.valueOf(ETNICAS_ID));
		sb.append(",TDISCAPACIDADES_ID="+String.valueOf(TDISCAPACIDADES_ID));
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",LUGAR_RESIDENCIA="+String.valueOf(LUGAR_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",GSANGUINEOS_ID="+String.valueOf(GSANGUINEOS_ID));
		sb.append(",ESMADSCRITO="+String.valueOf(ESMADSCRITO));
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",FECHA_CADUCIDAD="+String.valueOf(FECHA_CADUCIDAD));
		sb.append(",PLANAFILIACIONES_ID="+String.valueOf(PLANAFILIACIONES_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
		sb.append(",PRINCIPAL="+String.valueOf(PRINCIPAL));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",FECHA_VINCULACION="+String.valueOf(FECHA_VINCULACION));
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
		sb.append(",ESTADO_ENTIDAD="+ESTADO_ENTIDAD);
		sb.append(",ESTADOS_ID="+String.valueOf(ESTADOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",PROCESOS_ID="+String.valueOf(PROCESOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",PARENTESCOS_ID="+String.valueOf(PARENTESCOS_ID));
		sb.append(",SIGLA_GRADO="+SIGLA_GRADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(AptosRegistroStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SIGLA_DOCUMENTO;

				public String getSIGLA_DOCUMENTO () {
					return this.SIGLA_DOCUMENTO;
				}

				public Boolean SIGLA_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer SIGLA_DOCUMENTOLength(){
				    return 400;
				}
				public Integer SIGLA_DOCUMENTOPrecision(){
				    return 0;
				}
				public String SIGLA_DOCUMENTODefault(){
				
					return null;
				
				}
				public String SIGLA_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String SIGLA_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String SIGLA_DOCUMENTOOriginalDbColumnName(){
				
					return "SIGLA_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 400;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SEXO;

				public String getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return true;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 400;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public BigDecimal MUNICIPIO_RESIDENCIA;

				public BigDecimal getMUNICIPIO_RESIDENCIA () {
					return this.MUNICIPIO_RESIDENCIA;
				}

				public Boolean MUNICIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_RESIDENCIALength(){
				    return 0;
				}
				public Integer MUNICIPIO_RESIDENCIAPrecision(){
				    return 0;
				}
				public String MUNICIPIO_RESIDENCIADefault(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "MUNICIPIO_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 400;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return 400;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return 0;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return 32;
				}
				public Integer FACTOR_RHPrecision(){
				    return 0;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public BigDecimal MUNICIPIO_EXP_DOCUMENTO;

				public BigDecimal getMUNICIPIO_EXP_DOCUMENTO () {
					return this.MUNICIPIO_EXP_DOCUMENTO;
				}

				public Boolean MUNICIPIO_EXP_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_EXP_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOLength(){
				    return 0;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOPrecision(){
				    return 0;
				}
				public String MUNICIPIO_EXP_DOCUMENTODefault(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOOriginalDbColumnName(){
				
					return "MUNICIPIO_EXP_DOCUMENTO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return 400;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return 0;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return 400;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return 0;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public Integer CATEGORIA;

				public Integer getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String FUERZA_MILITAR;

				public String getFUERZA_MILITAR () {
					return this.FUERZA_MILITAR;
				}

				public Boolean FUERZA_MILITARIsNullable(){
				    return true;
				}
				public Boolean FUERZA_MILITARIsKey(){
				    return false;
				}
				public Integer FUERZA_MILITARLength(){
				    return 400;
				}
				public Integer FUERZA_MILITARPrecision(){
				    return 0;
				}
				public String FUERZA_MILITARDefault(){
				
					return null;
				
				}
				public String FUERZA_MILITARComment(){
				
				    return "";
				
				}
				public String FUERZA_MILITARPattern(){
				
					return "";
				
				}
				public String FUERZA_MILITAROriginalDbColumnName(){
				
					return "FUERZA_MILITAR";
				
				}

				
			    public String SIGLA_ESTADO;

				public String getSIGLA_ESTADO () {
					return this.SIGLA_ESTADO;
				}

				public Boolean SIGLA_ESTADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESTADOIsKey(){
				    return false;
				}
				public Integer SIGLA_ESTADOLength(){
				    return 400;
				}
				public Integer SIGLA_ESTADOPrecision(){
				    return 0;
				}
				public String SIGLA_ESTADODefault(){
				
					return null;
				
				}
				public String SIGLA_ESTADOComment(){
				
				    return "";
				
				}
				public String SIGLA_ESTADOPattern(){
				
					return "";
				
				}
				public String SIGLA_ESTADOOriginalDbColumnName(){
				
					return "SIGLA_ESTADO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return 0;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 250;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public String FECHA_CADUCIDAD;

				public String getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return 400;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return 0;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return 400;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return 0;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 2000;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return 0;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer CARGADO_SIATH;

				public Integer getCARGADO_SIATH () {
					return this.CARGADO_SIATH;
				}

				public Boolean CARGADO_SIATHIsNullable(){
				    return true;
				}
				public Boolean CARGADO_SIATHIsKey(){
				    return false;
				}
				public Integer CARGADO_SIATHLength(){
				    return 0;
				}
				public Integer CARGADO_SIATHPrecision(){
				    return null;
				}
				public String CARGADO_SIATHDefault(){
				
					return "";
				
				}
				public String CARGADO_SIATHComment(){
				
				    return "";
				
				}
				public String CARGADO_SIATHPattern(){
				
					return "";
				
				}
				public String CARGADO_SIATHOriginalDbColumnName(){
				
					return "CARGADO_SIATH";
				
				}

				
			    public String SIGLA_GRADO;

				public String getSIGLA_GRADO () {
					return this.SIGLA_GRADO;
				}

				public Boolean SIGLA_GRADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRADOIsKey(){
				    return false;
				}
				public Integer SIGLA_GRADOLength(){
				    return 400;
				}
				public Integer SIGLA_GRADOPrecision(){
				    return 0;
				}
				public String SIGLA_GRADODefault(){
				
					return null;
				
				}
				public String SIGLA_GRADOComment(){
				
				    return "";
				
				}
				public String SIGLA_GRADOPattern(){
				
					return "";
				
				}
				public String SIGLA_GRADOOriginalDbColumnName(){
				
					return "SIGLA_GRADO";
				
				}

				
			    public String SIGLA_UNIDAD;

				public String getSIGLA_UNIDAD () {
					return this.SIGLA_UNIDAD;
				}

				public Boolean SIGLA_UNIDADIsNullable(){
				    return true;
				}
				public Boolean SIGLA_UNIDADIsKey(){
				    return false;
				}
				public Integer SIGLA_UNIDADLength(){
				    return 400;
				}
				public Integer SIGLA_UNIDADPrecision(){
				    return 0;
				}
				public String SIGLA_UNIDADDefault(){
				
					return null;
				
				}
				public String SIGLA_UNIDADComment(){
				
				    return "";
				
				}
				public String SIGLA_UNIDADPattern(){
				
					return "";
				
				}
				public String SIGLA_UNIDADOriginalDbColumnName(){
				
					return "SIGLA_UNIDAD";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return 400;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return 0;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
						this.MUNICIPIO_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
						this.MUNICIPIO_EXP_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UNIDAD = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
						this.MUNICIPIO_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
						this.MUNICIPIO_EXP_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UNIDAD = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MUNICIPIO_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MUNICIPIO_EXP_DOCUMENTO);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UNIDAD,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MUNICIPIO_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MUNICIPIO_EXP_DOCUMENTO);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UNIDAD,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SIGLA_DOCUMENTO="+SIGLA_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SEXO="+SEXO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",MUNICIPIO_RESIDENCIA="+String.valueOf(MUNICIPIO_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",MUNICIPIO_EXP_DOCUMENTO="+String.valueOf(MUNICIPIO_EXP_DOCUMENTO));
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",FUERZA_MILITAR="+FUERZA_MILITAR);
		sb.append(",SIGLA_ESTADO="+SIGLA_ESTADO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",FECHA_CADUCIDAD="+FECHA_CADUCIDAD);
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",CARGADO_SIATH="+String.valueOf(CARGADO_SIATH));
		sb.append(",SIGLA_GRADO="+SIGLA_GRADO);
		sb.append(",SIGLA_UNIDAD="+SIGLA_UNIDAD);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_17Struct implements routines.system.IPersistableRow<after_tOracleInput_17Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SIGLA_DOCUMENTO;

				public String getSIGLA_DOCUMENTO () {
					return this.SIGLA_DOCUMENTO;
				}

				public Boolean SIGLA_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer SIGLA_DOCUMENTOLength(){
				    return 400;
				}
				public Integer SIGLA_DOCUMENTOPrecision(){
				    return 0;
				}
				public String SIGLA_DOCUMENTODefault(){
				
					return null;
				
				}
				public String SIGLA_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String SIGLA_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String SIGLA_DOCUMENTOOriginalDbColumnName(){
				
					return "SIGLA_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 400;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SEXO;

				public String getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return true;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 400;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public BigDecimal MUNICIPIO_RESIDENCIA;

				public BigDecimal getMUNICIPIO_RESIDENCIA () {
					return this.MUNICIPIO_RESIDENCIA;
				}

				public Boolean MUNICIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_RESIDENCIALength(){
				    return 0;
				}
				public Integer MUNICIPIO_RESIDENCIAPrecision(){
				    return 0;
				}
				public String MUNICIPIO_RESIDENCIADefault(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "MUNICIPIO_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 400;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return 400;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return 0;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return 32;
				}
				public Integer FACTOR_RHPrecision(){
				    return 0;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public BigDecimal MUNICIPIO_EXP_DOCUMENTO;

				public BigDecimal getMUNICIPIO_EXP_DOCUMENTO () {
					return this.MUNICIPIO_EXP_DOCUMENTO;
				}

				public Boolean MUNICIPIO_EXP_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_EXP_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOLength(){
				    return 0;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOPrecision(){
				    return 0;
				}
				public String MUNICIPIO_EXP_DOCUMENTODefault(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOOriginalDbColumnName(){
				
					return "MUNICIPIO_EXP_DOCUMENTO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return 400;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return 0;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return 400;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return 0;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public Integer CATEGORIA;

				public Integer getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String FUERZA_MILITAR;

				public String getFUERZA_MILITAR () {
					return this.FUERZA_MILITAR;
				}

				public Boolean FUERZA_MILITARIsNullable(){
				    return true;
				}
				public Boolean FUERZA_MILITARIsKey(){
				    return false;
				}
				public Integer FUERZA_MILITARLength(){
				    return 400;
				}
				public Integer FUERZA_MILITARPrecision(){
				    return 0;
				}
				public String FUERZA_MILITARDefault(){
				
					return null;
				
				}
				public String FUERZA_MILITARComment(){
				
				    return "";
				
				}
				public String FUERZA_MILITARPattern(){
				
					return "";
				
				}
				public String FUERZA_MILITAROriginalDbColumnName(){
				
					return "FUERZA_MILITAR";
				
				}

				
			    public String SIGLA_ESTADO;

				public String getSIGLA_ESTADO () {
					return this.SIGLA_ESTADO;
				}

				public Boolean SIGLA_ESTADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESTADOIsKey(){
				    return false;
				}
				public Integer SIGLA_ESTADOLength(){
				    return 400;
				}
				public Integer SIGLA_ESTADOPrecision(){
				    return 0;
				}
				public String SIGLA_ESTADODefault(){
				
					return null;
				
				}
				public String SIGLA_ESTADOComment(){
				
				    return "";
				
				}
				public String SIGLA_ESTADOPattern(){
				
					return "";
				
				}
				public String SIGLA_ESTADOOriginalDbColumnName(){
				
					return "SIGLA_ESTADO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return 0;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 250;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public String FECHA_CADUCIDAD;

				public String getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return 400;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return 0;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return 400;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return 0;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 2000;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return 0;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer CARGADO_SIATH;

				public Integer getCARGADO_SIATH () {
					return this.CARGADO_SIATH;
				}

				public Boolean CARGADO_SIATHIsNullable(){
				    return true;
				}
				public Boolean CARGADO_SIATHIsKey(){
				    return false;
				}
				public Integer CARGADO_SIATHLength(){
				    return 0;
				}
				public Integer CARGADO_SIATHPrecision(){
				    return null;
				}
				public String CARGADO_SIATHDefault(){
				
					return "";
				
				}
				public String CARGADO_SIATHComment(){
				
				    return "";
				
				}
				public String CARGADO_SIATHPattern(){
				
					return "";
				
				}
				public String CARGADO_SIATHOriginalDbColumnName(){
				
					return "CARGADO_SIATH";
				
				}

				
			    public String SIGLA_GRADO;

				public String getSIGLA_GRADO () {
					return this.SIGLA_GRADO;
				}

				public Boolean SIGLA_GRADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRADOIsKey(){
				    return false;
				}
				public Integer SIGLA_GRADOLength(){
				    return 400;
				}
				public Integer SIGLA_GRADOPrecision(){
				    return 0;
				}
				public String SIGLA_GRADODefault(){
				
					return null;
				
				}
				public String SIGLA_GRADOComment(){
				
				    return "";
				
				}
				public String SIGLA_GRADOPattern(){
				
					return "";
				
				}
				public String SIGLA_GRADOOriginalDbColumnName(){
				
					return "SIGLA_GRADO";
				
				}

				
			    public String SIGLA_UNIDAD;

				public String getSIGLA_UNIDAD () {
					return this.SIGLA_UNIDAD;
				}

				public Boolean SIGLA_UNIDADIsNullable(){
				    return true;
				}
				public Boolean SIGLA_UNIDADIsKey(){
				    return false;
				}
				public Integer SIGLA_UNIDADLength(){
				    return 400;
				}
				public Integer SIGLA_UNIDADPrecision(){
				    return 0;
				}
				public String SIGLA_UNIDADDefault(){
				
					return null;
				
				}
				public String SIGLA_UNIDADComment(){
				
				    return "";
				
				}
				public String SIGLA_UNIDADPattern(){
				
					return "";
				
				}
				public String SIGLA_UNIDADOriginalDbColumnName(){
				
					return "SIGLA_UNIDAD";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return 400;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return 0;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
						this.MUNICIPIO_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
						this.MUNICIPIO_EXP_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UNIDAD = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
						this.MUNICIPIO_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
						this.MUNICIPIO_EXP_DOCUMENTO = (BigDecimal) dis.readObject();
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UNIDAD = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MUNICIPIO_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MUNICIPIO_EXP_DOCUMENTO);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UNIDAD,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MUNICIPIO_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MUNICIPIO_EXP_DOCUMENTO);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UNIDAD,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SIGLA_DOCUMENTO="+SIGLA_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SEXO="+SEXO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",MUNICIPIO_RESIDENCIA="+String.valueOf(MUNICIPIO_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",MUNICIPIO_EXP_DOCUMENTO="+String.valueOf(MUNICIPIO_EXP_DOCUMENTO));
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",FUERZA_MILITAR="+FUERZA_MILITAR);
		sb.append(",SIGLA_ESTADO="+SIGLA_ESTADO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",FECHA_CADUCIDAD="+FECHA_CADUCIDAD);
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",CARGADO_SIATH="+String.valueOf(CARGADO_SIATH));
		sb.append(",SIGLA_GRADO="+SIGLA_GRADO);
		sb.append(",SIGLA_UNIDAD="+SIGLA_UNIDAD);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_21Process(globalMap);
		tHashInput_2Process(globalMap);
		tHashInput_3Process(globalMap);
		tHashInput_4Process(globalMap);
		tHashInput_5Process(globalMap);
		tHashInput_6Process(globalMap);
		tHashInput_7Process(globalMap);
		tHashInput_8Process(globalMap);
		tHashInput_9Process(globalMap);
		tHashInput_10Process(globalMap);
		tHashInput_11Process(globalMap);
		tHashInput_12Process(globalMap);
		tHashInput_13Process(globalMap);
		tHashInput_14Process(globalMap);
		tHashInput_15Process(globalMap);
		tHashInput_22Process(globalMap);
		tHashInput_20Process(globalMap);
		tHashInput_23Process(globalMap);

		row28Struct row28 = new row28Struct();
ErroresStruct Errores = new ErroresStruct();
row47Struct row47 = new row47Struct();
AptosRegistroStruct AptosRegistro = new AptosRegistroStruct();
PERSONAS_FAILUREStruct PERSONAS_FAILURE = new PERSONAS_FAILUREStruct();
row109Struct row109 = new row109Struct();
PERSONAL_SUCCESSStruct PERSONAL_SUCCESS = new PERSONAL_SUCCESSStruct();






	
	/**
	 * [tOracleOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_6", false);
		start_Hash.put("tOracleOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tOracleOutput_6 = 0;
		






    
    int nb_line_tOracleOutput_6 = 0;
    int nb_line_update_tOracleOutput_6 = 0;
    int nb_line_inserted_tOracleOutput_6 = 0;
    int nb_line_deleted_tOracleOutput_6 = 0;
    int nb_line_rejected_tOracleOutput_6 = 0;

    int tmp_batchUpdateCount_tOracleOutput_6 = 0;

    int deletedCount_tOracleOutput_6=0;
    int updatedCount_tOracleOutput_6=0;
    int insertedCount_tOracleOutput_6=0;
    int rowsToCommitCount_tOracleOutput_6=0;
    int rejectedCount_tOracleOutput_6=0;

    boolean whetherReject_tOracleOutput_6 = false;

    java.sql.Connection conn_tOracleOutput_6 = null;

    //optional table
    String dbschema_tOracleOutput_6 = null;
    String tableName_tOracleOutput_6 = null;
        dbschema_tOracleOutput_6 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_6=0;

        if(dbschema_tOracleOutput_6 == null || dbschema_tOracleOutput_6.trim().length() == 0) {
            tableName_tOracleOutput_6 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_6 = dbschema_tOracleOutput_6 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_6 = "INSERT INTO " + tableName_tOracleOutput_6 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_6 = conn_tOracleOutput_6.prepareStatement(insert_tOracleOutput_6);
                        resourceMap.put("pstmt_tOracleOutput_6", pstmt_tOracleOutput_6);





 



/**
 * [tOracleOutput_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Errores");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */






	
	/**
	 * [tOracleOutput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_40", false);
		start_Hash.put("tOracleOutput_40", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_40";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row109");
					}
				
		int tos_count_tOracleOutput_40 = 0;
		






    
    int nb_line_tOracleOutput_40 = 0;
    int nb_line_update_tOracleOutput_40 = 0;
    int nb_line_inserted_tOracleOutput_40 = 0;
    int nb_line_deleted_tOracleOutput_40 = 0;
    int nb_line_rejected_tOracleOutput_40 = 0;

    int tmp_batchUpdateCount_tOracleOutput_40 = 0;

    int deletedCount_tOracleOutput_40=0;
    int updatedCount_tOracleOutput_40=0;
    int insertedCount_tOracleOutput_40=0;
    int rowsToCommitCount_tOracleOutput_40=0;
    int rejectedCount_tOracleOutput_40=0;

    boolean whetherReject_tOracleOutput_40 = false;

    java.sql.Connection conn_tOracleOutput_40 = null;

    //optional table
    String dbschema_tOracleOutput_40 = null;
    String tableName_tOracleOutput_40 = null;
        dbschema_tOracleOutput_40 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_40 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_40=0;

        if(dbschema_tOracleOutput_40 == null || dbschema_tOracleOutput_40.trim().length() == 0) {
            tableName_tOracleOutput_40 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_40 = dbschema_tOracleOutput_40 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_40 = "INSERT INTO " + tableName_tOracleOutput_40 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_40 = conn_tOracleOutput_40.prepareStatement(insert_tOracleOutput_40);
                        resourceMap.put("pstmt_tOracleOutput_40", pstmt_tOracleOutput_40);





 



/**
 * [tOracleOutput_40 begin ] stop
 */



	
	/**
	 * [tJavaRow_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_30", false);
		start_Hash.put("tJavaRow_30", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PERSONAS_FAILURE");
					}
				
		int tos_count_tJavaRow_30 = 0;
		

int nb_line_tJavaRow_30 = 0;

 



/**
 * [tJavaRow_30 begin ] stop
 */




	
	/**
	 * [tOracleOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_7", false);
		start_Hash.put("tOracleOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PERSONAL_SUCCESS");
					}
				
		int tos_count_tOracleOutput_7 = 0;
		






    
    int nb_line_tOracleOutput_7 = 0;
    int nb_line_update_tOracleOutput_7 = 0;
    int nb_line_inserted_tOracleOutput_7 = 0;
    int nb_line_deleted_tOracleOutput_7 = 0;
    int nb_line_rejected_tOracleOutput_7 = 0;

    int tmp_batchUpdateCount_tOracleOutput_7 = 0;

    int deletedCount_tOracleOutput_7=0;
    int updatedCount_tOracleOutput_7=0;
    int insertedCount_tOracleOutput_7=0;
    int rowsToCommitCount_tOracleOutput_7=0;
    int rejectedCount_tOracleOutput_7=0;

    boolean whetherReject_tOracleOutput_7 = false;

    java.sql.Connection conn_tOracleOutput_7 = null;

    //optional table
    String dbschema_tOracleOutput_7 = null;
    String tableName_tOracleOutput_7 = null;
        dbschema_tOracleOutput_7 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_7=0;

        if(dbschema_tOracleOutput_7 == null || dbschema_tOracleOutput_7.trim().length() == 0) {
            tableName_tOracleOutput_7 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_7 = dbschema_tOracleOutput_7 + "." + ("TST_CARGUEMASIVO");
        }
                String insert_tOracleOutput_7 = "INSERT INTO " + tableName_tOracleOutput_7 + " (PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,TDOCUMENTOS_ID,TDOCUMENTO,DOCUMENTO,FECHA_NACIMIENTO,LUGAR_EXP_DOC,SEXOS_ID,ESTCIVILES_ID,OCUPACIONES_ID,ETNICAS_ID,TDISCAPACIDADES_ID,DIRECCION,TELEFONO,CORREO_ELECTRONICO,LUGAR_RESIDENCIA,BARRIO,GSANGUINEOS_ID,ESMADSCRITO,OBSERVACIONES,FECHA_CADUCIDAD,PLANAFILIACIONES_ID,ENTAPORTANTES_ID,GRDMILITARES_ID,FUERZAS_ID,UMILITARES_ID,PRINCIPAL,ESTADO,TVINCULACIONES_ID,FECHA_VINCULACION,TREGIMEN_ID,ESTADO_ENTIDAD,ESTADOS_ID,USUARIOS_ID,MOTIVOSESTADO_ID,PROCESOS_ID,MOTIVO,RNOVEDADES_ID,PARENTESCOS_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement(insert_tOracleOutput_7);
                        resourceMap.put("pstmt_tOracleOutput_7", pstmt_tOracleOutput_7);





 



/**
 * [tOracleOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"AptosRegistro");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct> tHash_Lookup_row106 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct>) 
					globalMap.get( "tHash_Lookup_row106" ))
					;					
					
	

row106Struct row106HashKey = new row106Struct();
row106Struct row106Default = new row106Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row108Struct> tHash_Lookup_row108 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row108Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row108Struct>) 
					globalMap.get( "tHash_Lookup_row108" ))
					;					
					
	

row108Struct row108HashKey = new row108Struct();
row108Struct row108Default = new row108Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
	java.util.Date fechaCaducidad;
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
PERSONAS_FAILUREStruct PERSONAS_FAILURE_tmp = new PERSONAS_FAILUREStruct();
PERSONAL_SUCCESSStruct PERSONAL_SUCCESS_tmp = new PERSONAL_SUCCESSStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row119Struct> tHash_Lookup_row119 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row119Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row119Struct>) 
					globalMap.get( "tHash_Lookup_row119" ))
					;					
					
	

row119Struct row119HashKey = new row119Struct();
row119Struct row119Default = new row119Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct> tHash_Lookup_row44 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct>) 
					globalMap.get( "tHash_Lookup_row44" ))
					;					
					
	

row44Struct row44HashKey = new row44Struct();
row44Struct row44Default = new row44Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
					globalMap.get( "tHash_Lookup_row48" ))
					;					
					
	

row48Struct row48HashKey = new row48Struct();
row48Struct row48Default = new row48Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
					globalMap.get( "tHash_Lookup_row50" ))
					;					
					
	

row50Struct row50HashKey = new row50Struct();
row50Struct row50Default = new row50Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
					globalMap.get( "tHash_Lookup_row51" ))
					;					
					
	

row51Struct row51HashKey = new row51Struct();
row51Struct row51Default = new row51Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
					globalMap.get( "tHash_Lookup_row52" ))
					;					
					
	

row52Struct row52HashKey = new row52Struct();
row52Struct row52Default = new row52Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
					globalMap.get( "tHash_Lookup_row54" ))
					;					
					
	

row54Struct row54HashKey = new row54Struct();
row54Struct row54Default = new row54Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) 
					globalMap.get( "tHash_Lookup_row56" ))
					;					
					
	

row56Struct row56HashKey = new row56Struct();
row56Struct row56Default = new row56Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
					globalMap.get( "tHash_Lookup_row43" ))
					;					
					
	

row43Struct row43HashKey = new row43Struct();
row43Struct row43Default = new row43Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct> tHash_Lookup_row83 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct>) 
					globalMap.get( "tHash_Lookup_row83" ))
					;					
					
	

row83Struct row83HashKey = new row83Struct();
row83Struct row83Default = new row83Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct> tHash_Lookup_row104 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct>) 
					globalMap.get( "tHash_Lookup_row104" ))
					;					
					
	

row104Struct row104HashKey = new row104Struct();
row104Struct row104Default = new row104Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
ErroresStruct Errores_tmp = new ErroresStruct();
AptosRegistroStruct AptosRegistro_tmp = new AptosRegistroStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tOracleInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_17", false);
		start_Hash.put("tOracleInput_17", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_17";
	
	
		int tos_count_tOracleInput_17 = 0;
		
	


	
		    int nb_line_tOracleInput_17 = 0;
		    java.sql.Connection conn_tOracleInput_17 = null;
				conn_tOracleInput_17 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_17 = false;
				boolean isConnectionWrapped_tOracleInput_17 = !(conn_tOracleInput_17 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_17.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_17 = null;
                if (isConnectionWrapped_tOracleInput_17) {
					unwrappedOraConn_tOracleInput_17 = conn_tOracleInput_17.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_17 != null) {
                        isTimeZoneNull_tOracleInput_17 = (unwrappedOraConn_tOracleInput_17.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_17 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_17).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_17) {
					java.sql.Statement stmtGetTZ_tOracleInput_17 = conn_tOracleInput_17.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_17 = stmtGetTZ_tOracleInput_17.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_17 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_17.next()) {
						sessionTimezone_tOracleInput_17 = rsGetTZ_tOracleInput_17.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_17 && unwrappedOraConn_tOracleInput_17 != null) {
                        unwrappedOraConn_tOracleInput_17.setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_17).setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_17 = conn_tOracleInput_17.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_17.setFetchSize(1000);


		    String dbquery_tOracleInput_17 = "SELECT TA.PRIMER_NOMBRE,\n       TA.SEGUNDO_NOMBRE,\n       TA.PRIMER_APELLIDO,\n       TA.SEGUNDO_APELLIDO,\n       TA"
+".TIPO_DE_DOCUMENTO AS SIGLA_DOCUMENTO,\n       TA.DOCUMENTO,           \n       TO_CHAR(TO_DATE(TA.FECHA_NACIMIENTO,'YYY"
+"Y/MM/DD'),'DD/MM/YYYY') AS FECHA_NACIMIENTO,   \n       TA.SEXO,\n       TA.DIRECCION,\n       TA.TELEFONO,\n       TO_N"
+"UMBER(TA.MUNICIPIO_RESIDENCIA) AS MUNICIPIO_RESIDENCIA,\n       TA.LOCALIDAD_RESIDENCIA AS BARRIO,\n       TA.GRUPO_SANG"
+"UINEO,\n       DECODE(TA.FACTOR_RH,'PO','+','NE','-') AS FACTOR_RH,\n       TO_NUMBER(TA.MUNICIPIO_EXP_DOCUMENTO) AS MUN"
+"ICIPIO_EXP_DOCUMENTO,\n       TA.CORREO_ELECTRONICO,\n       TA.ESTADO_CIVIL,\n       TA.CATEGORIA,\n       TA.FUERZA_MI"
+"LITAR,\n       TRIM(TA.ESTADO_AFILIACION) AS SIGLA_ESTADO,\n       (SELECT AM.ID FROM AFI_MOTIVOSESTADO AM WHERE AM.SIGL"
+"A = 'RA09' AND AM.ESTREGISTRO_ID = 1) AS MOTIVOSESTADO_ID,       \n       (SELECT AM1.NOMBRE FROM AFI_MOTIVOSESTADO AM1 "
+"WHERE AM1.SIGLA = 'RA09' AND AM1.ESTREGISTRO_ID = 1) AS MOTIVO,       \n       TO_CHAR(TO_DATE(TA.FECHA_FIN_AFILIACION,'"
+"YYYY/MM/DD'),'DD/MM/YYYY') AS FECHA_CADUCIDAD,     \n       TO_CHAR(TO_DATE(TA.FECHA_VINCULACION,'YYYY/MM/DD'),'DD/MM/YY"
+"YY') AS FECHA_VINCULACION,\n       'Afiliado cargado desde el Sistema de Información de Administración de Talento Humano"
+" del Ministerio de Defensa Nacional (SIATH)' AS OBSERVACIONES ,              \n       (SELECT GUS.ID FROM GEN_USUARIOS G"
+"US WHERE GUS.USUARIO = 'AFI_CARGUEMASIVO' AND GUS.ESTREGISTRO_ID = 1) AS USUARIOS_ID,\n       (SELECT ARN.ID FROM AFI_RN"
+"OVEDADES ARN WHERE ARN.CODIGO = 'S21' AND ARN.ESTREGISTRO_ID = 1) AS RNOVEDADES_ID,       \n       TA.CARGADO_SIATH,\n  "
+"     TA.SIGLA_GRDMILITAR AS SIGLA_GRADO,\n       TA.UNIDAD_MILITAR AS SIGLA_UNIDAD,\n       TA.CODIGO_UMILITAR AS CODIGO"
+"_UNIDAD\nFROM TST_ARCHIVO TA\nWHERE TA.CARGADO_SIATH <> 1";
		    

		    globalMap.put("tOracleInput_17_QUERY",dbquery_tOracleInput_17);

		    java.sql.ResultSet rs_tOracleInput_17 = null;

		    try {
		    	rs_tOracleInput_17 = stmt_tOracleInput_17.executeQuery(dbquery_tOracleInput_17);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_17 = rs_tOracleInput_17.getMetaData();
		    	int colQtyInRs_tOracleInput_17 = rsmd_tOracleInput_17.getColumnCount();

		    String tmpContent_tOracleInput_17 = null;
		    
		    
		    while (rs_tOracleInput_17.next()) {
		        nb_line_tOracleInput_17++;
		        
							if(colQtyInRs_tOracleInput_17 < 1) {
								row28.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row28.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 2) {
								row28.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row28.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 3) {
								row28.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row28.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 4) {
								row28.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row28.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 5) {
								row28.SIGLA_DOCUMENTO = null;
							} else {
	                         		
        	row28.SIGLA_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 6) {
								row28.DOCUMENTO = null;
							} else {
	                         		
        	row28.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 7) {
								row28.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row28.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 8) {
								row28.SEXO = null;
							} else {
	                         		
        	row28.SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 9) {
								row28.DIRECCION = null;
							} else {
	                         		
        	row28.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 10) {
								row28.TELEFONO = null;
							} else {
	                         		
        	row28.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 11) {
								row28.MUNICIPIO_RESIDENCIA = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(11) != null) {
						row28.MUNICIPIO_RESIDENCIA = rs_tOracleInput_17.getBigDecimal(11);
					} else {
				
						row28.MUNICIPIO_RESIDENCIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 12) {
								row28.BARRIO = null;
							} else {
	                         		
        	row28.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 13) {
								row28.GRUPO_SANGUINEO = null;
							} else {
	                         		
        	row28.GRUPO_SANGUINEO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 14) {
								row28.FACTOR_RH = null;
							} else {
	                         		
        	row28.FACTOR_RH = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 15) {
								row28.MUNICIPIO_EXP_DOCUMENTO = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(15) != null) {
						row28.MUNICIPIO_EXP_DOCUMENTO = rs_tOracleInput_17.getBigDecimal(15);
					} else {
				
						row28.MUNICIPIO_EXP_DOCUMENTO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 16) {
								row28.CORREO_ELECTRONICO = null;
							} else {
	                         		
        	row28.CORREO_ELECTRONICO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 17) {
								row28.ESTADO_CIVIL = null;
							} else {
	                         		
        	row28.ESTADO_CIVIL = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 18) {
								row28.CATEGORIA = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(18) != null) {
						row28.CATEGORIA = rs_tOracleInput_17.getInt(18);
					} else {
				
						row28.CATEGORIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 19) {
								row28.FUERZA_MILITAR = null;
							} else {
	                         		
        	row28.FUERZA_MILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 20) {
								row28.SIGLA_ESTADO = null;
							} else {
	                         		
        	row28.SIGLA_ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 21) {
								row28.MOTIVOSESTADO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(21) != null) {
						row28.MOTIVOSESTADO_ID = rs_tOracleInput_17.getInt(21);
					} else {
				
						row28.MOTIVOSESTADO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 22) {
								row28.MOTIVO = null;
							} else {
	                         		
        	row28.MOTIVO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 23) {
								row28.FECHA_CADUCIDAD = null;
							} else {
	                         		
        	row28.FECHA_CADUCIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 24) {
								row28.FECHA_VINCULACION = null;
							} else {
	                         		
        	row28.FECHA_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 25) {
								row28.OBSERVACIONES = null;
							} else {
	                         		
        	row28.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 26) {
								row28.USUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(26) != null) {
						row28.USUARIOS_ID = rs_tOracleInput_17.getInt(26);
					} else {
				
						row28.USUARIOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 27) {
								row28.RNOVEDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(27) != null) {
						row28.RNOVEDADES_ID = rs_tOracleInput_17.getInt(27);
					} else {
				
						row28.RNOVEDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 28) {
								row28.CARGADO_SIATH = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(28) != null) {
						row28.CARGADO_SIATH = rs_tOracleInput_17.getInt(28);
					} else {
				
						row28.CARGADO_SIATH = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 29) {
								row28.SIGLA_GRADO = null;
							} else {
	                         		
        	row28.SIGLA_GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 30) {
								row28.SIGLA_UNIDAD = null;
							} else {
	                         		
        	row28.SIGLA_UNIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 31) {
								row28.CODIGO_UNIDAD = null;
							} else {
	                         		
        	row28.CODIGO_UNIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 31, false);
		                    }
					




 



/**
 * [tOracleInput_17 begin ] stop
 */
	
	/**
	 * [tOracleInput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 


	tos_count_tOracleInput_17++;

/**
 * [tOracleInput_17 main ] stop
 */
	
	/**
	 * [tOracleInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row119Struct row119 = null;
					
						row7Struct row7 = null;
					
						row9Struct row9 = null;
					
						row11Struct row11 = null;
					
						row13Struct row13 = null;
					
						row15Struct row15 = null;
					
						row44Struct row44 = null;
					
						row48Struct row48 = null;
					
						row50Struct row50 = null;
					
						row51Struct row51 = null;
					
						row52Struct row52 = null;
					
						row54Struct row54 = null;
					
						row56Struct row56 = null;
					
						row43Struct row43 = null;
					
						row83Struct row83 = null;
					
						row104Struct row104 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row119" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow119 = false;
       		  	    	
       		  	    	
 							row119Struct row119ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row119HashKey.SIGLA_SALUDSIS = row28.SIGLA_DOCUMENTO ;
                        		    		

								
		                        	row119HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row119.lookup( row119HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row119 != null && tHash_Lookup_row119.getCount(row119HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row119' and it contains more one result from keys :  row119.SIGLA_SALUDSIS = '" + row119HashKey.SIGLA_SALUDSIS + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row119Struct fromLookup_row119 = null;
							row119 = row119Default;
										 
							
								 
							
							
								if (tHash_Lookup_row119 !=null && tHash_Lookup_row119.hasNext()) { // G 099
								
							
								
								fromLookup_row119 = tHash_Lookup_row119.next();

							
							
								} // G 099
							
							

							if(fromLookup_row119 != null) {
								row119 = fromLookup_row119;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row7HashKey.CODIGO = row28.MUNICIPIO_EXP_DOCUMENTO ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row7 != null && tHash_Lookup_row7.getCount(row7HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row7' and it contains more one result from keys :  row7.CODIGO = '" + row7HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								 
							
							
								if (tHash_Lookup_row7 !=null && tHash_Lookup_row7.hasNext()) { // G 099
								
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							
							
								} // G 099
							
							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row9HashKey.SIGLA = row28.SEXO ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row9 != null && tHash_Lookup_row9.getCount(row9HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row9' and it contains more one result from keys :  row9.SIGLA = '" + row9HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								 
							
							
								if (tHash_Lookup_row9 !=null && tHash_Lookup_row9.hasNext()) { // G 099
								
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							
							
								} // G 099
							
							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row11HashKey.DESCRIPCION = row28.ESTADO_CIVIL ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.DESCRIPCION = '" + row11HashKey.DESCRIPCION + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row13HashKey.CODIGO = row28.MUNICIPIO_RESIDENCIA ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.CODIGO = '" + row13HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row15HashKey.NOMBRE = StringHandling.TRIM(row28.GRUPO_SANGUINEO) + StringHandling.TRIM(row28.FACTOR_RH) ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row15 != null && tHash_Lookup_row15.getCount(row15HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row15' and it contains more one result from keys :  row15.NOMBRE = '" + row15HashKey.NOMBRE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row44" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow44 = false;
       		  	    	
       		  	    	
 							row44Struct row44ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row44HashKey.SIGLA_FUERZA = row28.FUERZA_MILITAR ;
                        		    		

								
		                        	row44HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row44.lookup( row44HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row44 != null && tHash_Lookup_row44.getCount(row44HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row44' and it contains more one result from keys :  row44.SIGLA_FUERZA = '" + row44HashKey.SIGLA_FUERZA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row44Struct fromLookup_row44 = null;
							row44 = row44Default;
										 
							
								 
							
							
								if (tHash_Lookup_row44 !=null && tHash_Lookup_row44.hasNext()) { // G 099
								
							
								
								fromLookup_row44 = tHash_Lookup_row44.next();

							
							
								} // G 099
							
							

							if(fromLookup_row44 != null) {
								row44 = fromLookup_row44;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row48" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow48 = false;
       		  	    	
       		  	    	
 							row48Struct row48ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
	                        		    	Object exprKeyValue_row48__CATEGORIA = row28.CATEGORIA ;
	                        		    	if(exprKeyValue_row48__CATEGORIA == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_7 = true;
	                        		    	} else {
                        		    			row48HashKey.CATEGORIA = (int)(Integer) exprKeyValue_row48__CATEGORIA;
                        		    		}
                        		    		

								
		                        	row48HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_7) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row48.lookup( row48HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row48 != null && tHash_Lookup_row48.getCount(row48HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row48' and it contains more one result from keys :  row48.CATEGORIA = '" + row48HashKey.CATEGORIA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row48Struct fromLookup_row48 = null;
							row48 = row48Default;
										 
							
								 
							
							
								if (tHash_Lookup_row48 !=null && tHash_Lookup_row48.hasNext()) { // G 099
								
							
								
								fromLookup_row48 = tHash_Lookup_row48.next();

							
							
								} // G 099
							
							

							if(fromLookup_row48 != null) {
								row48 = fromLookup_row48;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row50" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow50 = false;
       		  	    	
       		  	    	
 							row50Struct row50ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row50HashKey.SIGLA = row28.FUERZA_MILITAR ;
                        		    		

								
		                        	row50HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row50.lookup( row50HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row50' and it contains more one result from keys :  row50.SIGLA = '" + row50HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row50Struct fromLookup_row50 = null;
							row50 = row50Default;
										 
							
								 
							
							
								if (tHash_Lookup_row50 !=null && tHash_Lookup_row50.hasNext()) { // G 099
								
							
								
								fromLookup_row50 = tHash_Lookup_row50.next();

							
							
								} // G 099
							
							

							if(fromLookup_row50 != null) {
								row50 = fromLookup_row50;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row51" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow51 = false;
       		  	    	
       		  	    	
 							row51Struct row51ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
	                        		    	Object exprKeyValue_row51__CATEGORIA = row28.CATEGORIA ;
	                        		    	if(exprKeyValue_row51__CATEGORIA == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_7 = true;
	                        		    	} else {
                        		    			row51HashKey.CATEGORIA = (int)(Integer) exprKeyValue_row51__CATEGORIA;
                        		    		}
                        		    		

								
		                        	row51HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_7) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row51.lookup( row51HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row51 != null && tHash_Lookup_row51.getCount(row51HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row51' and it contains more one result from keys :  row51.CATEGORIA = '" + row51HashKey.CATEGORIA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row51Struct fromLookup_row51 = null;
							row51 = row51Default;
										 
							
								 
							
							
								if (tHash_Lookup_row51 !=null && tHash_Lookup_row51.hasNext()) { // G 099
								
							
								
								fromLookup_row51 = tHash_Lookup_row51.next();

							
							
								} // G 099
							
							

							if(fromLookup_row51 != null) {
								row51 = fromLookup_row51;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row52" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow52 = false;
       		  	    	
       		  	    	
 							row52Struct row52ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
	                        		    	Object exprKeyValue_row52__CATEGORIA = row28.CATEGORIA ;
	                        		    	if(exprKeyValue_row52__CATEGORIA == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_7 = true;
	                        		    	} else {
                        		    			row52HashKey.CATEGORIA = (int)(Integer) exprKeyValue_row52__CATEGORIA;
                        		    		}
                        		    		

								
		                        	row52HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_7) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row52.lookup( row52HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row52 != null && tHash_Lookup_row52.getCount(row52HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row52' and it contains more one result from keys :  row52.CATEGORIA = '" + row52HashKey.CATEGORIA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row52Struct fromLookup_row52 = null;
							row52 = row52Default;
										 
							
								 
							
							
								if (tHash_Lookup_row52 !=null && tHash_Lookup_row52.hasNext()) { // G 099
								
							
								
								fromLookup_row52 = tHash_Lookup_row52.next();

							
							
								} // G 099
							
							

							if(fromLookup_row52 != null) {
								row52 = fromLookup_row52;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row54" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow54 = false;
       		  	    	
       		  	    	
 							row54Struct row54ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row54HashKey.SIGLA = "TD000" ;
                        		    		

								
		                        	row54HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row54.lookup( row54HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row54 != null && tHash_Lookup_row54.getCount(row54HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row54' and it contains more one result from keys :  row54.SIGLA = '" + row54HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row54Struct fromLookup_row54 = null;
							row54 = row54Default;
										 
							
								 
							
							
								if (tHash_Lookup_row54 !=null && tHash_Lookup_row54.hasNext()) { // G 099
								
							
								
								fromLookup_row54 = tHash_Lookup_row54.next();

							
							
								} // G 099
							
							

							if(fromLookup_row54 != null) {
								row54 = fromLookup_row54;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row56" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow56 = false;
       		  	    	
       		  	    	
 							row56Struct row56ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row56HashKey.CODIGO = "6";
                        		    		

								
		                        	row56HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row56.lookup( row56HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row56 != null && tHash_Lookup_row56.getCount(row56HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row56' and it contains more one result from keys :  row56.CODIGO = '" + row56HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row56Struct fromLookup_row56 = null;
							row56 = row56Default;
										 
							
								 
							
							
								if (tHash_Lookup_row56 !=null && tHash_Lookup_row56.hasNext()) { // G 099
								
							
								
								fromLookup_row56 = tHash_Lookup_row56.next();

							
							
								} // G 099
							
							

							if(fromLookup_row56 != null) {
								row56 = fromLookup_row56;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
	                        		    	Object exprKeyValue_row43__CATEGORIA = row28.CATEGORIA ;
	                        		    	if(exprKeyValue_row43__CATEGORIA == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_7 = true;
	                        		    	} else {
                        		    			row43HashKey.CATEGORIA = (int)(Integer) exprKeyValue_row43__CATEGORIA;
                        		    		}
                        		    		

								
		                        	row43HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_7) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row43 != null && tHash_Lookup_row43.getCount(row43HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row43' and it contains more one result from keys :  row43.CATEGORIA = '" + row43HashKey.CATEGORIA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								 
							
							
								if (tHash_Lookup_row43 !=null && tHash_Lookup_row43.hasNext()) { // G 099
								
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							
							
								} // G 099
							
							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row83" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow83 = false;
       		  	    	
       		  	    	
 							row83Struct row83ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row83HashKey.CODIGO = 1;
                        		    		

								
		                        	row83HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row83.lookup( row83HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row83 != null && tHash_Lookup_row83.getCount(row83HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row83' and it contains more one result from keys :  row83.CODIGO = '" + row83HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row83Struct fromLookup_row83 = null;
							row83 = row83Default;
										 
							
								 
							
							
								if (tHash_Lookup_row83 !=null && tHash_Lookup_row83.hasNext()) { // G 099
								
							
								
								fromLookup_row83 = tHash_Lookup_row83.next();

							
							
								} // G 099
							
							

							if(fromLookup_row83 != null) {
								row83 = fromLookup_row83;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row104" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow104 = false;
       		  	    	
       		  	    	
 							row104Struct row104ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row104HashKey.CODIGO = row28.CODIGO_UNIDAD ;
                        		    		

								
		                        	row104HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row104.lookup( row104HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row104 != null && tHash_Lookup_row104.getCount(row104HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row104' and it contains more one result from keys :  row104.CODIGO = '" + row104HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row104Struct fromLookup_row104 = null;
							row104 = row104Default;
										 
							
								 
							
							
								if (tHash_Lookup_row104 !=null && tHash_Lookup_row104.hasNext()) { // G 099
								
							
								
								fromLookup_row104 = tHash_Lookup_row104.next();

							
							
								} // G 099
							
							

							if(fromLookup_row104 != null) {
								row104 = fromLookup_row104;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

Errores = null;
AptosRegistro = null;

boolean rejected_tMap_7 = true;

// # Output table : 'Errores'
// # Filter conditions 
if( 

row28.PRIMER_NOMBRE == null||
row28.PRIMER_APELLIDO == null||
row119.ID_SALUDSIS == 0 ||
row28.DOCUMENTO == null||  
row28.CARGADO_SIATH == 2 ||
row28.CARGADO_SIATH == 3 ||
row28.CARGADO_SIATH == 4 ||
row28.CARGADO_SIATH == 5 ||
row28.CARGADO_SIATH == 6 ||
row28.CARGADO_SIATH == 7 ||
row28.CARGADO_SIATH == 8 ||
row51.ID_SALUDSIS == 0 ||
row104.ID == 0 ||
StringHandling.TRIM(StringHandling.UPCASE(row28.SIGLA_ESTADO)).equals("NO")

 ) {
rejected_tMap_7 = false;
Errores_tmp.PRIMER_NOMBRE = row28.PRIMER_NOMBRE ;
Errores_tmp.PRIMER_APELLIDO = row28.PRIMER_APELLIDO ;
Errores_tmp.TDOCUMENTOS_ID = row119.ID_SALUDSIS ;
Errores_tmp.DOCUMENTO = row28.DOCUMENTO ;
Errores_tmp.ERROR = row28.CARGADO_SIATH ;
Errores_tmp.TVINCULACIONES_ID = row51.ID_SALUDSIS ;
Errores_tmp.SIGLA_ESTADO = row28.SIGLA_ESTADO ;
Errores_tmp.UMILITARES_ID = row104.ID ;
Errores = Errores_tmp;
} // closing filter/reject
// ###### START REJECTS ##### 

// # Output reject table : 'AptosRegistro'
// # Filter conditions 
if( rejected_tMap_7 ) {
AptosRegistro_tmp.PRIMER_NOMBRE = row28.PRIMER_NOMBRE ;
AptosRegistro_tmp.SEGUNDO_NOMBRE = row28.SEGUNDO_NOMBRE ;
AptosRegistro_tmp.PRIMER_APELLIDO = row28.PRIMER_APELLIDO ;
AptosRegistro_tmp.SEGUNDO_APELLIDO = row28.SEGUNDO_APELLIDO ;
AptosRegistro_tmp.TDOCUMENTOS_ID = row119.ID_SALUDSIS ;
AptosRegistro_tmp.TDOCUMENTO = row28.SIGLA_DOCUMENTO ;
AptosRegistro_tmp.DOCUMENTO = row28.DOCUMENTO ;
AptosRegistro_tmp.FECHA_NACIMIENTO = row28.FECHA_NACIMIENTO != null? (TalendDate.parseDate ("dd/MM/yyyy",row28.FECHA_NACIMIENTO)): null ;
AptosRegistro_tmp.LUGAR_EXP_DOC = row7.ID ;
AptosRegistro_tmp.SEXOS_ID = row9.ID_SALUDSIS ;
AptosRegistro_tmp.ESTCIVILES_ID = row11.ID_SALUDSIS;
AptosRegistro_tmp.OCUPACIONES_ID = row52.ID_SALUDSIS ;
AptosRegistro_tmp.ETNICAS_ID = row56.ID ;
AptosRegistro_tmp.TDISCAPACIDADES_ID = row54.ID ;
AptosRegistro_tmp.DIRECCION = row28.DIRECCION ;
AptosRegistro_tmp.TELEFONO = row28.TELEFONO ;
AptosRegistro_tmp.CORREO_ELECTRONICO = ValidarEmail.emailValido(row28.CORREO_ELECTRONICO) ;
AptosRegistro_tmp.LUGAR_RESIDENCIA = row13.ID ;
AptosRegistro_tmp.BARRIO = row28.BARRIO ;
AptosRegistro_tmp.GSANGUINEOS_ID = row15.ID ;
AptosRegistro_tmp.ESMADSCRITO = null;
AptosRegistro_tmp.OBSERVACIONES = row28.OBSERVACIONES ;
AptosRegistro_tmp.FECHA_CADUCIDAD = row28.FECHA_CADUCIDAD != null? (TalendDate.parseDate ("dd/MM/yyyy",row28.FECHA_CADUCIDAD)): null ;
AptosRegistro_tmp.PLANAFILIACIONES_ID = row48.ID_SALUDSIS ;
AptosRegistro_tmp.ENTAPORTANTES_ID = row44.ENTAPORTANTE_ID ;
AptosRegistro_tmp.GRDMILITARES_ID = null;
AptosRegistro_tmp.FUERZAS_ID = row50.ID ;
AptosRegistro_tmp.UMILITARES_ID = row104.ID ;
AptosRegistro_tmp.PRINCIPAL = 1;
AptosRegistro_tmp.ESTADO = null;
AptosRegistro_tmp.TVINCULACIONES_ID = row51.ID_SALUDSIS ;
AptosRegistro_tmp.FECHA_VINCULACION = /*TalendDate.parseDate ("dd/MM/yyyy", TalendDate.formatDate ("dd/MM/yyyy", TalendDate.parseDate ("M/d/yyyy h:mm:ss a", row28.FECHA_VINCULACION))) */

row28.FECHA_VINCULACION != null? (TalendDate.parseDate ("dd/MM/yyyy",row28.FECHA_VINCULACION)): null ;
AptosRegistro_tmp.TREGIMEN_ID = row43.TREGIMEN_ID ;
AptosRegistro_tmp.ESTADO_ENTIDAD = "Activo";
AptosRegistro_tmp.ESTADOS_ID = null;
AptosRegistro_tmp.USUARIOS_ID = row28.USUARIOS_ID ;
AptosRegistro_tmp.MOTIVOSESTADO_ID = row28.MOTIVOSESTADO_ID ;
AptosRegistro_tmp.PROCESOS_ID = context.vprocesos_id;
AptosRegistro_tmp.MOTIVO = row28.MOTIVO ;
AptosRegistro_tmp.RNOVEDADES_ID = row28.RNOVEDADES_ID ;
AptosRegistro_tmp.PARENTESCOS_ID = row83.ID ;
AptosRegistro_tmp.SIGLA_GRADO = row28.SIGLA_GRADO ;
AptosRegistro = AptosRegistro_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "Errores"
if(Errores != null) { 



	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Errores"
						
						);
					}
					

    //Code generate according to input schema and output schema
row47.TDOCUMENTOS_ID = Errores.TDOCUMENTOS_ID;
row47.DOCUMENTO = Errores.DOCUMENTO;

//Validaciones de los errores encontrados.
context.mensaje = null;


if(Errores.SIGLA_ESTADO.equals("NO")){
context.mensaje = "La persona se encuentra inactiva.";
}
else{
if (Errores.PRIMER_NOMBRE == null){ context.mensaje = "El campo primer nombre es obligatorio para identificar la persona";}   
  

if (Errores.PRIMER_APELLIDO == null){
   if (context.mensaje.equals("")){
   context.mensaje = "El campo primer apellido es obligatorio para identificar la persona";}
   else {
   context.mensaje = context.mensaje +" - El campo primer apellido es obligatorio para identificar la persona";
   }
   }    
     
if (Errores.DOCUMENTO == null){
   if (context.mensaje == null){
   context.mensaje = "El campo documento es obligatorio para identificar la persona";}
   else {
   context.mensaje = context.mensaje +" - El campo documento es obligatorio para identificar la persona";
   }
   }    

if (Errores.TDOCUMENTOS_ID == 0){
   if (context.mensaje == null){
   context.mensaje = "Tipo de documento no encontrado";}
   else {
   context.mensaje = context.mensaje +" - Tipo de documento no encontrado";
   }
   }
   
   
   if (Errores.UMILITARES_ID == 0){
   if (context.mensaje == null){
   context.mensaje = "La unidad militar no se encuentra configurada en el sistema";}
   else {
   context.mensaje = context.mensaje +" - La unidad militar no se encuentra configurada en el sistema";
   }
   }
   
   
if (Errores.ERROR == 2 || Errores.ERROR == 5 || Errores.ERROR == 6 || Errores.ERROR == 8){
   if (context.mensaje == null){
   context.mensaje = "El campo fecha de nacimiento se encuentra vacio ó la fecha no es valida";}
   else {
   context.mensaje = context.mensaje +" - El campo fecha de nacimiento se encuentra vacio ó la fecha no es valida";
   }
   }
   
   if (Errores.ERROR == 3 || Errores.ERROR == 6 || Errores.ERROR == 7 || Errores.ERROR == 8){
   if (context.mensaje == null){
   context.mensaje = "El campo fecha de vinculación se encuentra vacio ó la fecha no es valida";}
   else {
   context.mensaje = context.mensaje +" - El campo fecha de vinculación se encuentra vacio ó la fecha no es valida";
   }
   }  
     
if (Errores.ERROR == 4 || Errores.ERROR == 5 || Errores.ERROR == 7 || Errores.ERROR == 8){
   if (context.mensaje == null){
   context.mensaje = "El campo fecha de caducidad no es valido";}
   else {
   context.mensaje = context.mensaje +" - El campo fecha de caducidad no es valido";
   }
   } 
   
   if (Errores.TVINCULACIONES_ID == 0 ){
   if (context.mensaje == null){
   context.mensaje = "No se encontro un tipo de vinculación configurado para la categoria del grado militar del afiliado";}
   else {
   context.mensaje = context.mensaje +" - No se encontro un tipo de vinculación configurado para la categoria del grado militar del afiliado";
   }
   } 
}
   
row47.MENSAJE = context.mensaje;

    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					



        whetherReject_tOracleOutput_6 = false;
                        if(row47.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_6.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_6.setInt(1, row47.TDOCUMENTOS_ID);
}

                        if(row47.DOCUMENTO == null) {
pstmt_tOracleOutput_6.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(2, row47.DOCUMENTO);
}

                        if(row47.MENSAJE == null) {
pstmt_tOracleOutput_6.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_6.setString(3, row47.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_6++;
                    int processedCount_tOracleOutput_6 = pstmt_tOracleOutput_6.executeUpdate();
                    insertedCount_tOracleOutput_6 += processedCount_tOracleOutput_6;
                    rowsToCommitCount_tOracleOutput_6 += processedCount_tOracleOutput_6;
                } catch(java.lang.Exception e_tOracleOutput_6) {
globalMap.put("tOracleOutput_6_ERROR_MESSAGE",e_tOracleOutput_6.getMessage());
                    whetherReject_tOracleOutput_6 = true;
                            System.err.print(e_tOracleOutput_6.getMessage());
                }

 


	tos_count_tOracleOutput_6++;

/**
 * [tOracleOutput_6 main ] stop
 */
	
	/**
	 * [tOracleOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	

 



/**
 * [tOracleOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	

 



/**
 * [tOracleOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */

} // End of branch "Errores"




// Start of branch "AptosRegistro"
if(AptosRegistro != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"AptosRegistro"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						row106Struct row106 = null;
					
						row108Struct row108 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row106" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow106 = false;
       		  	    	
       		  	    	
 							row106Struct row106ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row106HashKey.SIGLA = AptosRegistro.SIGLA_GRADO ;
                        		    		

								
		                        	row106HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row106.lookup( row106HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row106 != null && tHash_Lookup_row106.getCount(row106HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row106' and it contains more one result from keys :  row106.SIGLA = '" + row106HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row106Struct fromLookup_row106 = null;
							row106 = row106Default;
										 
							
								 
							
							
								if (tHash_Lookup_row106 !=null && tHash_Lookup_row106.hasNext()) { // G 099
								
							
								
								fromLookup_row106 = tHash_Lookup_row106.next();

							
							
								} // G 099
							
							

							if(fromLookup_row106 != null) {
								row106 = fromLookup_row106;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row108" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow108 = false;
       		  	    	
       		  	    	
 							row108Struct row108ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
	                        		    	Object exprKeyValue_row108__UMILITARES_ID = AptosRegistro.UMILITARES_ID ;
	                        		    	if(exprKeyValue_row108__UMILITARES_ID == null) {
	                        		    		hasCasePrimitiveKeyWithNull_tMap_8 = true;
	                        		    	} else {
                        		    			row108HashKey.UMILITARES_ID = (int)(Integer) exprKeyValue_row108__UMILITARES_ID;
                        		    		}
                        		    		

								
		                        	row108HashKey.hashCodeDirty = true;
                        		
	  					
	  							
	
		  							if(!hasCasePrimitiveKeyWithNull_tMap_8) { // G_TM_M_091
		  							
			  					
			  					
			  					
	  					
		  							tHash_Lookup_row108.lookup( row108HashKey );

	  							

	  							

			  						} // G_TM_M_091
			  						
			  					

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row108 != null && tHash_Lookup_row108.getCount(row108HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row108' and it contains more one result from keys :  row108.UMILITARES_ID = '" + row108HashKey.UMILITARES_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row108Struct fromLookup_row108 = null;
							row108 = row108Default;
										 
							
								 
							
							
								if (tHash_Lookup_row108 !=null && tHash_Lookup_row108.hasNext()) { // G 099
								
							
								
								fromLookup_row108 = tHash_Lookup_row108.next();

							
							
								} // G 099
							
							

							if(fromLookup_row108 != null) {
								row108 = fromLookup_row108;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;
Var.fechaCaducidad = (AptosRegistro.FECHA_VINCULACION != null && row106.VIGENCIA != null)?TalendDate.addDate(AptosRegistro.FECHA_VINCULACION, row106.VIGENCIA, "MM"):null ;// ###############################
        // ###############################
        // # Output tables

PERSONAS_FAILURE = null;
PERSONAL_SUCCESS = null;

boolean rejected_tMap_8 = true;

// # Output table : 'PERSONAS_FAILURE'
// # Filter conditions 
if( 

row108.ESM == 0 ||
row106.ID == 0

 ) {
rejected_tMap_8 = false;
PERSONAS_FAILURE_tmp.TDOCUMENTOS_ID = AptosRegistro.TDOCUMENTOS_ID ;
PERSONAS_FAILURE_tmp.DOCUMENTO = AptosRegistro.DOCUMENTO ;
PERSONAS_FAILURE_tmp.GRDMILITARES_ID = row106.ID ;
PERSONAS_FAILURE_tmp.ESM = row108.ESM ;
PERSONAS_FAILURE = PERSONAS_FAILURE_tmp;
} // closing filter/reject
// ###### START REJECTS ##### 

// # Output reject table : 'PERSONAL_SUCCESS'
// # Filter conditions 
if( rejected_tMap_8 ) {
PERSONAL_SUCCESS_tmp.PRIMER_NOMBRE = AptosRegistro.PRIMER_NOMBRE;
PERSONAL_SUCCESS_tmp.SEGUNDO_NOMBRE = AptosRegistro.SEGUNDO_NOMBRE;
PERSONAL_SUCCESS_tmp.PRIMER_APELLIDO = AptosRegistro.PRIMER_APELLIDO;
PERSONAL_SUCCESS_tmp.SEGUNDO_APELLIDO = AptosRegistro.SEGUNDO_APELLIDO;
PERSONAL_SUCCESS_tmp.TDOCUMENTOS_ID = AptosRegistro.TDOCUMENTOS_ID;
PERSONAL_SUCCESS_tmp.TDOCUMENTO = AptosRegistro.TDOCUMENTO;
PERSONAL_SUCCESS_tmp.DOCUMENTO = AptosRegistro.DOCUMENTO;
PERSONAL_SUCCESS_tmp.FECHA_NACIMIENTO = AptosRegistro.FECHA_NACIMIENTO;
PERSONAL_SUCCESS_tmp.LUGAR_EXP_DOC = AptosRegistro.LUGAR_EXP_DOC;
PERSONAL_SUCCESS_tmp.SEXOS_ID = AptosRegistro.SEXOS_ID;
PERSONAL_SUCCESS_tmp.ESTCIVILES_ID = AptosRegistro.ESTCIVILES_ID;
PERSONAL_SUCCESS_tmp.OCUPACIONES_ID = AptosRegistro.OCUPACIONES_ID;
PERSONAL_SUCCESS_tmp.ETNICAS_ID = AptosRegistro.ETNICAS_ID;
PERSONAL_SUCCESS_tmp.TDISCAPACIDADES_ID = AptosRegistro.TDISCAPACIDADES_ID;
PERSONAL_SUCCESS_tmp.DIRECCION = AptosRegistro.DIRECCION;
PERSONAL_SUCCESS_tmp.TELEFONO = AptosRegistro.TELEFONO;
PERSONAL_SUCCESS_tmp.CORREO_ELECTRONICO = AptosRegistro.CORREO_ELECTRONICO;
PERSONAL_SUCCESS_tmp.LUGAR_RESIDENCIA = AptosRegistro.LUGAR_RESIDENCIA;
PERSONAL_SUCCESS_tmp.BARRIO = AptosRegistro.BARRIO;
PERSONAL_SUCCESS_tmp.GSANGUINEOS_ID = AptosRegistro.GSANGUINEOS_ID;
PERSONAL_SUCCESS_tmp.ESMADSCRITO = row108.ESM ;
PERSONAL_SUCCESS_tmp.OBSERVACIONES = AptosRegistro.OBSERVACIONES;
PERSONAL_SUCCESS_tmp.FECHA_CADUCIDAD = Var.fechaCaducidad ;
PERSONAL_SUCCESS_tmp.PLANAFILIACIONES_ID = AptosRegistro.PLANAFILIACIONES_ID;
PERSONAL_SUCCESS_tmp.ENTAPORTANTES_ID = AptosRegistro.ENTAPORTANTES_ID;
PERSONAL_SUCCESS_tmp.GRDMILITARES_ID = row106.ID ;
PERSONAL_SUCCESS_tmp.FUERZAS_ID = AptosRegistro.FUERZAS_ID;
PERSONAL_SUCCESS_tmp.UMILITARES_ID = AptosRegistro.UMILITARES_ID;
PERSONAL_SUCCESS_tmp.PRINCIPAL = AptosRegistro.PRINCIPAL;
PERSONAL_SUCCESS_tmp.ESTADO = AptosRegistro.ESTADO;
PERSONAL_SUCCESS_tmp.TVINCULACIONES_ID = AptosRegistro.TVINCULACIONES_ID;
PERSONAL_SUCCESS_tmp.FECHA_VINCULACION = AptosRegistro.FECHA_VINCULACION;
PERSONAL_SUCCESS_tmp.TREGIMEN_ID = AptosRegistro.TREGIMEN_ID;
PERSONAL_SUCCESS_tmp.ESTADO_ENTIDAD = AptosRegistro.ESTADO_ENTIDAD;
PERSONAL_SUCCESS_tmp.ESTADOS_ID = AptosRegistro.ESTADOS_ID;
PERSONAL_SUCCESS_tmp.USUARIOS_ID = AptosRegistro.USUARIOS_ID;
PERSONAL_SUCCESS_tmp.MOTIVOSESTADO_ID = AptosRegistro.MOTIVOSESTADO_ID;
PERSONAL_SUCCESS_tmp.PROCESOS_ID = AptosRegistro.PROCESOS_ID;
PERSONAL_SUCCESS_tmp.MOTIVO = AptosRegistro.MOTIVO;
PERSONAL_SUCCESS_tmp.RNOVEDADES_ID = AptosRegistro.RNOVEDADES_ID;
PERSONAL_SUCCESS_tmp.PARENTESCOS_ID = AptosRegistro.PARENTESCOS_ID;
PERSONAL_SUCCESS = PERSONAL_SUCCESS_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "PERSONAS_FAILURE"
if(PERSONAS_FAILURE != null) { 



	
	/**
	 * [tJavaRow_30 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PERSONAS_FAILURE"
						
						);
					}
					

    //Code generate according to input schema and output schema
row109.TDOCUMENTOS_ID = PERSONAS_FAILURE.TDOCUMENTOS_ID;
row109.DOCUMENTO = PERSONAS_FAILURE.DOCUMENTO;

//Validaciones de los errores encontrados.
context.mensaje = null;

   
   if (PERSONAS_FAILURE.GRDMILITARES_ID == 0){
   if (context.mensaje == null){
   context.mensaje = "El grado militar no se encuentra configurado en el sistema";}
   else {
   context.mensaje = context.mensaje +" - El grado militar no se encuentra configurado en el sistema";
   }
   }
      
   
   if (PERSONAS_FAILURE.ESM == 0){
   if (context.mensaje == null){
   context.mensaje = "El ESM no se encuentra configurado en el sistema para la unidad militar";}
   else {
   context.mensaje = context.mensaje +" - El ESM no se encuentra configurado en el sistema para la unidad militar";
   }
   }

   
row109.MENSAJE = context.mensaje;

    nb_line_tJavaRow_30++;   

 


	tos_count_tJavaRow_30++;

/**
 * [tJavaRow_30 main ] stop
 */
	
	/**
	 * [tJavaRow_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_30";
	
	

 



/**
 * [tJavaRow_30 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_40 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_40";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row109"
						
						);
					}
					



        whetherReject_tOracleOutput_40 = false;
                        if(row109.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_40.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_40.setInt(1, row109.TDOCUMENTOS_ID);
}

                        if(row109.DOCUMENTO == null) {
pstmt_tOracleOutput_40.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_40.setString(2, row109.DOCUMENTO);
}

                        if(row109.MENSAJE == null) {
pstmt_tOracleOutput_40.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_40.setString(3, row109.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_40++;
                    int processedCount_tOracleOutput_40 = pstmt_tOracleOutput_40.executeUpdate();
                    insertedCount_tOracleOutput_40 += processedCount_tOracleOutput_40;
                    rowsToCommitCount_tOracleOutput_40 += processedCount_tOracleOutput_40;
                } catch(java.lang.Exception e_tOracleOutput_40) {
globalMap.put("tOracleOutput_40_ERROR_MESSAGE",e_tOracleOutput_40.getMessage());
                    whetherReject_tOracleOutput_40 = true;
                            System.err.print(e_tOracleOutput_40.getMessage());
                }

 


	tos_count_tOracleOutput_40++;

/**
 * [tOracleOutput_40 main ] stop
 */
	
	/**
	 * [tOracleOutput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_40";
	
	

 



/**
 * [tOracleOutput_40 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_40";
	
	

 



/**
 * [tOracleOutput_40 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_30";
	
	

 



/**
 * [tJavaRow_30 process_data_end ] stop
 */

} // End of branch "PERSONAS_FAILURE"




// Start of branch "PERSONAL_SUCCESS"
if(PERSONAL_SUCCESS != null) { 



	
	/**
	 * [tOracleOutput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PERSONAL_SUCCESS"
						
						);
					}
					



        whetherReject_tOracleOutput_7 = false;
                        if(PERSONAL_SUCCESS.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(1, PERSONAL_SUCCESS.PRIMER_NOMBRE);
}

                        if(PERSONAL_SUCCESS.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_7.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(2, PERSONAL_SUCCESS.SEGUNDO_NOMBRE);
}

                        if(PERSONAL_SUCCESS.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_7.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(3, PERSONAL_SUCCESS.PRIMER_APELLIDO);
}

                        if(PERSONAL_SUCCESS.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_7.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(4, PERSONAL_SUCCESS.SEGUNDO_APELLIDO);
}

                        if(PERSONAL_SUCCESS.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_7.setNull(5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(5, PERSONAL_SUCCESS.TDOCUMENTOS_ID);
}

                        if(PERSONAL_SUCCESS.TDOCUMENTO == null) {
pstmt_tOracleOutput_7.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(6, PERSONAL_SUCCESS.TDOCUMENTO);
}

                        if(PERSONAL_SUCCESS.DOCUMENTO == null) {
pstmt_tOracleOutput_7.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(7, PERSONAL_SUCCESS.DOCUMENTO);
}

                        if(PERSONAL_SUCCESS.FECHA_NACIMIENTO != null) {
pstmt_tOracleOutput_7.setObject(8, new java.sql.Timestamp(PERSONAL_SUCCESS.FECHA_NACIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_7.setNull(8, java.sql.Types.DATE);
}

                        if(PERSONAL_SUCCESS.LUGAR_EXP_DOC == null) {
pstmt_tOracleOutput_7.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(9, PERSONAL_SUCCESS.LUGAR_EXP_DOC);
}

                        if(PERSONAL_SUCCESS.SEXOS_ID == null) {
pstmt_tOracleOutput_7.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(10, PERSONAL_SUCCESS.SEXOS_ID);
}

                        if(PERSONAL_SUCCESS.ESTCIVILES_ID == null) {
pstmt_tOracleOutput_7.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(11, PERSONAL_SUCCESS.ESTCIVILES_ID);
}

                        if(PERSONAL_SUCCESS.OCUPACIONES_ID == null) {
pstmt_tOracleOutput_7.setNull(12, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(12, PERSONAL_SUCCESS.OCUPACIONES_ID);
}

                        if(PERSONAL_SUCCESS.ETNICAS_ID == null) {
pstmt_tOracleOutput_7.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(13, PERSONAL_SUCCESS.ETNICAS_ID);
}

                        if(PERSONAL_SUCCESS.TDISCAPACIDADES_ID == null) {
pstmt_tOracleOutput_7.setNull(14, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(14, PERSONAL_SUCCESS.TDISCAPACIDADES_ID);
}

                        if(PERSONAL_SUCCESS.DIRECCION == null) {
pstmt_tOracleOutput_7.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(15, PERSONAL_SUCCESS.DIRECCION);
}

                        if(PERSONAL_SUCCESS.TELEFONO == null) {
pstmt_tOracleOutput_7.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(16, PERSONAL_SUCCESS.TELEFONO);
}

                        if(PERSONAL_SUCCESS.CORREO_ELECTRONICO == null) {
pstmt_tOracleOutput_7.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(17, PERSONAL_SUCCESS.CORREO_ELECTRONICO);
}

                        if(PERSONAL_SUCCESS.LUGAR_RESIDENCIA == null) {
pstmt_tOracleOutput_7.setNull(18, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(18, PERSONAL_SUCCESS.LUGAR_RESIDENCIA);
}

                        if(PERSONAL_SUCCESS.BARRIO == null) {
pstmt_tOracleOutput_7.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(19, PERSONAL_SUCCESS.BARRIO);
}

                        if(PERSONAL_SUCCESS.GSANGUINEOS_ID == null) {
pstmt_tOracleOutput_7.setNull(20, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(20, PERSONAL_SUCCESS.GSANGUINEOS_ID);
}

                        if(PERSONAL_SUCCESS.ESMADSCRITO == null) {
pstmt_tOracleOutput_7.setNull(21, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(21, PERSONAL_SUCCESS.ESMADSCRITO);
}

                        if(PERSONAL_SUCCESS.OBSERVACIONES == null) {
pstmt_tOracleOutput_7.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(22, PERSONAL_SUCCESS.OBSERVACIONES);
}

                        if(PERSONAL_SUCCESS.FECHA_CADUCIDAD != null) {
pstmt_tOracleOutput_7.setObject(23, new java.sql.Timestamp(PERSONAL_SUCCESS.FECHA_CADUCIDAD.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_7.setNull(23, java.sql.Types.DATE);
}

                        if(PERSONAL_SUCCESS.PLANAFILIACIONES_ID == null) {
pstmt_tOracleOutput_7.setNull(24, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(24, PERSONAL_SUCCESS.PLANAFILIACIONES_ID);
}

                        if(PERSONAL_SUCCESS.ENTAPORTANTES_ID == null) {
pstmt_tOracleOutput_7.setNull(25, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(25, PERSONAL_SUCCESS.ENTAPORTANTES_ID);
}

                        if(PERSONAL_SUCCESS.GRDMILITARES_ID == null) {
pstmt_tOracleOutput_7.setNull(26, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(26, PERSONAL_SUCCESS.GRDMILITARES_ID);
}

                        if(PERSONAL_SUCCESS.FUERZAS_ID == null) {
pstmt_tOracleOutput_7.setNull(27, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(27, PERSONAL_SUCCESS.FUERZAS_ID);
}

                        if(PERSONAL_SUCCESS.UMILITARES_ID == null) {
pstmt_tOracleOutput_7.setNull(28, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(28, PERSONAL_SUCCESS.UMILITARES_ID);
}

                        if(PERSONAL_SUCCESS.PRINCIPAL == null) {
pstmt_tOracleOutput_7.setNull(29, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(29, PERSONAL_SUCCESS.PRINCIPAL);
}

                        if(PERSONAL_SUCCESS.ESTADO == null) {
pstmt_tOracleOutput_7.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(30, PERSONAL_SUCCESS.ESTADO);
}

                        if(PERSONAL_SUCCESS.TVINCULACIONES_ID == null) {
pstmt_tOracleOutput_7.setNull(31, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(31, PERSONAL_SUCCESS.TVINCULACIONES_ID);
}

                        if(PERSONAL_SUCCESS.FECHA_VINCULACION != null) {
pstmt_tOracleOutput_7.setObject(32, new java.sql.Timestamp(PERSONAL_SUCCESS.FECHA_VINCULACION.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_7.setNull(32, java.sql.Types.DATE);
}

                        if(PERSONAL_SUCCESS.TREGIMEN_ID == null) {
pstmt_tOracleOutput_7.setNull(33, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(33, PERSONAL_SUCCESS.TREGIMEN_ID);
}

                        if(PERSONAL_SUCCESS.ESTADO_ENTIDAD == null) {
pstmt_tOracleOutput_7.setNull(34, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(34, PERSONAL_SUCCESS.ESTADO_ENTIDAD);
}

                        if(PERSONAL_SUCCESS.ESTADOS_ID == null) {
pstmt_tOracleOutput_7.setNull(35, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(35, PERSONAL_SUCCESS.ESTADOS_ID);
}

                        if(PERSONAL_SUCCESS.USUARIOS_ID == null) {
pstmt_tOracleOutput_7.setNull(36, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(36, PERSONAL_SUCCESS.USUARIOS_ID);
}

                        if(PERSONAL_SUCCESS.MOTIVOSESTADO_ID == null) {
pstmt_tOracleOutput_7.setNull(37, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(37, PERSONAL_SUCCESS.MOTIVOSESTADO_ID);
}

                        if(PERSONAL_SUCCESS.PROCESOS_ID == null) {
pstmt_tOracleOutput_7.setNull(38, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(38, PERSONAL_SUCCESS.PROCESOS_ID);
}

                        if(PERSONAL_SUCCESS.MOTIVO == null) {
pstmt_tOracleOutput_7.setNull(39, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(39, PERSONAL_SUCCESS.MOTIVO);
}

                        if(PERSONAL_SUCCESS.RNOVEDADES_ID == null) {
pstmt_tOracleOutput_7.setNull(40, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(40, PERSONAL_SUCCESS.RNOVEDADES_ID);
}

                        if(PERSONAL_SUCCESS.PARENTESCOS_ID == null) {
pstmt_tOracleOutput_7.setNull(41, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setInt(41, PERSONAL_SUCCESS.PARENTESCOS_ID);
}

                try {
                    nb_line_tOracleOutput_7++;
                    int processedCount_tOracleOutput_7 = pstmt_tOracleOutput_7.executeUpdate();
                    insertedCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    rowsToCommitCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                } catch(java.lang.Exception e_tOracleOutput_7) {
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
                    whetherReject_tOracleOutput_7 = true;
                            System.err.print(e_tOracleOutput_7.getMessage());
                }

 


	tos_count_tOracleOutput_7++;

/**
 * [tOracleOutput_7 main ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_end ] stop
 */

} // End of branch "PERSONAL_SUCCESS"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "AptosRegistro"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

}
}finally{
	if (rs_tOracleInput_17 != null) {
		rs_tOracleInput_17.close();
	}
	if (stmt_tOracleInput_17 != null) {
		stmt_tOracleInput_17.close();
	}
}

globalMap.put("tOracleInput_17_NB_LINE",nb_line_tOracleInput_17);
 

ok_Hash.put("tOracleInput_17", true);
end_Hash.put("tOracleInput_17", System.currentTimeMillis());




/**
 * [tOracleInput_17 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row119 != null) {
						tHash_Lookup_row119.endGet();
					}
					globalMap.remove( "tHash_Lookup_row119" );

					
					
				
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
					if(tHash_Lookup_row44 != null) {
						tHash_Lookup_row44.endGet();
					}
					globalMap.remove( "tHash_Lookup_row44" );

					
					
				
					if(tHash_Lookup_row48 != null) {
						tHash_Lookup_row48.endGet();
					}
					globalMap.remove( "tHash_Lookup_row48" );

					
					
				
					if(tHash_Lookup_row50 != null) {
						tHash_Lookup_row50.endGet();
					}
					globalMap.remove( "tHash_Lookup_row50" );

					
					
				
					if(tHash_Lookup_row51 != null) {
						tHash_Lookup_row51.endGet();
					}
					globalMap.remove( "tHash_Lookup_row51" );

					
					
				
					if(tHash_Lookup_row52 != null) {
						tHash_Lookup_row52.endGet();
					}
					globalMap.remove( "tHash_Lookup_row52" );

					
					
				
					if(tHash_Lookup_row54 != null) {
						tHash_Lookup_row54.endGet();
					}
					globalMap.remove( "tHash_Lookup_row54" );

					
					
				
					if(tHash_Lookup_row56 != null) {
						tHash_Lookup_row56.endGet();
					}
					globalMap.remove( "tHash_Lookup_row56" );

					
					
				
					if(tHash_Lookup_row43 != null) {
						tHash_Lookup_row43.endGet();
					}
					globalMap.remove( "tHash_Lookup_row43" );

					
					
				
					if(tHash_Lookup_row83 != null) {
						tHash_Lookup_row83.endGet();
					}
					globalMap.remove( "tHash_Lookup_row83" );

					
					
				
					if(tHash_Lookup_row104 != null) {
						tHash_Lookup_row104.endGet();
					}
					globalMap.remove( "tHash_Lookup_row104" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Errores");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tOracleOutput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	
	



	
        if(pstmt_tOracleOutput_6 != null) {
			
				pstmt_tOracleOutput_6.close();
				resourceMap.remove("pstmt_tOracleOutput_6");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_6", true);

	
	nb_line_deleted_tOracleOutput_6=nb_line_deleted_tOracleOutput_6+ deletedCount_tOracleOutput_6;
	nb_line_update_tOracleOutput_6=nb_line_update_tOracleOutput_6 + updatedCount_tOracleOutput_6;
	nb_line_inserted_tOracleOutput_6=nb_line_inserted_tOracleOutput_6 + insertedCount_tOracleOutput_6;
	nb_line_rejected_tOracleOutput_6=nb_line_rejected_tOracleOutput_6 + rejectedCount_tOracleOutput_6;
	
        globalMap.put("tOracleOutput_6_NB_LINE",nb_line_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_UPDATED",nb_line_update_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_6);
        globalMap.put("tOracleOutput_6_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_6);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_6", true);
end_Hash.put("tOracleOutput_6", System.currentTimeMillis());




/**
 * [tOracleOutput_6 end ] stop
 */







	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row106 != null) {
						tHash_Lookup_row106.endGet();
					}
					globalMap.remove( "tHash_Lookup_row106" );

					
					
				
					if(tHash_Lookup_row108 != null) {
						tHash_Lookup_row108.endGet();
					}
					globalMap.remove( "tHash_Lookup_row108" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"AptosRegistro");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tJavaRow_30 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_30";
	
	

globalMap.put("tJavaRow_30_NB_LINE",nb_line_tJavaRow_30);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PERSONAS_FAILURE");
			  	}
			  	
 

ok_Hash.put("tJavaRow_30", true);
end_Hash.put("tJavaRow_30", System.currentTimeMillis());




/**
 * [tJavaRow_30 end ] stop
 */

	
	/**
	 * [tOracleOutput_40 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_40";
	
	
	



	
        if(pstmt_tOracleOutput_40 != null) {
			
				pstmt_tOracleOutput_40.close();
				resourceMap.remove("pstmt_tOracleOutput_40");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_40", true);

	
	nb_line_deleted_tOracleOutput_40=nb_line_deleted_tOracleOutput_40+ deletedCount_tOracleOutput_40;
	nb_line_update_tOracleOutput_40=nb_line_update_tOracleOutput_40 + updatedCount_tOracleOutput_40;
	nb_line_inserted_tOracleOutput_40=nb_line_inserted_tOracleOutput_40 + insertedCount_tOracleOutput_40;
	nb_line_rejected_tOracleOutput_40=nb_line_rejected_tOracleOutput_40 + rejectedCount_tOracleOutput_40;
	
        globalMap.put("tOracleOutput_40_NB_LINE",nb_line_tOracleOutput_40);
        globalMap.put("tOracleOutput_40_NB_LINE_UPDATED",nb_line_update_tOracleOutput_40);
        globalMap.put("tOracleOutput_40_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_40);
        globalMap.put("tOracleOutput_40_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_40);
        globalMap.put("tOracleOutput_40_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_40);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row109");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_40", true);
end_Hash.put("tOracleOutput_40", System.currentTimeMillis());




/**
 * [tOracleOutput_40 end ] stop
 */







	
	/**
	 * [tOracleOutput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
	



	
        if(pstmt_tOracleOutput_7 != null) {
			
				pstmt_tOracleOutput_7.close();
				resourceMap.remove("pstmt_tOracleOutput_7");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_7", true);

	
	nb_line_deleted_tOracleOutput_7=nb_line_deleted_tOracleOutput_7+ deletedCount_tOracleOutput_7;
	nb_line_update_tOracleOutput_7=nb_line_update_tOracleOutput_7 + updatedCount_tOracleOutput_7;
	nb_line_inserted_tOracleOutput_7=nb_line_inserted_tOracleOutput_7 + insertedCount_tOracleOutput_7;
	nb_line_rejected_tOracleOutput_7=nb_line_rejected_tOracleOutput_7 + rejectedCount_tOracleOutput_7;
	
        globalMap.put("tOracleOutput_7_NB_LINE",nb_line_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_UPDATED",nb_line_update_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_7);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PERSONAL_SUCCESS");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_7", true);
end_Hash.put("tOracleOutput_7", System.currentTimeMillis());




/**
 * [tOracleOutput_7 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_17:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tOracleInput_18Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row106"); 
				     			
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row108"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row119"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row44"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row48"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row50"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row51"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row52"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row54"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row56"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row43"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row83"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row104"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tOracleOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_6";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_6") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_6 = null;
                if ((pstmtToClose_tOracleOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_6")) != null) {
                    pstmtToClose_tOracleOutput_6.close();
                }
    }
 



/**
 * [tOracleOutput_6 finally ] stop
 */







	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_30 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_30";
	
	

 



/**
 * [tJavaRow_30 finally ] stop
 */

	
	/**
	 * [tOracleOutput_40 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_40";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_40") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_40 = null;
                if ((pstmtToClose_tOracleOutput_40 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_40")) != null) {
                    pstmtToClose_tOracleOutput_40.close();
                }
    }
 



/**
 * [tOracleOutput_40 finally ] stop
 */







	
	/**
	 * [tOracleOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_7") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_7 = null;
                if ((pstmtToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_7")) != null) {
                    pstmtToClose_tOracleOutput_7.close();
                }
    }
 



/**
 * [tOracleOutput_7 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer REGISTROS;

				public Integer getREGISTROS () {
					return this.REGISTROS;
				}

				public Boolean REGISTROSIsNullable(){
				    return true;
				}
				public Boolean REGISTROSIsKey(){
				    return false;
				}
				public Integer REGISTROSLength(){
				    return 0;
				}
				public Integer REGISTROSPrecision(){
				    return 0;
				}
				public String REGISTROSDefault(){
				
					return "";
				
				}
				public String REGISTROSComment(){
				
				    return "";
				
				}
				public String REGISTROSPattern(){
				
					return "";
				
				}
				public String REGISTROSOriginalDbColumnName(){
				
					return "REGISTROS";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("REGISTROS="+String.valueOf(REGISTROS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row29Struct row29 = new row29Struct();




	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_18", false);
		start_Hash.put("tOracleInput_18", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_18";
	
	
		int tos_count_tOracleInput_18 = 0;
		
	


	
		    int nb_line_tOracleInput_18 = 0;
		    java.sql.Connection conn_tOracleInput_18 = null;
				conn_tOracleInput_18 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_18 = false;
				boolean isConnectionWrapped_tOracleInput_18 = !(conn_tOracleInput_18 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_18.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_18 = null;
                if (isConnectionWrapped_tOracleInput_18) {
					unwrappedOraConn_tOracleInput_18 = conn_tOracleInput_18.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_18 != null) {
                        isTimeZoneNull_tOracleInput_18 = (unwrappedOraConn_tOracleInput_18.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_18 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_18).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_18) {
					java.sql.Statement stmtGetTZ_tOracleInput_18 = conn_tOracleInput_18.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_18 = stmtGetTZ_tOracleInput_18.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_18 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_18.next()) {
						sessionTimezone_tOracleInput_18 = rsGetTZ_tOracleInput_18.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_18 && unwrappedOraConn_tOracleInput_18 != null) {
                        unwrappedOraConn_tOracleInput_18.setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_18).setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_18 = conn_tOracleInput_18.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_18.setFetchSize(1000);


		    String dbquery_tOracleInput_18 = "SELECT COUNT(1) REGISTROS\n  FROM TST_ERRCMASIVO";
		    

		    globalMap.put("tOracleInput_18_QUERY",dbquery_tOracleInput_18);

		    java.sql.ResultSet rs_tOracleInput_18 = null;

		    try {
		    	rs_tOracleInput_18 = stmt_tOracleInput_18.executeQuery(dbquery_tOracleInput_18);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_18 = rs_tOracleInput_18.getMetaData();
		    	int colQtyInRs_tOracleInput_18 = rsmd_tOracleInput_18.getColumnCount();

		    String tmpContent_tOracleInput_18 = null;
		    
		    
		    while (rs_tOracleInput_18.next()) {
		        nb_line_tOracleInput_18++;
		        
							if(colQtyInRs_tOracleInput_18 < 1) {
								row29.REGISTROS = null;
							} else {
		                          
					if(rs_tOracleInput_18.getObject(1) != null) {
						row29.REGISTROS = rs_tOracleInput_18.getInt(1);
					} else {
				
						row29.REGISTROS = null;
					}
		                    }
					




 



/**
 * [tOracleInput_18 begin ] stop
 */
	
	/**
	 * [tOracleInput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 


	tos_count_tOracleInput_18++;

/**
 * [tOracleInput_18 main ] stop
 */
	
	/**
	 * [tOracleInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.verror_datos = row29.REGISTROS;
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

}
}finally{
	if (rs_tOracleInput_18 != null) {
		rs_tOracleInput_18.close();
	}
	if (stmt_tOracleInput_18 != null) {
		stmt_tOracleInput_18.close();
	}
}

globalMap.put("tOracleInput_18_NB_LINE",nb_line_tOracleInput_18);
 

ok_Hash.put("tOracleInput_18", true);
end_Hash.put("tOracleInput_18", System.currentTimeMillis());




/**
 * [tOracleInput_18 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());

   			if (context.vcount_registros == context.verror_datos) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If14", 0, "true");
					}
				tFixedFlowInput_7Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If14", 0, "false");
					}   	 
   				}
   			if (context.verror_datos < context.vcount_registros
) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If15", 0, "true");
					}
				tOracleInput_19Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If15", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				
			    public Integer estado_;

				public Integer getEstado_ () {
					return this.estado_;
				}

				public Boolean estado_IsNullable(){
				    return true;
				}
				public Boolean estado_IsKey(){
				    return false;
				}
				public Integer estado_Length(){
				    return null;
				}
				public Integer estado_Precision(){
				    return null;
				}
				public String estado_Default(){
				
					return null;
				
				}
				public String estado_Comment(){
				
				    return "";
				
				}
				public String estado_Pattern(){
				
					return "";
				
				}
				public String estado_OriginalDbColumnName(){
				
					return "estado_";
				
				}

				
			    public java.util.Date finicio_;

				public java.util.Date getFinicio_ () {
					return this.finicio_;
				}

				public Boolean finicio_IsNullable(){
				    return true;
				}
				public Boolean finicio_IsKey(){
				    return false;
				}
				public Integer finicio_Length(){
				    return null;
				}
				public Integer finicio_Precision(){
				    return null;
				}
				public String finicio_Default(){
				
					return null;
				
				}
				public String finicio_Comment(){
				
				    return "";
				
				}
				public String finicio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String finicio_OriginalDbColumnName(){
				
					return "finicio_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("archivos_id_="+String.valueOf(archivos_id_));
		sb.append(",estado_="+String.valueOf(estado_));
		sb.append(",finicio_="+String.valueOf(finicio_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();




	
	/**
	 * [tOracleSP_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_4", false);
		start_Hash.put("tOracleSP_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tOracleSP_4 = 0;
		

	java.sql.Connection connection_tOracleSP_4 = null;
	connection_tOracleSP_4 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_4 = connection_tOracleSP_4.prepareCall("{call " + "cms2.updestadoarchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_4;
String tmpString_tOracleSP_4;

 



/**
 * [tOracleSP_4 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_7", false);
		start_Hash.put("tFixedFlowInput_7", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_7";
	
	
		int tos_count_tFixedFlowInput_7 = 0;
		

	    for (int i_tFixedFlowInput_7 = 0 ; i_tFixedFlowInput_7 < 1 ; i_tFixedFlowInput_7++) {
	                	            	
    	            		row31.archivos_id_ = context.vafiarchivos_id;
    	            	        	            	
    	            		row31.estado_ = 8;
    	            	        	            	
    	            		row31.finicio_ = context.vfinicio;
    	            	

 



/**
 * [tFixedFlowInput_7 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 


	tos_count_tFixedFlowInput_7++;

/**
 * [tFixedFlowInput_7 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_4 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

			// code for the argument 1 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row31.archivos_id_ == null) {
    						statement_tOracleSP_4.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(1, row31.archivos_id_);
    					}
    					
			// code for the argument 2 (estado_) of type 'IN AUTOMAPPING'
    					if (row31.estado_ == null) {
    						statement_tOracleSP_4.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(2, row31.estado_);
    					}
    					
			// code for the argument 3 (finicio_) of type 'IN TIMESTAMP'
    					if (row31.finicio_ == null) {
    						statement_tOracleSP_4.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_4.setTimestamp(3, new java.sql.Timestamp(row31.finicio_.getTime()));
    					
    					}
    					
		statement_tOracleSP_4.execute();
		

 


	tos_count_tOracleSP_4++;

/**
 * [tOracleSP_4 main ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

        }
        globalMap.put("tFixedFlowInput_7_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_7", true);
end_Hash.put("tFixedFlowInput_7", System.currentTimeMillis());




/**
 * [tFixedFlowInput_7 end ] stop
 */

	
	/**
	 * [tOracleSP_4 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	


	statement_tOracleSP_4.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tOracleSP_4", true);
end_Hash.put("tOracleSP_4", System.currentTimeMillis());




/**
 * [tOracleSP_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_7 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 finally ] stop
 */

	
	/**
	 * [tOracleSP_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer REGISTROS;

				public Integer getREGISTROS () {
					return this.REGISTROS;
				}

				public Boolean REGISTROSIsNullable(){
				    return true;
				}
				public Boolean REGISTROSIsKey(){
				    return false;
				}
				public Integer REGISTROSLength(){
				    return null;
				}
				public Integer REGISTROSPrecision(){
				    return null;
				}
				public String REGISTROSDefault(){
				
					return null;
				
				}
				public String REGISTROSComment(){
				
				    return "";
				
				}
				public String REGISTROSPattern(){
				
					return "";
				
				}
				public String REGISTROSOriginalDbColumnName(){
				
					return "REGISTROS";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("REGISTROS="+String.valueOf(REGISTROS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();




	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tOracleInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_19", false);
		start_Hash.put("tOracleInput_19", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_19";
	
	
		int tos_count_tOracleInput_19 = 0;
		
	


	
		    int nb_line_tOracleInput_19 = 0;
		    java.sql.Connection conn_tOracleInput_19 = null;
				conn_tOracleInput_19 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_19 = false;
				boolean isConnectionWrapped_tOracleInput_19 = !(conn_tOracleInput_19 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_19.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_19 = null;
                if (isConnectionWrapped_tOracleInput_19) {
					unwrappedOraConn_tOracleInput_19 = conn_tOracleInput_19.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_19 != null) {
                        isTimeZoneNull_tOracleInput_19 = (unwrappedOraConn_tOracleInput_19.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_19 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_19).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_19) {
					java.sql.Statement stmtGetTZ_tOracleInput_19 = conn_tOracleInput_19.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_19 = stmtGetTZ_tOracleInput_19.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_19 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_19.next()) {
						sessionTimezone_tOracleInput_19 = rsGetTZ_tOracleInput_19.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_19 && unwrappedOraConn_tOracleInput_19 != null) {
                        unwrappedOraConn_tOracleInput_19.setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_19).setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_19 = conn_tOracleInput_19.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_19.setFetchSize(1000);


		    String dbquery_tOracleInput_19 = "SELECT  COUNT(1) REGISTROS\nFROM TST_CARGUEMASIVO";
		    

		    globalMap.put("tOracleInput_19_QUERY",dbquery_tOracleInput_19);

		    java.sql.ResultSet rs_tOracleInput_19 = null;

		    try {
		    	rs_tOracleInput_19 = stmt_tOracleInput_19.executeQuery(dbquery_tOracleInput_19);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_19 = rs_tOracleInput_19.getMetaData();
		    	int colQtyInRs_tOracleInput_19 = rsmd_tOracleInput_19.getColumnCount();

		    String tmpContent_tOracleInput_19 = null;
		    
		    
		    while (rs_tOracleInput_19.next()) {
		        nb_line_tOracleInput_19++;
		        
							if(colQtyInRs_tOracleInput_19 < 1) {
								row30.REGISTROS = null;
							} else {
		                          
					if(rs_tOracleInput_19.getObject(1) != null) {
						row30.REGISTROS = rs_tOracleInput_19.getInt(1);
					} else {
				
						row30.REGISTROS = null;
					}
		                    }
					




 



/**
 * [tOracleInput_19 begin ] stop
 */
	
	/**
	 * [tOracleInput_19 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 


	tos_count_tOracleInput_19++;

/**
 * [tOracleInput_19 main ] stop
 */
	
	/**
	 * [tOracleInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.vcount_registros = row30.REGISTROS;

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_19 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

}
}finally{
	if (rs_tOracleInput_19 != null) {
		rs_tOracleInput_19.close();
	}
	if (stmt_tOracleInput_19 != null) {
		stmt_tOracleInput_19.close();
	}
}

globalMap.put("tOracleInput_19_NB_LINE",nb_line_tOracleInput_19);
 

ok_Hash.put("tOracleInput_19", true);
end_Hash.put("tOracleInput_19", System.currentTimeMillis());




/**
 * [tOracleInput_19 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());

   			if (context.vcount_registros == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If16", 0, "true");
					}
				tFixedFlowInput_8Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If16", 0, "false");
					}   	 
   				}
   			if (context.vcount_registros > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If17", 0, "true");
					}
				tOracleInput_20Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If17", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_19 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row30_0Struct implements routines.system.IPersistableRow<row30_0Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				
			    public Integer estado_;

				public Integer getEstado_ () {
					return this.estado_;
				}

				public Boolean estado_IsNullable(){
				    return true;
				}
				public Boolean estado_IsKey(){
				    return false;
				}
				public Integer estado_Length(){
				    return null;
				}
				public Integer estado_Precision(){
				    return null;
				}
				public String estado_Default(){
				
					return null;
				
				}
				public String estado_Comment(){
				
				    return "";
				
				}
				public String estado_Pattern(){
				
					return "";
				
				}
				public String estado_OriginalDbColumnName(){
				
					return "estado_";
				
				}

				
			    public java.util.Date finicio_;

				public java.util.Date getFinicio_ () {
					return this.finicio_;
				}

				public Boolean finicio_IsNullable(){
				    return true;
				}
				public Boolean finicio_IsKey(){
				    return false;
				}
				public Integer finicio_Length(){
				    return null;
				}
				public Integer finicio_Precision(){
				    return null;
				}
				public String finicio_Default(){
				
					return null;
				
				}
				public String finicio_Comment(){
				
				    return "";
				
				}
				public String finicio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String finicio_OriginalDbColumnName(){
				
					return "finicio_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("archivos_id_="+String.valueOf(archivos_id_));
		sb.append(",estado_="+String.valueOf(estado_));
		sb.append(",finicio_="+String.valueOf(finicio_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30_0Struct row30_0 = new row30_0Struct();




	
	/**
	 * [tOracleSP_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_5", false);
		start_Hash.put("tOracleSP_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30_0");
					}
				
		int tos_count_tOracleSP_5 = 0;
		

	java.sql.Connection connection_tOracleSP_5 = null;
	connection_tOracleSP_5 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_5 = connection_tOracleSP_5.prepareCall("{call " + "cms2.updestadoarchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_5;
String tmpString_tOracleSP_5;

 



/**
 * [tOracleSP_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_8", false);
		start_Hash.put("tFixedFlowInput_8", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_8";
	
	
		int tos_count_tFixedFlowInput_8 = 0;
		

	    for (int i_tFixedFlowInput_8 = 0 ; i_tFixedFlowInput_8 < 1 ; i_tFixedFlowInput_8++) {
	                	            	
    	            		row30_0.archivos_id_ = context.vafiarchivos_id;
    	            	        	            	
    	            		row30_0.estado_ = 8;
    	            	        	            	
    	            		row30_0.finicio_ = context.vfinicio;
    	            	

 



/**
 * [tFixedFlowInput_8 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 


	tos_count_tFixedFlowInput_8++;

/**
 * [tFixedFlowInput_8 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_5 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30_0"
						
						);
					}
					

			// code for the argument 1 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row30_0.archivos_id_ == null) {
    						statement_tOracleSP_5.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_5.setInt(1, row30_0.archivos_id_);
    					}
    					
			// code for the argument 2 (estado_) of type 'IN AUTOMAPPING'
    					if (row30_0.estado_ == null) {
    						statement_tOracleSP_5.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_5.setInt(2, row30_0.estado_);
    					}
    					
			// code for the argument 3 (finicio_) of type 'IN TIMESTAMP'
    					if (row30_0.finicio_ == null) {
    						statement_tOracleSP_5.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_5.setTimestamp(3, new java.sql.Timestamp(row30_0.finicio_.getTime()));
    					
    					}
    					
		statement_tOracleSP_5.execute();
		

 


	tos_count_tOracleSP_5++;

/**
 * [tOracleSP_5 main ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

        }
        globalMap.put("tFixedFlowInput_8_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_8", true);
end_Hash.put("tFixedFlowInput_8", System.currentTimeMillis());




/**
 * [tFixedFlowInput_8 end ] stop
 */

	
	/**
	 * [tOracleSP_5 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	


	statement_tOracleSP_5.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30_0");
			  	}
			  	
 

ok_Hash.put("tOracleSP_5", true);
end_Hash.put("tOracleSP_5", System.currentTimeMillis());

   			if (context.vcount_registros == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If18", 0, "true");
					}
				tFixedFlowInput_9Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If18", 0, "false");
					}   	 
   				}



/**
 * [tOracleSP_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_8 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 finally ] stop
 */

	
	/**
	 * [tOracleSP_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String respuesta;

				public String getRespuesta () {
					return this.respuesta;
				}

				public Boolean respuestaIsNullable(){
				    return true;
				}
				public Boolean respuestaIsKey(){
				    return false;
				}
				public Integer respuestaLength(){
				    return null;
				}
				public Integer respuestaPrecision(){
				    return null;
				}
				public String respuestaDefault(){
				
					return null;
				
				}
				public String respuestaComment(){
				
				    return "";
				
				}
				public String respuestaPattern(){
				
					return "";
				
				}
				public String respuestaOriginalDbColumnName(){
				
					return "respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("respuesta="+respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row311Struct implements routines.system.IPersistableRow<row311Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String respuesta;

				public String getRespuesta () {
					return this.respuesta;
				}

				public Boolean respuestaIsNullable(){
				    return true;
				}
				public Boolean respuestaIsKey(){
				    return false;
				}
				public Integer respuestaLength(){
				    return null;
				}
				public Integer respuestaPrecision(){
				    return null;
				}
				public String respuestaDefault(){
				
					return null;
				
				}
				public String respuestaComment(){
				
				    return "";
				
				}
				public String respuestaPattern(){
				
					return "";
				
				}
				public String respuestaOriginalDbColumnName(){
				
					return "respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("respuesta="+respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row311Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row311Struct row311 = new row311Struct();
row311Struct row32 = row311;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */



	
	/**
	 * [tBufferOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_2", false);
		start_Hash.put("tBufferOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row311");
					}
				
		int tos_count_tBufferOutput_2 = 0;
		

 



/**
 * [tBufferOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_9", false);
		start_Hash.put("tFixedFlowInput_9", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_9";
	
	
		int tos_count_tFixedFlowInput_9 = 0;
		

	    for (int i_tFixedFlowInput_9 = 0 ; i_tFixedFlowInput_9 < 1 ; i_tFixedFlowInput_9++) {
	                	            	
    	            		row311.respuesta = "ERROR: El arhivo no supera las validaciones de estructura";
    	            	

 



/**
 * [tFixedFlowInput_9 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 


	tos_count_tFixedFlowInput_9++;

/**
 * [tFixedFlowInput_9 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_2 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row311"
						
						);
					}
					



String[] row_tBufferOutput_2=new String[]{"",};		
	    if(row311.respuesta != null){
	        
	            row_tBufferOutput_2[0] = row311.respuesta;
	                        			    
	    }else{
	    	row_tBufferOutput_2[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_2);	
	
 
     row32 = row311;


	tos_count_tBufferOutput_2++;

/**
 * [tBufferOutput_2 main ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_begin ] stop
 */

	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_2", 5, "ERROR: El archivo no supera las validaciones de estructura", 4);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("ERROR: El archivo no supera las validaciones de estructura");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "ERROR: El archivo no supera las validaciones de estructura");
	globalMap.put("tDie_2_DIE_MESSAGES", "ERROR: El archivo no supera las validaciones de estructura");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
        errorCode = new Integer(4);
        globalMap.put("tDie_2_DIE_CODE", errorCode);        

    
	if(true){	
		TDieException e_tDie_2 = new TDieException();

		

		throw e_tDie_2;
	}

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */



	
	/**
	 * [tBufferOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

        }
        globalMap.put("tFixedFlowInput_9_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_9", true);
end_Hash.put("tFixedFlowInput_9", System.currentTimeMillis());




/**
 * [tFixedFlowInput_9 end ] stop
 */

	
	/**
	 * [tBufferOutput_2 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row311");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_2", true);
end_Hash.put("tBufferOutput_2", System.currentTimeMillis());




/**
 * [tBufferOutput_2 end ] stop
 */

	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_9 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 finally ] stop
 */

	
	/**
	 * [tBufferOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 finally ] stop
 */

	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TOTAL;

				public Integer getTOTAL () {
					return this.TOTAL;
				}

				public Boolean TOTALIsNullable(){
				    return true;
				}
				public Boolean TOTALIsKey(){
				    return false;
				}
				public Integer TOTALLength(){
				    return null;
				}
				public Integer TOTALPrecision(){
				    return null;
				}
				public String TOTALDefault(){
				
					return null;
				
				}
				public String TOTALComment(){
				
				    return "";
				
				}
				public String TOTALPattern(){
				
					return "";
				
				}
				public String TOTALOriginalDbColumnName(){
				
					return "TOTAL";
				
				}

				
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TOTAL = readInteger(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TOTAL = readInteger(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TOTAL,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TOTAL,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TOTAL="+String.valueOf(TOTAL));
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row33Struct row33 = new row33Struct();
row34Struct row34 = new row34Struct();
row36Struct row36 = new row36Struct();
row37Struct row37 = new row37Struct();







	
	/**
	 * [tOracleOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_5", false);
		start_Hash.put("tOracleOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tOracleOutput_5 = 0;
		






        int updateKeyCount_tOracleOutput_5 = 2;
        if(updateKeyCount_tOracleOutput_5 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_5 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_5 = 0;
    int nb_line_update_tOracleOutput_5 = 0;
    int nb_line_inserted_tOracleOutput_5 = 0;
    int nb_line_deleted_tOracleOutput_5 = 0;
    int nb_line_rejected_tOracleOutput_5 = 0;

    int tmp_batchUpdateCount_tOracleOutput_5 = 0;

    int deletedCount_tOracleOutput_5=0;
    int updatedCount_tOracleOutput_5=0;
    int insertedCount_tOracleOutput_5=0;
    int rowsToCommitCount_tOracleOutput_5=0;
    int rejectedCount_tOracleOutput_5=0;

    boolean whetherReject_tOracleOutput_5 = false;

    java.sql.Connection conn_tOracleOutput_5 = null;

    //optional table
    String dbschema_tOracleOutput_5 = null;
    String tableName_tOracleOutput_5 = null;
        dbschema_tOracleOutput_5 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_5=0;

        if(dbschema_tOracleOutput_5 == null || dbschema_tOracleOutput_5.trim().length() == 0) {
            tableName_tOracleOutput_5 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_5 = dbschema_tOracleOutput_5 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_5 = "UPDATE " + tableName_tOracleOutput_5 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(update_tOracleOutput_5);
                resourceMap.put("pstmt_tOracleOutput_5", pstmt_tOracleOutput_5);





 



/**
 * [tOracleOutput_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_14", false);
		start_Hash.put("tJavaRow_14", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tJavaRow_14 = 0;
		

int nb_line_tJavaRow_14 = 0;

 



/**
 * [tJavaRow_14 begin ] stop
 */



	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
        dbschema_tOracleOutput_4 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_4 = "INSERT INTO " + tableName_tOracleOutput_4 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(insert_tOracleOutput_4);
                        resourceMap.put("pstmt_tOracleOutput_4", pstmt_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tOracleInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_20", false);
		start_Hash.put("tOracleInput_20", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_20";
	
	
		int tos_count_tOracleInput_20 = 0;
		
	


	
		    int nb_line_tOracleInput_20 = 0;
		    java.sql.Connection conn_tOracleInput_20 = null;
				conn_tOracleInput_20 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_20 = false;
				boolean isConnectionWrapped_tOracleInput_20 = !(conn_tOracleInput_20 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_20.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_20 = null;
                if (isConnectionWrapped_tOracleInput_20) {
					unwrappedOraConn_tOracleInput_20 = conn_tOracleInput_20.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_20 != null) {
                        isTimeZoneNull_tOracleInput_20 = (unwrappedOraConn_tOracleInput_20.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_20 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_20).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_20) {
					java.sql.Statement stmtGetTZ_tOracleInput_20 = conn_tOracleInput_20.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_20 = stmtGetTZ_tOracleInput_20.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_20 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_20.next()) {
						sessionTimezone_tOracleInput_20 = rsGetTZ_tOracleInput_20.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_20 && unwrappedOraConn_tOracleInput_20 != null) {
                        unwrappedOraConn_tOracleInput_20.setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_20).setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_20 = conn_tOracleInput_20.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_20.setFetchSize(1000);


		    String dbquery_tOracleInput_20 = "SELECT COUNT(1) AS TOTAL, \n       TC.TDOCUMENTOS_ID, \n       TC.DOCUMENTO       \nFROM TST_CARGUEMASIVO TC\nGROUP BY "
+"TC.TDOCUMENTOS_ID, TC.DOCUMENTO\nHAVING COUNT(1) > 1";
		    

		    globalMap.put("tOracleInput_20_QUERY",dbquery_tOracleInput_20);

		    java.sql.ResultSet rs_tOracleInput_20 = null;

		    try {
		    	rs_tOracleInput_20 = stmt_tOracleInput_20.executeQuery(dbquery_tOracleInput_20);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_20 = rs_tOracleInput_20.getMetaData();
		    	int colQtyInRs_tOracleInput_20 = rsmd_tOracleInput_20.getColumnCount();

		    String tmpContent_tOracleInput_20 = null;
		    
		    
		    while (rs_tOracleInput_20.next()) {
		        nb_line_tOracleInput_20++;
		        
							if(colQtyInRs_tOracleInput_20 < 1) {
								row33.TOTAL = null;
							} else {
		                          
					if(rs_tOracleInput_20.getObject(1) != null) {
						row33.TOTAL = rs_tOracleInput_20.getInt(1);
					} else {
				
						row33.TOTAL = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_20 < 2) {
								row33.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_20.getObject(2) != null) {
						row33.TDOCUMENTOS_ID = rs_tOracleInput_20.getInt(2);
					} else {
				
						row33.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_20 < 3) {
								row33.DOCUMENTO = null;
							} else {
	                         		
        	row33.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_20, 3, false);
		                    }
					




 



/**
 * [tOracleInput_20 begin ] stop
 */
	
	/**
	 * [tOracleInput_20 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 


	tos_count_tOracleInput_20++;

/**
 * [tOracleInput_20 main ] stop
 */
	
	/**
	 * [tOracleInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

    //Code generate according to input schema and output schema
row34.TDOCUMENTOS_ID = row33.TDOCUMENTOS_ID;
row34.DOCUMENTO = row33.DOCUMENTO;
row34.MENSAJE = "La persona se encuentra " + row33.TOTAL + " veces en el archivo plano con tipo y número de documento igual";
    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					



            row36 = null;
        whetherReject_tOracleOutput_4 = false;
                        if(row34.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_4.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_4.setInt(1, row34.TDOCUMENTOS_ID);
}

                        if(row34.DOCUMENTO == null) {
pstmt_tOracleOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(2, row34.DOCUMENTO);
}

                        if(row34.MENSAJE == null) {
pstmt_tOracleOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(3, row34.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_4++;
                    int processedCount_tOracleOutput_4 = pstmt_tOracleOutput_4.executeUpdate();
                    insertedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                            System.err.print(e_tOracleOutput_4.getMessage());
                }
            if(!whetherReject_tOracleOutput_4) {
                            row36 = new row36Struct();
                                row36.TDOCUMENTOS_ID = row34.TDOCUMENTOS_ID;
                                row36.DOCUMENTO = row34.DOCUMENTO;
                                row36.MENSAJE = row34.MENSAJE;
            }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
// Start of branch "row36"
if(row36 != null) { 



	
	/**
	 * [tJavaRow_14 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					

    //Code generate according to input schema and output schema
row37.TDOCUMENTOS_ID = row36.TDOCUMENTOS_ID;
row37.DOCUMENTO = row36.DOCUMENTO;
row37.PROCESADO = 1;//Código de procesado con duplicados en el archivo con tipo y número de documento.


    nb_line_tJavaRow_14++;   

 


	tos_count_tJavaRow_14++;

/**
 * [tJavaRow_14 main ] stop
 */
	
	/**
	 * [tJavaRow_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					



        whetherReject_tOracleOutput_5 = false;
                    if(row37.PROCESADO == null) {
pstmt_tOracleOutput_5.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_5.setInt(1, row37.PROCESADO);
}


                    if(row37.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_5.setNull(2 + count_tOracleOutput_5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_5.setInt(2 + count_tOracleOutput_5, row37.TDOCUMENTOS_ID);
}


                    if(row37.DOCUMENTO == null) {
pstmt_tOracleOutput_5.setNull(3 + count_tOracleOutput_5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(3 + count_tOracleOutput_5, row37.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_5++;
                    int processedCount_tOracleOutput_5 = pstmt_tOracleOutput_5.executeUpdate();
                    updatedCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    rowsToCommitCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                } catch(java.lang.Exception e_tOracleOutput_5) {
globalMap.put("tOracleOutput_5_ERROR_MESSAGE",e_tOracleOutput_5.getMessage());
                    whetherReject_tOracleOutput_5 = true;
                            System.err.print(e_tOracleOutput_5.getMessage());
                }

 


	tos_count_tOracleOutput_5++;

/**
 * [tOracleOutput_5 main ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_end ] stop
 */

} // End of branch "row36"




	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_20 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

}
}finally{
	if (rs_tOracleInput_20 != null) {
		rs_tOracleInput_20.close();
	}
	if (stmt_tOracleInput_20 != null) {
		stmt_tOracleInput_20.close();
	}
}

globalMap.put("tOracleInput_20_NB_LINE",nb_line_tOracleInput_20);
 

ok_Hash.put("tOracleInput_20", true);
end_Hash.put("tOracleInput_20", System.currentTimeMillis());




/**
 * [tOracleInput_20 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmt_tOracleOutput_4 != null) {
			
				pstmt_tOracleOutput_4.close();
				resourceMap.remove("pstmt_tOracleOutput_4");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());




/**
 * [tOracleOutput_4 end ] stop
 */

	
	/**
	 * [tJavaRow_14 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

globalMap.put("tJavaRow_14_NB_LINE",nb_line_tJavaRow_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tJavaRow_14", true);
end_Hash.put("tJavaRow_14", System.currentTimeMillis());




/**
 * [tJavaRow_14 end ] stop
 */

	
	/**
	 * [tOracleOutput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
	



	
        if(pstmt_tOracleOutput_5 != null) {
			
				pstmt_tOracleOutput_5.close();
				resourceMap.remove("pstmt_tOracleOutput_5");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_5", true);

	
	nb_line_deleted_tOracleOutput_5=nb_line_deleted_tOracleOutput_5+ deletedCount_tOracleOutput_5;
	nb_line_update_tOracleOutput_5=nb_line_update_tOracleOutput_5 + updatedCount_tOracleOutput_5;
	nb_line_inserted_tOracleOutput_5=nb_line_inserted_tOracleOutput_5 + insertedCount_tOracleOutput_5;
	nb_line_rejected_tOracleOutput_5=nb_line_rejected_tOracleOutput_5 + rejectedCount_tOracleOutput_5;
	
        globalMap.put("tOracleOutput_5_NB_LINE",nb_line_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_UPDATED",nb_line_update_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_5);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_5", true);
end_Hash.put("tOracleOutput_5", System.currentTimeMillis());




/**
 * [tOracleOutput_5 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_20:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tOracleInput_23Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_20 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_4 = null;
                if ((pstmtToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_4")) != null) {
                    pstmtToClose_tOracleOutput_4.close();
                }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_14 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 finally ] stop
 */

	
	/**
	 * [tOracleOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_5 = null;
                if ((pstmtToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_5")) != null) {
                    pstmtToClose_tOracleOutput_5.close();
                }
    }
 



/**
 * [tOracleOutput_5 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class row96Struct implements routines.system.IPersistableRow<row96Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row96Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row95Struct implements routines.system.IPersistableRow<row95Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row95Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row94Struct implements routines.system.IPersistableRow<row94Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row94Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row93Struct implements routines.system.IPersistableRow<row93Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public BigDecimal TOTAL;

				public BigDecimal getTOTAL () {
					return this.TOTAL;
				}

				public Boolean TOTALIsNullable(){
				    return true;
				}
				public Boolean TOTALIsKey(){
				    return false;
				}
				public Integer TOTALLength(){
				    return null;
				}
				public Integer TOTALPrecision(){
				    return null;
				}
				public String TOTALDefault(){
				
					return "";
				
				}
				public String TOTALComment(){
				
				    return "";
				
				}
				public String TOTALPattern(){
				
					return "";
				
				}
				public String TOTALOriginalDbColumnName(){
				
					return "TOTAL";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TOTAL="+String.valueOf(TOTAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row93Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row93Struct row93 = new row93Struct();
row94Struct row94 = new row94Struct();
row95Struct row95 = new row95Struct();
row96Struct row96 = new row96Struct();







	
	/**
	 * [tOracleOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_13", false);
		start_Hash.put("tOracleOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row96");
					}
				
		int tos_count_tOracleOutput_13 = 0;
		






        int updateKeyCount_tOracleOutput_13 = 2;
        if(updateKeyCount_tOracleOutput_13 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_13 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_13 = 0;
    int nb_line_update_tOracleOutput_13 = 0;
    int nb_line_inserted_tOracleOutput_13 = 0;
    int nb_line_deleted_tOracleOutput_13 = 0;
    int nb_line_rejected_tOracleOutput_13 = 0;

    int tmp_batchUpdateCount_tOracleOutput_13 = 0;

    int deletedCount_tOracleOutput_13=0;
    int updatedCount_tOracleOutput_13=0;
    int insertedCount_tOracleOutput_13=0;
    int rowsToCommitCount_tOracleOutput_13=0;
    int rejectedCount_tOracleOutput_13=0;

    boolean whetherReject_tOracleOutput_13 = false;

    java.sql.Connection conn_tOracleOutput_13 = null;

    //optional table
    String dbschema_tOracleOutput_13 = null;
    String tableName_tOracleOutput_13 = null;
        dbschema_tOracleOutput_13 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_13 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_13=0;

        if(dbschema_tOracleOutput_13 == null || dbschema_tOracleOutput_13.trim().length() == 0) {
            tableName_tOracleOutput_13 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_13 = dbschema_tOracleOutput_13 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_13 = "UPDATE " + tableName_tOracleOutput_13 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_13 = conn_tOracleOutput_13.prepareStatement(update_tOracleOutput_13);
                resourceMap.put("pstmt_tOracleOutput_13", pstmt_tOracleOutput_13);





 



/**
 * [tOracleOutput_13 begin ] stop
 */



	
	/**
	 * [tJavaRow_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_17", false);
		start_Hash.put("tJavaRow_17", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row95");
					}
				
		int tos_count_tJavaRow_17 = 0;
		

int nb_line_tJavaRow_17 = 0;

 



/**
 * [tJavaRow_17 begin ] stop
 */



	
	/**
	 * [tOracleOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_8", false);
		start_Hash.put("tOracleOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row94");
					}
				
		int tos_count_tOracleOutput_8 = 0;
		






    
    int nb_line_tOracleOutput_8 = 0;
    int nb_line_update_tOracleOutput_8 = 0;
    int nb_line_inserted_tOracleOutput_8 = 0;
    int nb_line_deleted_tOracleOutput_8 = 0;
    int nb_line_rejected_tOracleOutput_8 = 0;

    int tmp_batchUpdateCount_tOracleOutput_8 = 0;

    int deletedCount_tOracleOutput_8=0;
    int updatedCount_tOracleOutput_8=0;
    int insertedCount_tOracleOutput_8=0;
    int rowsToCommitCount_tOracleOutput_8=0;
    int rejectedCount_tOracleOutput_8=0;

    boolean whetherReject_tOracleOutput_8 = false;

    java.sql.Connection conn_tOracleOutput_8 = null;

    //optional table
    String dbschema_tOracleOutput_8 = null;
    String tableName_tOracleOutput_8 = null;
        dbschema_tOracleOutput_8 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_8=0;

        if(dbschema_tOracleOutput_8 == null || dbschema_tOracleOutput_8.trim().length() == 0) {
            tableName_tOracleOutput_8 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_8 = dbschema_tOracleOutput_8 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_8 = "INSERT INTO " + tableName_tOracleOutput_8 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_8 = conn_tOracleOutput_8.prepareStatement(insert_tOracleOutput_8);
                        resourceMap.put("pstmt_tOracleOutput_8", pstmt_tOracleOutput_8);





 



/**
 * [tOracleOutput_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row93");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tOracleInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_23", false);
		start_Hash.put("tOracleInput_23", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_23";
	
	
		int tos_count_tOracleInput_23 = 0;
		
	


	
		    int nb_line_tOracleInput_23 = 0;
		    java.sql.Connection conn_tOracleInput_23 = null;
				conn_tOracleInput_23 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_23 = false;
				boolean isConnectionWrapped_tOracleInput_23 = !(conn_tOracleInput_23 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_23.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_23 = null;
                if (isConnectionWrapped_tOracleInput_23) {
					unwrappedOraConn_tOracleInput_23 = conn_tOracleInput_23.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_23 != null) {
                        isTimeZoneNull_tOracleInput_23 = (unwrappedOraConn_tOracleInput_23.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_23 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_23).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_23) {
					java.sql.Statement stmtGetTZ_tOracleInput_23 = conn_tOracleInput_23.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_23 = stmtGetTZ_tOracleInput_23.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_23 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_23.next()) {
						sessionTimezone_tOracleInput_23 = rsGetTZ_tOracleInput_23.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_23 && unwrappedOraConn_tOracleInput_23 != null) {
                        unwrappedOraConn_tOracleInput_23.setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_23).setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_23 = conn_tOracleInput_23.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_23.setFetchSize(1000);


		    String dbquery_tOracleInput_23 = "SELECT TSC.TDOCUMENTOS_ID,\n       TSC.DOCUMENTO,\n       TCS.TOTAL\nFROM TST_CARGUEMASIVO TSC\nINNER JOIN (SELECT TC.P"
+"RIMER_NOMBRE, \n                   TC.PRIMER_APELLIDO, \n                   TC.DOCUMENTO, \n                   COUNT(*) "
+"AS TOTAL \n            FROM TST_CARGUEMASIVO TC \n            WHERE TC.PROCESADO IS NULL \n            GROUP BY TC.PRIME"
+"R_NOMBRE, \n                     TC.PRIMER_APELLIDO, \n                     TC.DOCUMENTO HAVING COUNT(1) > 1) TCS ON TSC"
+".PRIMER_NOMBRE = TCS.PRIMER_NOMBRE                  \nWHERE TSC.PROCESADO IS  NULL      \n      AND TSC.PRIMER_APELLIDO "
+"= TCS.PRIMER_APELLIDO\n      AND TSC.DOCUMENTO = TCS.DOCUMENTO";
		    

		    globalMap.put("tOracleInput_23_QUERY",dbquery_tOracleInput_23);

		    java.sql.ResultSet rs_tOracleInput_23 = null;

		    try {
		    	rs_tOracleInput_23 = stmt_tOracleInput_23.executeQuery(dbquery_tOracleInput_23);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_23 = rs_tOracleInput_23.getMetaData();
		    	int colQtyInRs_tOracleInput_23 = rsmd_tOracleInput_23.getColumnCount();

		    String tmpContent_tOracleInput_23 = null;
		    
		    
		    while (rs_tOracleInput_23.next()) {
		        nb_line_tOracleInput_23++;
		        
							if(colQtyInRs_tOracleInput_23 < 1) {
								row93.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_23.getObject(1) != null) {
						row93.TDOCUMENTOS_ID = rs_tOracleInput_23.getInt(1);
					} else {
				
						row93.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_23 < 2) {
								row93.DOCUMENTO = null;
							} else {
	                         		
        	row93.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_23, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_23 < 3) {
								row93.TOTAL = null;
							} else {
		                          
					if(rs_tOracleInput_23.getObject(3) != null) {
						row93.TOTAL = rs_tOracleInput_23.getBigDecimal(3);
					} else {
				
						row93.TOTAL = null;
					}
		                    }
					




 



/**
 * [tOracleInput_23 begin ] stop
 */
	
	/**
	 * [tOracleInput_23 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 


	tos_count_tOracleInput_23++;

/**
 * [tOracleInput_23 main ] stop
 */
	
	/**
	 * [tOracleInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row93"
						
						);
					}
					

    row94.TDOCUMENTOS_ID = row93.TDOCUMENTOS_ID;
row94.DOCUMENTO = row93.DOCUMENTO;
row94.MENSAJE = "La persona se encuentra " + row93.TOTAL + " veces en el archivo plano con el mismo primer nombre, primer apellido y número de documento";


    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row94"
						
						);
					}
					



            row95 = null;
        whetherReject_tOracleOutput_8 = false;
                        if(row94.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_8.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_8.setInt(1, row94.TDOCUMENTOS_ID);
}

                        if(row94.DOCUMENTO == null) {
pstmt_tOracleOutput_8.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_8.setString(2, row94.DOCUMENTO);
}

                        if(row94.MENSAJE == null) {
pstmt_tOracleOutput_8.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_8.setString(3, row94.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_8++;
                    int processedCount_tOracleOutput_8 = pstmt_tOracleOutput_8.executeUpdate();
                    insertedCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                    rowsToCommitCount_tOracleOutput_8 += processedCount_tOracleOutput_8;
                } catch(java.lang.Exception e_tOracleOutput_8) {
globalMap.put("tOracleOutput_8_ERROR_MESSAGE",e_tOracleOutput_8.getMessage());
                    whetherReject_tOracleOutput_8 = true;
                            System.err.print(e_tOracleOutput_8.getMessage());
                }
            if(!whetherReject_tOracleOutput_8) {
                            row95 = new row95Struct();
                                row95.TDOCUMENTOS_ID = row94.TDOCUMENTOS_ID;
                                row95.DOCUMENTO = row94.DOCUMENTO;
                                row95.MENSAJE = row94.MENSAJE;
            }

 


	tos_count_tOracleOutput_8++;

/**
 * [tOracleOutput_8 main ] stop
 */
	
	/**
	 * [tOracleOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_begin ] stop
 */
// Start of branch "row95"
if(row95 != null) { 



	
	/**
	 * [tJavaRow_17 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row95"
						
						);
					}
					

    //Code generate according to input schema and output schema
row96.TDOCUMENTOS_ID = row95.TDOCUMENTOS_ID;
row96.DOCUMENTO = row95.DOCUMENTO;
row96.PROCESADO = 2;//Código de procesado con duplicados en el archivo con el mismo primer nombre, primer apellido y número de documento.


    nb_line_tJavaRow_17++;   

 


	tos_count_tJavaRow_17++;

/**
 * [tJavaRow_17 main ] stop
 */
	
	/**
	 * [tJavaRow_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_13 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row96"
						
						);
					}
					



        whetherReject_tOracleOutput_13 = false;
                    if(row96.PROCESADO == null) {
pstmt_tOracleOutput_13.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_13.setInt(1, row96.PROCESADO);
}


                    if(row96.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_13.setNull(2 + count_tOracleOutput_13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_13.setInt(2 + count_tOracleOutput_13, row96.TDOCUMENTOS_ID);
}


                    if(row96.DOCUMENTO == null) {
pstmt_tOracleOutput_13.setNull(3 + count_tOracleOutput_13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_13.setString(3 + count_tOracleOutput_13, row96.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_13++;
                    int processedCount_tOracleOutput_13 = pstmt_tOracleOutput_13.executeUpdate();
                    updatedCount_tOracleOutput_13 += processedCount_tOracleOutput_13;
                    rowsToCommitCount_tOracleOutput_13 += processedCount_tOracleOutput_13;
                } catch(java.lang.Exception e_tOracleOutput_13) {
globalMap.put("tOracleOutput_13_ERROR_MESSAGE",e_tOracleOutput_13.getMessage());
                    whetherReject_tOracleOutput_13 = true;
                            System.err.print(e_tOracleOutput_13.getMessage());
                }

 


	tos_count_tOracleOutput_13++;

/**
 * [tOracleOutput_13 main ] stop
 */
	
	/**
	 * [tOracleOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	

 



/**
 * [tOracleOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	

 



/**
 * [tOracleOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_end ] stop
 */

} // End of branch "row95"




	
	/**
	 * [tOracleOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	

 



/**
 * [tOracleOutput_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_23 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

}
}finally{
	if (rs_tOracleInput_23 != null) {
		rs_tOracleInput_23.close();
	}
	if (stmt_tOracleInput_23 != null) {
		stmt_tOracleInput_23.close();
	}
}

globalMap.put("tOracleInput_23_NB_LINE",nb_line_tOracleInput_23);
 

ok_Hash.put("tOracleInput_23", true);
end_Hash.put("tOracleInput_23", System.currentTimeMillis());




/**
 * [tOracleInput_23 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row93");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());




/**
 * [tJavaRow_10 end ] stop
 */

	
	/**
	 * [tOracleOutput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	
	



	
        if(pstmt_tOracleOutput_8 != null) {
			
				pstmt_tOracleOutput_8.close();
				resourceMap.remove("pstmt_tOracleOutput_8");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_8", true);

	
	nb_line_deleted_tOracleOutput_8=nb_line_deleted_tOracleOutput_8+ deletedCount_tOracleOutput_8;
	nb_line_update_tOracleOutput_8=nb_line_update_tOracleOutput_8 + updatedCount_tOracleOutput_8;
	nb_line_inserted_tOracleOutput_8=nb_line_inserted_tOracleOutput_8 + insertedCount_tOracleOutput_8;
	nb_line_rejected_tOracleOutput_8=nb_line_rejected_tOracleOutput_8 + rejectedCount_tOracleOutput_8;
	
        globalMap.put("tOracleOutput_8_NB_LINE",nb_line_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_UPDATED",nb_line_update_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_8);
        globalMap.put("tOracleOutput_8_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_8);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row94");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_8", true);
end_Hash.put("tOracleOutput_8", System.currentTimeMillis());




/**
 * [tOracleOutput_8 end ] stop
 */

	
	/**
	 * [tJavaRow_17 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

globalMap.put("tJavaRow_17_NB_LINE",nb_line_tJavaRow_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row95");
			  	}
			  	
 

ok_Hash.put("tJavaRow_17", true);
end_Hash.put("tJavaRow_17", System.currentTimeMillis());




/**
 * [tJavaRow_17 end ] stop
 */

	
	/**
	 * [tOracleOutput_13 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	
	



	
        if(pstmt_tOracleOutput_13 != null) {
			
				pstmt_tOracleOutput_13.close();
				resourceMap.remove("pstmt_tOracleOutput_13");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_13", true);

	
	nb_line_deleted_tOracleOutput_13=nb_line_deleted_tOracleOutput_13+ deletedCount_tOracleOutput_13;
	nb_line_update_tOracleOutput_13=nb_line_update_tOracleOutput_13 + updatedCount_tOracleOutput_13;
	nb_line_inserted_tOracleOutput_13=nb_line_inserted_tOracleOutput_13 + insertedCount_tOracleOutput_13;
	nb_line_rejected_tOracleOutput_13=nb_line_rejected_tOracleOutput_13 + rejectedCount_tOracleOutput_13;
	
        globalMap.put("tOracleOutput_13_NB_LINE",nb_line_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_UPDATED",nb_line_update_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_13);
        globalMap.put("tOracleOutput_13_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_13);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row96");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_13", true);
end_Hash.put("tOracleOutput_13", System.currentTimeMillis());




/**
 * [tOracleOutput_13 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_23:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tOracleInput_24Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_23 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */

	
	/**
	 * [tOracleOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_8";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_8") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_8 = null;
                if ((pstmtToClose_tOracleOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_8")) != null) {
                    pstmtToClose_tOracleOutput_8.close();
                }
    }
 



/**
 * [tOracleOutput_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_17 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 finally ] stop
 */

	
	/**
	 * [tOracleOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_13";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_13") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_13 = null;
                if ((pstmtToClose_tOracleOutput_13 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_13")) != null) {
                    pstmtToClose_tOracleOutput_13.close();
                }
    }
 



/**
 * [tOracleOutput_13 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class row101Struct implements routines.system.IPersistableRow<row101Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row101Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row100Struct implements routines.system.IPersistableRow<row100Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row100Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row99Struct implements routines.system.IPersistableRow<row99Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row99Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row98Struct implements routines.system.IPersistableRow<row98Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public BigDecimal TOTAL;

				public BigDecimal getTOTAL () {
					return this.TOTAL;
				}

				public Boolean TOTALIsNullable(){
				    return true;
				}
				public Boolean TOTALIsKey(){
				    return false;
				}
				public Integer TOTALLength(){
				    return null;
				}
				public Integer TOTALPrecision(){
				    return null;
				}
				public String TOTALDefault(){
				
					return "";
				
				}
				public String TOTALComment(){
				
				    return "";
				
				}
				public String TOTALPattern(){
				
					return "";
				
				}
				public String TOTALOriginalDbColumnName(){
				
					return "TOTAL";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TOTAL="+String.valueOf(TOTAL));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row98Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row98Struct row98 = new row98Struct();
row99Struct row99 = new row99Struct();
row100Struct row100 = new row100Struct();
row101Struct row101 = new row101Struct();







	
	/**
	 * [tOracleOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_14", false);
		start_Hash.put("tOracleOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row101");
					}
				
		int tos_count_tOracleOutput_14 = 0;
		






        int updateKeyCount_tOracleOutput_14 = 2;
        if(updateKeyCount_tOracleOutput_14 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_14 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_14 = 0;
    int nb_line_update_tOracleOutput_14 = 0;
    int nb_line_inserted_tOracleOutput_14 = 0;
    int nb_line_deleted_tOracleOutput_14 = 0;
    int nb_line_rejected_tOracleOutput_14 = 0;

    int tmp_batchUpdateCount_tOracleOutput_14 = 0;

    int deletedCount_tOracleOutput_14=0;
    int updatedCount_tOracleOutput_14=0;
    int insertedCount_tOracleOutput_14=0;
    int rowsToCommitCount_tOracleOutput_14=0;
    int rejectedCount_tOracleOutput_14=0;

    boolean whetherReject_tOracleOutput_14 = false;

    java.sql.Connection conn_tOracleOutput_14 = null;

    //optional table
    String dbschema_tOracleOutput_14 = null;
    String tableName_tOracleOutput_14 = null;
        dbschema_tOracleOutput_14 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_14=0;

        if(dbschema_tOracleOutput_14 == null || dbschema_tOracleOutput_14.trim().length() == 0) {
            tableName_tOracleOutput_14 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_14 = dbschema_tOracleOutput_14 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_14 = "UPDATE " + tableName_tOracleOutput_14 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_14 = conn_tOracleOutput_14.prepareStatement(update_tOracleOutput_14);
                resourceMap.put("pstmt_tOracleOutput_14", pstmt_tOracleOutput_14);





 



/**
 * [tOracleOutput_14 begin ] stop
 */



	
	/**
	 * [tJavaRow_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_18", false);
		start_Hash.put("tJavaRow_18", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row100");
					}
				
		int tos_count_tJavaRow_18 = 0;
		

int nb_line_tJavaRow_18 = 0;

 



/**
 * [tJavaRow_18 begin ] stop
 */



	
	/**
	 * [tOracleOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_9", false);
		start_Hash.put("tOracleOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row99");
					}
				
		int tos_count_tOracleOutput_9 = 0;
		






    
    int nb_line_tOracleOutput_9 = 0;
    int nb_line_update_tOracleOutput_9 = 0;
    int nb_line_inserted_tOracleOutput_9 = 0;
    int nb_line_deleted_tOracleOutput_9 = 0;
    int nb_line_rejected_tOracleOutput_9 = 0;

    int tmp_batchUpdateCount_tOracleOutput_9 = 0;

    int deletedCount_tOracleOutput_9=0;
    int updatedCount_tOracleOutput_9=0;
    int insertedCount_tOracleOutput_9=0;
    int rowsToCommitCount_tOracleOutput_9=0;
    int rejectedCount_tOracleOutput_9=0;

    boolean whetherReject_tOracleOutput_9 = false;

    java.sql.Connection conn_tOracleOutput_9 = null;

    //optional table
    String dbschema_tOracleOutput_9 = null;
    String tableName_tOracleOutput_9 = null;
        dbschema_tOracleOutput_9 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_9=0;

        if(dbschema_tOracleOutput_9 == null || dbschema_tOracleOutput_9.trim().length() == 0) {
            tableName_tOracleOutput_9 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_9 = dbschema_tOracleOutput_9 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_9 = "INSERT INTO " + tableName_tOracleOutput_9 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_9 = conn_tOracleOutput_9.prepareStatement(insert_tOracleOutput_9);
                        resourceMap.put("pstmt_tOracleOutput_9", pstmt_tOracleOutput_9);





 



/**
 * [tOracleOutput_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row98");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tOracleInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_24", false);
		start_Hash.put("tOracleInput_24", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_24";
	
	
		int tos_count_tOracleInput_24 = 0;
		
	


	
		    int nb_line_tOracleInput_24 = 0;
		    java.sql.Connection conn_tOracleInput_24 = null;
				conn_tOracleInput_24 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_24 = false;
				boolean isConnectionWrapped_tOracleInput_24 = !(conn_tOracleInput_24 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_24.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_24 = null;
                if (isConnectionWrapped_tOracleInput_24) {
					unwrappedOraConn_tOracleInput_24 = conn_tOracleInput_24.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_24 != null) {
                        isTimeZoneNull_tOracleInput_24 = (unwrappedOraConn_tOracleInput_24.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_24 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_24).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_24) {
					java.sql.Statement stmtGetTZ_tOracleInput_24 = conn_tOracleInput_24.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_24 = stmtGetTZ_tOracleInput_24.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_24 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_24.next()) {
						sessionTimezone_tOracleInput_24 = rsGetTZ_tOracleInput_24.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_24 && unwrappedOraConn_tOracleInput_24 != null) {
                        unwrappedOraConn_tOracleInput_24.setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_24).setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_24 = conn_tOracleInput_24.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_24.setFetchSize(1000);


		    String dbquery_tOracleInput_24 = "SELECT TSC.TDOCUMENTOS_ID,\n       TSC.DOCUMENTO,\n       TCS.TOTAL\nFROM TST_CARGUEMASIVO TSC\nINNER JOIN (SELECT TC.P"
+"RIMER_NOMBRE,\n                          TC.SEGUNDO_NOMBRE,\n                          TC.PRIMER_APELLIDO,\n            "
+"              TC.SEGUNDO_APELLIDO,\n                          TC.FECHA_NACIMIENTO,\n                          COUNT(*) A"
+"S TOTAL      \n                   FROM TST_CARGUEMASIVO TC\n                   WHERE TC.PROCESADO IS NULL\n             "
+"      GROUP BY TC.PRIMER_NOMBRE,\n                            TC.SEGUNDO_NOMBRE,\n                            TC.PRIMER_"
+"APELLIDO,\n                            TC.SEGUNDO_APELLIDO,\n                            TC.FECHA_NACIMIENTO\n          "
+"         HAVING COUNT(1) > 1) TCS ON TSC.PRIMER_NOMBRE = TCS.PRIMER_NOMBRE                  \nWHERE TSC.PROCESADO IS NUL"
+"L      \n      AND TSC.PRIMER_NOMBRE = TCS.PRIMER_NOMBRE\n      AND TSC.SEGUNDO_NOMBRE = TCS.SEGUNDO_NOMBRE\n      AND T"
+"SC.PRIMER_APELLIDO = TCS.PRIMER_APELLIDO\n      AND TSC.SEGUNDO_APELLIDO = TCS.SEGUNDO_APELLIDO\n      AND TSC.FECHA_NAC"
+"IMIENTO = TCS.FECHA_NACIMIENTO";
		    

		    globalMap.put("tOracleInput_24_QUERY",dbquery_tOracleInput_24);

		    java.sql.ResultSet rs_tOracleInput_24 = null;

		    try {
		    	rs_tOracleInput_24 = stmt_tOracleInput_24.executeQuery(dbquery_tOracleInput_24);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_24 = rs_tOracleInput_24.getMetaData();
		    	int colQtyInRs_tOracleInput_24 = rsmd_tOracleInput_24.getColumnCount();

		    String tmpContent_tOracleInput_24 = null;
		    
		    
		    while (rs_tOracleInput_24.next()) {
		        nb_line_tOracleInput_24++;
		        
							if(colQtyInRs_tOracleInput_24 < 1) {
								row98.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_24.getObject(1) != null) {
						row98.TDOCUMENTOS_ID = rs_tOracleInput_24.getInt(1);
					} else {
				
						row98.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_24 < 2) {
								row98.DOCUMENTO = null;
							} else {
	                         		
        	row98.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_24, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_24 < 3) {
								row98.TOTAL = null;
							} else {
		                          
					if(rs_tOracleInput_24.getObject(3) != null) {
						row98.TOTAL = rs_tOracleInput_24.getBigDecimal(3);
					} else {
				
						row98.TOTAL = null;
					}
		                    }
					




 



/**
 * [tOracleInput_24 begin ] stop
 */
	
	/**
	 * [tOracleInput_24 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 


	tos_count_tOracleInput_24++;

/**
 * [tOracleInput_24 main ] stop
 */
	
	/**
	 * [tOracleInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row98"
						
						);
					}
					

    //Code generate according to input schema and output schema
row99.TDOCUMENTOS_ID = row98.TDOCUMENTOS_ID;
row99.DOCUMENTO = row98.DOCUMENTO;
row99.MENSAJE = "La persona se encuentra " + row98.TOTAL + " veces en el archivo plano con el mismo primer nombre, segundo nombre, primer apellido, segundo apellido y fecha de nacimiento";
    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row99"
						
						);
					}
					



            row100 = null;
        whetherReject_tOracleOutput_9 = false;
                        if(row99.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_9.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_9.setInt(1, row99.TDOCUMENTOS_ID);
}

                        if(row99.DOCUMENTO == null) {
pstmt_tOracleOutput_9.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(2, row99.DOCUMENTO);
}

                        if(row99.MENSAJE == null) {
pstmt_tOracleOutput_9.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_9.setString(3, row99.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_9++;
                    int processedCount_tOracleOutput_9 = pstmt_tOracleOutput_9.executeUpdate();
                    insertedCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                    rowsToCommitCount_tOracleOutput_9 += processedCount_tOracleOutput_9;
                } catch(java.lang.Exception e_tOracleOutput_9) {
globalMap.put("tOracleOutput_9_ERROR_MESSAGE",e_tOracleOutput_9.getMessage());
                    whetherReject_tOracleOutput_9 = true;
                            System.err.print(e_tOracleOutput_9.getMessage());
                }
            if(!whetherReject_tOracleOutput_9) {
                            row100 = new row100Struct();
                                row100.TDOCUMENTOS_ID = row99.TDOCUMENTOS_ID;
                                row100.DOCUMENTO = row99.DOCUMENTO;
                                row100.MENSAJE = row99.MENSAJE;
            }

 


	tos_count_tOracleOutput_9++;

/**
 * [tOracleOutput_9 main ] stop
 */
	
	/**
	 * [tOracleOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_begin ] stop
 */
// Start of branch "row100"
if(row100 != null) { 



	
	/**
	 * [tJavaRow_18 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row100"
						
						);
					}
					

    //Code generate according to input schema and output schema
row101.TDOCUMENTOS_ID = row100.TDOCUMENTOS_ID;
row101.DOCUMENTO = row100.DOCUMENTO;
row101.PROCESADO = 3;//Código de procesado con duplicados en el archivo con el mismo primer nombre, segundo nombre, primer apellido, segundo apellido y fecha de nacimiento.


    nb_line_tJavaRow_18++;   

 


	tos_count_tJavaRow_18++;

/**
 * [tJavaRow_18 main ] stop
 */
	
	/**
	 * [tJavaRow_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row101"
						
						);
					}
					



        whetherReject_tOracleOutput_14 = false;
                    if(row101.PROCESADO == null) {
pstmt_tOracleOutput_14.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_14.setInt(1, row101.PROCESADO);
}


                    if(row101.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_14.setNull(2 + count_tOracleOutput_14, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_14.setInt(2 + count_tOracleOutput_14, row101.TDOCUMENTOS_ID);
}


                    if(row101.DOCUMENTO == null) {
pstmt_tOracleOutput_14.setNull(3 + count_tOracleOutput_14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_14.setString(3 + count_tOracleOutput_14, row101.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_14++;
                    int processedCount_tOracleOutput_14 = pstmt_tOracleOutput_14.executeUpdate();
                    updatedCount_tOracleOutput_14 += processedCount_tOracleOutput_14;
                    rowsToCommitCount_tOracleOutput_14 += processedCount_tOracleOutput_14;
                } catch(java.lang.Exception e_tOracleOutput_14) {
globalMap.put("tOracleOutput_14_ERROR_MESSAGE",e_tOracleOutput_14.getMessage());
                    whetherReject_tOracleOutput_14 = true;
                            System.err.print(e_tOracleOutput_14.getMessage());
                }

 


	tos_count_tOracleOutput_14++;

/**
 * [tOracleOutput_14 main ] stop
 */
	
	/**
	 * [tOracleOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	

 



/**
 * [tOracleOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	

 



/**
 * [tOracleOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_end ] stop
 */

} // End of branch "row100"




	
	/**
	 * [tOracleOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	

 



/**
 * [tOracleOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_24 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

}
}finally{
	if (rs_tOracleInput_24 != null) {
		rs_tOracleInput_24.close();
	}
	if (stmt_tOracleInput_24 != null) {
		stmt_tOracleInput_24.close();
	}
}

globalMap.put("tOracleInput_24_NB_LINE",nb_line_tOracleInput_24);
 

ok_Hash.put("tOracleInput_24", true);
end_Hash.put("tOracleInput_24", System.currentTimeMillis());




/**
 * [tOracleInput_24 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row98");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());




/**
 * [tJavaRow_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	
	



	
        if(pstmt_tOracleOutput_9 != null) {
			
				pstmt_tOracleOutput_9.close();
				resourceMap.remove("pstmt_tOracleOutput_9");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_9", true);

	
	nb_line_deleted_tOracleOutput_9=nb_line_deleted_tOracleOutput_9+ deletedCount_tOracleOutput_9;
	nb_line_update_tOracleOutput_9=nb_line_update_tOracleOutput_9 + updatedCount_tOracleOutput_9;
	nb_line_inserted_tOracleOutput_9=nb_line_inserted_tOracleOutput_9 + insertedCount_tOracleOutput_9;
	nb_line_rejected_tOracleOutput_9=nb_line_rejected_tOracleOutput_9 + rejectedCount_tOracleOutput_9;
	
        globalMap.put("tOracleOutput_9_NB_LINE",nb_line_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_UPDATED",nb_line_update_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_9);
        globalMap.put("tOracleOutput_9_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_9);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row99");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_9", true);
end_Hash.put("tOracleOutput_9", System.currentTimeMillis());




/**
 * [tOracleOutput_9 end ] stop
 */

	
	/**
	 * [tJavaRow_18 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

globalMap.put("tJavaRow_18_NB_LINE",nb_line_tJavaRow_18);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row100");
			  	}
			  	
 

ok_Hash.put("tJavaRow_18", true);
end_Hash.put("tJavaRow_18", System.currentTimeMillis());




/**
 * [tJavaRow_18 end ] stop
 */

	
	/**
	 * [tOracleOutput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	
	



	
        if(pstmt_tOracleOutput_14 != null) {
			
				pstmt_tOracleOutput_14.close();
				resourceMap.remove("pstmt_tOracleOutput_14");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_14", true);

	
	nb_line_deleted_tOracleOutput_14=nb_line_deleted_tOracleOutput_14+ deletedCount_tOracleOutput_14;
	nb_line_update_tOracleOutput_14=nb_line_update_tOracleOutput_14 + updatedCount_tOracleOutput_14;
	nb_line_inserted_tOracleOutput_14=nb_line_inserted_tOracleOutput_14 + insertedCount_tOracleOutput_14;
	nb_line_rejected_tOracleOutput_14=nb_line_rejected_tOracleOutput_14 + rejectedCount_tOracleOutput_14;
	
        globalMap.put("tOracleOutput_14_NB_LINE",nb_line_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_UPDATED",nb_line_update_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_14);
        globalMap.put("tOracleOutput_14_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_14);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row101");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_14", true);
end_Hash.put("tOracleOutput_14", System.currentTimeMillis());




/**
 * [tOracleOutput_14 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_24:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk23", 0, "ok");
								} 
							
							tOracleInput_25Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_24 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_9";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_9") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_9 = null;
                if ((pstmtToClose_tOracleOutput_9 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_9")) != null) {
                    pstmtToClose_tOracleOutput_9.close();
                }
    }
 



/**
 * [tOracleOutput_9 finally ] stop
 */

	
	/**
	 * [tJavaRow_18 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 finally ] stop
 */

	
	/**
	 * [tOracleOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_14";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_14") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_14 = null;
                if ((pstmtToClose_tOracleOutput_14 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_14")) != null) {
                    pstmtToClose_tOracleOutput_14.close();
                }
    }
 



/**
 * [tOracleOutput_14 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class DUPLICADOS_TDStruct implements routines.system.IPersistableRow<DUPLICADOS_TDStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DUPLICADOS_TDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PERSONAS_EXISTENTESStruct implements routines.system.IPersistableRow<PERSONAS_EXISTENTESStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PERSONAS_EXISTENTESStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 40;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public int PERSONAS_ID;

				public int getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();
DUPLICADOS_TDStruct DUPLICADOS_TD = new DUPLICADOS_TDStruct();
row38Struct row38 = new row38Struct();
row41Struct row41 = new row41Struct();
row40Struct row40 = new row40Struct();
PERSONAS_EXISTENTESStruct PERSONAS_EXISTENTES = new PERSONAS_EXISTENTESStruct();
row57Struct row57 = new row57Struct();








	
	/**
	 * [tOracleOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_15", false);
		start_Hash.put("tOracleOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tOracleOutput_15 = 0;
		






        int updateKeyCount_tOracleOutput_15 = 2;
        if(updateKeyCount_tOracleOutput_15 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_15 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_15 = 0;
    int nb_line_update_tOracleOutput_15 = 0;
    int nb_line_inserted_tOracleOutput_15 = 0;
    int nb_line_deleted_tOracleOutput_15 = 0;
    int nb_line_rejected_tOracleOutput_15 = 0;

    int tmp_batchUpdateCount_tOracleOutput_15 = 0;

    int deletedCount_tOracleOutput_15=0;
    int updatedCount_tOracleOutput_15=0;
    int insertedCount_tOracleOutput_15=0;
    int rowsToCommitCount_tOracleOutput_15=0;
    int rejectedCount_tOracleOutput_15=0;

    boolean whetherReject_tOracleOutput_15 = false;

    java.sql.Connection conn_tOracleOutput_15 = null;

    //optional table
    String dbschema_tOracleOutput_15 = null;
    String tableName_tOracleOutput_15 = null;
        dbschema_tOracleOutput_15 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_15 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_15=0;

        if(dbschema_tOracleOutput_15 == null || dbschema_tOracleOutput_15.trim().length() == 0) {
            tableName_tOracleOutput_15 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_15 = dbschema_tOracleOutput_15 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_15 = "UPDATE " + tableName_tOracleOutput_15 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_15 = conn_tOracleOutput_15.prepareStatement(update_tOracleOutput_15);
                resourceMap.put("pstmt_tOracleOutput_15", pstmt_tOracleOutput_15);





 



/**
 * [tOracleOutput_15 begin ] stop
 */



	
	/**
	 * [tJavaRow_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_19", false);
		start_Hash.put("tJavaRow_19", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tJavaRow_19 = 0;
		

int nb_line_tJavaRow_19 = 0;

 



/**
 * [tJavaRow_19 begin ] stop
 */



	
	/**
	 * [tOracleOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_10", false);
		start_Hash.put("tOracleOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tOracleOutput_10 = 0;
		






    
    int nb_line_tOracleOutput_10 = 0;
    int nb_line_update_tOracleOutput_10 = 0;
    int nb_line_inserted_tOracleOutput_10 = 0;
    int nb_line_deleted_tOracleOutput_10 = 0;
    int nb_line_rejected_tOracleOutput_10 = 0;

    int tmp_batchUpdateCount_tOracleOutput_10 = 0;

    int deletedCount_tOracleOutput_10=0;
    int updatedCount_tOracleOutput_10=0;
    int insertedCount_tOracleOutput_10=0;
    int rowsToCommitCount_tOracleOutput_10=0;
    int rejectedCount_tOracleOutput_10=0;

    boolean whetherReject_tOracleOutput_10 = false;

    java.sql.Connection conn_tOracleOutput_10 = null;

    //optional table
    String dbschema_tOracleOutput_10 = null;
    String tableName_tOracleOutput_10 = null;
        dbschema_tOracleOutput_10 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_10=0;

        if(dbschema_tOracleOutput_10 == null || dbschema_tOracleOutput_10.trim().length() == 0) {
            tableName_tOracleOutput_10 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_10 = dbschema_tOracleOutput_10 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_10 = "INSERT INTO " + tableName_tOracleOutput_10 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_10 = conn_tOracleOutput_10.prepareStatement(insert_tOracleOutput_10);
                        resourceMap.put("pstmt_tOracleOutput_10", pstmt_tOracleOutput_10);





 



/**
 * [tOracleOutput_10 begin ] stop
 */



	
	/**
	 * [tJavaRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_12", false);
		start_Hash.put("tJavaRow_12", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DUPLICADOS_TD");
					}
				
		int tos_count_tJavaRow_12 = 0;
		

int nb_line_tJavaRow_12 = 0;

 



/**
 * [tJavaRow_12 begin ] stop
 */





	
	/**
	 * [tOracleOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_11", false);
		start_Hash.put("tOracleOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tOracleOutput_11 = 0;
		






        int updateKeyCount_tOracleOutput_11 = 2;
        if(updateKeyCount_tOracleOutput_11 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_11 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_11 = 0;
    int nb_line_update_tOracleOutput_11 = 0;
    int nb_line_inserted_tOracleOutput_11 = 0;
    int nb_line_deleted_tOracleOutput_11 = 0;
    int nb_line_rejected_tOracleOutput_11 = 0;

    int tmp_batchUpdateCount_tOracleOutput_11 = 0;

    int deletedCount_tOracleOutput_11=0;
    int updatedCount_tOracleOutput_11=0;
    int insertedCount_tOracleOutput_11=0;
    int rowsToCommitCount_tOracleOutput_11=0;
    int rejectedCount_tOracleOutput_11=0;

    boolean whetherReject_tOracleOutput_11 = false;

    java.sql.Connection conn_tOracleOutput_11 = null;

    //optional table
    String dbschema_tOracleOutput_11 = null;
    String tableName_tOracleOutput_11 = null;
        dbschema_tOracleOutput_11 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_11=0;

        if(dbschema_tOracleOutput_11 == null || dbschema_tOracleOutput_11.trim().length() == 0) {
            tableName_tOracleOutput_11 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_11 = dbschema_tOracleOutput_11 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_11 = "UPDATE " + tableName_tOracleOutput_11 + " SET PERSONAS_ID = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_11 = conn_tOracleOutput_11.prepareStatement(update_tOracleOutput_11);
                resourceMap.put("pstmt_tOracleOutput_11", pstmt_tOracleOutput_11);





 



/**
 * [tOracleOutput_11 begin ] stop
 */



	
	/**
	 * [tJavaRow_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_15", false);
		start_Hash.put("tJavaRow_15", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PERSONAS_EXISTENTES");
					}
				
		int tos_count_tJavaRow_15 = 0;
		

int nb_line_tJavaRow_15 = 0;

 



/**
 * [tJavaRow_15 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
DUPLICADOS_TDStruct DUPLICADOS_TD_tmp = new DUPLICADOS_TDStruct();
PERSONAS_EXISTENTESStruct PERSONAS_EXISTENTES_tmp = new PERSONAS_EXISTENTESStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_25", false);
		start_Hash.put("tOracleInput_25", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_25";
	
	
		int tos_count_tOracleInput_25 = 0;
		
	


	
		    int nb_line_tOracleInput_25 = 0;
		    java.sql.Connection conn_tOracleInput_25 = null;
				conn_tOracleInput_25 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_25 = false;
				boolean isConnectionWrapped_tOracleInput_25 = !(conn_tOracleInput_25 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_25.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_25 = null;
                if (isConnectionWrapped_tOracleInput_25) {
					unwrappedOraConn_tOracleInput_25 = conn_tOracleInput_25.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_25 != null) {
                        isTimeZoneNull_tOracleInput_25 = (unwrappedOraConn_tOracleInput_25.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_25 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_25).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_25) {
					java.sql.Statement stmtGetTZ_tOracleInput_25 = conn_tOracleInput_25.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_25 = stmtGetTZ_tOracleInput_25.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_25 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_25.next()) {
						sessionTimezone_tOracleInput_25 = rsGetTZ_tOracleInput_25.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_25 && unwrappedOraConn_tOracleInput_25 != null) {
                        unwrappedOraConn_tOracleInput_25.setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_25).setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_25 = conn_tOracleInput_25.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_25.setFetchSize(1000);


		    String dbquery_tOracleInput_25 = "SELECT GP.TDOCUMENTOS_ID, \n       GP.DOCUMENTO, \n       GP.ID AS PERSONAS_ID, \n       GA.ID AS AFILIADOS_ID \nFROM G"
+"EN_PERSONAS GP \nLEFT JOIN  GEN_AFILIADOS GA ON GP.ID = GA.PERSONAS_ID \nWHERE GP.ID IN (SELECT GP.ID FROM TST_CARGUEMAS"
+"IVO TC\nINNER JOIN GEN_PERSONAS GP ON GP.TDOCUMENTOS_ID = TC.TDOCUMENTOS_ID AND GP.DOCUMENTO = TC.DOCUMENTO)";
		    

		    globalMap.put("tOracleInput_25_QUERY",dbquery_tOracleInput_25);

		    java.sql.ResultSet rs_tOracleInput_25 = null;

		    try {
		    	rs_tOracleInput_25 = stmt_tOracleInput_25.executeQuery(dbquery_tOracleInput_25);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_25 = rs_tOracleInput_25.getMetaData();
		    	int colQtyInRs_tOracleInput_25 = rsmd_tOracleInput_25.getColumnCount();

		    String tmpContent_tOracleInput_25 = null;
		    
		    
		    while (rs_tOracleInput_25.next()) {
		        nb_line_tOracleInput_25++;
		        
							if(colQtyInRs_tOracleInput_25 < 1) {
								row39.TDOCUMENTOS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(1) != null) {
						row39.TDOCUMENTOS_ID = rs_tOracleInput_25.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_25 < 2) {
								row39.DOCUMENTO = null;
							} else {
	                         		
        	row39.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_25, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_25 < 3) {
								row39.PERSONAS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(3) != null) {
						row39.PERSONAS_ID = rs_tOracleInput_25.getInt(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_25 < 4) {
								row39.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(4) != null) {
						row39.AFILIADOS_ID = rs_tOracleInput_25.getInt(4);
					} else {
				
						row39.AFILIADOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_25 begin ] stop
 */
	
	/**
	 * [tOracleInput_25 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 


	tos_count_tOracleInput_25++;

/**
 * [tOracleInput_25 main ] stop
 */
	
	/**
	 * [tOracleInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

DUPLICADOS_TD = null;
PERSONAS_EXISTENTES = null;

boolean rejected_tMap_2 = true;

// # Output table : 'DUPLICADOS_TD'
// # Filter conditions 
if( 

row39.AFILIADOS_ID != null

 ) {
rejected_tMap_2 = false;
DUPLICADOS_TD_tmp.TDOCUMENTOS_ID = row39.TDOCUMENTOS_ID;
DUPLICADOS_TD_tmp.DOCUMENTO = row39.DOCUMENTO;
DUPLICADOS_TD = DUPLICADOS_TD_tmp;
} // closing filter/reject
// ###### START REJECTS ##### 

// # Output reject table : 'PERSONAS_EXISTENTES'
// # Filter conditions 
if( rejected_tMap_2 ) {
PERSONAS_EXISTENTES_tmp.TDOCUMENTOS_ID = row39.TDOCUMENTOS_ID;
PERSONAS_EXISTENTES_tmp.DOCUMENTO = row39.DOCUMENTO;
PERSONAS_EXISTENTES_tmp.PERSONAS_ID = row39.PERSONAS_ID;
PERSONAS_EXISTENTES = PERSONAS_EXISTENTES_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "DUPLICADOS_TD"
if(DUPLICADOS_TD != null) { 



	
	/**
	 * [tJavaRow_12 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DUPLICADOS_TD"
						
						);
					}
					

    //Code generate according to input schema and output schema
row38.TDOCUMENTOS_ID = DUPLICADOS_TD.TDOCUMENTOS_ID;
row38.DOCUMENTO = DUPLICADOS_TD.DOCUMENTO;
row38.MENSAJE = "Existen personas en el sistema que concuerda con el mismo tipo y número de documento";




 



   
   

    nb_line_tJavaRow_12++;   

 


	tos_count_tJavaRow_12++;

/**
 * [tJavaRow_12 main ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					



            row41 = null;
        whetherReject_tOracleOutput_10 = false;
                        if(row38.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_10.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_10.setInt(1, row38.TDOCUMENTOS_ID);
}

                        if(row38.DOCUMENTO == null) {
pstmt_tOracleOutput_10.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_10.setString(2, row38.DOCUMENTO);
}

                        if(row38.MENSAJE == null) {
pstmt_tOracleOutput_10.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_10.setString(3, row38.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_10++;
                    int processedCount_tOracleOutput_10 = pstmt_tOracleOutput_10.executeUpdate();
                    insertedCount_tOracleOutput_10 += processedCount_tOracleOutput_10;
                    rowsToCommitCount_tOracleOutput_10 += processedCount_tOracleOutput_10;
                } catch(java.lang.Exception e_tOracleOutput_10) {
globalMap.put("tOracleOutput_10_ERROR_MESSAGE",e_tOracleOutput_10.getMessage());
                    whetherReject_tOracleOutput_10 = true;
                            System.err.print(e_tOracleOutput_10.getMessage());
                }
            if(!whetherReject_tOracleOutput_10) {
                            row41 = new row41Struct();
                                row41.TDOCUMENTOS_ID = row38.TDOCUMENTOS_ID;
                                row41.DOCUMENTO = row38.DOCUMENTO;
                                row41.MENSAJE = row38.MENSAJE;
            }

 


	tos_count_tOracleOutput_10++;

/**
 * [tOracleOutput_10 main ] stop
 */
	
	/**
	 * [tOracleOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	

 



/**
 * [tOracleOutput_10 process_data_begin ] stop
 */
// Start of branch "row41"
if(row41 != null) { 



	
	/**
	 * [tJavaRow_19 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					

    //Code generate according to input schema and output schema
row40.TDOCUMENTOS_ID = row41.TDOCUMENTOS_ID;
row40.DOCUMENTO = row41.DOCUMENTO;
row40.PROCESADO = 4;//Código de procesado con duplicados en el sistema con tipo y número de documento.

    nb_line_tJavaRow_19++;   

 


	tos_count_tJavaRow_19++;

/**
 * [tJavaRow_19 main ] stop
 */
	
	/**
	 * [tJavaRow_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					



        whetherReject_tOracleOutput_15 = false;
                    if(row40.PROCESADO == null) {
pstmt_tOracleOutput_15.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_15.setInt(1, row40.PROCESADO);
}


                    if(row40.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_15.setNull(2 + count_tOracleOutput_15, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_15.setInt(2 + count_tOracleOutput_15, row40.TDOCUMENTOS_ID);
}


                    if(row40.DOCUMENTO == null) {
pstmt_tOracleOutput_15.setNull(3 + count_tOracleOutput_15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_15.setString(3 + count_tOracleOutput_15, row40.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_15++;
                    int processedCount_tOracleOutput_15 = pstmt_tOracleOutput_15.executeUpdate();
                    updatedCount_tOracleOutput_15 += processedCount_tOracleOutput_15;
                    rowsToCommitCount_tOracleOutput_15 += processedCount_tOracleOutput_15;
                } catch(java.lang.Exception e_tOracleOutput_15) {
globalMap.put("tOracleOutput_15_ERROR_MESSAGE",e_tOracleOutput_15.getMessage());
                    whetherReject_tOracleOutput_15 = true;
                            System.err.print(e_tOracleOutput_15.getMessage());
                }

 


	tos_count_tOracleOutput_15++;

/**
 * [tOracleOutput_15 main ] stop
 */
	
	/**
	 * [tOracleOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	

 



/**
 * [tOracleOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	

 



/**
 * [tOracleOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_end ] stop
 */

} // End of branch "row41"




	
	/**
	 * [tOracleOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	

 



/**
 * [tOracleOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_end ] stop
 */

} // End of branch "DUPLICADOS_TD"




// Start of branch "PERSONAS_EXISTENTES"
if(PERSONAS_EXISTENTES != null) { 



	
	/**
	 * [tJavaRow_15 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PERSONAS_EXISTENTES"
						
						);
					}
					

    //Code generate according to input schema and output schema
row57.TDOCUMENTOS_ID = PERSONAS_EXISTENTES.TDOCUMENTOS_ID;
row57.DOCUMENTO = PERSONAS_EXISTENTES.DOCUMENTO;
row57.PERSONAS_ID = PERSONAS_EXISTENTES.PERSONAS_ID;

    nb_line_tJavaRow_15++;   

 


	tos_count_tJavaRow_15++;

/**
 * [tJavaRow_15 main ] stop
 */
	
	/**
	 * [tJavaRow_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					



        whetherReject_tOracleOutput_11 = false;
                    if(row57.PERSONAS_ID == null) {
pstmt_tOracleOutput_11.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_11.setInt(1, row57.PERSONAS_ID);
}


                    if(row57.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_11.setNull(2 + count_tOracleOutput_11, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_11.setInt(2 + count_tOracleOutput_11, row57.TDOCUMENTOS_ID);
}


                    if(row57.DOCUMENTO == null) {
pstmt_tOracleOutput_11.setNull(3 + count_tOracleOutput_11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_11.setString(3 + count_tOracleOutput_11, row57.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_11++;
                    int processedCount_tOracleOutput_11 = pstmt_tOracleOutput_11.executeUpdate();
                    updatedCount_tOracleOutput_11 += processedCount_tOracleOutput_11;
                    rowsToCommitCount_tOracleOutput_11 += processedCount_tOracleOutput_11;
                } catch(java.lang.Exception e_tOracleOutput_11) {
globalMap.put("tOracleOutput_11_ERROR_MESSAGE",e_tOracleOutput_11.getMessage());
                    whetherReject_tOracleOutput_11 = true;
                            System.err.print(e_tOracleOutput_11.getMessage());
                }

 


	tos_count_tOracleOutput_11++;

/**
 * [tOracleOutput_11 main ] stop
 */
	
	/**
	 * [tOracleOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	

 



/**
 * [tOracleOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	

 



/**
 * [tOracleOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_end ] stop
 */

} // End of branch "PERSONAS_EXISTENTES"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_25 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

}
}finally{
	if (rs_tOracleInput_25 != null) {
		rs_tOracleInput_25.close();
	}
	if (stmt_tOracleInput_25 != null) {
		stmt_tOracleInput_25.close();
	}
}

globalMap.put("tOracleInput_25_NB_LINE",nb_line_tOracleInput_25);
 

ok_Hash.put("tOracleInput_25", true);
end_Hash.put("tOracleInput_25", System.currentTimeMillis());




/**
 * [tOracleInput_25 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJavaRow_12 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

globalMap.put("tJavaRow_12_NB_LINE",nb_line_tJavaRow_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DUPLICADOS_TD");
			  	}
			  	
 

ok_Hash.put("tJavaRow_12", true);
end_Hash.put("tJavaRow_12", System.currentTimeMillis());




/**
 * [tJavaRow_12 end ] stop
 */

	
	/**
	 * [tOracleOutput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	
	



	
        if(pstmt_tOracleOutput_10 != null) {
			
				pstmt_tOracleOutput_10.close();
				resourceMap.remove("pstmt_tOracleOutput_10");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_10", true);

	
	nb_line_deleted_tOracleOutput_10=nb_line_deleted_tOracleOutput_10+ deletedCount_tOracleOutput_10;
	nb_line_update_tOracleOutput_10=nb_line_update_tOracleOutput_10 + updatedCount_tOracleOutput_10;
	nb_line_inserted_tOracleOutput_10=nb_line_inserted_tOracleOutput_10 + insertedCount_tOracleOutput_10;
	nb_line_rejected_tOracleOutput_10=nb_line_rejected_tOracleOutput_10 + rejectedCount_tOracleOutput_10;
	
        globalMap.put("tOracleOutput_10_NB_LINE",nb_line_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_UPDATED",nb_line_update_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_10);
        globalMap.put("tOracleOutput_10_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_10);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_10", true);
end_Hash.put("tOracleOutput_10", System.currentTimeMillis());




/**
 * [tOracleOutput_10 end ] stop
 */

	
	/**
	 * [tJavaRow_19 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

globalMap.put("tJavaRow_19_NB_LINE",nb_line_tJavaRow_19);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tJavaRow_19", true);
end_Hash.put("tJavaRow_19", System.currentTimeMillis());




/**
 * [tJavaRow_19 end ] stop
 */

	
	/**
	 * [tOracleOutput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	
	



	
        if(pstmt_tOracleOutput_15 != null) {
			
				pstmt_tOracleOutput_15.close();
				resourceMap.remove("pstmt_tOracleOutput_15");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_15", true);

	
	nb_line_deleted_tOracleOutput_15=nb_line_deleted_tOracleOutput_15+ deletedCount_tOracleOutput_15;
	nb_line_update_tOracleOutput_15=nb_line_update_tOracleOutput_15 + updatedCount_tOracleOutput_15;
	nb_line_inserted_tOracleOutput_15=nb_line_inserted_tOracleOutput_15 + insertedCount_tOracleOutput_15;
	nb_line_rejected_tOracleOutput_15=nb_line_rejected_tOracleOutput_15 + rejectedCount_tOracleOutput_15;
	
        globalMap.put("tOracleOutput_15_NB_LINE",nb_line_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_UPDATED",nb_line_update_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_15);
        globalMap.put("tOracleOutput_15_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_15);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_15", true);
end_Hash.put("tOracleOutput_15", System.currentTimeMillis());




/**
 * [tOracleOutput_15 end ] stop
 */













	
	/**
	 * [tJavaRow_15 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

globalMap.put("tJavaRow_15_NB_LINE",nb_line_tJavaRow_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PERSONAS_EXISTENTES");
			  	}
			  	
 

ok_Hash.put("tJavaRow_15", true);
end_Hash.put("tJavaRow_15", System.currentTimeMillis());




/**
 * [tJavaRow_15 end ] stop
 */

	
	/**
	 * [tOracleOutput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	
	



	
        if(pstmt_tOracleOutput_11 != null) {
			
				pstmt_tOracleOutput_11.close();
				resourceMap.remove("pstmt_tOracleOutput_11");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_11", true);

	
	nb_line_deleted_tOracleOutput_11=nb_line_deleted_tOracleOutput_11+ deletedCount_tOracleOutput_11;
	nb_line_update_tOracleOutput_11=nb_line_update_tOracleOutput_11 + updatedCount_tOracleOutput_11;
	nb_line_inserted_tOracleOutput_11=nb_line_inserted_tOracleOutput_11 + insertedCount_tOracleOutput_11;
	nb_line_rejected_tOracleOutput_11=nb_line_rejected_tOracleOutput_11 + rejectedCount_tOracleOutput_11;
	
        globalMap.put("tOracleOutput_11_NB_LINE",nb_line_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_UPDATED",nb_line_update_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_11);
        globalMap.put("tOracleOutput_11_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_11);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_11", true);
end_Hash.put("tOracleOutput_11", System.currentTimeMillis());




/**
 * [tOracleOutput_11 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_25:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tOracleInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_25 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_12 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 finally ] stop
 */

	
	/**
	 * [tOracleOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_10";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_10") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_10 = null;
                if ((pstmtToClose_tOracleOutput_10 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_10")) != null) {
                    pstmtToClose_tOracleOutput_10.close();
                }
    }
 



/**
 * [tOracleOutput_10 finally ] stop
 */

	
	/**
	 * [tJavaRow_19 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 finally ] stop
 */

	
	/**
	 * [tOracleOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_15";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_15") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_15 = null;
                if ((pstmtToClose_tOracleOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_15")) != null) {
                    pstmtToClose_tOracleOutput_15.close();
                }
    }
 



/**
 * [tOracleOutput_15 finally ] stop
 */













	
	/**
	 * [tJavaRow_15 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 finally ] stop
 */

	
	/**
	 * [tOracleOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_11";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_11") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_11 = null;
                if ((pstmtToClose_tOracleOutput_11 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_11")) != null) {
                    pstmtToClose_tOracleOutput_11.close();
                }
    }
 



/**
 * [tOracleOutput_11 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_25_SUBPROCESS_STATE", 1);
	}
	


public static class row60Struct implements routines.system.IPersistableRow<row60Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row60Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row62Struct implements routines.system.IPersistableRow<row62Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row62Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row61Struct implements routines.system.IPersistableRow<row61Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row61Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row59Struct implements routines.system.IPersistableRow<row59Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row59Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class DUPLICADOS_PN_PA_DStruct implements routines.system.IPersistableRow<DUPLICADOS_PN_PA_DStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DUPLICADOS_PN_PA_DStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PERSONAS_EXISTENTES2Struct implements routines.system.IPersistableRow<PERSONAS_EXISTENTES2Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PERSONAS_EXISTENTES2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row58Struct implements routines.system.IPersistableRow<row58Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 40;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public int PERSONAS_ID;

				public int getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row58Struct row58 = new row58Struct();
DUPLICADOS_PN_PA_DStruct DUPLICADOS_PN_PA_D = new DUPLICADOS_PN_PA_DStruct();
row59Struct row59 = new row59Struct();
row61Struct row61 = new row61Struct();
row62Struct row62 = new row62Struct();
PERSONAS_EXISTENTES2Struct PERSONAS_EXISTENTES2 = new PERSONAS_EXISTENTES2Struct();
row60Struct row60 = new row60Struct();








	
	/**
	 * [tOracleOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_16", false);
		start_Hash.put("tOracleOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row62");
					}
				
		int tos_count_tOracleOutput_16 = 0;
		






        int updateKeyCount_tOracleOutput_16 = 2;
        if(updateKeyCount_tOracleOutput_16 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_16 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_16 = 0;
    int nb_line_update_tOracleOutput_16 = 0;
    int nb_line_inserted_tOracleOutput_16 = 0;
    int nb_line_deleted_tOracleOutput_16 = 0;
    int nb_line_rejected_tOracleOutput_16 = 0;

    int tmp_batchUpdateCount_tOracleOutput_16 = 0;

    int deletedCount_tOracleOutput_16=0;
    int updatedCount_tOracleOutput_16=0;
    int insertedCount_tOracleOutput_16=0;
    int rowsToCommitCount_tOracleOutput_16=0;
    int rejectedCount_tOracleOutput_16=0;

    boolean whetherReject_tOracleOutput_16 = false;

    java.sql.Connection conn_tOracleOutput_16 = null;

    //optional table
    String dbschema_tOracleOutput_16 = null;
    String tableName_tOracleOutput_16 = null;
        dbschema_tOracleOutput_16 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_16 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_16=0;

        if(dbschema_tOracleOutput_16 == null || dbschema_tOracleOutput_16.trim().length() == 0) {
            tableName_tOracleOutput_16 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_16 = dbschema_tOracleOutput_16 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_16 = "UPDATE " + tableName_tOracleOutput_16 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_16 = conn_tOracleOutput_16.prepareStatement(update_tOracleOutput_16);
                resourceMap.put("pstmt_tOracleOutput_16", pstmt_tOracleOutput_16);





 



/**
 * [tOracleOutput_16 begin ] stop
 */



	
	/**
	 * [tJavaRow_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_20", false);
		start_Hash.put("tJavaRow_20", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row61");
					}
				
		int tos_count_tJavaRow_20 = 0;
		

int nb_line_tJavaRow_20 = 0;

 



/**
 * [tJavaRow_20 begin ] stop
 */



	
	/**
	 * [tOracleOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_12", false);
		start_Hash.put("tOracleOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row59");
					}
				
		int tos_count_tOracleOutput_12 = 0;
		






    
    int nb_line_tOracleOutput_12 = 0;
    int nb_line_update_tOracleOutput_12 = 0;
    int nb_line_inserted_tOracleOutput_12 = 0;
    int nb_line_deleted_tOracleOutput_12 = 0;
    int nb_line_rejected_tOracleOutput_12 = 0;

    int tmp_batchUpdateCount_tOracleOutput_12 = 0;

    int deletedCount_tOracleOutput_12=0;
    int updatedCount_tOracleOutput_12=0;
    int insertedCount_tOracleOutput_12=0;
    int rowsToCommitCount_tOracleOutput_12=0;
    int rejectedCount_tOracleOutput_12=0;

    boolean whetherReject_tOracleOutput_12 = false;

    java.sql.Connection conn_tOracleOutput_12 = null;

    //optional table
    String dbschema_tOracleOutput_12 = null;
    String tableName_tOracleOutput_12 = null;
        dbschema_tOracleOutput_12 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_12=0;

        if(dbschema_tOracleOutput_12 == null || dbschema_tOracleOutput_12.trim().length() == 0) {
            tableName_tOracleOutput_12 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_12 = dbschema_tOracleOutput_12 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_12 = "INSERT INTO " + tableName_tOracleOutput_12 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_12 = conn_tOracleOutput_12.prepareStatement(insert_tOracleOutput_12);
                        resourceMap.put("pstmt_tOracleOutput_12", pstmt_tOracleOutput_12);





 



/**
 * [tOracleOutput_12 begin ] stop
 */



	
	/**
	 * [tJavaRow_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_13", false);
		start_Hash.put("tJavaRow_13", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DUPLICADOS_PN_PA_D");
					}
				
		int tos_count_tJavaRow_13 = 0;
		

int nb_line_tJavaRow_13 = 0;

 



/**
 * [tJavaRow_13 begin ] stop
 */





	
	/**
	 * [tOracleOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_17", false);
		start_Hash.put("tOracleOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row60");
					}
				
		int tos_count_tOracleOutput_17 = 0;
		






        int updateKeyCount_tOracleOutput_17 = 2;
        if(updateKeyCount_tOracleOutput_17 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_17 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_17 = 0;
    int nb_line_update_tOracleOutput_17 = 0;
    int nb_line_inserted_tOracleOutput_17 = 0;
    int nb_line_deleted_tOracleOutput_17 = 0;
    int nb_line_rejected_tOracleOutput_17 = 0;

    int tmp_batchUpdateCount_tOracleOutput_17 = 0;

    int deletedCount_tOracleOutput_17=0;
    int updatedCount_tOracleOutput_17=0;
    int insertedCount_tOracleOutput_17=0;
    int rowsToCommitCount_tOracleOutput_17=0;
    int rejectedCount_tOracleOutput_17=0;

    boolean whetherReject_tOracleOutput_17 = false;

    java.sql.Connection conn_tOracleOutput_17 = null;

    //optional table
    String dbschema_tOracleOutput_17 = null;
    String tableName_tOracleOutput_17 = null;
        dbschema_tOracleOutput_17 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_17 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_17=0;

        if(dbschema_tOracleOutput_17 == null || dbschema_tOracleOutput_17.trim().length() == 0) {
            tableName_tOracleOutput_17 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_17 = dbschema_tOracleOutput_17 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_17 = "UPDATE " + tableName_tOracleOutput_17 + " SET PERSONAS_ID = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_17 = conn_tOracleOutput_17.prepareStatement(update_tOracleOutput_17);
                resourceMap.put("pstmt_tOracleOutput_17", pstmt_tOracleOutput_17);





 



/**
 * [tOracleOutput_17 begin ] stop
 */



	
	/**
	 * [tJavaRow_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_16", false);
		start_Hash.put("tJavaRow_16", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PERSONAS_EXISTENTES2");
					}
				
		int tos_count_tJavaRow_16 = 0;
		

int nb_line_tJavaRow_16 = 0;

 



/**
 * [tJavaRow_16 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
DUPLICADOS_PN_PA_DStruct DUPLICADOS_PN_PA_D_tmp = new DUPLICADOS_PN_PA_DStruct();
PERSONAS_EXISTENTES2Struct PERSONAS_EXISTENTES2_tmp = new PERSONAS_EXISTENTES2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_9.setFetchSize(1000);


		    String dbquery_tOracleInput_9 = "SELECT TCA.TDOCUMENTOS_ID,\n       TCA.DOCUMENTO,\n       PR.PERSONAS_ID,\n       PR.AFILIADOS_ID \nFROM (SELECT TC.PRI"
+"MER_NOMBRE,\n        TC.PRIMER_APELLIDO,\n        TC.DOCUMENTO,\n        GP.ID AS PERSONAS_ID,\n        GA.ID AS AFILIAD"
+"OS_ID\nFROM TST_CARGUEMASIVO TC\nINNER JOIN GEN_PERSONAS GP ON GP.DOCUMENTO = TC.DOCUMENTO\n                            "
+"  AND GP.PRIMER_NOMBRE = TC.PRIMER_NOMBRE\n                              AND GP.PRIMER_APELLIDO = TC.PRIMER_APELLIDO\nLE"
+"FT JOIN GEN_AFILIADOS GA ON GA.PERSONAS_ID = GP.ID AND ROWNUM < 2                              \nWHERE TC.PROCESADO IS N"
+"ULL GROUP BY TC.PRIMER_NOMBRE, TC.PRIMER_APELLIDO, TC.DOCUMENTO, GP.ID, GA.ID HAVING (COUNT(1)=1)) PR\nINNER JOIN TST_CA"
+"RGUEMASIVO TCA ON TCA.DOCUMENTO = PR.DOCUMENTO AND TCA.PRIMER_NOMBRE = PR.PRIMER_NOMBRE AND TCA.PRIMER_APELLIDO = PR.PRI"
+"MER_APELLIDO";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row58.TDOCUMENTOS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(1) != null) {
						row58.TDOCUMENTOS_ID = rs_tOracleInput_9.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row58.DOCUMENTO = null;
							} else {
	                         		
        	row58.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row58.PERSONAS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(3) != null) {
						row58.PERSONAS_ID = rs_tOracleInput_9.getInt(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row58.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(4) != null) {
						row58.AFILIADOS_ID = rs_tOracleInput_9.getInt(4);
					} else {
				
						row58.AFILIADOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

DUPLICADOS_PN_PA_D = null;
PERSONAS_EXISTENTES2 = null;

boolean rejected_tMap_3 = true;

// # Output table : 'DUPLICADOS_PN_PA_D'
// # Filter conditions 
if( 

row58.AFILIADOS_ID != null

 ) {
rejected_tMap_3 = false;
DUPLICADOS_PN_PA_D_tmp.TDOCUMENTOS_ID = row58.TDOCUMENTOS_ID;
DUPLICADOS_PN_PA_D_tmp.DOCUMENTO = row58.DOCUMENTO;
DUPLICADOS_PN_PA_D = DUPLICADOS_PN_PA_D_tmp;
} // closing filter/reject
// ###### START REJECTS ##### 

// # Output reject table : 'PERSONAS_EXISTENTES2'
// # Filter conditions 
if( rejected_tMap_3 ) {
PERSONAS_EXISTENTES2_tmp.TDOCUMENTOS_ID = row58.TDOCUMENTOS_ID;
PERSONAS_EXISTENTES2_tmp.DOCUMENTO = row58.DOCUMENTO;
PERSONAS_EXISTENTES2_tmp.PERSONAS_ID = row58.PERSONAS_ID;
PERSONAS_EXISTENTES2 = PERSONAS_EXISTENTES2_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "DUPLICADOS_PN_PA_D"
if(DUPLICADOS_PN_PA_D != null) { 



	
	/**
	 * [tJavaRow_13 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DUPLICADOS_PN_PA_D"
						
						);
					}
					

    //Code generate according to input schema and output schema
row59.TDOCUMENTOS_ID = DUPLICADOS_PN_PA_D.TDOCUMENTOS_ID;
row59.DOCUMENTO = DUPLICADOS_PN_PA_D.DOCUMENTO;
row59.MENSAJE = "Existen personas en el sistema que concuerda con el mismo primer nombre, primer apellido y número de documento";




 



   
   

    nb_line_tJavaRow_13++;   

 


	tos_count_tJavaRow_13++;

/**
 * [tJavaRow_13 main ] stop
 */
	
	/**
	 * [tJavaRow_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row59"
						
						);
					}
					



            row61 = null;
        whetherReject_tOracleOutput_12 = false;
                        if(row59.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_12.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_12.setInt(1, row59.TDOCUMENTOS_ID);
}

                        if(row59.DOCUMENTO == null) {
pstmt_tOracleOutput_12.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_12.setString(2, row59.DOCUMENTO);
}

                        if(row59.MENSAJE == null) {
pstmt_tOracleOutput_12.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_12.setString(3, row59.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_12++;
                    int processedCount_tOracleOutput_12 = pstmt_tOracleOutput_12.executeUpdate();
                    insertedCount_tOracleOutput_12 += processedCount_tOracleOutput_12;
                    rowsToCommitCount_tOracleOutput_12 += processedCount_tOracleOutput_12;
                } catch(java.lang.Exception e_tOracleOutput_12) {
globalMap.put("tOracleOutput_12_ERROR_MESSAGE",e_tOracleOutput_12.getMessage());
                    whetherReject_tOracleOutput_12 = true;
                            System.err.print(e_tOracleOutput_12.getMessage());
                }
            if(!whetherReject_tOracleOutput_12) {
                            row61 = new row61Struct();
                                row61.TDOCUMENTOS_ID = row59.TDOCUMENTOS_ID;
                                row61.DOCUMENTO = row59.DOCUMENTO;
                                row61.MENSAJE = row59.MENSAJE;
            }

 


	tos_count_tOracleOutput_12++;

/**
 * [tOracleOutput_12 main ] stop
 */
	
	/**
	 * [tOracleOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	

 



/**
 * [tOracleOutput_12 process_data_begin ] stop
 */
// Start of branch "row61"
if(row61 != null) { 



	
	/**
	 * [tJavaRow_20 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row61"
						
						);
					}
					

    //Code generate according to input schema and output schema
row62.TDOCUMENTOS_ID = row61.TDOCUMENTOS_ID;
row62.DOCUMENTO = row61.DOCUMENTO;
row62.PROCESADO = 5;//Código de procesado con duplicados en el sistema con el mismo primer nombre, primer apellido y número de documento.

    nb_line_tJavaRow_20++;   

 


	tos_count_tJavaRow_20++;

/**
 * [tJavaRow_20 main ] stop
 */
	
	/**
	 * [tJavaRow_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row62"
						
						);
					}
					



        whetherReject_tOracleOutput_16 = false;
                    if(row62.PROCESADO == null) {
pstmt_tOracleOutput_16.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_16.setInt(1, row62.PROCESADO);
}


                    if(row62.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_16.setNull(2 + count_tOracleOutput_16, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_16.setInt(2 + count_tOracleOutput_16, row62.TDOCUMENTOS_ID);
}


                    if(row62.DOCUMENTO == null) {
pstmt_tOracleOutput_16.setNull(3 + count_tOracleOutput_16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_16.setString(3 + count_tOracleOutput_16, row62.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_16++;
                    int processedCount_tOracleOutput_16 = pstmt_tOracleOutput_16.executeUpdate();
                    updatedCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                    rowsToCommitCount_tOracleOutput_16 += processedCount_tOracleOutput_16;
                } catch(java.lang.Exception e_tOracleOutput_16) {
globalMap.put("tOracleOutput_16_ERROR_MESSAGE",e_tOracleOutput_16.getMessage());
                    whetherReject_tOracleOutput_16 = true;
                            System.err.print(e_tOracleOutput_16.getMessage());
                }

 


	tos_count_tOracleOutput_16++;

/**
 * [tOracleOutput_16 main ] stop
 */
	
	/**
	 * [tOracleOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	

 



/**
 * [tOracleOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	

 



/**
 * [tOracleOutput_16 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_end ] stop
 */

} // End of branch "row61"




	
	/**
	 * [tOracleOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	

 



/**
 * [tOracleOutput_12 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_end ] stop
 */

} // End of branch "DUPLICADOS_PN_PA_D"




// Start of branch "PERSONAS_EXISTENTES2"
if(PERSONAS_EXISTENTES2 != null) { 



	
	/**
	 * [tJavaRow_16 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PERSONAS_EXISTENTES2"
						
						);
					}
					

    //Code generate according to input schema and output schema
row60.TDOCUMENTOS_ID = PERSONAS_EXISTENTES2.TDOCUMENTOS_ID;
row60.DOCUMENTO = PERSONAS_EXISTENTES2.DOCUMENTO;
row60.PERSONAS_ID = PERSONAS_EXISTENTES2.PERSONAS_ID;

    nb_line_tJavaRow_16++;   

 


	tos_count_tJavaRow_16++;

/**
 * [tJavaRow_16 main ] stop
 */
	
	/**
	 * [tJavaRow_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row60"
						
						);
					}
					



        whetherReject_tOracleOutput_17 = false;
                    if(row60.PERSONAS_ID == null) {
pstmt_tOracleOutput_17.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_17.setInt(1, row60.PERSONAS_ID);
}


                    if(row60.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_17.setNull(2 + count_tOracleOutput_17, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_17.setInt(2 + count_tOracleOutput_17, row60.TDOCUMENTOS_ID);
}


                    if(row60.DOCUMENTO == null) {
pstmt_tOracleOutput_17.setNull(3 + count_tOracleOutput_17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_17.setString(3 + count_tOracleOutput_17, row60.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_17++;
                    int processedCount_tOracleOutput_17 = pstmt_tOracleOutput_17.executeUpdate();
                    updatedCount_tOracleOutput_17 += processedCount_tOracleOutput_17;
                    rowsToCommitCount_tOracleOutput_17 += processedCount_tOracleOutput_17;
                } catch(java.lang.Exception e_tOracleOutput_17) {
globalMap.put("tOracleOutput_17_ERROR_MESSAGE",e_tOracleOutput_17.getMessage());
                    whetherReject_tOracleOutput_17 = true;
                            System.err.print(e_tOracleOutput_17.getMessage());
                }

 


	tos_count_tOracleOutput_17++;

/**
 * [tOracleOutput_17 main ] stop
 */
	
	/**
	 * [tOracleOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	

 



/**
 * [tOracleOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	

 



/**
 * [tOracleOutput_17 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_end ] stop
 */

} // End of branch "PERSONAS_EXISTENTES2"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());




/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJavaRow_13 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

globalMap.put("tJavaRow_13_NB_LINE",nb_line_tJavaRow_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DUPLICADOS_PN_PA_D");
			  	}
			  	
 

ok_Hash.put("tJavaRow_13", true);
end_Hash.put("tJavaRow_13", System.currentTimeMillis());




/**
 * [tJavaRow_13 end ] stop
 */

	
	/**
	 * [tOracleOutput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	
	



	
        if(pstmt_tOracleOutput_12 != null) {
			
				pstmt_tOracleOutput_12.close();
				resourceMap.remove("pstmt_tOracleOutput_12");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_12", true);

	
	nb_line_deleted_tOracleOutput_12=nb_line_deleted_tOracleOutput_12+ deletedCount_tOracleOutput_12;
	nb_line_update_tOracleOutput_12=nb_line_update_tOracleOutput_12 + updatedCount_tOracleOutput_12;
	nb_line_inserted_tOracleOutput_12=nb_line_inserted_tOracleOutput_12 + insertedCount_tOracleOutput_12;
	nb_line_rejected_tOracleOutput_12=nb_line_rejected_tOracleOutput_12 + rejectedCount_tOracleOutput_12;
	
        globalMap.put("tOracleOutput_12_NB_LINE",nb_line_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_UPDATED",nb_line_update_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_12);
        globalMap.put("tOracleOutput_12_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_12);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row59");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_12", true);
end_Hash.put("tOracleOutput_12", System.currentTimeMillis());




/**
 * [tOracleOutput_12 end ] stop
 */

	
	/**
	 * [tJavaRow_20 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

globalMap.put("tJavaRow_20_NB_LINE",nb_line_tJavaRow_20);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row61");
			  	}
			  	
 

ok_Hash.put("tJavaRow_20", true);
end_Hash.put("tJavaRow_20", System.currentTimeMillis());




/**
 * [tJavaRow_20 end ] stop
 */

	
	/**
	 * [tOracleOutput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	
	



	
        if(pstmt_tOracleOutput_16 != null) {
			
				pstmt_tOracleOutput_16.close();
				resourceMap.remove("pstmt_tOracleOutput_16");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_16", true);

	
	nb_line_deleted_tOracleOutput_16=nb_line_deleted_tOracleOutput_16+ deletedCount_tOracleOutput_16;
	nb_line_update_tOracleOutput_16=nb_line_update_tOracleOutput_16 + updatedCount_tOracleOutput_16;
	nb_line_inserted_tOracleOutput_16=nb_line_inserted_tOracleOutput_16 + insertedCount_tOracleOutput_16;
	nb_line_rejected_tOracleOutput_16=nb_line_rejected_tOracleOutput_16 + rejectedCount_tOracleOutput_16;
	
        globalMap.put("tOracleOutput_16_NB_LINE",nb_line_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_UPDATED",nb_line_update_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_16);
        globalMap.put("tOracleOutput_16_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_16);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row62");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_16", true);
end_Hash.put("tOracleOutput_16", System.currentTimeMillis());




/**
 * [tOracleOutput_16 end ] stop
 */













	
	/**
	 * [tJavaRow_16 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

globalMap.put("tJavaRow_16_NB_LINE",nb_line_tJavaRow_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PERSONAS_EXISTENTES2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_16", true);
end_Hash.put("tJavaRow_16", System.currentTimeMillis());




/**
 * [tJavaRow_16 end ] stop
 */

	
	/**
	 * [tOracleOutput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	
	



	
        if(pstmt_tOracleOutput_17 != null) {
			
				pstmt_tOracleOutput_17.close();
				resourceMap.remove("pstmt_tOracleOutput_17");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_17", true);

	
	nb_line_deleted_tOracleOutput_17=nb_line_deleted_tOracleOutput_17+ deletedCount_tOracleOutput_17;
	nb_line_update_tOracleOutput_17=nb_line_update_tOracleOutput_17 + updatedCount_tOracleOutput_17;
	nb_line_inserted_tOracleOutput_17=nb_line_inserted_tOracleOutput_17 + insertedCount_tOracleOutput_17;
	nb_line_rejected_tOracleOutput_17=nb_line_rejected_tOracleOutput_17 + rejectedCount_tOracleOutput_17;
	
        globalMap.put("tOracleOutput_17_NB_LINE",nb_line_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_UPDATED",nb_line_update_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_17);
        globalMap.put("tOracleOutput_17_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_17);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row60");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_17", true);
end_Hash.put("tOracleOutput_17", System.currentTimeMillis());




/**
 * [tOracleOutput_17 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tOracleInput_26Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_13 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 finally ] stop
 */

	
	/**
	 * [tOracleOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_12";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_12") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_12 = null;
                if ((pstmtToClose_tOracleOutput_12 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_12")) != null) {
                    pstmtToClose_tOracleOutput_12.close();
                }
    }
 



/**
 * [tOracleOutput_12 finally ] stop
 */

	
	/**
	 * [tJavaRow_20 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 finally ] stop
 */

	
	/**
	 * [tOracleOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_16";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_16") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_16 = null;
                if ((pstmtToClose_tOracleOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_16")) != null) {
                    pstmtToClose_tOracleOutput_16.close();
                }
    }
 



/**
 * [tOracleOutput_16 finally ] stop
 */













	
	/**
	 * [tJavaRow_16 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 finally ] stop
 */

	
	/**
	 * [tOracleOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_17";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_17") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_17 = null;
                if ((pstmtToClose_tOracleOutput_17 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_17")) != null) {
                    pstmtToClose_tOracleOutput_17.close();
                }
    }
 



/**
 * [tOracleOutput_17 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row71Struct implements routines.system.IPersistableRow<row71Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row71Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row70Struct implements routines.system.IPersistableRow<row70Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row70Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row69Struct implements routines.system.IPersistableRow<row69Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row69Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row68Struct implements routines.system.IPersistableRow<row68Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();
row69Struct row69 = new row69Struct();
row70Struct row70 = new row70Struct();
row71Struct row71 = new row71Struct();







	
	/**
	 * [tOracleOutput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_22", false);
		start_Hash.put("tOracleOutput_22", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row71");
					}
				
		int tos_count_tOracleOutput_22 = 0;
		






        int updateKeyCount_tOracleOutput_22 = 2;
        if(updateKeyCount_tOracleOutput_22 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_22 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_22 = 0;
    int nb_line_update_tOracleOutput_22 = 0;
    int nb_line_inserted_tOracleOutput_22 = 0;
    int nb_line_deleted_tOracleOutput_22 = 0;
    int nb_line_rejected_tOracleOutput_22 = 0;

    int tmp_batchUpdateCount_tOracleOutput_22 = 0;

    int deletedCount_tOracleOutput_22=0;
    int updatedCount_tOracleOutput_22=0;
    int insertedCount_tOracleOutput_22=0;
    int rowsToCommitCount_tOracleOutput_22=0;
    int rejectedCount_tOracleOutput_22=0;

    boolean whetherReject_tOracleOutput_22 = false;

    java.sql.Connection conn_tOracleOutput_22 = null;

    //optional table
    String dbschema_tOracleOutput_22 = null;
    String tableName_tOracleOutput_22 = null;
        dbschema_tOracleOutput_22 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_22 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_22=0;

        if(dbschema_tOracleOutput_22 == null || dbschema_tOracleOutput_22.trim().length() == 0) {
            tableName_tOracleOutput_22 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_22 = dbschema_tOracleOutput_22 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_22 = "UPDATE " + tableName_tOracleOutput_22 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_22 = conn_tOracleOutput_22.prepareStatement(update_tOracleOutput_22);
                resourceMap.put("pstmt_tOracleOutput_22", pstmt_tOracleOutput_22);





 



/**
 * [tOracleOutput_22 begin ] stop
 */



	
	/**
	 * [tJavaRow_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_25", false);
		start_Hash.put("tJavaRow_25", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row70");
					}
				
		int tos_count_tJavaRow_25 = 0;
		

int nb_line_tJavaRow_25 = 0;

 



/**
 * [tJavaRow_25 begin ] stop
 */



	
	/**
	 * [tOracleOutput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_21", false);
		start_Hash.put("tOracleOutput_21", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row69");
					}
				
		int tos_count_tOracleOutput_21 = 0;
		






    
    int nb_line_tOracleOutput_21 = 0;
    int nb_line_update_tOracleOutput_21 = 0;
    int nb_line_inserted_tOracleOutput_21 = 0;
    int nb_line_deleted_tOracleOutput_21 = 0;
    int nb_line_rejected_tOracleOutput_21 = 0;

    int tmp_batchUpdateCount_tOracleOutput_21 = 0;

    int deletedCount_tOracleOutput_21=0;
    int updatedCount_tOracleOutput_21=0;
    int insertedCount_tOracleOutput_21=0;
    int rowsToCommitCount_tOracleOutput_21=0;
    int rejectedCount_tOracleOutput_21=0;

    boolean whetherReject_tOracleOutput_21 = false;

    java.sql.Connection conn_tOracleOutput_21 = null;

    //optional table
    String dbschema_tOracleOutput_21 = null;
    String tableName_tOracleOutput_21 = null;
        dbschema_tOracleOutput_21 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_21 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_21=0;

        if(dbschema_tOracleOutput_21 == null || dbschema_tOracleOutput_21.trim().length() == 0) {
            tableName_tOracleOutput_21 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_21 = dbschema_tOracleOutput_21 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_21 = "INSERT INTO " + tableName_tOracleOutput_21 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_21 = conn_tOracleOutput_21.prepareStatement(insert_tOracleOutput_21);
                        resourceMap.put("pstmt_tOracleOutput_21", pstmt_tOracleOutput_21);





 



/**
 * [tOracleOutput_21 begin ] stop
 */



	
	/**
	 * [tJavaRow_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_24", false);
		start_Hash.put("tJavaRow_24", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tJavaRow_24 = 0;
		

int nb_line_tJavaRow_24 = 0;

 



/**
 * [tJavaRow_24 begin ] stop
 */



	
	/**
	 * [tOracleInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_26", false);
		start_Hash.put("tOracleInput_26", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_26";
	
	
		int tos_count_tOracleInput_26 = 0;
		
	


	
		    int nb_line_tOracleInput_26 = 0;
		    java.sql.Connection conn_tOracleInput_26 = null;
				conn_tOracleInput_26 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_26 = false;
				boolean isConnectionWrapped_tOracleInput_26 = !(conn_tOracleInput_26 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_26.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_26 = null;
                if (isConnectionWrapped_tOracleInput_26) {
					unwrappedOraConn_tOracleInput_26 = conn_tOracleInput_26.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_26 != null) {
                        isTimeZoneNull_tOracleInput_26 = (unwrappedOraConn_tOracleInput_26.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_26 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_26).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_26) {
					java.sql.Statement stmtGetTZ_tOracleInput_26 = conn_tOracleInput_26.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_26 = stmtGetTZ_tOracleInput_26.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_26 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_26.next()) {
						sessionTimezone_tOracleInput_26 = rsGetTZ_tOracleInput_26.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_26 && unwrappedOraConn_tOracleInput_26 != null) {
                        unwrappedOraConn_tOracleInput_26.setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_26).setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_26 = conn_tOracleInput_26.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_26.setFetchSize(1000);


		    String dbquery_tOracleInput_26 = "SELECT TCA.TDOCUMENTOS_ID,\n       TCA.DOCUMENTO \nFROM (SELECT TC.PRIMER_NOMBRE,\n        TC.PRIMER_APELLIDO,\n       "
+" TC.DOCUMENTO,\n        GP.ID AS PERSONAS_ID,\n        GA.ID AS AFILIADOS_ID\nFROM TST_CARGUEMASIVO TC\nINNER JOIN GEN_P"
+"ERSONAS GP ON GP.DOCUMENTO = TC.DOCUMENTO\n                              AND GP.PRIMER_NOMBRE = TC.PRIMER_NOMBRE\n      "
+"                        AND GP.PRIMER_APELLIDO = TC.PRIMER_APELLIDO\nLEFT JOIN GEN_AFILIADOS GA ON GA.PERSONAS_ID = GP.I"
+"D AND ROWNUM = 1                              \nWHERE TC.PROCESADO IS NULL GROUP BY TC.PRIMER_NOMBRE, TC.PRIMER_APELLIDO"
+", TC.DOCUMENTO, GP.ID, GA.ID HAVING (COUNT(1)>1)) PR\nINNER JOIN TST_CARGUEMASIVO TCA ON TCA.DOCUMENTO = PR.DOCUMENTO AN"
+"D TCA.PRIMER_NOMBRE = PR.PRIMER_NOMBRE AND TCA.PRIMER_APELLIDO = PR.PRIMER_APELLIDO";
		    

		    globalMap.put("tOracleInput_26_QUERY",dbquery_tOracleInput_26);

		    java.sql.ResultSet rs_tOracleInput_26 = null;

		    try {
		    	rs_tOracleInput_26 = stmt_tOracleInput_26.executeQuery(dbquery_tOracleInput_26);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_26 = rs_tOracleInput_26.getMetaData();
		    	int colQtyInRs_tOracleInput_26 = rsmd_tOracleInput_26.getColumnCount();

		    String tmpContent_tOracleInput_26 = null;
		    
		    
		    while (rs_tOracleInput_26.next()) {
		        nb_line_tOracleInput_26++;
		        
							if(colQtyInRs_tOracleInput_26 < 1) {
								row68.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(1) != null) {
						row68.TDOCUMENTOS_ID = rs_tOracleInput_26.getInt(1);
					} else {
				
						row68.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_26 < 2) {
								row68.DOCUMENTO = null;
							} else {
	                         		
        	row68.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_26, 2, false);
		                    }
					




 



/**
 * [tOracleInput_26 begin ] stop
 */
	
	/**
	 * [tOracleInput_26 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 


	tos_count_tOracleInput_26++;

/**
 * [tOracleInput_26 main ] stop
 */
	
	/**
	 * [tOracleInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_24 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					

    //Code generate according to input schema and output schema
row69.TDOCUMENTOS_ID = row68.TDOCUMENTOS_ID;
row69.DOCUMENTO = row68.DOCUMENTO;
row69.MENSAJE = "Existen personas en el sistema que concuerda con el mismo primer nombre, primer apellido y número de documento";

    nb_line_tJavaRow_24++;   

 


	tos_count_tJavaRow_24++;

/**
 * [tJavaRow_24 main ] stop
 */
	
	/**
	 * [tJavaRow_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_21 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row69"
						
						);
					}
					



            row70 = null;
        whetherReject_tOracleOutput_21 = false;
                        if(row69.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_21.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_21.setInt(1, row69.TDOCUMENTOS_ID);
}

                        if(row69.DOCUMENTO == null) {
pstmt_tOracleOutput_21.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_21.setString(2, row69.DOCUMENTO);
}

                        if(row69.MENSAJE == null) {
pstmt_tOracleOutput_21.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_21.setString(3, row69.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_21++;
                    int processedCount_tOracleOutput_21 = pstmt_tOracleOutput_21.executeUpdate();
                    insertedCount_tOracleOutput_21 += processedCount_tOracleOutput_21;
                    rowsToCommitCount_tOracleOutput_21 += processedCount_tOracleOutput_21;
                } catch(java.lang.Exception e_tOracleOutput_21) {
globalMap.put("tOracleOutput_21_ERROR_MESSAGE",e_tOracleOutput_21.getMessage());
                    whetherReject_tOracleOutput_21 = true;
                            System.err.print(e_tOracleOutput_21.getMessage());
                }
            if(!whetherReject_tOracleOutput_21) {
                            row70 = new row70Struct();
                                row70.TDOCUMENTOS_ID = row69.TDOCUMENTOS_ID;
                                row70.DOCUMENTO = row69.DOCUMENTO;
                                row70.MENSAJE = row69.MENSAJE;
            }

 


	tos_count_tOracleOutput_21++;

/**
 * [tOracleOutput_21 main ] stop
 */
	
	/**
	 * [tOracleOutput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_21";
	
	

 



/**
 * [tOracleOutput_21 process_data_begin ] stop
 */
// Start of branch "row70"
if(row70 != null) { 



	
	/**
	 * [tJavaRow_25 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row70"
						
						);
					}
					

    //Code generate according to input schema and output schema
row71.TDOCUMENTOS_ID = row70.TDOCUMENTOS_ID;
row71.DOCUMENTO = row70.DOCUMENTO;
row71.PROCESADO = 5;//Código de procesado con duplicados en el sistema con el mismo primer nombre, primer apellido y número de documento.

    nb_line_tJavaRow_25++;   

 


	tos_count_tJavaRow_25++;

/**
 * [tJavaRow_25 main ] stop
 */
	
	/**
	 * [tJavaRow_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_22 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row71"
						
						);
					}
					



        whetherReject_tOracleOutput_22 = false;
                    if(row71.PROCESADO == null) {
pstmt_tOracleOutput_22.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_22.setInt(1, row71.PROCESADO);
}


                    if(row71.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_22.setNull(2 + count_tOracleOutput_22, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_22.setInt(2 + count_tOracleOutput_22, row71.TDOCUMENTOS_ID);
}


                    if(row71.DOCUMENTO == null) {
pstmt_tOracleOutput_22.setNull(3 + count_tOracleOutput_22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_22.setString(3 + count_tOracleOutput_22, row71.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_22++;
                    int processedCount_tOracleOutput_22 = pstmt_tOracleOutput_22.executeUpdate();
                    updatedCount_tOracleOutput_22 += processedCount_tOracleOutput_22;
                    rowsToCommitCount_tOracleOutput_22 += processedCount_tOracleOutput_22;
                } catch(java.lang.Exception e_tOracleOutput_22) {
globalMap.put("tOracleOutput_22_ERROR_MESSAGE",e_tOracleOutput_22.getMessage());
                    whetherReject_tOracleOutput_22 = true;
                            System.err.print(e_tOracleOutput_22.getMessage());
                }

 


	tos_count_tOracleOutput_22++;

/**
 * [tOracleOutput_22 main ] stop
 */
	
	/**
	 * [tOracleOutput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_22";
	
	

 



/**
 * [tOracleOutput_22 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_22";
	
	

 



/**
 * [tOracleOutput_22 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 process_data_end ] stop
 */

} // End of branch "row70"




	
	/**
	 * [tOracleOutput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_21";
	
	

 



/**
 * [tOracleOutput_21 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_26 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

}
}finally{
	if (rs_tOracleInput_26 != null) {
		rs_tOracleInput_26.close();
	}
	if (stmt_tOracleInput_26 != null) {
		stmt_tOracleInput_26.close();
	}
}

globalMap.put("tOracleInput_26_NB_LINE",nb_line_tOracleInput_26);
 

ok_Hash.put("tOracleInput_26", true);
end_Hash.put("tOracleInput_26", System.currentTimeMillis());




/**
 * [tOracleInput_26 end ] stop
 */

	
	/**
	 * [tJavaRow_24 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

globalMap.put("tJavaRow_24_NB_LINE",nb_line_tJavaRow_24);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tJavaRow_24", true);
end_Hash.put("tJavaRow_24", System.currentTimeMillis());




/**
 * [tJavaRow_24 end ] stop
 */

	
	/**
	 * [tOracleOutput_21 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_21";
	
	
	



	
        if(pstmt_tOracleOutput_21 != null) {
			
				pstmt_tOracleOutput_21.close();
				resourceMap.remove("pstmt_tOracleOutput_21");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_21", true);

	
	nb_line_deleted_tOracleOutput_21=nb_line_deleted_tOracleOutput_21+ deletedCount_tOracleOutput_21;
	nb_line_update_tOracleOutput_21=nb_line_update_tOracleOutput_21 + updatedCount_tOracleOutput_21;
	nb_line_inserted_tOracleOutput_21=nb_line_inserted_tOracleOutput_21 + insertedCount_tOracleOutput_21;
	nb_line_rejected_tOracleOutput_21=nb_line_rejected_tOracleOutput_21 + rejectedCount_tOracleOutput_21;
	
        globalMap.put("tOracleOutput_21_NB_LINE",nb_line_tOracleOutput_21);
        globalMap.put("tOracleOutput_21_NB_LINE_UPDATED",nb_line_update_tOracleOutput_21);
        globalMap.put("tOracleOutput_21_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_21);
        globalMap.put("tOracleOutput_21_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_21);
        globalMap.put("tOracleOutput_21_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_21);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row69");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_21", true);
end_Hash.put("tOracleOutput_21", System.currentTimeMillis());




/**
 * [tOracleOutput_21 end ] stop
 */

	
	/**
	 * [tJavaRow_25 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

globalMap.put("tJavaRow_25_NB_LINE",nb_line_tJavaRow_25);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row70");
			  	}
			  	
 

ok_Hash.put("tJavaRow_25", true);
end_Hash.put("tJavaRow_25", System.currentTimeMillis());




/**
 * [tJavaRow_25 end ] stop
 */

	
	/**
	 * [tOracleOutput_22 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_22";
	
	
	



	
        if(pstmt_tOracleOutput_22 != null) {
			
				pstmt_tOracleOutput_22.close();
				resourceMap.remove("pstmt_tOracleOutput_22");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_22", true);

	
	nb_line_deleted_tOracleOutput_22=nb_line_deleted_tOracleOutput_22+ deletedCount_tOracleOutput_22;
	nb_line_update_tOracleOutput_22=nb_line_update_tOracleOutput_22 + updatedCount_tOracleOutput_22;
	nb_line_inserted_tOracleOutput_22=nb_line_inserted_tOracleOutput_22 + insertedCount_tOracleOutput_22;
	nb_line_rejected_tOracleOutput_22=nb_line_rejected_tOracleOutput_22 + rejectedCount_tOracleOutput_22;
	
        globalMap.put("tOracleOutput_22_NB_LINE",nb_line_tOracleOutput_22);
        globalMap.put("tOracleOutput_22_NB_LINE_UPDATED",nb_line_update_tOracleOutput_22);
        globalMap.put("tOracleOutput_22_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_22);
        globalMap.put("tOracleOutput_22_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_22);
        globalMap.put("tOracleOutput_22_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_22);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row71");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_22", true);
end_Hash.put("tOracleOutput_22", System.currentTimeMillis());




/**
 * [tOracleOutput_22 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_26:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tOracleInput_21Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_26 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 finally ] stop
 */

	
	/**
	 * [tJavaRow_24 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_24";
	
	

 



/**
 * [tJavaRow_24 finally ] stop
 */

	
	/**
	 * [tOracleOutput_21 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_21";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_21") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_21 = null;
                if ((pstmtToClose_tOracleOutput_21 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_21")) != null) {
                    pstmtToClose_tOracleOutput_21.close();
                }
    }
 



/**
 * [tOracleOutput_21 finally ] stop
 */

	
	/**
	 * [tJavaRow_25 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_25";
	
	

 



/**
 * [tJavaRow_25 finally ] stop
 */

	
	/**
	 * [tOracleOutput_22 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_22";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_22") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_22 = null;
                if ((pstmtToClose_tOracleOutput_22 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_22")) != null) {
                    pstmtToClose_tOracleOutput_22.close();
                }
    }
 



/**
 * [tOracleOutput_22 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row67Struct implements routines.system.IPersistableRow<row67Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row67Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row66Struct implements routines.system.IPersistableRow<row66Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row66Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row65Struct implements routines.system.IPersistableRow<row65Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row65Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row64Struct implements routines.system.IPersistableRow<row64Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row64Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class DUPLICADOS_ALL_NAME_FNStruct implements routines.system.IPersistableRow<DUPLICADOS_ALL_NAME_FNStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DUPLICADOS_ALL_NAME_FNStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PERSONAS_EXISTENTES3Struct implements routines.system.IPersistableRow<PERSONAS_EXISTENTES3Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PERSONAS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PERSONAS_EXISTENTES3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row63Struct implements routines.system.IPersistableRow<row63Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 40;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public int PERSONAS_ID;

				public int getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
						this.AFILIADOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row63Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row63Struct row63 = new row63Struct();
DUPLICADOS_ALL_NAME_FNStruct DUPLICADOS_ALL_NAME_FN = new DUPLICADOS_ALL_NAME_FNStruct();
row64Struct row64 = new row64Struct();
row65Struct row65 = new row65Struct();
row66Struct row66 = new row66Struct();
PERSONAS_EXISTENTES3Struct PERSONAS_EXISTENTES3 = new PERSONAS_EXISTENTES3Struct();
row67Struct row67 = new row67Struct();








	
	/**
	 * [tOracleOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_19", false);
		start_Hash.put("tOracleOutput_19", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row66");
					}
				
		int tos_count_tOracleOutput_19 = 0;
		






        int updateKeyCount_tOracleOutput_19 = 2;
        if(updateKeyCount_tOracleOutput_19 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_19 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_19 = 0;
    int nb_line_update_tOracleOutput_19 = 0;
    int nb_line_inserted_tOracleOutput_19 = 0;
    int nb_line_deleted_tOracleOutput_19 = 0;
    int nb_line_rejected_tOracleOutput_19 = 0;

    int tmp_batchUpdateCount_tOracleOutput_19 = 0;

    int deletedCount_tOracleOutput_19=0;
    int updatedCount_tOracleOutput_19=0;
    int insertedCount_tOracleOutput_19=0;
    int rowsToCommitCount_tOracleOutput_19=0;
    int rejectedCount_tOracleOutput_19=0;

    boolean whetherReject_tOracleOutput_19 = false;

    java.sql.Connection conn_tOracleOutput_19 = null;

    //optional table
    String dbschema_tOracleOutput_19 = null;
    String tableName_tOracleOutput_19 = null;
        dbschema_tOracleOutput_19 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_19 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_19=0;

        if(dbschema_tOracleOutput_19 == null || dbschema_tOracleOutput_19.trim().length() == 0) {
            tableName_tOracleOutput_19 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_19 = dbschema_tOracleOutput_19 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_19 = "UPDATE " + tableName_tOracleOutput_19 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_19 = conn_tOracleOutput_19.prepareStatement(update_tOracleOutput_19);
                resourceMap.put("pstmt_tOracleOutput_19", pstmt_tOracleOutput_19);





 



/**
 * [tOracleOutput_19 begin ] stop
 */



	
	/**
	 * [tJavaRow_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_22", false);
		start_Hash.put("tJavaRow_22", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row65");
					}
				
		int tos_count_tJavaRow_22 = 0;
		

int nb_line_tJavaRow_22 = 0;

 



/**
 * [tJavaRow_22 begin ] stop
 */



	
	/**
	 * [tOracleOutput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_18", false);
		start_Hash.put("tOracleOutput_18", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row64");
					}
				
		int tos_count_tOracleOutput_18 = 0;
		






    
    int nb_line_tOracleOutput_18 = 0;
    int nb_line_update_tOracleOutput_18 = 0;
    int nb_line_inserted_tOracleOutput_18 = 0;
    int nb_line_deleted_tOracleOutput_18 = 0;
    int nb_line_rejected_tOracleOutput_18 = 0;

    int tmp_batchUpdateCount_tOracleOutput_18 = 0;

    int deletedCount_tOracleOutput_18=0;
    int updatedCount_tOracleOutput_18=0;
    int insertedCount_tOracleOutput_18=0;
    int rowsToCommitCount_tOracleOutput_18=0;
    int rejectedCount_tOracleOutput_18=0;

    boolean whetherReject_tOracleOutput_18 = false;

    java.sql.Connection conn_tOracleOutput_18 = null;

    //optional table
    String dbschema_tOracleOutput_18 = null;
    String tableName_tOracleOutput_18 = null;
        dbschema_tOracleOutput_18 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_18 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_18=0;

        if(dbschema_tOracleOutput_18 == null || dbschema_tOracleOutput_18.trim().length() == 0) {
            tableName_tOracleOutput_18 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_18 = dbschema_tOracleOutput_18 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_18 = "INSERT INTO " + tableName_tOracleOutput_18 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_18 = conn_tOracleOutput_18.prepareStatement(insert_tOracleOutput_18);
                        resourceMap.put("pstmt_tOracleOutput_18", pstmt_tOracleOutput_18);





 



/**
 * [tOracleOutput_18 begin ] stop
 */



	
	/**
	 * [tJavaRow_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_21", false);
		start_Hash.put("tJavaRow_21", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DUPLICADOS_ALL_NAME_FN");
					}
				
		int tos_count_tJavaRow_21 = 0;
		

int nb_line_tJavaRow_21 = 0;

 



/**
 * [tJavaRow_21 begin ] stop
 */





	
	/**
	 * [tOracleOutput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_20", false);
		start_Hash.put("tOracleOutput_20", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row67");
					}
				
		int tos_count_tOracleOutput_20 = 0;
		






        int updateKeyCount_tOracleOutput_20 = 2;
        if(updateKeyCount_tOracleOutput_20 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_20 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_20 = 0;
    int nb_line_update_tOracleOutput_20 = 0;
    int nb_line_inserted_tOracleOutput_20 = 0;
    int nb_line_deleted_tOracleOutput_20 = 0;
    int nb_line_rejected_tOracleOutput_20 = 0;

    int tmp_batchUpdateCount_tOracleOutput_20 = 0;

    int deletedCount_tOracleOutput_20=0;
    int updatedCount_tOracleOutput_20=0;
    int insertedCount_tOracleOutput_20=0;
    int rowsToCommitCount_tOracleOutput_20=0;
    int rejectedCount_tOracleOutput_20=0;

    boolean whetherReject_tOracleOutput_20 = false;

    java.sql.Connection conn_tOracleOutput_20 = null;

    //optional table
    String dbschema_tOracleOutput_20 = null;
    String tableName_tOracleOutput_20 = null;
        dbschema_tOracleOutput_20 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_20 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_20=0;

        if(dbschema_tOracleOutput_20 == null || dbschema_tOracleOutput_20.trim().length() == 0) {
            tableName_tOracleOutput_20 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_20 = dbschema_tOracleOutput_20 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_20 = "UPDATE " + tableName_tOracleOutput_20 + " SET PERSONAS_ID = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_20 = conn_tOracleOutput_20.prepareStatement(update_tOracleOutput_20);
                resourceMap.put("pstmt_tOracleOutput_20", pstmt_tOracleOutput_20);





 



/**
 * [tOracleOutput_20 begin ] stop
 */



	
	/**
	 * [tJavaRow_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_23", false);
		start_Hash.put("tJavaRow_23", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PERSONAS_EXISTENTES3");
					}
				
		int tos_count_tJavaRow_23 = 0;
		

int nb_line_tJavaRow_23 = 0;

 



/**
 * [tJavaRow_23 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row63");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
DUPLICADOS_ALL_NAME_FNStruct DUPLICADOS_ALL_NAME_FN_tmp = new DUPLICADOS_ALL_NAME_FNStruct();
PERSONAS_EXISTENTES3Struct PERSONAS_EXISTENTES3_tmp = new PERSONAS_EXISTENTES3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_21", false);
		start_Hash.put("tOracleInput_21", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_21";
	
	
		int tos_count_tOracleInput_21 = 0;
		
	


	
		    int nb_line_tOracleInput_21 = 0;
		    java.sql.Connection conn_tOracleInput_21 = null;
				conn_tOracleInput_21 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_21 = false;
				boolean isConnectionWrapped_tOracleInput_21 = !(conn_tOracleInput_21 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_21.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_21 = null;
                if (isConnectionWrapped_tOracleInput_21) {
					unwrappedOraConn_tOracleInput_21 = conn_tOracleInput_21.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_21 != null) {
                        isTimeZoneNull_tOracleInput_21 = (unwrappedOraConn_tOracleInput_21.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_21 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_21).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_21) {
					java.sql.Statement stmtGetTZ_tOracleInput_21 = conn_tOracleInput_21.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_21 = stmtGetTZ_tOracleInput_21.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_21 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_21.next()) {
						sessionTimezone_tOracleInput_21 = rsGetTZ_tOracleInput_21.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_21 && unwrappedOraConn_tOracleInput_21 != null) {
                        unwrappedOraConn_tOracleInput_21.setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_21).setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_21 = conn_tOracleInput_21.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_21.setFetchSize(1000);


		    String dbquery_tOracleInput_21 = "SELECT TCA.TDOCUMENTOS_ID,\n       TCA.DOCUMENTO,\n       PR.PERSONAS_ID,\n       PR.AFILIADOS_ID \nFROM (SELECT TC.PRI"
+"MER_NOMBRE,\n        TC.PRIMER_APELLIDO,\n        TC.DOCUMENTO,\n        GP.ID AS PERSONAS_ID,\n        GA.ID AS AFILIAD"
+"OS_ID\nFROM TST_CARGUEMASIVO TC\nINNER JOIN GEN_PERSONAS GP ON GP.FECHA_NACIMIENTO = TC.FECHA_NACIMIENTO\n              "
+"                AND GP.PRIMER_NOMBRE = TC.PRIMER_NOMBRE\n                              AND GP.SEGUNDO_NOMBRE = TC.SEGUND"
+"O_NOMBRE\n                              AND GP.PRIMER_APELLIDO = TC.PRIMER_APELLIDO\n                              AND G"
+"P.SEGUNDO_APELLIDO = TC.SEGUNDO_APELLIDO\nLEFT JOIN GEN_AFILIADOS GA ON GA.PERSONAS_ID = GP.ID AND ROWNUM = 1           "
+"                   \nWHERE TC.PROCESADO IS NULL GROUP BY TC.PRIMER_NOMBRE, TC.PRIMER_APELLIDO, TC.DOCUMENTO, GP.ID, GA.I"
+"D HAVING (COUNT(1)=1)) PR\nINNER JOIN TST_CARGUEMASIVO TCA ON TCA.DOCUMENTO = PR.DOCUMENTO AND TCA.PRIMER_NOMBRE = PR.PR"
+"IMER_NOMBRE AND TCA.PRIMER_APELLIDO = PR.PRIMER_APELLIDO";
		    

		    globalMap.put("tOracleInput_21_QUERY",dbquery_tOracleInput_21);

		    java.sql.ResultSet rs_tOracleInput_21 = null;

		    try {
		    	rs_tOracleInput_21 = stmt_tOracleInput_21.executeQuery(dbquery_tOracleInput_21);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_21 = rs_tOracleInput_21.getMetaData();
		    	int colQtyInRs_tOracleInput_21 = rsmd_tOracleInput_21.getColumnCount();

		    String tmpContent_tOracleInput_21 = null;
		    
		    
		    while (rs_tOracleInput_21.next()) {
		        nb_line_tOracleInput_21++;
		        
							if(colQtyInRs_tOracleInput_21 < 1) {
								row63.TDOCUMENTOS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(1) != null) {
						row63.TDOCUMENTOS_ID = rs_tOracleInput_21.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_21 < 2) {
								row63.DOCUMENTO = null;
							} else {
	                         		
        	row63.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_21, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_21 < 3) {
								row63.PERSONAS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(3) != null) {
						row63.PERSONAS_ID = rs_tOracleInput_21.getInt(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_21 < 4) {
								row63.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(4) != null) {
						row63.AFILIADOS_ID = rs_tOracleInput_21.getInt(4);
					} else {
				
						row63.AFILIADOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_21 begin ] stop
 */
	
	/**
	 * [tOracleInput_21 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 


	tos_count_tOracleInput_21++;

/**
 * [tOracleInput_21 main ] stop
 */
	
	/**
	 * [tOracleInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row63"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

DUPLICADOS_ALL_NAME_FN = null;
PERSONAS_EXISTENTES3 = null;

boolean rejected_tMap_4 = true;

// # Output table : 'DUPLICADOS_ALL_NAME_FN'
// # Filter conditions 
if( 

row63.AFILIADOS_ID != null

 ) {
rejected_tMap_4 = false;
DUPLICADOS_ALL_NAME_FN_tmp.TDOCUMENTOS_ID = row63.TDOCUMENTOS_ID;
DUPLICADOS_ALL_NAME_FN_tmp.DOCUMENTO = row63.DOCUMENTO;
DUPLICADOS_ALL_NAME_FN = DUPLICADOS_ALL_NAME_FN_tmp;
} // closing filter/reject
// ###### START REJECTS ##### 

// # Output reject table : 'PERSONAS_EXISTENTES3'
// # Filter conditions 
if( rejected_tMap_4 ) {
PERSONAS_EXISTENTES3_tmp.TDOCUMENTOS_ID = row63.TDOCUMENTOS_ID;
PERSONAS_EXISTENTES3_tmp.DOCUMENTO = row63.DOCUMENTO;
PERSONAS_EXISTENTES3_tmp.PERSONAS_ID = row63.PERSONAS_ID;
PERSONAS_EXISTENTES3 = PERSONAS_EXISTENTES3_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "DUPLICADOS_ALL_NAME_FN"
if(DUPLICADOS_ALL_NAME_FN != null) { 



	
	/**
	 * [tJavaRow_21 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DUPLICADOS_ALL_NAME_FN"
						
						);
					}
					

    //Code generate according to input schema and output schema
row64.TDOCUMENTOS_ID = DUPLICADOS_ALL_NAME_FN.TDOCUMENTOS_ID;
row64.DOCUMENTO = DUPLICADOS_ALL_NAME_FN.DOCUMENTO;
row64.MENSAJE = "Existen personas en el sistema que concuerda con el mismo primer nombre, segundo apellido, primer apellido, segundo apellido y fecha de nacimiento";




 



   
   

    nb_line_tJavaRow_21++;   

 


	tos_count_tJavaRow_21++;

/**
 * [tJavaRow_21 main ] stop
 */
	
	/**
	 * [tJavaRow_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row64"
						
						);
					}
					



            row65 = null;
        whetherReject_tOracleOutput_18 = false;
                        if(row64.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_18.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_18.setInt(1, row64.TDOCUMENTOS_ID);
}

                        if(row64.DOCUMENTO == null) {
pstmt_tOracleOutput_18.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_18.setString(2, row64.DOCUMENTO);
}

                        if(row64.MENSAJE == null) {
pstmt_tOracleOutput_18.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_18.setString(3, row64.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_18++;
                    int processedCount_tOracleOutput_18 = pstmt_tOracleOutput_18.executeUpdate();
                    insertedCount_tOracleOutput_18 += processedCount_tOracleOutput_18;
                    rowsToCommitCount_tOracleOutput_18 += processedCount_tOracleOutput_18;
                } catch(java.lang.Exception e_tOracleOutput_18) {
globalMap.put("tOracleOutput_18_ERROR_MESSAGE",e_tOracleOutput_18.getMessage());
                    whetherReject_tOracleOutput_18 = true;
                            System.err.print(e_tOracleOutput_18.getMessage());
                }
            if(!whetherReject_tOracleOutput_18) {
                            row65 = new row65Struct();
                                row65.TDOCUMENTOS_ID = row64.TDOCUMENTOS_ID;
                                row65.DOCUMENTO = row64.DOCUMENTO;
                                row65.MENSAJE = row64.MENSAJE;
            }

 


	tos_count_tOracleOutput_18++;

/**
 * [tOracleOutput_18 main ] stop
 */
	
	/**
	 * [tOracleOutput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	

 



/**
 * [tOracleOutput_18 process_data_begin ] stop
 */
// Start of branch "row65"
if(row65 != null) { 



	
	/**
	 * [tJavaRow_22 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row65"
						
						);
					}
					

    //Code generate according to input schema and output schema
row66.TDOCUMENTOS_ID = row65.TDOCUMENTOS_ID;
row66.DOCUMENTO = row65.DOCUMENTO;
row66.PROCESADO = 6;//Código de procesado con duplicados en el sistema con el mismo primer nombre, segundo nombre, primer apellido, segundo apellido y fecha de nacimiento.

    nb_line_tJavaRow_22++;   

 


	tos_count_tJavaRow_22++;

/**
 * [tJavaRow_22 main ] stop
 */
	
	/**
	 * [tJavaRow_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_19 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row66"
						
						);
					}
					



        whetherReject_tOracleOutput_19 = false;
                    if(row66.PROCESADO == null) {
pstmt_tOracleOutput_19.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_19.setInt(1, row66.PROCESADO);
}


                    if(row66.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_19.setNull(2 + count_tOracleOutput_19, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_19.setInt(2 + count_tOracleOutput_19, row66.TDOCUMENTOS_ID);
}


                    if(row66.DOCUMENTO == null) {
pstmt_tOracleOutput_19.setNull(3 + count_tOracleOutput_19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_19.setString(3 + count_tOracleOutput_19, row66.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_19++;
                    int processedCount_tOracleOutput_19 = pstmt_tOracleOutput_19.executeUpdate();
                    updatedCount_tOracleOutput_19 += processedCount_tOracleOutput_19;
                    rowsToCommitCount_tOracleOutput_19 += processedCount_tOracleOutput_19;
                } catch(java.lang.Exception e_tOracleOutput_19) {
globalMap.put("tOracleOutput_19_ERROR_MESSAGE",e_tOracleOutput_19.getMessage());
                    whetherReject_tOracleOutput_19 = true;
                            System.err.print(e_tOracleOutput_19.getMessage());
                }

 


	tos_count_tOracleOutput_19++;

/**
 * [tOracleOutput_19 main ] stop
 */
	
	/**
	 * [tOracleOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	

 



/**
 * [tOracleOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	

 



/**
 * [tOracleOutput_19 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 process_data_end ] stop
 */

} // End of branch "row65"




	
	/**
	 * [tOracleOutput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	

 



/**
 * [tOracleOutput_18 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_end ] stop
 */

} // End of branch "DUPLICADOS_ALL_NAME_FN"




// Start of branch "PERSONAS_EXISTENTES3"
if(PERSONAS_EXISTENTES3 != null) { 



	
	/**
	 * [tJavaRow_23 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PERSONAS_EXISTENTES3"
						
						);
					}
					

    //Code generate according to input schema and output schema
row67.TDOCUMENTOS_ID = PERSONAS_EXISTENTES3.TDOCUMENTOS_ID;
row67.DOCUMENTO = PERSONAS_EXISTENTES3.DOCUMENTO;
row67.PERSONAS_ID = PERSONAS_EXISTENTES3.PERSONAS_ID;

    nb_line_tJavaRow_23++;   

 


	tos_count_tJavaRow_23++;

/**
 * [tJavaRow_23 main ] stop
 */
	
	/**
	 * [tJavaRow_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_20 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row67"
						
						);
					}
					



        whetherReject_tOracleOutput_20 = false;
                    if(row67.PERSONAS_ID == null) {
pstmt_tOracleOutput_20.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_20.setInt(1, row67.PERSONAS_ID);
}


                    if(row67.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_20.setNull(2 + count_tOracleOutput_20, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_20.setInt(2 + count_tOracleOutput_20, row67.TDOCUMENTOS_ID);
}


                    if(row67.DOCUMENTO == null) {
pstmt_tOracleOutput_20.setNull(3 + count_tOracleOutput_20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_20.setString(3 + count_tOracleOutput_20, row67.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_20++;
                    int processedCount_tOracleOutput_20 = pstmt_tOracleOutput_20.executeUpdate();
                    updatedCount_tOracleOutput_20 += processedCount_tOracleOutput_20;
                    rowsToCommitCount_tOracleOutput_20 += processedCount_tOracleOutput_20;
                } catch(java.lang.Exception e_tOracleOutput_20) {
globalMap.put("tOracleOutput_20_ERROR_MESSAGE",e_tOracleOutput_20.getMessage());
                    whetherReject_tOracleOutput_20 = true;
                            System.err.print(e_tOracleOutput_20.getMessage());
                }

 


	tos_count_tOracleOutput_20++;

/**
 * [tOracleOutput_20 main ] stop
 */
	
	/**
	 * [tOracleOutput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_20";
	
	

 



/**
 * [tOracleOutput_20 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_20";
	
	

 



/**
 * [tOracleOutput_20 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 process_data_end ] stop
 */

} // End of branch "PERSONAS_EXISTENTES3"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_21 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

}
}finally{
	if (rs_tOracleInput_21 != null) {
		rs_tOracleInput_21.close();
	}
	if (stmt_tOracleInput_21 != null) {
		stmt_tOracleInput_21.close();
	}
}

globalMap.put("tOracleInput_21_NB_LINE",nb_line_tOracleInput_21);
 

ok_Hash.put("tOracleInput_21", true);
end_Hash.put("tOracleInput_21", System.currentTimeMillis());




/**
 * [tOracleInput_21 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row63");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJavaRow_21 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

globalMap.put("tJavaRow_21_NB_LINE",nb_line_tJavaRow_21);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DUPLICADOS_ALL_NAME_FN");
			  	}
			  	
 

ok_Hash.put("tJavaRow_21", true);
end_Hash.put("tJavaRow_21", System.currentTimeMillis());




/**
 * [tJavaRow_21 end ] stop
 */

	
	/**
	 * [tOracleOutput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	
	



	
        if(pstmt_tOracleOutput_18 != null) {
			
				pstmt_tOracleOutput_18.close();
				resourceMap.remove("pstmt_tOracleOutput_18");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_18", true);

	
	nb_line_deleted_tOracleOutput_18=nb_line_deleted_tOracleOutput_18+ deletedCount_tOracleOutput_18;
	nb_line_update_tOracleOutput_18=nb_line_update_tOracleOutput_18 + updatedCount_tOracleOutput_18;
	nb_line_inserted_tOracleOutput_18=nb_line_inserted_tOracleOutput_18 + insertedCount_tOracleOutput_18;
	nb_line_rejected_tOracleOutput_18=nb_line_rejected_tOracleOutput_18 + rejectedCount_tOracleOutput_18;
	
        globalMap.put("tOracleOutput_18_NB_LINE",nb_line_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_UPDATED",nb_line_update_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_18);
        globalMap.put("tOracleOutput_18_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_18);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row64");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_18", true);
end_Hash.put("tOracleOutput_18", System.currentTimeMillis());




/**
 * [tOracleOutput_18 end ] stop
 */

	
	/**
	 * [tJavaRow_22 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

globalMap.put("tJavaRow_22_NB_LINE",nb_line_tJavaRow_22);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row65");
			  	}
			  	
 

ok_Hash.put("tJavaRow_22", true);
end_Hash.put("tJavaRow_22", System.currentTimeMillis());




/**
 * [tJavaRow_22 end ] stop
 */

	
	/**
	 * [tOracleOutput_19 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	
	



	
        if(pstmt_tOracleOutput_19 != null) {
			
				pstmt_tOracleOutput_19.close();
				resourceMap.remove("pstmt_tOracleOutput_19");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_19", true);

	
	nb_line_deleted_tOracleOutput_19=nb_line_deleted_tOracleOutput_19+ deletedCount_tOracleOutput_19;
	nb_line_update_tOracleOutput_19=nb_line_update_tOracleOutput_19 + updatedCount_tOracleOutput_19;
	nb_line_inserted_tOracleOutput_19=nb_line_inserted_tOracleOutput_19 + insertedCount_tOracleOutput_19;
	nb_line_rejected_tOracleOutput_19=nb_line_rejected_tOracleOutput_19 + rejectedCount_tOracleOutput_19;
	
        globalMap.put("tOracleOutput_19_NB_LINE",nb_line_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_UPDATED",nb_line_update_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_19);
        globalMap.put("tOracleOutput_19_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_19);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row66");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_19", true);
end_Hash.put("tOracleOutput_19", System.currentTimeMillis());




/**
 * [tOracleOutput_19 end ] stop
 */













	
	/**
	 * [tJavaRow_23 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

globalMap.put("tJavaRow_23_NB_LINE",nb_line_tJavaRow_23);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PERSONAS_EXISTENTES3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_23", true);
end_Hash.put("tJavaRow_23", System.currentTimeMillis());




/**
 * [tJavaRow_23 end ] stop
 */

	
	/**
	 * [tOracleOutput_20 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_20";
	
	
	



	
        if(pstmt_tOracleOutput_20 != null) {
			
				pstmt_tOracleOutput_20.close();
				resourceMap.remove("pstmt_tOracleOutput_20");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_20", true);

	
	nb_line_deleted_tOracleOutput_20=nb_line_deleted_tOracleOutput_20+ deletedCount_tOracleOutput_20;
	nb_line_update_tOracleOutput_20=nb_line_update_tOracleOutput_20 + updatedCount_tOracleOutput_20;
	nb_line_inserted_tOracleOutput_20=nb_line_inserted_tOracleOutput_20 + insertedCount_tOracleOutput_20;
	nb_line_rejected_tOracleOutput_20=nb_line_rejected_tOracleOutput_20 + rejectedCount_tOracleOutput_20;
	
        globalMap.put("tOracleOutput_20_NB_LINE",nb_line_tOracleOutput_20);
        globalMap.put("tOracleOutput_20_NB_LINE_UPDATED",nb_line_update_tOracleOutput_20);
        globalMap.put("tOracleOutput_20_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_20);
        globalMap.put("tOracleOutput_20_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_20);
        globalMap.put("tOracleOutput_20_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_20);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row67");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_20", true);
end_Hash.put("tOracleOutput_20", System.currentTimeMillis());




/**
 * [tOracleOutput_20 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_21:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tOracleInput_28Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_21 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_21 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 finally ] stop
 */

	
	/**
	 * [tOracleOutput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_18";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_18") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_18 = null;
                if ((pstmtToClose_tOracleOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_18")) != null) {
                    pstmtToClose_tOracleOutput_18.close();
                }
    }
 



/**
 * [tOracleOutput_18 finally ] stop
 */

	
	/**
	 * [tJavaRow_22 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_22";
	
	

 



/**
 * [tJavaRow_22 finally ] stop
 */

	
	/**
	 * [tOracleOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_19";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_19") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_19 = null;
                if ((pstmtToClose_tOracleOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_19")) != null) {
                    pstmtToClose_tOracleOutput_19.close();
                }
    }
 



/**
 * [tOracleOutput_19 finally ] stop
 */













	
	/**
	 * [tJavaRow_23 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_23";
	
	

 



/**
 * [tJavaRow_23 finally ] stop
 */

	
	/**
	 * [tOracleOutput_20 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_20";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_20") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_20 = null;
                if ((pstmtToClose_tOracleOutput_20 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_20")) != null) {
                    pstmtToClose_tOracleOutput_20.close();
                }
    }
 



/**
 * [tOracleOutput_20 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row74Struct implements routines.system.IPersistableRow<row74Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row74Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row73Struct implements routines.system.IPersistableRow<row73Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String MENSAJE;

				public String getMENSAJE () {
					return this.MENSAJE;
				}

				public Boolean MENSAJEIsNullable(){
				    return true;
				}
				public Boolean MENSAJEIsKey(){
				    return false;
				}
				public Integer MENSAJELength(){
				    return null;
				}
				public Integer MENSAJEPrecision(){
				    return null;
				}
				public String MENSAJEDefault(){
				
					return null;
				
				}
				public String MENSAJEComment(){
				
				    return "";
				
				}
				public String MENSAJEPattern(){
				
					return "";
				
				}
				public String MENSAJEOriginalDbColumnName(){
				
					return "MENSAJE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.MENSAJE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.MENSAJE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",MENSAJE="+MENSAJE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row73Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row72Struct implements routines.system.IPersistableRow<row72Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return null;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row72Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row72Struct row72 = new row72Struct();
row73Struct row73 = new row73Struct();
row74Struct row74 = new row74Struct();
row75Struct row75 = new row75Struct();







	
	/**
	 * [tOracleOutput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_24", false);
		start_Hash.put("tOracleOutput_24", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tOracleOutput_24 = 0;
		






        int updateKeyCount_tOracleOutput_24 = 2;
        if(updateKeyCount_tOracleOutput_24 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_24 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_24 = 0;
    int nb_line_update_tOracleOutput_24 = 0;
    int nb_line_inserted_tOracleOutput_24 = 0;
    int nb_line_deleted_tOracleOutput_24 = 0;
    int nb_line_rejected_tOracleOutput_24 = 0;

    int tmp_batchUpdateCount_tOracleOutput_24 = 0;

    int deletedCount_tOracleOutput_24=0;
    int updatedCount_tOracleOutput_24=0;
    int insertedCount_tOracleOutput_24=0;
    int rowsToCommitCount_tOracleOutput_24=0;
    int rejectedCount_tOracleOutput_24=0;

    boolean whetherReject_tOracleOutput_24 = false;

    java.sql.Connection conn_tOracleOutput_24 = null;

    //optional table
    String dbschema_tOracleOutput_24 = null;
    String tableName_tOracleOutput_24 = null;
        dbschema_tOracleOutput_24 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_24 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_24=0;

        if(dbschema_tOracleOutput_24 == null || dbschema_tOracleOutput_24.trim().length() == 0) {
            tableName_tOracleOutput_24 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_24 = dbschema_tOracleOutput_24 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_24 = "UPDATE " + tableName_tOracleOutput_24 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_24 = conn_tOracleOutput_24.prepareStatement(update_tOracleOutput_24);
                resourceMap.put("pstmt_tOracleOutput_24", pstmt_tOracleOutput_24);





 



/**
 * [tOracleOutput_24 begin ] stop
 */



	
	/**
	 * [tJavaRow_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_27", false);
		start_Hash.put("tJavaRow_27", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row74");
					}
				
		int tos_count_tJavaRow_27 = 0;
		

int nb_line_tJavaRow_27 = 0;

 



/**
 * [tJavaRow_27 begin ] stop
 */



	
	/**
	 * [tOracleOutput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_23", false);
		start_Hash.put("tOracleOutput_23", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row73");
					}
				
		int tos_count_tOracleOutput_23 = 0;
		






    
    int nb_line_tOracleOutput_23 = 0;
    int nb_line_update_tOracleOutput_23 = 0;
    int nb_line_inserted_tOracleOutput_23 = 0;
    int nb_line_deleted_tOracleOutput_23 = 0;
    int nb_line_rejected_tOracleOutput_23 = 0;

    int tmp_batchUpdateCount_tOracleOutput_23 = 0;

    int deletedCount_tOracleOutput_23=0;
    int updatedCount_tOracleOutput_23=0;
    int insertedCount_tOracleOutput_23=0;
    int rowsToCommitCount_tOracleOutput_23=0;
    int rejectedCount_tOracleOutput_23=0;

    boolean whetherReject_tOracleOutput_23 = false;

    java.sql.Connection conn_tOracleOutput_23 = null;

    //optional table
    String dbschema_tOracleOutput_23 = null;
    String tableName_tOracleOutput_23 = null;
        dbschema_tOracleOutput_23 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_23 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_23=0;

        if(dbschema_tOracleOutput_23 == null || dbschema_tOracleOutput_23.trim().length() == 0) {
            tableName_tOracleOutput_23 = ("TST_ERRCMASIVO");
        } else {
            tableName_tOracleOutput_23 = dbschema_tOracleOutput_23 + "." + ("TST_ERRCMASIVO");
        }
                String insert_tOracleOutput_23 = "INSERT INTO " + tableName_tOracleOutput_23 + " (TDOCUMENTOS_ID,DOCUMENTO,MENSAJE) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_23 = conn_tOracleOutput_23.prepareStatement(insert_tOracleOutput_23);
                        resourceMap.put("pstmt_tOracleOutput_23", pstmt_tOracleOutput_23);





 



/**
 * [tOracleOutput_23 begin ] stop
 */



	
	/**
	 * [tJavaRow_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_26", false);
		start_Hash.put("tJavaRow_26", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row72");
					}
				
		int tos_count_tJavaRow_26 = 0;
		

int nb_line_tJavaRow_26 = 0;

 



/**
 * [tJavaRow_26 begin ] stop
 */



	
	/**
	 * [tOracleInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_28", false);
		start_Hash.put("tOracleInput_28", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_28";
	
	
		int tos_count_tOracleInput_28 = 0;
		
	


	
		    int nb_line_tOracleInput_28 = 0;
		    java.sql.Connection conn_tOracleInput_28 = null;
				conn_tOracleInput_28 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_28 = false;
				boolean isConnectionWrapped_tOracleInput_28 = !(conn_tOracleInput_28 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_28.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_28 = null;
                if (isConnectionWrapped_tOracleInput_28) {
					unwrappedOraConn_tOracleInput_28 = conn_tOracleInput_28.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_28 != null) {
                        isTimeZoneNull_tOracleInput_28 = (unwrappedOraConn_tOracleInput_28.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_28 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_28).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_28) {
					java.sql.Statement stmtGetTZ_tOracleInput_28 = conn_tOracleInput_28.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_28 = stmtGetTZ_tOracleInput_28.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_28 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_28.next()) {
						sessionTimezone_tOracleInput_28 = rsGetTZ_tOracleInput_28.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_28 && unwrappedOraConn_tOracleInput_28 != null) {
                        unwrappedOraConn_tOracleInput_28.setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_28).setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_28 = conn_tOracleInput_28.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_28.setFetchSize(1000);


		    String dbquery_tOracleInput_28 = "SELECT TCA.TDOCUMENTOS_ID,\n       TCA.DOCUMENTO\nFROM (SELECT TC.PRIMER_NOMBRE,\n        TC.PRIMER_APELLIDO,\n        "
+"TC.DOCUMENTO,\n        GP.ID AS PERSONAS_ID,\n        GA.ID AS AFILIADOS_ID\nFROM TST_CARGUEMASIVO TC\nINNER JOIN GEN_PE"
+"RSONAS GP ON GP.FECHA_NACIMIENTO = TC.FECHA_NACIMIENTO\n                              AND GP.PRIMER_NOMBRE = TC.PRIMER_N"
+"OMBRE\n                              AND GP.SEGUNDO_NOMBRE = TC.SEGUNDO_NOMBRE\n                              AND GP.PRI"
+"MER_APELLIDO = TC.PRIMER_APELLIDO\n                              AND GP.SEGUNDO_APELLIDO = TC.SEGUNDO_APELLIDO\nLEFT JOI"
+"N GEN_AFILIADOS GA ON GA.PERSONAS_ID = GP.ID AND ROWNUM = 1                              \nWHERE TC.PROCESADO IS NULL GR"
+"OUP BY TC.PRIMER_NOMBRE, TC.PRIMER_APELLIDO, TC.DOCUMENTO, GP.ID, GA.ID HAVING (COUNT(1)>1)) PR\nINNER JOIN TST_CARGUEMA"
+"SIVO TCA ON TCA.DOCUMENTO = PR.DOCUMENTO AND TCA.PRIMER_NOMBRE = PR.PRIMER_NOMBRE AND TCA.PRIMER_APELLIDO = PR.PRIMER_AP"
+"ELLIDO";
		    

		    globalMap.put("tOracleInput_28_QUERY",dbquery_tOracleInput_28);

		    java.sql.ResultSet rs_tOracleInput_28 = null;

		    try {
		    	rs_tOracleInput_28 = stmt_tOracleInput_28.executeQuery(dbquery_tOracleInput_28);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_28 = rs_tOracleInput_28.getMetaData();
		    	int colQtyInRs_tOracleInput_28 = rsmd_tOracleInput_28.getColumnCount();

		    String tmpContent_tOracleInput_28 = null;
		    
		    
		    while (rs_tOracleInput_28.next()) {
		        nb_line_tOracleInput_28++;
		        
							if(colQtyInRs_tOracleInput_28 < 1) {
								row72.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(1) != null) {
						row72.TDOCUMENTOS_ID = rs_tOracleInput_28.getInt(1);
					} else {
				
						row72.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_28 < 2) {
								row72.DOCUMENTO = null;
							} else {
	                         		
        	row72.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 2, false);
		                    }
					




 



/**
 * [tOracleInput_28 begin ] stop
 */
	
	/**
	 * [tOracleInput_28 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 


	tos_count_tOracleInput_28++;

/**
 * [tOracleInput_28 main ] stop
 */
	
	/**
	 * [tOracleInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_26 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row72"
						
						);
					}
					

    //Code generate according to input schema and output schema
row73.TDOCUMENTOS_ID = row72.TDOCUMENTOS_ID;
row73.DOCUMENTO = row72.DOCUMENTO;
row73.MENSAJE = "Existen personas en el sistema que concuerda con el mismo primer nombre, segundo apellido, primer apellido, segundo apellido y fecha de nacimiento";

    nb_line_tJavaRow_26++;   

 


	tos_count_tJavaRow_26++;

/**
 * [tJavaRow_26 main ] stop
 */
	
	/**
	 * [tJavaRow_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_23 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row73"
						
						);
					}
					



            row74 = null;
        whetherReject_tOracleOutput_23 = false;
                        if(row73.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_23.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_23.setInt(1, row73.TDOCUMENTOS_ID);
}

                        if(row73.DOCUMENTO == null) {
pstmt_tOracleOutput_23.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_23.setString(2, row73.DOCUMENTO);
}

                        if(row73.MENSAJE == null) {
pstmt_tOracleOutput_23.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_23.setString(3, row73.MENSAJE);
}

                try {
                    nb_line_tOracleOutput_23++;
                    int processedCount_tOracleOutput_23 = pstmt_tOracleOutput_23.executeUpdate();
                    insertedCount_tOracleOutput_23 += processedCount_tOracleOutput_23;
                    rowsToCommitCount_tOracleOutput_23 += processedCount_tOracleOutput_23;
                } catch(java.lang.Exception e_tOracleOutput_23) {
globalMap.put("tOracleOutput_23_ERROR_MESSAGE",e_tOracleOutput_23.getMessage());
                    whetherReject_tOracleOutput_23 = true;
                            System.err.print(e_tOracleOutput_23.getMessage());
                }
            if(!whetherReject_tOracleOutput_23) {
                            row74 = new row74Struct();
                                row74.TDOCUMENTOS_ID = row73.TDOCUMENTOS_ID;
                                row74.DOCUMENTO = row73.DOCUMENTO;
                                row74.MENSAJE = row73.MENSAJE;
            }

 


	tos_count_tOracleOutput_23++;

/**
 * [tOracleOutput_23 main ] stop
 */
	
	/**
	 * [tOracleOutput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_23";
	
	

 



/**
 * [tOracleOutput_23 process_data_begin ] stop
 */
// Start of branch "row74"
if(row74 != null) { 



	
	/**
	 * [tJavaRow_27 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row74"
						
						);
					}
					

    //Code generate according to input schema and output schema
row75.TDOCUMENTOS_ID = row74.TDOCUMENTOS_ID;
row75.DOCUMENTO = row74.DOCUMENTO;
row75.PROCESADO = 6;//Código de procesado con duplicados en el sistema con el mismo primer nombre, segundo nombre, primer apellido, segundo apellido y fecha de nacimiento.

    nb_line_tJavaRow_27++;   

 


	tos_count_tJavaRow_27++;

/**
 * [tJavaRow_27 main ] stop
 */
	
	/**
	 * [tJavaRow_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_24 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					



        whetherReject_tOracleOutput_24 = false;
                    if(row75.PROCESADO == null) {
pstmt_tOracleOutput_24.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_24.setInt(1, row75.PROCESADO);
}


                    if(row75.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_24.setNull(2 + count_tOracleOutput_24, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_24.setInt(2 + count_tOracleOutput_24, row75.TDOCUMENTOS_ID);
}


                    if(row75.DOCUMENTO == null) {
pstmt_tOracleOutput_24.setNull(3 + count_tOracleOutput_24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_24.setString(3 + count_tOracleOutput_24, row75.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_24++;
                    int processedCount_tOracleOutput_24 = pstmt_tOracleOutput_24.executeUpdate();
                    updatedCount_tOracleOutput_24 += processedCount_tOracleOutput_24;
                    rowsToCommitCount_tOracleOutput_24 += processedCount_tOracleOutput_24;
                } catch(java.lang.Exception e_tOracleOutput_24) {
globalMap.put("tOracleOutput_24_ERROR_MESSAGE",e_tOracleOutput_24.getMessage());
                    whetherReject_tOracleOutput_24 = true;
                            System.err.print(e_tOracleOutput_24.getMessage());
                }

 


	tos_count_tOracleOutput_24++;

/**
 * [tOracleOutput_24 main ] stop
 */
	
	/**
	 * [tOracleOutput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_24";
	
	

 



/**
 * [tOracleOutput_24 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_24";
	
	

 



/**
 * [tOracleOutput_24 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 process_data_end ] stop
 */

} // End of branch "row74"




	
	/**
	 * [tOracleOutput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_23";
	
	

 



/**
 * [tOracleOutput_23 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_28 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

}
}finally{
	if (rs_tOracleInput_28 != null) {
		rs_tOracleInput_28.close();
	}
	if (stmt_tOracleInput_28 != null) {
		stmt_tOracleInput_28.close();
	}
}

globalMap.put("tOracleInput_28_NB_LINE",nb_line_tOracleInput_28);
 

ok_Hash.put("tOracleInput_28", true);
end_Hash.put("tOracleInput_28", System.currentTimeMillis());




/**
 * [tOracleInput_28 end ] stop
 */

	
	/**
	 * [tJavaRow_26 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

globalMap.put("tJavaRow_26_NB_LINE",nb_line_tJavaRow_26);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row72");
			  	}
			  	
 

ok_Hash.put("tJavaRow_26", true);
end_Hash.put("tJavaRow_26", System.currentTimeMillis());




/**
 * [tJavaRow_26 end ] stop
 */

	
	/**
	 * [tOracleOutput_23 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_23";
	
	
	



	
        if(pstmt_tOracleOutput_23 != null) {
			
				pstmt_tOracleOutput_23.close();
				resourceMap.remove("pstmt_tOracleOutput_23");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_23", true);

	
	nb_line_deleted_tOracleOutput_23=nb_line_deleted_tOracleOutput_23+ deletedCount_tOracleOutput_23;
	nb_line_update_tOracleOutput_23=nb_line_update_tOracleOutput_23 + updatedCount_tOracleOutput_23;
	nb_line_inserted_tOracleOutput_23=nb_line_inserted_tOracleOutput_23 + insertedCount_tOracleOutput_23;
	nb_line_rejected_tOracleOutput_23=nb_line_rejected_tOracleOutput_23 + rejectedCount_tOracleOutput_23;
	
        globalMap.put("tOracleOutput_23_NB_LINE",nb_line_tOracleOutput_23);
        globalMap.put("tOracleOutput_23_NB_LINE_UPDATED",nb_line_update_tOracleOutput_23);
        globalMap.put("tOracleOutput_23_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_23);
        globalMap.put("tOracleOutput_23_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_23);
        globalMap.put("tOracleOutput_23_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_23);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row73");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_23", true);
end_Hash.put("tOracleOutput_23", System.currentTimeMillis());




/**
 * [tOracleOutput_23 end ] stop
 */

	
	/**
	 * [tJavaRow_27 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

globalMap.put("tJavaRow_27_NB_LINE",nb_line_tJavaRow_27);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row74");
			  	}
			  	
 

ok_Hash.put("tJavaRow_27", true);
end_Hash.put("tJavaRow_27", System.currentTimeMillis());




/**
 * [tJavaRow_27 end ] stop
 */

	
	/**
	 * [tOracleOutput_24 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_24";
	
	
	



	
        if(pstmt_tOracleOutput_24 != null) {
			
				pstmt_tOracleOutput_24.close();
				resourceMap.remove("pstmt_tOracleOutput_24");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_24", true);

	
	nb_line_deleted_tOracleOutput_24=nb_line_deleted_tOracleOutput_24+ deletedCount_tOracleOutput_24;
	nb_line_update_tOracleOutput_24=nb_line_update_tOracleOutput_24 + updatedCount_tOracleOutput_24;
	nb_line_inserted_tOracleOutput_24=nb_line_inserted_tOracleOutput_24 + insertedCount_tOracleOutput_24;
	nb_line_rejected_tOracleOutput_24=nb_line_rejected_tOracleOutput_24 + rejectedCount_tOracleOutput_24;
	
        globalMap.put("tOracleOutput_24_NB_LINE",nb_line_tOracleOutput_24);
        globalMap.put("tOracleOutput_24_NB_LINE_UPDATED",nb_line_update_tOracleOutput_24);
        globalMap.put("tOracleOutput_24_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_24);
        globalMap.put("tOracleOutput_24_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_24);
        globalMap.put("tOracleOutput_24_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_24);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_24", true);
end_Hash.put("tOracleOutput_24", System.currentTimeMillis());




/**
 * [tOracleOutput_24 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_28:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tOracleInput_29Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_28 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 finally ] stop
 */

	
	/**
	 * [tJavaRow_26 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_26";
	
	

 



/**
 * [tJavaRow_26 finally ] stop
 */

	
	/**
	 * [tOracleOutput_23 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_23";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_23") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_23 = null;
                if ((pstmtToClose_tOracleOutput_23 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_23")) != null) {
                    pstmtToClose_tOracleOutput_23.close();
                }
    }
 



/**
 * [tOracleOutput_23 finally ] stop
 */

	
	/**
	 * [tJavaRow_27 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_27";
	
	

 



/**
 * [tJavaRow_27 finally ] stop
 */

	
	/**
	 * [tOracleOutput_24 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_24";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_24") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_24 = null;
                if ((pstmtToClose_tOracleOutput_24 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_24")) != null) {
                    pstmtToClose_tOracleOutput_24.close();
                }
    }
 



/**
 * [tOracleOutput_24 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 1);
	}
	


public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public Integer GSANGUINEOS_ID;

				public Integer getGSANGUINEOS_ID () {
					return this.GSANGUINEOS_ID;
				}

				public Boolean GSANGUINEOS_IDIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOS_IDIsKey(){
				    return false;
				}
				public Integer GSANGUINEOS_IDLength(){
				    return 0;
				}
				public Integer GSANGUINEOS_IDPrecision(){
				    return 0;
				}
				public String GSANGUINEOS_IDDefault(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDComment(){
				
				    return "";
				
				}
				public String GSANGUINEOS_IDPattern(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDOriginalDbColumnName(){
				
					return "GSANGUINEOS_ID";
				
				}

				
			    public Integer SEXO_ID;

				public Integer getSEXO_ID () {
					return this.SEXO_ID;
				}

				public Boolean SEXO_IDIsNullable(){
				    return true;
				}
				public Boolean SEXO_IDIsKey(){
				    return false;
				}
				public Integer SEXO_IDLength(){
				    return 0;
				}
				public Integer SEXO_IDPrecision(){
				    return 0;
				}
				public String SEXO_IDDefault(){
				
					return "";
				
				}
				public String SEXO_IDComment(){
				
				    return "";
				
				}
				public String SEXO_IDPattern(){
				
					return "";
				
				}
				public String SEXO_IDOriginalDbColumnName(){
				
					return "SEXO_ID";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 500;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return 400;
				}
				public Integer EMAILPrecision(){
				    return 0;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public Integer ESTCIVILES_ID;

				public Integer getESTCIVILES_ID () {
					return this.ESTCIVILES_ID;
				}

				public Boolean ESTCIVILES_IDIsNullable(){
				    return true;
				}
				public Boolean ESTCIVILES_IDIsKey(){
				    return false;
				}
				public Integer ESTCIVILES_IDLength(){
				    return 0;
				}
				public Integer ESTCIVILES_IDPrecision(){
				    return 0;
				}
				public String ESTCIVILES_IDDefault(){
				
					return "";
				
				}
				public String ESTCIVILES_IDComment(){
				
				    return "";
				
				}
				public String ESTCIVILES_IDPattern(){
				
					return "";
				
				}
				public String ESTCIVILES_IDOriginalDbColumnName(){
				
					return "ESTCIVILES_ID";
				
				}

				
			    public Integer LUGAR_RESIDENCIA;

				public Integer getLUGAR_RESIDENCIA () {
					return this.LUGAR_RESIDENCIA;
				}

				public Boolean LUGAR_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_RESIDENCIALength(){
				    return 0;
				}
				public Integer LUGAR_RESIDENCIAPrecision(){
				    return 0;
				}
				public String LUGAR_RESIDENCIADefault(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 200;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public Integer LUGAR_EXPEDICION;

				public Integer getLUGAR_EXPEDICION () {
					return this.LUGAR_EXPEDICION;
				}

				public Boolean LUGAR_EXPEDICIONIsNullable(){
				    return true;
				}
				public Boolean LUGAR_EXPEDICIONIsKey(){
				    return false;
				}
				public Integer LUGAR_EXPEDICIONLength(){
				    return 0;
				}
				public Integer LUGAR_EXPEDICIONPrecision(){
				    return 0;
				}
				public String LUGAR_EXPEDICIONDefault(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONComment(){
				
				    return "";
				
				}
				public String LUGAR_EXPEDICIONPattern(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONOriginalDbColumnName(){
				
					return "LUGAR_EXPEDICION";
				
				}

				
			    public Integer TDISCAPACIDADES_ID;

				public Integer getTDISCAPACIDADES_ID () {
					return this.TDISCAPACIDADES_ID;
				}

				public Boolean TDISCAPACIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TDISCAPACIDADES_IDIsKey(){
				    return false;
				}
				public Integer TDISCAPACIDADES_IDLength(){
				    return 0;
				}
				public Integer TDISCAPACIDADES_IDPrecision(){
				    return 0;
				}
				public String TDISCAPACIDADES_IDDefault(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDComment(){
				
				    return "";
				
				}
				public String TDISCAPACIDADES_IDPattern(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDOriginalDbColumnName(){
				
					return "TDISCAPACIDADES_ID";
				
				}

				
			    public Integer OCUPACIONES_ID;

				public Integer getOCUPACIONES_ID () {
					return this.OCUPACIONES_ID;
				}

				public Boolean OCUPACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean OCUPACIONES_IDIsKey(){
				    return false;
				}
				public Integer OCUPACIONES_IDLength(){
				    return 0;
				}
				public Integer OCUPACIONES_IDPrecision(){
				    return 0;
				}
				public String OCUPACIONES_IDDefault(){
				
					return "";
				
				}
				public String OCUPACIONES_IDComment(){
				
				    return "";
				
				}
				public String OCUPACIONES_IDPattern(){
				
					return "";
				
				}
				public String OCUPACIONES_IDOriginalDbColumnName(){
				
					return "OCUPACIONES_ID";
				
				}

				
			    public Integer ETNICAS_ID;

				public Integer getETNICAS_ID () {
					return this.ETNICAS_ID;
				}

				public Boolean ETNICAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNICAS_IDIsKey(){
				    return false;
				}
				public Integer ETNICAS_IDLength(){
				    return 0;
				}
				public Integer ETNICAS_IDPrecision(){
				    return 0;
				}
				public String ETNICAS_IDDefault(){
				
					return "";
				
				}
				public String ETNICAS_IDComment(){
				
				    return "";
				
				}
				public String ETNICAS_IDPattern(){
				
					return "";
				
				}
				public String ETNICAS_IDOriginalDbColumnName(){
				
					return "ETNICAS_ID";
				
				}

				
			    public Integer ESMADSCRITO;

				public Integer getESMADSCRITO () {
					return this.ESMADSCRITO;
				}

				public Boolean ESMADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESMADSCRITOIsKey(){
				    return false;
				}
				public Integer ESMADSCRITOLength(){
				    return null;
				}
				public Integer ESMADSCRITOPrecision(){
				    return null;
				}
				public String ESMADSCRITODefault(){
				
					return null;
				
				}
				public String ESMADSCRITOComment(){
				
				    return "";
				
				}
				public String ESMADSCRITOPattern(){
				
					return "";
				
				}
				public String ESMADSCRITOOriginalDbColumnName(){
				
					return "ESMADSCRITO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.SEXO_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readInt();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = readInteger(dis);
					
						this.SEXO_ID = readInteger(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = readInteger(dis);
					
						this.LUGAR_RESIDENCIA = readInteger(dis);
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = readInteger(dis);
					
						this.TDISCAPACIDADES_ID = readInteger(dis);
					
						this.OCUPACIONES_ID = readInteger(dis);
					
						this.ETNICAS_ID = readInteger(dis);
					
						this.ESMADSCRITO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.SEXO_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXPEDICION,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ID);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// Integer
				
						writeInteger(this.GSANGUINEOS_ID,dos);
					
					// Integer
				
						writeInteger(this.SEXO_ID,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// Integer
				
						writeInteger(this.ESTCIVILES_ID,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_RESIDENCIA,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// Integer
				
						writeInteger(this.LUGAR_EXPEDICION,dos);
					
					// Integer
				
						writeInteger(this.TDISCAPACIDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.OCUPACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNICAS_ID,dos);
					
					// Integer
				
						writeInteger(this.ESMADSCRITO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
		sb.append(",GSANGUINEOS_ID="+String.valueOf(GSANGUINEOS_ID));
		sb.append(",SEXO_ID="+String.valueOf(SEXO_ID));
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",ESTCIVILES_ID="+String.valueOf(ESTCIVILES_ID));
		sb.append(",LUGAR_RESIDENCIA="+String.valueOf(LUGAR_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",LUGAR_EXPEDICION="+String.valueOf(LUGAR_EXPEDICION));
		sb.append(",TDISCAPACIDADES_ID="+String.valueOf(TDISCAPACIDADES_ID));
		sb.append(",OCUPACIONES_ID="+String.valueOf(OCUPACIONES_ID));
		sb.append(",ETNICAS_ID="+String.valueOf(ETNICAS_ID));
		sb.append(",ESMADSCRITO="+String.valueOf(ESMADSCRITO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();




	
	/**
	 * [tOracleOutput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_25", false);
		start_Hash.put("tOracleOutput_25", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tOracleOutput_25 = 0;
		






        int updateKeyCount_tOracleOutput_25 = 1;
        if(updateKeyCount_tOracleOutput_25 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_25 == 21 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_25 = 0;
    int nb_line_update_tOracleOutput_25 = 0;
    int nb_line_inserted_tOracleOutput_25 = 0;
    int nb_line_deleted_tOracleOutput_25 = 0;
    int nb_line_rejected_tOracleOutput_25 = 0;

    int tmp_batchUpdateCount_tOracleOutput_25 = 0;

    int deletedCount_tOracleOutput_25=0;
    int updatedCount_tOracleOutput_25=0;
    int insertedCount_tOracleOutput_25=0;
    int rowsToCommitCount_tOracleOutput_25=0;
    int rejectedCount_tOracleOutput_25=0;

    boolean whetherReject_tOracleOutput_25 = false;

    java.sql.Connection conn_tOracleOutput_25 = null;

    //optional table
    String dbschema_tOracleOutput_25 = null;
    String tableName_tOracleOutput_25 = null;
        dbschema_tOracleOutput_25 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_25 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_25=0;

        if(dbschema_tOracleOutput_25 == null || dbschema_tOracleOutput_25.trim().length() == 0) {
            tableName_tOracleOutput_25 = ("GEN_PERSONAS");
        } else {
            tableName_tOracleOutput_25 = dbschema_tOracleOutput_25 + "." + ("GEN_PERSONAS");
        }
                String update_tOracleOutput_25 = "UPDATE " + tableName_tOracleOutput_25 + " SET PRIMER_NOMBRE = ?,SEGUNDO_NOMBRE = ?,PRIMER_APELLIDO = ?,SEGUNDO_APELLIDO = ?,TDOCUMENTOS_ID = ?,DOCUMENTO = ?,FECHA_NACIMIENTO = ?,GSANGUINEOS_ID = ?,SEXO_ID = ?,DIRECCION = ?,TELEFONO = ?,EMAIL = ?,ESTCIVILES_ID = ?,LUGAR_RESIDENCIA = ?,BARRIO = ?,LUGAR_EXPEDICION = ?,TDISCAPACIDADES_ID = ?,OCUPACIONES_ID = ?,ETNICAS_ID = ?,ESMADSCRITO = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_25 = conn_tOracleOutput_25.prepareStatement(update_tOracleOutput_25);
                resourceMap.put("pstmt_tOracleOutput_25", pstmt_tOracleOutput_25);





 



/**
 * [tOracleOutput_25 begin ] stop
 */



	
	/**
	 * [tOracleInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_29", false);
		start_Hash.put("tOracleInput_29", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_29";
	
	
		int tos_count_tOracleInput_29 = 0;
		
	


	
		    int nb_line_tOracleInput_29 = 0;
		    java.sql.Connection conn_tOracleInput_29 = null;
				conn_tOracleInput_29 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_29 = false;
				boolean isConnectionWrapped_tOracleInput_29 = !(conn_tOracleInput_29 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_29.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_29 = null;
                if (isConnectionWrapped_tOracleInput_29) {
					unwrappedOraConn_tOracleInput_29 = conn_tOracleInput_29.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_29 != null) {
                        isTimeZoneNull_tOracleInput_29 = (unwrappedOraConn_tOracleInput_29.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_29 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_29).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_29) {
					java.sql.Statement stmtGetTZ_tOracleInput_29 = conn_tOracleInput_29.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_29 = stmtGetTZ_tOracleInput_29.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_29 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_29.next()) {
						sessionTimezone_tOracleInput_29 = rsGetTZ_tOracleInput_29.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_29 && unwrappedOraConn_tOracleInput_29 != null) {
                        unwrappedOraConn_tOracleInput_29.setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_29).setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_29 = conn_tOracleInput_29.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_29.setFetchSize(1000);


		    String dbquery_tOracleInput_29 = "SELECT GP.ID,\n       TC.PRIMER_NOMBRE,\n       TC.SEGUNDO_NOMBRE,\n       TC.PRIMER_APELLIDO,\n       TC.SEGUNDO_APELL"
+"IDO,\n       TC.TDOCUMENTOS_ID,\n       TC.DOCUMENTO,\n       TC.FECHA_NACIMIENTO,\n       DECODE(TC.GSANGUINEOS_ID, 0, "
+"GP.GSANGUINEOS_ID, TC.GSANGUINEOS_ID) AS GSANGUINEOS_ID,\n       DECODE(TC.SEXOS_ID, 0, GP.SEXO_ID, TC.SEXOS_ID) AS SEXO"
+"_ID,\n       DECODE(TC.DIRECCION, NULL, GP.DIRECCION, '', GP.DIRECCION, TC.DIRECCION) AS DIRECCION,\n       DECODE(TC.TE"
+"LEFONO, NULL, GP.TELEFONO, '', GP.TELEFONO, TC.TELEFONO) AS TELEFONO,\n       DECODE(TC.CORREO_ELECTRONICO, NULL, GP.EMA"
+"IL, '', GP.EMAIL, TC.CORREO_ELECTRONICO) AS EMAIL,\n       DECODE(TC.ESTCIVILES_ID, 0, GP.ESTCIVILES_ID, TC.ESTCIVILES_I"
+"D) AS ESTCIVILES_ID,\n       DECODE(TC.LUGAR_RESIDENCIA, 0, GP.LUGAR_RESIDENCIA, TC.LUGAR_RESIDENCIA) AS LUGAR_RESIDENCI"
+"A,\n       DECODE(TC.BARRIO, NULL, GP.BARRIO, '', GP.BARRIO, TC.BARRIO) AS BARRIO,       \n       DECODE(TC.LUGAR_EXP_DO"
+"C, 0, GP.LUGAR_EXPEDICION, TC.LUGAR_EXP_DOC) AS LUGAR_EXPEDICION,\n       DECODE(TC.TDISCAPACIDADES_ID, 0, GP.TDISCAPACI"
+"DADES_ID, TC.TDISCAPACIDADES_ID) AS TDISCAPACIDADES_ID,\n       DECODE(TC.OCUPACIONES_ID, 0, GP.OCUPACIONES_ID, TC.OCUPA"
+"CIONES_ID) AS OCUPACIONES_ID,\n       DECODE(TC.ETNICAS_ID, 0, GP.ETNICAS_ID, TC.ETNICAS_ID) AS ETNICAS_ID,\n       TC.E"
+"SMADSCRITO                     \nFROM TST_CARGUEMASIVO TC \nINNER JOIN GEN_PERSONAS GP ON GP.ID = TC.PERSONAS_ID\nWHERE "
+"TC.PERSONAS_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_29_QUERY",dbquery_tOracleInput_29);

		    java.sql.ResultSet rs_tOracleInput_29 = null;

		    try {
		    	rs_tOracleInput_29 = stmt_tOracleInput_29.executeQuery(dbquery_tOracleInput_29);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_29 = rs_tOracleInput_29.getMetaData();
		    	int colQtyInRs_tOracleInput_29 = rsmd_tOracleInput_29.getColumnCount();

		    String tmpContent_tOracleInput_29 = null;
		    
		    
		    while (rs_tOracleInput_29.next()) {
		        nb_line_tOracleInput_29++;
		        
							if(colQtyInRs_tOracleInput_29 < 1) {
								row76.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(1) != null) {
						row76.ID = rs_tOracleInput_29.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 2) {
								row76.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row76.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 3) {
								row76.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row76.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 4) {
								row76.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row76.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 5) {
								row76.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row76.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 6) {
								row76.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(6) != null) {
						row76.TDOCUMENTOS_ID = rs_tOracleInput_29.getInt(6);
					} else {
				
						row76.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 7) {
								row76.DOCUMENTO = null;
							} else {
	                         		
        	row76.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 8) {
								row76.FECHA_NACIMIENTO = null;
							} else {
										
			row76.FECHA_NACIMIENTO = routines.system.JDBCUtil.getDate(rs_tOracleInput_29, 8);
		                    }
							if(colQtyInRs_tOracleInput_29 < 9) {
								row76.GSANGUINEOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(9) != null) {
						row76.GSANGUINEOS_ID = rs_tOracleInput_29.getInt(9);
					} else {
				
						row76.GSANGUINEOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 10) {
								row76.SEXO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(10) != null) {
						row76.SEXO_ID = rs_tOracleInput_29.getInt(10);
					} else {
				
						row76.SEXO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 11) {
								row76.DIRECCION = null;
							} else {
	                         		
        	row76.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 12) {
								row76.TELEFONO = null;
							} else {
	                         		
        	row76.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 13) {
								row76.EMAIL = null;
							} else {
	                         		
        	row76.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 14) {
								row76.ESTCIVILES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(14) != null) {
						row76.ESTCIVILES_ID = rs_tOracleInput_29.getInt(14);
					} else {
				
						row76.ESTCIVILES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 15) {
								row76.LUGAR_RESIDENCIA = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(15) != null) {
						row76.LUGAR_RESIDENCIA = rs_tOracleInput_29.getInt(15);
					} else {
				
						row76.LUGAR_RESIDENCIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 16) {
								row76.BARRIO = null;
							} else {
	                         		
        	row76.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 17) {
								row76.LUGAR_EXPEDICION = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(17) != null) {
						row76.LUGAR_EXPEDICION = rs_tOracleInput_29.getInt(17);
					} else {
				
						row76.LUGAR_EXPEDICION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 18) {
								row76.TDISCAPACIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(18) != null) {
						row76.TDISCAPACIDADES_ID = rs_tOracleInput_29.getInt(18);
					} else {
				
						row76.TDISCAPACIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 19) {
								row76.OCUPACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(19) != null) {
						row76.OCUPACIONES_ID = rs_tOracleInput_29.getInt(19);
					} else {
				
						row76.OCUPACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 20) {
								row76.ETNICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(20) != null) {
						row76.ETNICAS_ID = rs_tOracleInput_29.getInt(20);
					} else {
				
						row76.ETNICAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_29 < 21) {
								row76.ESMADSCRITO = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(21) != null) {
						row76.ESMADSCRITO = rs_tOracleInput_29.getInt(21);
					} else {
				
						row76.ESMADSCRITO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_29 begin ] stop
 */
	
	/**
	 * [tOracleInput_29 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 


	tos_count_tOracleInput_29++;

/**
 * [tOracleInput_29 main ] stop
 */
	
	/**
	 * [tOracleInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_25 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					



        whetherReject_tOracleOutput_25 = false;
                    if(row76.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_25.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(1, row76.PRIMER_NOMBRE);
}

                    if(row76.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_25.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(2, row76.SEGUNDO_NOMBRE);
}

                    if(row76.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_25.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(3, row76.PRIMER_APELLIDO);
}

                    if(row76.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_25.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(4, row76.SEGUNDO_APELLIDO);
}

                    if(row76.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_25.setNull(5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(5, row76.TDOCUMENTOS_ID);
}

                    if(row76.DOCUMENTO == null) {
pstmt_tOracleOutput_25.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(6, row76.DOCUMENTO);
}

                    if(row76.FECHA_NACIMIENTO != null) {
pstmt_tOracleOutput_25.setObject(7, new java.sql.Timestamp(row76.FECHA_NACIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_25.setNull(7, java.sql.Types.DATE);
}

                    if(row76.GSANGUINEOS_ID == null) {
pstmt_tOracleOutput_25.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(8, row76.GSANGUINEOS_ID);
}

                    if(row76.SEXO_ID == null) {
pstmt_tOracleOutput_25.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(9, row76.SEXO_ID);
}

                    if(row76.DIRECCION == null) {
pstmt_tOracleOutput_25.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(10, row76.DIRECCION);
}

                    if(row76.TELEFONO == null) {
pstmt_tOracleOutput_25.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(11, row76.TELEFONO);
}

                    if(row76.EMAIL == null) {
pstmt_tOracleOutput_25.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(12, row76.EMAIL);
}

                    if(row76.ESTCIVILES_ID == null) {
pstmt_tOracleOutput_25.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(13, row76.ESTCIVILES_ID);
}

                    if(row76.LUGAR_RESIDENCIA == null) {
pstmt_tOracleOutput_25.setNull(14, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(14, row76.LUGAR_RESIDENCIA);
}

                    if(row76.BARRIO == null) {
pstmt_tOracleOutput_25.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_25.setString(15, row76.BARRIO);
}

                    if(row76.LUGAR_EXPEDICION == null) {
pstmt_tOracleOutput_25.setNull(16, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(16, row76.LUGAR_EXPEDICION);
}

                    if(row76.TDISCAPACIDADES_ID == null) {
pstmt_tOracleOutput_25.setNull(17, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(17, row76.TDISCAPACIDADES_ID);
}

                    if(row76.OCUPACIONES_ID == null) {
pstmt_tOracleOutput_25.setNull(18, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(18, row76.OCUPACIONES_ID);
}

                    if(row76.ETNICAS_ID == null) {
pstmt_tOracleOutput_25.setNull(19, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(19, row76.ETNICAS_ID);
}

                    if(row76.ESMADSCRITO == null) {
pstmt_tOracleOutput_25.setNull(20, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_25.setInt(20, row76.ESMADSCRITO);
}


                    pstmt_tOracleOutput_25.setInt(21 + count_tOracleOutput_25, row76.ID);

                try {
                    nb_line_tOracleOutput_25++;
                    int processedCount_tOracleOutput_25 = pstmt_tOracleOutput_25.executeUpdate();
                    updatedCount_tOracleOutput_25 += processedCount_tOracleOutput_25;
                    rowsToCommitCount_tOracleOutput_25 += processedCount_tOracleOutput_25;
                } catch(java.lang.Exception e_tOracleOutput_25) {
globalMap.put("tOracleOutput_25_ERROR_MESSAGE",e_tOracleOutput_25.getMessage());
                    whetherReject_tOracleOutput_25 = true;
                            System.err.print(e_tOracleOutput_25.getMessage());
                }

 


	tos_count_tOracleOutput_25++;

/**
 * [tOracleOutput_25 main ] stop
 */
	
	/**
	 * [tOracleOutput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_25";
	
	

 



/**
 * [tOracleOutput_25 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_25";
	
	

 



/**
 * [tOracleOutput_25 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_29 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

}
}finally{
	if (rs_tOracleInput_29 != null) {
		rs_tOracleInput_29.close();
	}
	if (stmt_tOracleInput_29 != null) {
		stmt_tOracleInput_29.close();
	}
}

globalMap.put("tOracleInput_29_NB_LINE",nb_line_tOracleInput_29);
 

ok_Hash.put("tOracleInput_29", true);
end_Hash.put("tOracleInput_29", System.currentTimeMillis());




/**
 * [tOracleInput_29 end ] stop
 */

	
	/**
	 * [tOracleOutput_25 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_25";
	
	
	



	
        if(pstmt_tOracleOutput_25 != null) {
			
				pstmt_tOracleOutput_25.close();
				resourceMap.remove("pstmt_tOracleOutput_25");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_25", true);

	
	nb_line_deleted_tOracleOutput_25=nb_line_deleted_tOracleOutput_25+ deletedCount_tOracleOutput_25;
	nb_line_update_tOracleOutput_25=nb_line_update_tOracleOutput_25 + updatedCount_tOracleOutput_25;
	nb_line_inserted_tOracleOutput_25=nb_line_inserted_tOracleOutput_25 + insertedCount_tOracleOutput_25;
	nb_line_rejected_tOracleOutput_25=nb_line_rejected_tOracleOutput_25 + rejectedCount_tOracleOutput_25;
	
        globalMap.put("tOracleOutput_25_NB_LINE",nb_line_tOracleOutput_25);
        globalMap.put("tOracleOutput_25_NB_LINE_UPDATED",nb_line_update_tOracleOutput_25);
        globalMap.put("tOracleOutput_25_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_25);
        globalMap.put("tOracleOutput_25_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_25);
        globalMap.put("tOracleOutput_25_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_25);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_25", true);
end_Hash.put("tOracleOutput_25", System.currentTimeMillis());




/**
 * [tOracleOutput_25 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_29:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tOracleInput_30Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_29 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 finally ] stop
 */

	
	/**
	 * [tOracleOutput_25 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_25";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_25") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_25 = null;
                if ((pstmtToClose_tOracleOutput_25 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_25")) != null) {
                    pstmtToClose_tOracleOutput_25.close();
                }
    }
 



/**
 * [tOracleOutput_25 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 1);
	}
	


public static class row79Struct implements routines.system.IPersistableRow<row79Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public int PROCESADO;

				public int getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return false;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PROCESADO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
			        this.PROCESADO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PROCESADO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PROCESADO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public BigDecimal GSANGUINEOS_ID;

				public BigDecimal getGSANGUINEOS_ID () {
					return this.GSANGUINEOS_ID;
				}

				public Boolean GSANGUINEOS_IDIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOS_IDIsKey(){
				    return false;
				}
				public Integer GSANGUINEOS_IDLength(){
				    return 0;
				}
				public Integer GSANGUINEOS_IDPrecision(){
				    return null;
				}
				public String GSANGUINEOS_IDDefault(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDComment(){
				
				    return "";
				
				}
				public String GSANGUINEOS_IDPattern(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDOriginalDbColumnName(){
				
					return "GSANGUINEOS_ID";
				
				}

				
			    public BigDecimal SEXO_ID;

				public BigDecimal getSEXO_ID () {
					return this.SEXO_ID;
				}

				public Boolean SEXO_IDIsNullable(){
				    return false;
				}
				public Boolean SEXO_IDIsKey(){
				    return false;
				}
				public Integer SEXO_IDLength(){
				    return 0;
				}
				public Integer SEXO_IDPrecision(){
				    return null;
				}
				public String SEXO_IDDefault(){
				
					return "";
				
				}
				public String SEXO_IDComment(){
				
				    return "";
				
				}
				public String SEXO_IDPattern(){
				
					return "";
				
				}
				public String SEXO_IDOriginalDbColumnName(){
				
					return "SEXO_ID";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return 400;
				}
				public Integer EMAILPrecision(){
				    return 0;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public BigDecimal ESTCIVILES_ID;

				public BigDecimal getESTCIVILES_ID () {
					return this.ESTCIVILES_ID;
				}

				public Boolean ESTCIVILES_IDIsNullable(){
				    return true;
				}
				public Boolean ESTCIVILES_IDIsKey(){
				    return false;
				}
				public Integer ESTCIVILES_IDLength(){
				    return 0;
				}
				public Integer ESTCIVILES_IDPrecision(){
				    return null;
				}
				public String ESTCIVILES_IDDefault(){
				
					return "";
				
				}
				public String ESTCIVILES_IDComment(){
				
				    return "";
				
				}
				public String ESTCIVILES_IDPattern(){
				
					return "";
				
				}
				public String ESTCIVILES_IDOriginalDbColumnName(){
				
					return "ESTCIVILES_ID";
				
				}

				
			    public BigDecimal LUGAR_RESIDENCIA;

				public BigDecimal getLUGAR_RESIDENCIA () {
					return this.LUGAR_RESIDENCIA;
				}

				public Boolean LUGAR_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_RESIDENCIALength(){
				    return 0;
				}
				public Integer LUGAR_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_RESIDENCIADefault(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 200;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public BigDecimal LUGAR_EXPEDICION;

				public BigDecimal getLUGAR_EXPEDICION () {
					return this.LUGAR_EXPEDICION;
				}

				public Boolean LUGAR_EXPEDICIONIsNullable(){
				    return true;
				}
				public Boolean LUGAR_EXPEDICIONIsKey(){
				    return false;
				}
				public Integer LUGAR_EXPEDICIONLength(){
				    return 0;
				}
				public Integer LUGAR_EXPEDICIONPrecision(){
				    return null;
				}
				public String LUGAR_EXPEDICIONDefault(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONComment(){
				
				    return "";
				
				}
				public String LUGAR_EXPEDICIONPattern(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONOriginalDbColumnName(){
				
					return "LUGAR_EXPEDICION";
				
				}

				
			    public BigDecimal TDISCAPACIDADES_ID;

				public BigDecimal getTDISCAPACIDADES_ID () {
					return this.TDISCAPACIDADES_ID;
				}

				public Boolean TDISCAPACIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TDISCAPACIDADES_IDIsKey(){
				    return false;
				}
				public Integer TDISCAPACIDADES_IDLength(){
				    return 0;
				}
				public Integer TDISCAPACIDADES_IDPrecision(){
				    return null;
				}
				public String TDISCAPACIDADES_IDDefault(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDComment(){
				
				    return "";
				
				}
				public String TDISCAPACIDADES_IDPattern(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDOriginalDbColumnName(){
				
					return "TDISCAPACIDADES_ID";
				
				}

				
			    public BigDecimal OCUPACIONES_ID;

				public BigDecimal getOCUPACIONES_ID () {
					return this.OCUPACIONES_ID;
				}

				public Boolean OCUPACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean OCUPACIONES_IDIsKey(){
				    return false;
				}
				public Integer OCUPACIONES_IDLength(){
				    return 0;
				}
				public Integer OCUPACIONES_IDPrecision(){
				    return null;
				}
				public String OCUPACIONES_IDDefault(){
				
					return "";
				
				}
				public String OCUPACIONES_IDComment(){
				
				    return "";
				
				}
				public String OCUPACIONES_IDPattern(){
				
					return "";
				
				}
				public String OCUPACIONES_IDOriginalDbColumnName(){
				
					return "OCUPACIONES_ID";
				
				}

				
			    public BigDecimal ETNICAS_ID;

				public BigDecimal getETNICAS_ID () {
					return this.ETNICAS_ID;
				}

				public Boolean ETNICAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNICAS_IDIsKey(){
				    return false;
				}
				public Integer ETNICAS_IDLength(){
				    return 0;
				}
				public Integer ETNICAS_IDPrecision(){
				    return null;
				}
				public String ETNICAS_IDDefault(){
				
					return "";
				
				}
				public String ETNICAS_IDComment(){
				
				    return "";
				
				}
				public String ETNICAS_IDPattern(){
				
					return "";
				
				}
				public String ETNICAS_IDOriginalDbColumnName(){
				
					return "ETNICAS_ID";
				
				}

				
			    public BigDecimal ESMADSCRITO;

				public BigDecimal getESMADSCRITO () {
					return this.ESMADSCRITO;
				}

				public Boolean ESMADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESMADSCRITOIsKey(){
				    return false;
				}
				public Integer ESMADSCRITOLength(){
				    return null;
				}
				public Integer ESMADSCRITOPrecision(){
				    return null;
				}
				public String ESMADSCRITODefault(){
				
					return null;
				
				}
				public String ESMADSCRITOComment(){
				
				    return "";
				
				}
				public String ESMADSCRITOPattern(){
				
					return "";
				
				}
				public String ESMADSCRITOOriginalDbColumnName(){
				
					return "ESMADSCRITO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = (BigDecimal) dis.readObject();
					
						this.SEXO_ID = (BigDecimal) dis.readObject();
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = (BigDecimal) dis.readObject();
					
						this.LUGAR_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = (BigDecimal) dis.readObject();
					
						this.TDISCAPACIDADES_ID = (BigDecimal) dis.readObject();
					
						this.OCUPACIONES_ID = (BigDecimal) dis.readObject();
					
						this.ETNICAS_ID = (BigDecimal) dis.readObject();
					
						this.ESMADSCRITO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = (BigDecimal) dis.readObject();
					
						this.SEXO_ID = (BigDecimal) dis.readObject();
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = (BigDecimal) dis.readObject();
					
						this.LUGAR_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = (BigDecimal) dis.readObject();
					
						this.TDISCAPACIDADES_ID = (BigDecimal) dis.readObject();
					
						this.OCUPACIONES_ID = (BigDecimal) dis.readObject();
					
						this.ETNICAS_ID = (BigDecimal) dis.readObject();
					
						this.ESMADSCRITO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GSANGUINEOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SEXO_ID);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESTCIVILES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LUGAR_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LUGAR_EXPEDICION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDISCAPACIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.OCUPACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ETNICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESMADSCRITO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GSANGUINEOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SEXO_ID);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESTCIVILES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LUGAR_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LUGAR_EXPEDICION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDISCAPACIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.OCUPACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ETNICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESMADSCRITO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
		sb.append(",GSANGUINEOS_ID="+String.valueOf(GSANGUINEOS_ID));
		sb.append(",SEXO_ID="+String.valueOf(SEXO_ID));
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",ESTCIVILES_ID="+String.valueOf(ESTCIVILES_ID));
		sb.append(",LUGAR_RESIDENCIA="+String.valueOf(LUGAR_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",LUGAR_EXPEDICION="+String.valueOf(LUGAR_EXPEDICION));
		sb.append(",TDISCAPACIDADES_ID="+String.valueOf(TDISCAPACIDADES_ID));
		sb.append(",OCUPACIONES_ID="+String.valueOf(OCUPACIONES_ID));
		sb.append(",ETNICAS_ID="+String.valueOf(ETNICAS_ID));
		sb.append(",ESMADSCRITO="+String.valueOf(ESMADSCRITO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row77Struct implements routines.system.IPersistableRow<row77Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public int TDOCUMENTOS_ID;

				public int getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public BigDecimal GSANGUINEOS_ID;

				public BigDecimal getGSANGUINEOS_ID () {
					return this.GSANGUINEOS_ID;
				}

				public Boolean GSANGUINEOS_IDIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOS_IDIsKey(){
				    return false;
				}
				public Integer GSANGUINEOS_IDLength(){
				    return 0;
				}
				public Integer GSANGUINEOS_IDPrecision(){
				    return null;
				}
				public String GSANGUINEOS_IDDefault(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDComment(){
				
				    return "";
				
				}
				public String GSANGUINEOS_IDPattern(){
				
					return "";
				
				}
				public String GSANGUINEOS_IDOriginalDbColumnName(){
				
					return "GSANGUINEOS_ID";
				
				}

				
			    public BigDecimal SEXO_ID;

				public BigDecimal getSEXO_ID () {
					return this.SEXO_ID;
				}

				public Boolean SEXO_IDIsNullable(){
				    return false;
				}
				public Boolean SEXO_IDIsKey(){
				    return false;
				}
				public Integer SEXO_IDLength(){
				    return 0;
				}
				public Integer SEXO_IDPrecision(){
				    return null;
				}
				public String SEXO_IDDefault(){
				
					return "";
				
				}
				public String SEXO_IDComment(){
				
				    return "";
				
				}
				public String SEXO_IDPattern(){
				
					return "";
				
				}
				public String SEXO_IDOriginalDbColumnName(){
				
					return "SEXO_ID";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return 400;
				}
				public Integer EMAILPrecision(){
				    return 0;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public BigDecimal ESTCIVILES_ID;

				public BigDecimal getESTCIVILES_ID () {
					return this.ESTCIVILES_ID;
				}

				public Boolean ESTCIVILES_IDIsNullable(){
				    return true;
				}
				public Boolean ESTCIVILES_IDIsKey(){
				    return false;
				}
				public Integer ESTCIVILES_IDLength(){
				    return 0;
				}
				public Integer ESTCIVILES_IDPrecision(){
				    return null;
				}
				public String ESTCIVILES_IDDefault(){
				
					return "";
				
				}
				public String ESTCIVILES_IDComment(){
				
				    return "";
				
				}
				public String ESTCIVILES_IDPattern(){
				
					return "";
				
				}
				public String ESTCIVILES_IDOriginalDbColumnName(){
				
					return "ESTCIVILES_ID";
				
				}

				
			    public BigDecimal LUGAR_RESIDENCIA;

				public BigDecimal getLUGAR_RESIDENCIA () {
					return this.LUGAR_RESIDENCIA;
				}

				public Boolean LUGAR_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_RESIDENCIALength(){
				    return 0;
				}
				public Integer LUGAR_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_RESIDENCIADefault(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_RESIDENCIA";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return 200;
				}
				public Integer BARRIOPrecision(){
				    return 0;
				}
				public String BARRIODefault(){
				
					return null;
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public BigDecimal LUGAR_EXPEDICION;

				public BigDecimal getLUGAR_EXPEDICION () {
					return this.LUGAR_EXPEDICION;
				}

				public Boolean LUGAR_EXPEDICIONIsNullable(){
				    return true;
				}
				public Boolean LUGAR_EXPEDICIONIsKey(){
				    return false;
				}
				public Integer LUGAR_EXPEDICIONLength(){
				    return 0;
				}
				public Integer LUGAR_EXPEDICIONPrecision(){
				    return null;
				}
				public String LUGAR_EXPEDICIONDefault(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONComment(){
				
				    return "";
				
				}
				public String LUGAR_EXPEDICIONPattern(){
				
					return "";
				
				}
				public String LUGAR_EXPEDICIONOriginalDbColumnName(){
				
					return "LUGAR_EXPEDICION";
				
				}

				
			    public BigDecimal TDISCAPACIDADES_ID;

				public BigDecimal getTDISCAPACIDADES_ID () {
					return this.TDISCAPACIDADES_ID;
				}

				public Boolean TDISCAPACIDADES_IDIsNullable(){
				    return true;
				}
				public Boolean TDISCAPACIDADES_IDIsKey(){
				    return false;
				}
				public Integer TDISCAPACIDADES_IDLength(){
				    return 0;
				}
				public Integer TDISCAPACIDADES_IDPrecision(){
				    return null;
				}
				public String TDISCAPACIDADES_IDDefault(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDComment(){
				
				    return "";
				
				}
				public String TDISCAPACIDADES_IDPattern(){
				
					return "";
				
				}
				public String TDISCAPACIDADES_IDOriginalDbColumnName(){
				
					return "TDISCAPACIDADES_ID";
				
				}

				
			    public BigDecimal OCUPACIONES_ID;

				public BigDecimal getOCUPACIONES_ID () {
					return this.OCUPACIONES_ID;
				}

				public Boolean OCUPACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean OCUPACIONES_IDIsKey(){
				    return false;
				}
				public Integer OCUPACIONES_IDLength(){
				    return 0;
				}
				public Integer OCUPACIONES_IDPrecision(){
				    return null;
				}
				public String OCUPACIONES_IDDefault(){
				
					return "";
				
				}
				public String OCUPACIONES_IDComment(){
				
				    return "";
				
				}
				public String OCUPACIONES_IDPattern(){
				
					return "";
				
				}
				public String OCUPACIONES_IDOriginalDbColumnName(){
				
					return "OCUPACIONES_ID";
				
				}

				
			    public BigDecimal ETNICAS_ID;

				public BigDecimal getETNICAS_ID () {
					return this.ETNICAS_ID;
				}

				public Boolean ETNICAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNICAS_IDIsKey(){
				    return false;
				}
				public Integer ETNICAS_IDLength(){
				    return 0;
				}
				public Integer ETNICAS_IDPrecision(){
				    return null;
				}
				public String ETNICAS_IDDefault(){
				
					return "";
				
				}
				public String ETNICAS_IDComment(){
				
				    return "";
				
				}
				public String ETNICAS_IDPattern(){
				
					return "";
				
				}
				public String ETNICAS_IDOriginalDbColumnName(){
				
					return "ETNICAS_ID";
				
				}

				
			    public BigDecimal ESMADSCRITO;

				public BigDecimal getESMADSCRITO () {
					return this.ESMADSCRITO;
				}

				public Boolean ESMADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESMADSCRITOIsKey(){
				    return false;
				}
				public Integer ESMADSCRITOLength(){
				    return null;
				}
				public Integer ESMADSCRITOPrecision(){
				    return null;
				}
				public String ESMADSCRITODefault(){
				
					return null;
				
				}
				public String ESMADSCRITOComment(){
				
				    return "";
				
				}
				public String ESMADSCRITOPattern(){
				
					return "";
				
				}
				public String ESMADSCRITOOriginalDbColumnName(){
				
					return "ESMADSCRITO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = (BigDecimal) dis.readObject();
					
						this.SEXO_ID = (BigDecimal) dis.readObject();
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = (BigDecimal) dis.readObject();
					
						this.LUGAR_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = (BigDecimal) dis.readObject();
					
						this.TDISCAPACIDADES_ID = (BigDecimal) dis.readObject();
					
						this.OCUPACIONES_ID = (BigDecimal) dis.readObject();
					
						this.ETNICAS_ID = (BigDecimal) dis.readObject();
					
						this.ESMADSCRITO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
			        this.TDOCUMENTOS_ID = dis.readInt();
					
					this.DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
						this.GSANGUINEOS_ID = (BigDecimal) dis.readObject();
					
						this.SEXO_ID = (BigDecimal) dis.readObject();
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
						this.ESTCIVILES_ID = (BigDecimal) dis.readObject();
					
						this.LUGAR_RESIDENCIA = (BigDecimal) dis.readObject();
					
					this.BARRIO = readString(dis);
					
						this.LUGAR_EXPEDICION = (BigDecimal) dis.readObject();
					
						this.TDISCAPACIDADES_ID = (BigDecimal) dis.readObject();
					
						this.OCUPACIONES_ID = (BigDecimal) dis.readObject();
					
						this.ETNICAS_ID = (BigDecimal) dis.readObject();
					
						this.ESMADSCRITO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GSANGUINEOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SEXO_ID);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESTCIVILES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LUGAR_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LUGAR_EXPEDICION);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TDISCAPACIDADES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.OCUPACIONES_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ETNICAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ESMADSCRITO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// int
				
		            	dos.writeInt(this.TDOCUMENTOS_ID);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GSANGUINEOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SEXO_ID);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESTCIVILES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LUGAR_RESIDENCIA);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LUGAR_EXPEDICION);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TDISCAPACIDADES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.OCUPACIONES_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ETNICAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ESMADSCRITO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
		sb.append(",GSANGUINEOS_ID="+String.valueOf(GSANGUINEOS_ID));
		sb.append(",SEXO_ID="+String.valueOf(SEXO_ID));
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",ESTCIVILES_ID="+String.valueOf(ESTCIVILES_ID));
		sb.append(",LUGAR_RESIDENCIA="+String.valueOf(LUGAR_RESIDENCIA));
		sb.append(",BARRIO="+BARRIO);
		sb.append(",LUGAR_EXPEDICION="+String.valueOf(LUGAR_EXPEDICION));
		sb.append(",TDISCAPACIDADES_ID="+String.valueOf(TDISCAPACIDADES_ID));
		sb.append(",OCUPACIONES_ID="+String.valueOf(OCUPACIONES_ID));
		sb.append(",ETNICAS_ID="+String.valueOf(ETNICAS_ID));
		sb.append(",ESMADSCRITO="+String.valueOf(ESMADSCRITO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row77Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_30Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row77Struct row77 = new row77Struct();
row78Struct row78 = new row78Struct();
row79Struct row79 = new row79Struct();






	
	/**
	 * [tOracleOutput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_27", false);
		start_Hash.put("tOracleOutput_27", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tOracleOutput_27 = 0;
		






        int updateKeyCount_tOracleOutput_27 = 2;
        if(updateKeyCount_tOracleOutput_27 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_27 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_27 = 0;
    int nb_line_update_tOracleOutput_27 = 0;
    int nb_line_inserted_tOracleOutput_27 = 0;
    int nb_line_deleted_tOracleOutput_27 = 0;
    int nb_line_rejected_tOracleOutput_27 = 0;

    int tmp_batchUpdateCount_tOracleOutput_27 = 0;

    int deletedCount_tOracleOutput_27=0;
    int updatedCount_tOracleOutput_27=0;
    int insertedCount_tOracleOutput_27=0;
    int rowsToCommitCount_tOracleOutput_27=0;
    int rejectedCount_tOracleOutput_27=0;

    boolean whetherReject_tOracleOutput_27 = false;

    java.sql.Connection conn_tOracleOutput_27 = null;

    //optional table
    String dbschema_tOracleOutput_27 = null;
    String tableName_tOracleOutput_27 = null;
        dbschema_tOracleOutput_27 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_27 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_27=0;

        if(dbschema_tOracleOutput_27 == null || dbschema_tOracleOutput_27.trim().length() == 0) {
            tableName_tOracleOutput_27 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_27 = dbschema_tOracleOutput_27 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_27 = "UPDATE " + tableName_tOracleOutput_27 + " SET PROCESADO = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_27 = conn_tOracleOutput_27.prepareStatement(update_tOracleOutput_27);
                resourceMap.put("pstmt_tOracleOutput_27", pstmt_tOracleOutput_27);





 



/**
 * [tOracleOutput_27 begin ] stop
 */



	
	/**
	 * [tJavaRow_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_28", false);
		start_Hash.put("tJavaRow_28", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tJavaRow_28 = 0;
		

int nb_line_tJavaRow_28 = 0;

 



/**
 * [tJavaRow_28 begin ] stop
 */



	
	/**
	 * [tOracleOutput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_26", false);
		start_Hash.put("tOracleOutput_26", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row77");
					}
				
		int tos_count_tOracleOutput_26 = 0;
		






    
    int nb_line_tOracleOutput_26 = 0;
    int nb_line_update_tOracleOutput_26 = 0;
    int nb_line_inserted_tOracleOutput_26 = 0;
    int nb_line_deleted_tOracleOutput_26 = 0;
    int nb_line_rejected_tOracleOutput_26 = 0;

    int tmp_batchUpdateCount_tOracleOutput_26 = 0;

    int deletedCount_tOracleOutput_26=0;
    int updatedCount_tOracleOutput_26=0;
    int insertedCount_tOracleOutput_26=0;
    int rowsToCommitCount_tOracleOutput_26=0;
    int rejectedCount_tOracleOutput_26=0;

    boolean whetherReject_tOracleOutput_26 = false;

    java.sql.Connection conn_tOracleOutput_26 = null;

    //optional table
    String dbschema_tOracleOutput_26 = null;
    String tableName_tOracleOutput_26 = null;
        dbschema_tOracleOutput_26 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_26 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_26=0;

        if(dbschema_tOracleOutput_26 == null || dbschema_tOracleOutput_26.trim().length() == 0) {
            tableName_tOracleOutput_26 = ("GEN_PERSONAS");
        } else {
            tableName_tOracleOutput_26 = dbschema_tOracleOutput_26 + "." + ("GEN_PERSONAS");
        }
                String insert_tOracleOutput_26 = "INSERT INTO " + tableName_tOracleOutput_26 + " (PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,TDOCUMENTOS_ID,DOCUMENTO,FECHA_NACIMIENTO,GSANGUINEOS_ID,SEXO_ID,DIRECCION,TELEFONO,EMAIL,ESTCIVILES_ID,LUGAR_RESIDENCIA,BARRIO,LUGAR_EXPEDICION,TDISCAPACIDADES_ID,OCUPACIONES_ID,ETNICAS_ID,ESMADSCRITO) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_26 = conn_tOracleOutput_26.prepareStatement(insert_tOracleOutput_26);
                        resourceMap.put("pstmt_tOracleOutput_26", pstmt_tOracleOutput_26);





 



/**
 * [tOracleOutput_26 begin ] stop
 */



	
	/**
	 * [tOracleInput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_30", false);
		start_Hash.put("tOracleInput_30", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_30";
	
	
		int tos_count_tOracleInput_30 = 0;
		
	


	
		    int nb_line_tOracleInput_30 = 0;
		    java.sql.Connection conn_tOracleInput_30 = null;
				conn_tOracleInput_30 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_30 = false;
				boolean isConnectionWrapped_tOracleInput_30 = !(conn_tOracleInput_30 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_30.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_30 = null;
                if (isConnectionWrapped_tOracleInput_30) {
					unwrappedOraConn_tOracleInput_30 = conn_tOracleInput_30.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_30 != null) {
                        isTimeZoneNull_tOracleInput_30 = (unwrappedOraConn_tOracleInput_30.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_30 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_30).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_30) {
					java.sql.Statement stmtGetTZ_tOracleInput_30 = conn_tOracleInput_30.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_30 = stmtGetTZ_tOracleInput_30.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_30 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_30.next()) {
						sessionTimezone_tOracleInput_30 = rsGetTZ_tOracleInput_30.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_30 && unwrappedOraConn_tOracleInput_30 != null) {
                        unwrappedOraConn_tOracleInput_30.setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_30).setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_30 = conn_tOracleInput_30.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_30.setFetchSize(1000);


		    String dbquery_tOracleInput_30 = "SELECT TC.PRIMER_NOMBRE,\n       TC.SEGUNDO_NOMBRE,\n       TC.PRIMER_APELLIDO,\n       TC.SEGUNDO_APELLIDO,\n       TC"
+".TDOCUMENTOS_ID,\n       TC.DOCUMENTO,\n       TC.FECHA_NACIMIENTO,\n       DECODE(TC.GSANGUINEOS_ID,0,NULL,TC.GSANGUINE"
+"OS_ID) AS GSANGUINEOS_ID,        \n       DECODE(TC.SEXOS_ID,0,NULL,TC.SEXOS_ID) AS SEXO_ID,\n       TC.DIRECCION,\n    "
+"   TC.TELEFONO,\n       TC.CORREO_ELECTRONICO AS EMAIL,\n       DECODE(TC.ESTCIVILES_ID,0,NULL,TC.ESTCIVILES_ID) AS ESTC"
+"IVILES_ID,\n       DECODE(TC.LUGAR_RESIDENCIA,0,NULL,TC.LUGAR_RESIDENCIA) AS LUGAR_RESIDENCIA,\n       TC.BARRIO,       "
+"\n       DECODE(TC.LUGAR_EXP_DOC,0,NULL,TC.LUGAR_EXP_DOC) AS LUGAR_EXPEDICION,\n       DECODE(TC.TDISCAPACIDADES_ID,0,NU"
+"LL,TC.TDISCAPACIDADES_ID) AS TDISCAPACIDADES_ID,\n       DECODE(TC.OCUPACIONES_ID,0,NULL,TC.OCUPACIONES_ID) AS OCUPACION"
+"ES_ID,\n       DECODE(TC.ETNICAS_ID,0,NULL,TC.ETNICAS_ID) AS ETNICAS_ID,\n       TC.ESMADSCRITO\nFROM TST_CARGUEMASIVO T"
+"C \nWHERE TC.PERSONAS_ID IS  NULL \n      AND TC.PROCESADO IS NULL\n      AND ROWNUM < 1000";
		    

		    globalMap.put("tOracleInput_30_QUERY",dbquery_tOracleInput_30);

		    java.sql.ResultSet rs_tOracleInput_30 = null;

		    try {
		    	rs_tOracleInput_30 = stmt_tOracleInput_30.executeQuery(dbquery_tOracleInput_30);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_30 = rs_tOracleInput_30.getMetaData();
		    	int colQtyInRs_tOracleInput_30 = rsmd_tOracleInput_30.getColumnCount();

		    String tmpContent_tOracleInput_30 = null;
		    
		    
		    while (rs_tOracleInput_30.next()) {
		        nb_line_tOracleInput_30++;
		        
							if(colQtyInRs_tOracleInput_30 < 1) {
								row77.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row77.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 2) {
								row77.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row77.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 3) {
								row77.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row77.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 4) {
								row77.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row77.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 5) {
								row77.TDOCUMENTOS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(5) != null) {
						row77.TDOCUMENTOS_ID = rs_tOracleInput_30.getInt(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 6) {
								row77.DOCUMENTO = null;
							} else {
	                         		
        	row77.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 7) {
								row77.FECHA_NACIMIENTO = null;
							} else {
										
			row77.FECHA_NACIMIENTO = routines.system.JDBCUtil.getDate(rs_tOracleInput_30, 7);
		                    }
							if(colQtyInRs_tOracleInput_30 < 8) {
								row77.GSANGUINEOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(8) != null) {
						row77.GSANGUINEOS_ID = rs_tOracleInput_30.getBigDecimal(8);
					} else {
				
						row77.GSANGUINEOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 9) {
								row77.SEXO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(9) != null) {
						row77.SEXO_ID = rs_tOracleInput_30.getBigDecimal(9);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 10) {
								row77.DIRECCION = null;
							} else {
	                         		
        	row77.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 11) {
								row77.TELEFONO = null;
							} else {
	                         		
        	row77.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 12) {
								row77.EMAIL = null;
							} else {
	                         		
        	row77.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 13) {
								row77.ESTCIVILES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(13) != null) {
						row77.ESTCIVILES_ID = rs_tOracleInput_30.getBigDecimal(13);
					} else {
				
						row77.ESTCIVILES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 14) {
								row77.LUGAR_RESIDENCIA = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(14) != null) {
						row77.LUGAR_RESIDENCIA = rs_tOracleInput_30.getBigDecimal(14);
					} else {
				
						row77.LUGAR_RESIDENCIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 15) {
								row77.BARRIO = null;
							} else {
	                         		
        	row77.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 16) {
								row77.LUGAR_EXPEDICION = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(16) != null) {
						row77.LUGAR_EXPEDICION = rs_tOracleInput_30.getBigDecimal(16);
					} else {
				
						row77.LUGAR_EXPEDICION = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 17) {
								row77.TDISCAPACIDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(17) != null) {
						row77.TDISCAPACIDADES_ID = rs_tOracleInput_30.getBigDecimal(17);
					} else {
				
						row77.TDISCAPACIDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 18) {
								row77.OCUPACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(18) != null) {
						row77.OCUPACIONES_ID = rs_tOracleInput_30.getBigDecimal(18);
					} else {
				
						row77.OCUPACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 19) {
								row77.ETNICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(19) != null) {
						row77.ETNICAS_ID = rs_tOracleInput_30.getBigDecimal(19);
					} else {
				
						row77.ETNICAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_30 < 20) {
								row77.ESMADSCRITO = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(20) != null) {
						row77.ESMADSCRITO = rs_tOracleInput_30.getBigDecimal(20);
					} else {
				
						row77.ESMADSCRITO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_30 begin ] stop
 */
	
	/**
	 * [tOracleInput_30 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 


	tos_count_tOracleInput_30++;

/**
 * [tOracleInput_30 main ] stop
 */
	
	/**
	 * [tOracleInput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_26 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row77"
						
						);
					}
					



            row78 = null;
        whetherReject_tOracleOutput_26 = false;
                        if(row77.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_26.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(1, row77.PRIMER_NOMBRE);
}

                        if(row77.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_26.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(2, row77.SEGUNDO_NOMBRE);
}

                        if(row77.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_26.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(3, row77.PRIMER_APELLIDO);
}

                        if(row77.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_26.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(4, row77.SEGUNDO_APELLIDO);
}

                        pstmt_tOracleOutput_26.setInt(5, row77.TDOCUMENTOS_ID);

                        if(row77.DOCUMENTO == null) {
pstmt_tOracleOutput_26.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(6, row77.DOCUMENTO);
}

                        if(row77.FECHA_NACIMIENTO != null) {
pstmt_tOracleOutput_26.setObject(7, new java.sql.Timestamp(row77.FECHA_NACIMIENTO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_26.setNull(7, java.sql.Types.DATE);
}

                        pstmt_tOracleOutput_26.setBigDecimal(8, row77.GSANGUINEOS_ID);

                        pstmt_tOracleOutput_26.setBigDecimal(9, row77.SEXO_ID);

                        if(row77.DIRECCION == null) {
pstmt_tOracleOutput_26.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(10, row77.DIRECCION);
}

                        if(row77.TELEFONO == null) {
pstmt_tOracleOutput_26.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(11, row77.TELEFONO);
}

                        if(row77.EMAIL == null) {
pstmt_tOracleOutput_26.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(12, row77.EMAIL);
}

                        pstmt_tOracleOutput_26.setBigDecimal(13, row77.ESTCIVILES_ID);

                        pstmt_tOracleOutput_26.setBigDecimal(14, row77.LUGAR_RESIDENCIA);

                        if(row77.BARRIO == null) {
pstmt_tOracleOutput_26.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_26.setString(15, row77.BARRIO);
}

                        pstmt_tOracleOutput_26.setBigDecimal(16, row77.LUGAR_EXPEDICION);

                        pstmt_tOracleOutput_26.setBigDecimal(17, row77.TDISCAPACIDADES_ID);

                        pstmt_tOracleOutput_26.setBigDecimal(18, row77.OCUPACIONES_ID);

                        pstmt_tOracleOutput_26.setBigDecimal(19, row77.ETNICAS_ID);

                        pstmt_tOracleOutput_26.setBigDecimal(20, row77.ESMADSCRITO);

                try {
                    nb_line_tOracleOutput_26++;
                    int processedCount_tOracleOutput_26 = pstmt_tOracleOutput_26.executeUpdate();
                    insertedCount_tOracleOutput_26 += processedCount_tOracleOutput_26;
                    rowsToCommitCount_tOracleOutput_26 += processedCount_tOracleOutput_26;
                } catch(java.lang.Exception e_tOracleOutput_26) {
globalMap.put("tOracleOutput_26_ERROR_MESSAGE",e_tOracleOutput_26.getMessage());
                    whetherReject_tOracleOutput_26 = true;
                            System.err.print(e_tOracleOutput_26.getMessage());
                }
            if(!whetherReject_tOracleOutput_26) {
                            row78 = new row78Struct();
                                row78.PRIMER_NOMBRE = row77.PRIMER_NOMBRE;
                                row78.SEGUNDO_NOMBRE = row77.SEGUNDO_NOMBRE;
                                row78.PRIMER_APELLIDO = row77.PRIMER_APELLIDO;
                                row78.SEGUNDO_APELLIDO = row77.SEGUNDO_APELLIDO;
                                row78.TDOCUMENTOS_ID = row77.TDOCUMENTOS_ID;
                                row78.DOCUMENTO = row77.DOCUMENTO;
                                row78.FECHA_NACIMIENTO = row77.FECHA_NACIMIENTO;
                                row78.GSANGUINEOS_ID = row77.GSANGUINEOS_ID;
                                row78.SEXO_ID = row77.SEXO_ID;
                                row78.DIRECCION = row77.DIRECCION;
                                row78.TELEFONO = row77.TELEFONO;
                                row78.EMAIL = row77.EMAIL;
                                row78.ESTCIVILES_ID = row77.ESTCIVILES_ID;
                                row78.LUGAR_RESIDENCIA = row77.LUGAR_RESIDENCIA;
                                row78.BARRIO = row77.BARRIO;
                                row78.LUGAR_EXPEDICION = row77.LUGAR_EXPEDICION;
                                row78.TDISCAPACIDADES_ID = row77.TDISCAPACIDADES_ID;
                                row78.OCUPACIONES_ID = row77.OCUPACIONES_ID;
                                row78.ETNICAS_ID = row77.ETNICAS_ID;
                                row78.ESMADSCRITO = row77.ESMADSCRITO;
            }

 


	tos_count_tOracleOutput_26++;

/**
 * [tOracleOutput_26 main ] stop
 */
	
	/**
	 * [tOracleOutput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_26";
	
	

 



/**
 * [tOracleOutput_26 process_data_begin ] stop
 */
// Start of branch "row78"
if(row78 != null) { 



	
	/**
	 * [tJavaRow_28 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					

    //Code generate according to input schema and output schema
//Code generate according to input schema and output schema
row79.TDOCUMENTOS_ID = row78.TDOCUMENTOS_ID;
row79.DOCUMENTO = row78.DOCUMENTO;
row79.PROCESADO = 7;//Código de procesado que indica que la persona ha sido registrada satisfactoriamente.
    nb_line_tJavaRow_28++;   

 


	tos_count_tJavaRow_28++;

/**
 * [tJavaRow_28 main ] stop
 */
	
	/**
	 * [tJavaRow_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_27 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					



        whetherReject_tOracleOutput_27 = false;
                    pstmt_tOracleOutput_27.setInt(1, row79.PROCESADO);


                    pstmt_tOracleOutput_27.setInt(2 + count_tOracleOutput_27, row79.TDOCUMENTOS_ID);


                    if(row79.DOCUMENTO == null) {
pstmt_tOracleOutput_27.setNull(3 + count_tOracleOutput_27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_27.setString(3 + count_tOracleOutput_27, row79.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_27++;
                    int processedCount_tOracleOutput_27 = pstmt_tOracleOutput_27.executeUpdate();
                    updatedCount_tOracleOutput_27 += processedCount_tOracleOutput_27;
                    rowsToCommitCount_tOracleOutput_27 += processedCount_tOracleOutput_27;
                } catch(java.lang.Exception e_tOracleOutput_27) {
globalMap.put("tOracleOutput_27_ERROR_MESSAGE",e_tOracleOutput_27.getMessage());
                    whetherReject_tOracleOutput_27 = true;
                            System.err.print(e_tOracleOutput_27.getMessage());
                }

 


	tos_count_tOracleOutput_27++;

/**
 * [tOracleOutput_27 main ] stop
 */
	
	/**
	 * [tOracleOutput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_27";
	
	

 



/**
 * [tOracleOutput_27 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_27";
	
	

 



/**
 * [tOracleOutput_27 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 process_data_end ] stop
 */

} // End of branch "row78"




	
	/**
	 * [tOracleOutput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_26";
	
	

 



/**
 * [tOracleOutput_26 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_30 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

}
}finally{
	if (rs_tOracleInput_30 != null) {
		rs_tOracleInput_30.close();
	}
	if (stmt_tOracleInput_30 != null) {
		stmt_tOracleInput_30.close();
	}
}

globalMap.put("tOracleInput_30_NB_LINE",nb_line_tOracleInput_30);
 

ok_Hash.put("tOracleInput_30", true);
end_Hash.put("tOracleInput_30", System.currentTimeMillis());




/**
 * [tOracleInput_30 end ] stop
 */

	
	/**
	 * [tOracleOutput_26 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_26";
	
	
	



	
        if(pstmt_tOracleOutput_26 != null) {
			
				pstmt_tOracleOutput_26.close();
				resourceMap.remove("pstmt_tOracleOutput_26");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_26", true);

	
	nb_line_deleted_tOracleOutput_26=nb_line_deleted_tOracleOutput_26+ deletedCount_tOracleOutput_26;
	nb_line_update_tOracleOutput_26=nb_line_update_tOracleOutput_26 + updatedCount_tOracleOutput_26;
	nb_line_inserted_tOracleOutput_26=nb_line_inserted_tOracleOutput_26 + insertedCount_tOracleOutput_26;
	nb_line_rejected_tOracleOutput_26=nb_line_rejected_tOracleOutput_26 + rejectedCount_tOracleOutput_26;
	
        globalMap.put("tOracleOutput_26_NB_LINE",nb_line_tOracleOutput_26);
        globalMap.put("tOracleOutput_26_NB_LINE_UPDATED",nb_line_update_tOracleOutput_26);
        globalMap.put("tOracleOutput_26_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_26);
        globalMap.put("tOracleOutput_26_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_26);
        globalMap.put("tOracleOutput_26_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_26);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row77");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_26", true);
end_Hash.put("tOracleOutput_26", System.currentTimeMillis());




/**
 * [tOracleOutput_26 end ] stop
 */

	
	/**
	 * [tJavaRow_28 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

globalMap.put("tJavaRow_28_NB_LINE",nb_line_tJavaRow_28);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tJavaRow_28", true);
end_Hash.put("tJavaRow_28", System.currentTimeMillis());




/**
 * [tJavaRow_28 end ] stop
 */

	
	/**
	 * [tOracleOutput_27 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_27";
	
	
	



	
        if(pstmt_tOracleOutput_27 != null) {
			
				pstmt_tOracleOutput_27.close();
				resourceMap.remove("pstmt_tOracleOutput_27");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_27", true);

	
	nb_line_deleted_tOracleOutput_27=nb_line_deleted_tOracleOutput_27+ deletedCount_tOracleOutput_27;
	nb_line_update_tOracleOutput_27=nb_line_update_tOracleOutput_27 + updatedCount_tOracleOutput_27;
	nb_line_inserted_tOracleOutput_27=nb_line_inserted_tOracleOutput_27 + insertedCount_tOracleOutput_27;
	nb_line_rejected_tOracleOutput_27=nb_line_rejected_tOracleOutput_27 + rejectedCount_tOracleOutput_27;
	
        globalMap.put("tOracleOutput_27_NB_LINE",nb_line_tOracleOutput_27);
        globalMap.put("tOracleOutput_27_NB_LINE_UPDATED",nb_line_update_tOracleOutput_27);
        globalMap.put("tOracleOutput_27_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_27);
        globalMap.put("tOracleOutput_27_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_27);
        globalMap.put("tOracleOutput_27_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_27);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_27", true);
end_Hash.put("tOracleOutput_27", System.currentTimeMillis());




/**
 * [tOracleOutput_27 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_30:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tOracleInput_31Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_30 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 finally ] stop
 */

	
	/**
	 * [tOracleOutput_26 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_26";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_26") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_26 = null;
                if ((pstmtToClose_tOracleOutput_26 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_26")) != null) {
                    pstmtToClose_tOracleOutput_26.close();
                }
    }
 



/**
 * [tOracleOutput_26 finally ] stop
 */

	
	/**
	 * [tJavaRow_28 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_28";
	
	

 



/**
 * [tJavaRow_28 finally ] stop
 */

	
	/**
	 * [tOracleOutput_27 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_27";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_27") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_27 = null;
                if ((pstmtToClose_tOracleOutput_27 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_27")) != null) {
                    pstmtToClose_tOracleOutput_27.close();
                }
    }
 



/**
 * [tOracleOutput_27 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableRow<row80Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TDOCUMENTOS_ID;

				public Integer getTDOCUMENTOS_ID () {
					return this.TDOCUMENTOS_ID;
				}

				public Boolean TDOCUMENTOS_IDIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOS_IDIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOS_IDLength(){
				    return 0;
				}
				public Integer TDOCUMENTOS_IDPrecision(){
				    return null;
				}
				public String TDOCUMENTOS_IDDefault(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOS_IDPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOS_IDOriginalDbColumnName(){
				
					return "TDOCUMENTOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public int PERSONAS_ID;

				public int getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TDOCUMENTOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
			        this.PERSONAS_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TDOCUMENTOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// int
				
		            	dos.writeInt(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS_ID="+String.valueOf(TDOCUMENTOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_31Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row80Struct row80 = new row80Struct();




	
	/**
	 * [tOracleOutput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_28", false);
		start_Hash.put("tOracleOutput_28", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tOracleOutput_28 = 0;
		






        int updateKeyCount_tOracleOutput_28 = 2;
        if(updateKeyCount_tOracleOutput_28 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_28 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_28 = 0;
    int nb_line_update_tOracleOutput_28 = 0;
    int nb_line_inserted_tOracleOutput_28 = 0;
    int nb_line_deleted_tOracleOutput_28 = 0;
    int nb_line_rejected_tOracleOutput_28 = 0;

    int tmp_batchUpdateCount_tOracleOutput_28 = 0;

    int deletedCount_tOracleOutput_28=0;
    int updatedCount_tOracleOutput_28=0;
    int insertedCount_tOracleOutput_28=0;
    int rowsToCommitCount_tOracleOutput_28=0;
    int rejectedCount_tOracleOutput_28=0;

    boolean whetherReject_tOracleOutput_28 = false;

    java.sql.Connection conn_tOracleOutput_28 = null;

    //optional table
    String dbschema_tOracleOutput_28 = null;
    String tableName_tOracleOutput_28 = null;
        dbschema_tOracleOutput_28 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_28 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_28=0;

        if(dbschema_tOracleOutput_28 == null || dbschema_tOracleOutput_28.trim().length() == 0) {
            tableName_tOracleOutput_28 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_28 = dbschema_tOracleOutput_28 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_28 = "UPDATE " + tableName_tOracleOutput_28 + " SET PERSONAS_ID = ? WHERE TDOCUMENTOS_ID = ? AND DOCUMENTO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_28 = conn_tOracleOutput_28.prepareStatement(update_tOracleOutput_28);
                resourceMap.put("pstmt_tOracleOutput_28", pstmt_tOracleOutput_28);





 



/**
 * [tOracleOutput_28 begin ] stop
 */



	
	/**
	 * [tOracleInput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_31", false);
		start_Hash.put("tOracleInput_31", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_31";
	
	
		int tos_count_tOracleInput_31 = 0;
		
	


	
		    int nb_line_tOracleInput_31 = 0;
		    java.sql.Connection conn_tOracleInput_31 = null;
				conn_tOracleInput_31 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_31 = false;
				boolean isConnectionWrapped_tOracleInput_31 = !(conn_tOracleInput_31 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_31.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_31 = null;
                if (isConnectionWrapped_tOracleInput_31) {
					unwrappedOraConn_tOracleInput_31 = conn_tOracleInput_31.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_31 != null) {
                        isTimeZoneNull_tOracleInput_31 = (unwrappedOraConn_tOracleInput_31.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_31 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_31).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_31) {
					java.sql.Statement stmtGetTZ_tOracleInput_31 = conn_tOracleInput_31.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_31 = stmtGetTZ_tOracleInput_31.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_31 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_31.next()) {
						sessionTimezone_tOracleInput_31 = rsGetTZ_tOracleInput_31.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_31 && unwrappedOraConn_tOracleInput_31 != null) {
                        unwrappedOraConn_tOracleInput_31.setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_31).setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_31 = conn_tOracleInput_31.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_31.setFetchSize(1000);


		    String dbquery_tOracleInput_31 = "SELECT TC.TDOCUMENTOS_ID,\n       TC.DOCUMENTO,\n       GP.ID AS PERSONAS_ID\nFROM TST_CARGUEMASIVO TC\nINNER JOIN GEN_"
+"PERSONAS GP ON GP.TDOCUMENTOS_ID = TC.TDOCUMENTOS_ID\nWHERE GP.DOCUMENTO = TC.DOCUMENTO\n      AND TC.PROCESADO = 7";
		    

		    globalMap.put("tOracleInput_31_QUERY",dbquery_tOracleInput_31);

		    java.sql.ResultSet rs_tOracleInput_31 = null;

		    try {
		    	rs_tOracleInput_31 = stmt_tOracleInput_31.executeQuery(dbquery_tOracleInput_31);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_31 = rs_tOracleInput_31.getMetaData();
		    	int colQtyInRs_tOracleInput_31 = rsmd_tOracleInput_31.getColumnCount();

		    String tmpContent_tOracleInput_31 = null;
		    
		    
		    while (rs_tOracleInput_31.next()) {
		        nb_line_tOracleInput_31++;
		        
							if(colQtyInRs_tOracleInput_31 < 1) {
								row80.TDOCUMENTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(1) != null) {
						row80.TDOCUMENTOS_ID = rs_tOracleInput_31.getInt(1);
					} else {
				
						row80.TDOCUMENTOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_31 < 2) {
								row80.DOCUMENTO = null;
							} else {
	                         		
        	row80.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 3) {
								row80.PERSONAS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(3) != null) {
						row80.PERSONAS_ID = rs_tOracleInput_31.getInt(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_31 begin ] stop
 */
	
	/**
	 * [tOracleInput_31 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 


	tos_count_tOracleInput_31++;

/**
 * [tOracleInput_31 main ] stop
 */
	
	/**
	 * [tOracleInput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_28 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					



        whetherReject_tOracleOutput_28 = false;
                    pstmt_tOracleOutput_28.setInt(1, row80.PERSONAS_ID);


                    if(row80.TDOCUMENTOS_ID == null) {
pstmt_tOracleOutput_28.setNull(2 + count_tOracleOutput_28, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_28.setInt(2 + count_tOracleOutput_28, row80.TDOCUMENTOS_ID);
}


                    if(row80.DOCUMENTO == null) {
pstmt_tOracleOutput_28.setNull(3 + count_tOracleOutput_28, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_28.setString(3 + count_tOracleOutput_28, row80.DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_28++;
                    int processedCount_tOracleOutput_28 = pstmt_tOracleOutput_28.executeUpdate();
                    updatedCount_tOracleOutput_28 += processedCount_tOracleOutput_28;
                    rowsToCommitCount_tOracleOutput_28 += processedCount_tOracleOutput_28;
                } catch(java.lang.Exception e_tOracleOutput_28) {
globalMap.put("tOracleOutput_28_ERROR_MESSAGE",e_tOracleOutput_28.getMessage());
                    whetherReject_tOracleOutput_28 = true;
                            System.err.print(e_tOracleOutput_28.getMessage());
                }

 


	tos_count_tOracleOutput_28++;

/**
 * [tOracleOutput_28 main ] stop
 */
	
	/**
	 * [tOracleOutput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_28";
	
	

 



/**
 * [tOracleOutput_28 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_28";
	
	

 



/**
 * [tOracleOutput_28 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_31 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

}
}finally{
	if (rs_tOracleInput_31 != null) {
		rs_tOracleInput_31.close();
	}
	if (stmt_tOracleInput_31 != null) {
		stmt_tOracleInput_31.close();
	}
}

globalMap.put("tOracleInput_31_NB_LINE",nb_line_tOracleInput_31);
 

ok_Hash.put("tOracleInput_31", true);
end_Hash.put("tOracleInput_31", System.currentTimeMillis());




/**
 * [tOracleInput_31 end ] stop
 */

	
	/**
	 * [tOracleOutput_28 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_28";
	
	
	



	
        if(pstmt_tOracleOutput_28 != null) {
			
				pstmt_tOracleOutput_28.close();
				resourceMap.remove("pstmt_tOracleOutput_28");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_28", true);

	
	nb_line_deleted_tOracleOutput_28=nb_line_deleted_tOracleOutput_28+ deletedCount_tOracleOutput_28;
	nb_line_update_tOracleOutput_28=nb_line_update_tOracleOutput_28 + updatedCount_tOracleOutput_28;
	nb_line_inserted_tOracleOutput_28=nb_line_inserted_tOracleOutput_28 + insertedCount_tOracleOutput_28;
	nb_line_rejected_tOracleOutput_28=nb_line_rejected_tOracleOutput_28 + rejectedCount_tOracleOutput_28;
	
        globalMap.put("tOracleOutput_28_NB_LINE",nb_line_tOracleOutput_28);
        globalMap.put("tOracleOutput_28_NB_LINE_UPDATED",nb_line_update_tOracleOutput_28);
        globalMap.put("tOracleOutput_28_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_28);
        globalMap.put("tOracleOutput_28_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_28);
        globalMap.put("tOracleOutput_28_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_28);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_28", true);
end_Hash.put("tOracleOutput_28", System.currentTimeMillis());




/**
 * [tOracleOutput_28 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_31:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tOracleInput_32Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_31 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 finally ] stop
 */

	
	/**
	 * [tOracleOutput_28 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_28";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_28") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_28 = null;
                if ((pstmtToClose_tOracleOutput_28 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_28")) != null) {
                    pstmtToClose_tOracleOutput_28.close();
                }
    }
 



/**
 * [tOracleOutput_28 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 1);
	}
	


public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public java.util.Date FECHAI;

				public java.util.Date getFECHAI () {
					return this.FECHAI;
				}

				public Boolean FECHAIIsNullable(){
				    return true;
				}
				public Boolean FECHAIIsKey(){
				    return false;
				}
				public Integer FECHAILength(){
				    return 0;
				}
				public Integer FECHAIPrecision(){
				    return 0;
				}
				public String FECHAIDefault(){
				
					return null;
				
				}
				public String FECHAIComment(){
				
				    return "";
				
				}
				public String FECHAIPattern(){
				
					return "";
				
				}
				public String FECHAIOriginalDbColumnName(){
				
					return "FECHAI";
				
				}

				
			    public Integer PARENTESCOS_ID;

				public Integer getPARENTESCOS_ID () {
					return this.PARENTESCOS_ID;
				}

				public Boolean PARENTESCOS_IDIsNullable(){
				    return true;
				}
				public Boolean PARENTESCOS_IDIsKey(){
				    return false;
				}
				public Integer PARENTESCOS_IDLength(){
				    return 0;
				}
				public Integer PARENTESCOS_IDPrecision(){
				    return null;
				}
				public String PARENTESCOS_IDDefault(){
				
					return "";
				
				}
				public String PARENTESCOS_IDComment(){
				
				    return "";
				
				}
				public String PARENTESCOS_IDPattern(){
				
					return "";
				
				}
				public String PARENTESCOS_IDOriginalDbColumnName(){
				
					return "PARENTESCOS_ID";
				
				}

				
			    public java.util.Date FECHA_CADUCIDAD;

				public java.util.Date getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return 0;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return 0;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 400;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public Integer PLANAFILIACIONES_ID;

				public Integer getPLANAFILIACIONES_ID () {
					return this.PLANAFILIACIONES_ID;
				}

				public Boolean PLANAFILIACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONES_IDIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONES_IDLength(){
				    return 0;
				}
				public Integer PLANAFILIACIONES_IDPrecision(){
				    return null;
				}
				public String PLANAFILIACIONES_IDDefault(){
				
					return "";
				
				}
				public String PLANAFILIACIONES_IDComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONES_IDPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONES_IDOriginalDbColumnName(){
				
					return "PLANAFILIACIONES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public String INDEPENDIENTE;

				public String getINDEPENDIENTE () {
					return this.INDEPENDIENTE;
				}

				public Boolean INDEPENDIENTEIsNullable(){
				    return true;
				}
				public Boolean INDEPENDIENTEIsKey(){
				    return false;
				}
				public Integer INDEPENDIENTELength(){
				    return null;
				}
				public Integer INDEPENDIENTEPrecision(){
				    return null;
				}
				public String INDEPENDIENTEDefault(){
				
					return null;
				
				}
				public String INDEPENDIENTEComment(){
				
				    return "";
				
				}
				public String INDEPENDIENTEPattern(){
				
					return "";
				
				}
				public String INDEPENDIENTEOriginalDbColumnName(){
				
					return "INDEPENDIENTE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
					this.FECHAI = readDate(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
					this.INDEPENDIENTE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
					this.FECHAI = readDate(dis);
					
						this.PARENTESCOS_ID = readInteger(dis);
					
					this.FECHA_CADUCIDAD = readDate(dis);
					
					this.OBSERVACIONES = readString(dis);
					
						this.PLANAFILIACIONES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
					this.INDEPENDIENTE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHAI,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// String
				
						writeString(this.INDEPENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHAI,dos);
					
					// Integer
				
						writeInteger(this.PARENTESCOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// Integer
				
						writeInteger(this.PLANAFILIACIONES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// String
				
						writeString(this.INDEPENDIENTE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",FECHAI="+String.valueOf(FECHAI));
		sb.append(",PARENTESCOS_ID="+String.valueOf(PARENTESCOS_ID));
		sb.append(",FECHA_CADUCIDAD="+String.valueOf(FECHA_CADUCIDAD));
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",PLANAFILIACIONES_ID="+String.valueOf(PLANAFILIACIONES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",INDEPENDIENTE="+INDEPENDIENTE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_32Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();




	
	/**
	 * [tOracleOutput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_29", false);
		start_Hash.put("tOracleOutput_29", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_29";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tOracleOutput_29 = 0;
		






    
    int nb_line_tOracleOutput_29 = 0;
    int nb_line_update_tOracleOutput_29 = 0;
    int nb_line_inserted_tOracleOutput_29 = 0;
    int nb_line_deleted_tOracleOutput_29 = 0;
    int nb_line_rejected_tOracleOutput_29 = 0;

    int tmp_batchUpdateCount_tOracleOutput_29 = 0;

    int deletedCount_tOracleOutput_29=0;
    int updatedCount_tOracleOutput_29=0;
    int insertedCount_tOracleOutput_29=0;
    int rowsToCommitCount_tOracleOutput_29=0;
    int rejectedCount_tOracleOutput_29=0;

    boolean whetherReject_tOracleOutput_29 = false;

    java.sql.Connection conn_tOracleOutput_29 = null;

    //optional table
    String dbschema_tOracleOutput_29 = null;
    String tableName_tOracleOutput_29 = null;
        dbschema_tOracleOutput_29 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_29 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_29=0;

        if(dbschema_tOracleOutput_29 == null || dbschema_tOracleOutput_29.trim().length() == 0) {
            tableName_tOracleOutput_29 = ("GEN_AFILIADOS");
        } else {
            tableName_tOracleOutput_29 = dbschema_tOracleOutput_29 + "." + ("GEN_AFILIADOS");
        }
                String insert_tOracleOutput_29 = "INSERT INTO " + tableName_tOracleOutput_29 + " (PERSONAS_ID,FECHAI,PARENTESCOS_ID,FECHA_CADUCIDAD,OBSERVACIONES,PLANAFILIACIONES_ID,FUERZAS_ID,INDEPENDIENTE) VALUES (?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_29 = conn_tOracleOutput_29.prepareStatement(insert_tOracleOutput_29);
                        resourceMap.put("pstmt_tOracleOutput_29", pstmt_tOracleOutput_29);





 



/**
 * [tOracleOutput_29 begin ] stop
 */



	
	/**
	 * [tOracleInput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_32", false);
		start_Hash.put("tOracleInput_32", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_32";
	
	
		int tos_count_tOracleInput_32 = 0;
		
	


	
		    int nb_line_tOracleInput_32 = 0;
		    java.sql.Connection conn_tOracleInput_32 = null;
				conn_tOracleInput_32 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_32 = false;
				boolean isConnectionWrapped_tOracleInput_32 = !(conn_tOracleInput_32 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_32.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_32 = null;
                if (isConnectionWrapped_tOracleInput_32) {
					unwrappedOraConn_tOracleInput_32 = conn_tOracleInput_32.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_32 != null) {
                        isTimeZoneNull_tOracleInput_32 = (unwrappedOraConn_tOracleInput_32.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_32 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_32).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_32) {
					java.sql.Statement stmtGetTZ_tOracleInput_32 = conn_tOracleInput_32.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_32 = stmtGetTZ_tOracleInput_32.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_32 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_32.next()) {
						sessionTimezone_tOracleInput_32 = rsGetTZ_tOracleInput_32.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_32 && unwrappedOraConn_tOracleInput_32 != null) {
                        unwrappedOraConn_tOracleInput_32.setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_32).setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_32 = conn_tOracleInput_32.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_32.setFetchSize(1000);


		    String dbquery_tOracleInput_32 = "SELECT TC.PERSONAS_ID,\n       SYSDATE AS FECHAI,\n       TC.PARENTESCOS_ID,\n       TC.FECHA_CADUCIDAD,\n       TC.OBS"
+"ERVACIONES,\n       TC.PLANAFILIACIONES_ID,\n       TC.FUERZAS_ID,\n		'No' AS INDEPENDIENTE      \nFROM TST_CARGUEMASIVO"
+" TC \nWHERE TC.PERSONAS_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_32_QUERY",dbquery_tOracleInput_32);

		    java.sql.ResultSet rs_tOracleInput_32 = null;

		    try {
		    	rs_tOracleInput_32 = stmt_tOracleInput_32.executeQuery(dbquery_tOracleInput_32);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_32 = rs_tOracleInput_32.getMetaData();
		    	int colQtyInRs_tOracleInput_32 = rsmd_tOracleInput_32.getColumnCount();

		    String tmpContent_tOracleInput_32 = null;
		    
		    
		    while (rs_tOracleInput_32.next()) {
		        nb_line_tOracleInput_32++;
		        
							if(colQtyInRs_tOracleInput_32 < 1) {
								row81.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(1) != null) {
						row81.PERSONAS_ID = rs_tOracleInput_32.getInt(1);
					} else {
				
						row81.PERSONAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 2) {
								row81.FECHAI = null;
							} else {
										
			row81.FECHAI = routines.system.JDBCUtil.getDate(rs_tOracleInput_32, 2);
		                    }
							if(colQtyInRs_tOracleInput_32 < 3) {
								row81.PARENTESCOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(3) != null) {
						row81.PARENTESCOS_ID = rs_tOracleInput_32.getInt(3);
					} else {
				
						row81.PARENTESCOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 4) {
								row81.FECHA_CADUCIDAD = null;
							} else {
										
			row81.FECHA_CADUCIDAD = routines.system.JDBCUtil.getDate(rs_tOracleInput_32, 4);
		                    }
							if(colQtyInRs_tOracleInput_32 < 5) {
								row81.OBSERVACIONES = null;
							} else {
	                         		
        	row81.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_32, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_32 < 6) {
								row81.PLANAFILIACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(6) != null) {
						row81.PLANAFILIACIONES_ID = rs_tOracleInput_32.getInt(6);
					} else {
				
						row81.PLANAFILIACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 7) {
								row81.FUERZAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(7) != null) {
						row81.FUERZAS_ID = rs_tOracleInput_32.getInt(7);
					} else {
				
						row81.FUERZAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_32 < 8) {
								row81.INDEPENDIENTE = null;
							} else {
	                         		
        	row81.INDEPENDIENTE = routines.system.JDBCUtil.getString(rs_tOracleInput_32, 8, false);
		                    }
					




 



/**
 * [tOracleInput_32 begin ] stop
 */
	
	/**
	 * [tOracleInput_32 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 


	tos_count_tOracleInput_32++;

/**
 * [tOracleInput_32 main ] stop
 */
	
	/**
	 * [tOracleInput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_29 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_29";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					



        whetherReject_tOracleOutput_29 = false;
                        if(row81.PERSONAS_ID == null) {
pstmt_tOracleOutput_29.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_29.setInt(1, row81.PERSONAS_ID);
}

                        if(row81.FECHAI != null) {
pstmt_tOracleOutput_29.setObject(2, new java.sql.Timestamp(row81.FECHAI.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_29.setNull(2, java.sql.Types.DATE);
}

                        if(row81.PARENTESCOS_ID == null) {
pstmt_tOracleOutput_29.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_29.setInt(3, row81.PARENTESCOS_ID);
}

                        if(row81.FECHA_CADUCIDAD != null) {
pstmt_tOracleOutput_29.setObject(4, new java.sql.Timestamp(row81.FECHA_CADUCIDAD.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_29.setNull(4, java.sql.Types.DATE);
}

                        if(row81.OBSERVACIONES == null) {
pstmt_tOracleOutput_29.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_29.setString(5, row81.OBSERVACIONES);
}

                        if(row81.PLANAFILIACIONES_ID == null) {
pstmt_tOracleOutput_29.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_29.setInt(6, row81.PLANAFILIACIONES_ID);
}

                        if(row81.FUERZAS_ID == null) {
pstmt_tOracleOutput_29.setNull(7, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_29.setInt(7, row81.FUERZAS_ID);
}

                        if(row81.INDEPENDIENTE == null) {
pstmt_tOracleOutput_29.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_29.setString(8, row81.INDEPENDIENTE);
}

                try {
                    nb_line_tOracleOutput_29++;
                    int processedCount_tOracleOutput_29 = pstmt_tOracleOutput_29.executeUpdate();
                    insertedCount_tOracleOutput_29 += processedCount_tOracleOutput_29;
                    rowsToCommitCount_tOracleOutput_29 += processedCount_tOracleOutput_29;
                } catch(java.lang.Exception e_tOracleOutput_29) {
globalMap.put("tOracleOutput_29_ERROR_MESSAGE",e_tOracleOutput_29.getMessage());
                    whetherReject_tOracleOutput_29 = true;
                            System.err.print(e_tOracleOutput_29.getMessage());
                }

 


	tos_count_tOracleOutput_29++;

/**
 * [tOracleOutput_29 main ] stop
 */
	
	/**
	 * [tOracleOutput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_29";
	
	

 



/**
 * [tOracleOutput_29 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_29";
	
	

 



/**
 * [tOracleOutput_29 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_32 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

}
}finally{
	if (rs_tOracleInput_32 != null) {
		rs_tOracleInput_32.close();
	}
	if (stmt_tOracleInput_32 != null) {
		stmt_tOracleInput_32.close();
	}
}

globalMap.put("tOracleInput_32_NB_LINE",nb_line_tOracleInput_32);
 

ok_Hash.put("tOracleInput_32", true);
end_Hash.put("tOracleInput_32", System.currentTimeMillis());




/**
 * [tOracleInput_32 end ] stop
 */

	
	/**
	 * [tOracleOutput_29 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_29";
	
	
	



	
        if(pstmt_tOracleOutput_29 != null) {
			
				pstmt_tOracleOutput_29.close();
				resourceMap.remove("pstmt_tOracleOutput_29");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_29", true);

	
	nb_line_deleted_tOracleOutput_29=nb_line_deleted_tOracleOutput_29+ deletedCount_tOracleOutput_29;
	nb_line_update_tOracleOutput_29=nb_line_update_tOracleOutput_29 + updatedCount_tOracleOutput_29;
	nb_line_inserted_tOracleOutput_29=nb_line_inserted_tOracleOutput_29 + insertedCount_tOracleOutput_29;
	nb_line_rejected_tOracleOutput_29=nb_line_rejected_tOracleOutput_29 + rejectedCount_tOracleOutput_29;
	
        globalMap.put("tOracleOutput_29_NB_LINE",nb_line_tOracleOutput_29);
        globalMap.put("tOracleOutput_29_NB_LINE_UPDATED",nb_line_update_tOracleOutput_29);
        globalMap.put("tOracleOutput_29_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_29);
        globalMap.put("tOracleOutput_29_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_29);
        globalMap.put("tOracleOutput_29_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_29);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_29", true);
end_Hash.put("tOracleOutput_29", System.currentTimeMillis());




/**
 * [tOracleOutput_29 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_32:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk26", 0, "ok");
								} 
							
							tOracleInput_34Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_32 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 finally ] stop
 */

	
	/**
	 * [tOracleOutput_29 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_29";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_29") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_29 = null;
                if ((pstmtToClose_tOracleOutput_29 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_29")) != null) {
                    pstmtToClose_tOracleOutput_29.close();
                }
    }
 



/**
 * [tOracleOutput_29 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 1);
	}
	


public static class HAFILIADO_INICIALStruct implements routines.system.IPersistableRow<HAFILIADO_INICIALStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "FK - GEN_AFILIADOS";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public int PROCESOS_ID;

				public int getPROCESOS_ID () {
					return this.PROCESOS_ID;
				}

				public Boolean PROCESOS_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOS_IDIsKey(){
				    return false;
				}
				public Integer PROCESOS_IDLength(){
				    return 0;
				}
				public Integer PROCESOS_IDPrecision(){
				    return null;
				}
				public String PROCESOS_IDDefault(){
				
					return "";
				
				}
				public String PROCESOS_IDComment(){
				
				    return "FK - AFI_PROCESOS";
				
				}
				public String PROCESOS_IDPattern(){
				
					return "";
				
				}
				public String PROCESOS_IDOriginalDbColumnName(){
				
					return "PROCESOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 500;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "Motivo de la edici\u00F3n";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public int RNOVEDADES_ID;

				public int getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return false;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "FK - AFI_NOVEDADES";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public String VANTERIOR;

				public String getVANTERIOR () {
					return this.VANTERIOR;
				}

				public Boolean VANTERIORIsNullable(){
				    return true;
				}
				public Boolean VANTERIORIsKey(){
				    return false;
				}
				public Integer VANTERIORLength(){
				    return 2000;
				}
				public Integer VANTERIORPrecision(){
				    return 0;
				}
				public String VANTERIORDefault(){
				
					return null;
				
				}
				public String VANTERIORComment(){
				
				    return "Valor anterior";
				
				}
				public String VANTERIORPattern(){
				
					return "";
				
				}
				public String VANTERIOROriginalDbColumnName(){
				
					return "VANTERIOR";
				
				}

				
			    public String VACTUAL;

				public String getVACTUAL () {
					return this.VACTUAL;
				}

				public Boolean VACTUALIsNullable(){
				    return true;
				}
				public Boolean VACTUALIsKey(){
				    return false;
				}
				public Integer VACTUALLength(){
				    return 2000;
				}
				public Integer VACTUALPrecision(){
				    return 0;
				}
				public String VACTUALDefault(){
				
					return null;
				
				}
				public String VACTUALComment(){
				
				    return "Valor actual";
				
				}
				public String VACTUALPattern(){
				
					return "";
				
				}
				public String VACTUALOriginalDbColumnName(){
				
					return "VACTUAL";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 150;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "Campo afectado por el historico";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.PROCESOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
			        this.RNOVEDADES_ID = dis.readInt();
					
					this.VANTERIOR = readString(dis);
					
					this.VACTUAL = readString(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.PROCESOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
			        this.RNOVEDADES_ID = dis.readInt();
					
					this.VANTERIOR = readString(dis);
					
					this.VACTUAL = readString(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.PROCESOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// int
				
		            	dos.writeInt(this.RNOVEDADES_ID);
					
					// String
				
						writeString(this.VANTERIOR,dos);
					
					// String
				
						writeString(this.VACTUAL,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.PROCESOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// int
				
		            	dos.writeInt(this.RNOVEDADES_ID);
					
					// String
				
						writeString(this.VANTERIOR,dos);
					
					// String
				
						writeString(this.VACTUAL,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",PROCESOS_ID="+String.valueOf(PROCESOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",VANTERIOR="+VANTERIOR);
		sb.append(",VACTUAL="+VACTUAL);
		sb.append(",CAMPO="+CAMPO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(HAFILIADO_INICIALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class HESTADO_INICIALStruct implements routines.system.IPersistableRow<HESTADO_INICIALStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "FK - GEN_AFILIADOS";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public int ESTADOS_ID;

				public int getESTADOS_ID () {
					return this.ESTADOS_ID;
				}

				public Boolean ESTADOS_IDIsNullable(){
				    return false;
				}
				public Boolean ESTADOS_IDIsKey(){
				    return false;
				}
				public Integer ESTADOS_IDLength(){
				    return 0;
				}
				public Integer ESTADOS_IDPrecision(){
				    return null;
				}
				public String ESTADOS_IDDefault(){
				
					return "";
				
				}
				public String ESTADOS_IDComment(){
				
				    return "FK - AFI_ESTADOS";
				
				}
				public String ESTADOS_IDPattern(){
				
					return "";
				
				}
				public String ESTADOS_IDOriginalDbColumnName(){
				
					return "ESTADOS_ID";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "FK - AFI_MOTIVOSESTADOS";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha del cambio de estado";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.USUARIOS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.ESTADOS_ID = dis.readInt();
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.USUARIOS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.ESTADOS_ID = dis.readInt();
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.ESTADOS_ID);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.ESTADOS_ID);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",ESTADOS_ID="+String.valueOf(ESTADOS_ID));
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(HESTADO_INICIALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class AFILIADOS_IDStruct implements routines.system.IPersistableRow<AFILIADOS_IDStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return null;
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public Integer AFILIADO_ID;

				public Integer getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return null;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return null;
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
						this.AFILIADO_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
						this.AFILIADO_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// Integer
				
						writeInteger(this.AFILIADO_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// Integer
				
						writeInteger(this.AFILIADO_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADO_ID="+String.valueOf(AFILIADO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(AFILIADOS_IDStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row84Struct implements routines.system.IPersistableRow<row84Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 400;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return true;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 10;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CAMPO="+CAMPO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row84Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_34Struct implements routines.system.IPersistableRow<after_tOracleInput_34Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer PERSONAS_ID;

				public Integer getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 400;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return true;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 10;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.PERSONAS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CAMPO="+CAMPO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_34Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_34_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_16Process(globalMap);
		tHashInput_17Process(globalMap);

		row84Struct row84 = new row84Struct();
HAFILIADO_INICIALStruct HAFILIADO_INICIAL = new HAFILIADO_INICIALStruct();
HESTADO_INICIALStruct HESTADO_INICIAL = new HESTADO_INICIALStruct();
AFILIADOS_IDStruct AFILIADOS_ID = new AFILIADOS_IDStruct();





	
	/**
	 * [tOracleOutput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_30", false);
		start_Hash.put("tOracleOutput_30", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"HAFILIADO_INICIAL");
					}
				
		int tos_count_tOracleOutput_30 = 0;
		






    
    int nb_line_tOracleOutput_30 = 0;
    int nb_line_update_tOracleOutput_30 = 0;
    int nb_line_inserted_tOracleOutput_30 = 0;
    int nb_line_deleted_tOracleOutput_30 = 0;
    int nb_line_rejected_tOracleOutput_30 = 0;

    int tmp_batchUpdateCount_tOracleOutput_30 = 0;

    int deletedCount_tOracleOutput_30=0;
    int updatedCount_tOracleOutput_30=0;
    int insertedCount_tOracleOutput_30=0;
    int rowsToCommitCount_tOracleOutput_30=0;
    int rejectedCount_tOracleOutput_30=0;

    boolean whetherReject_tOracleOutput_30 = false;

    java.sql.Connection conn_tOracleOutput_30 = null;

    //optional table
    String dbschema_tOracleOutput_30 = null;
    String tableName_tOracleOutput_30 = null;
        dbschema_tOracleOutput_30 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_30 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_30=0;

        if(dbschema_tOracleOutput_30 == null || dbschema_tOracleOutput_30.trim().length() == 0) {
            tableName_tOracleOutput_30 = ("AFI_HAFILIADOS");
        } else {
            tableName_tOracleOutput_30 = dbschema_tOracleOutput_30 + "." + ("AFI_HAFILIADOS");
        }
                String insert_tOracleOutput_30 = "INSERT INTO " + tableName_tOracleOutput_30 + " (AFILIADOS_ID,PROCESOS_ID,MOTIVO,RNOVEDADES_ID,VANTERIOR,VACTUAL,CAMPO) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_30 = conn_tOracleOutput_30.prepareStatement(insert_tOracleOutput_30);
                        resourceMap.put("pstmt_tOracleOutput_30", pstmt_tOracleOutput_30);





 



/**
 * [tOracleOutput_30 begin ] stop
 */




	
	/**
	 * [tOracleOutput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_31", false);
		start_Hash.put("tOracleOutput_31", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_31";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"HESTADO_INICIAL");
					}
				
		int tos_count_tOracleOutput_31 = 0;
		






    
    int nb_line_tOracleOutput_31 = 0;
    int nb_line_update_tOracleOutput_31 = 0;
    int nb_line_inserted_tOracleOutput_31 = 0;
    int nb_line_deleted_tOracleOutput_31 = 0;
    int nb_line_rejected_tOracleOutput_31 = 0;

    int tmp_batchUpdateCount_tOracleOutput_31 = 0;

    int deletedCount_tOracleOutput_31=0;
    int updatedCount_tOracleOutput_31=0;
    int insertedCount_tOracleOutput_31=0;
    int rowsToCommitCount_tOracleOutput_31=0;
    int rejectedCount_tOracleOutput_31=0;

    boolean whetherReject_tOracleOutput_31 = false;

    java.sql.Connection conn_tOracleOutput_31 = null;

    //optional table
    String dbschema_tOracleOutput_31 = null;
    String tableName_tOracleOutput_31 = null;
        dbschema_tOracleOutput_31 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_31 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_31=0;

        if(dbschema_tOracleOutput_31 == null || dbschema_tOracleOutput_31.trim().length() == 0) {
            tableName_tOracleOutput_31 = ("AFI_HESTADOS");
        } else {
            tableName_tOracleOutput_31 = dbschema_tOracleOutput_31 + "." + ("AFI_HESTADOS");
        }
                String insert_tOracleOutput_31 = "INSERT INTO " + tableName_tOracleOutput_31 + " (USUARIOS_ID,AFILIADOS_ID,ESTADOS_ID,MOTIVOSESTADO_ID,FECHA) VALUES (?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_31 = conn_tOracleOutput_31.prepareStatement(insert_tOracleOutput_31);
                        resourceMap.put("pstmt_tOracleOutput_31", pstmt_tOracleOutput_31);





 



/**
 * [tOracleOutput_31 begin ] stop
 */




	
	/**
	 * [tOracleOutput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_32", false);
		start_Hash.put("tOracleOutput_32", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"AFILIADOS_ID");
					}
				
		int tos_count_tOracleOutput_32 = 0;
		






        int updateKeyCount_tOracleOutput_32 = 1;
        if(updateKeyCount_tOracleOutput_32 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_32 == 2 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_32 = 0;
    int nb_line_update_tOracleOutput_32 = 0;
    int nb_line_inserted_tOracleOutput_32 = 0;
    int nb_line_deleted_tOracleOutput_32 = 0;
    int nb_line_rejected_tOracleOutput_32 = 0;

    int tmp_batchUpdateCount_tOracleOutput_32 = 0;

    int deletedCount_tOracleOutput_32=0;
    int updatedCount_tOracleOutput_32=0;
    int insertedCount_tOracleOutput_32=0;
    int rowsToCommitCount_tOracleOutput_32=0;
    int rejectedCount_tOracleOutput_32=0;

    boolean whetherReject_tOracleOutput_32 = false;

    java.sql.Connection conn_tOracleOutput_32 = null;

    //optional table
    String dbschema_tOracleOutput_32 = null;
    String tableName_tOracleOutput_32 = null;
        dbschema_tOracleOutput_32 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_32 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_32=0;

        if(dbschema_tOracleOutput_32 == null || dbschema_tOracleOutput_32.trim().length() == 0) {
            tableName_tOracleOutput_32 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_32 = dbschema_tOracleOutput_32 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_32 = "UPDATE " + tableName_tOracleOutput_32 + " SET AFILIADO_ID = ? WHERE PERSONAS_ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_32 = conn_tOracleOutput_32.prepareStatement(update_tOracleOutput_32);
                resourceMap.put("pstmt_tOracleOutput_32", pstmt_tOracleOutput_32);





 



/**
 * [tOracleOutput_32 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row84");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
					globalMap.get( "tHash_Lookup_row85" ))
					;					
					
	

row85Struct row85HashKey = new row85Struct();
row85Struct row85Default = new row85Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct> tHash_Lookup_row86 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct>) 
					globalMap.get( "tHash_Lookup_row86" ))
					;					
					
	

row86Struct row86HashKey = new row86Struct();
row86Struct row86Default = new row86Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
HAFILIADO_INICIALStruct HAFILIADO_INICIAL_tmp = new HAFILIADO_INICIALStruct();
HESTADO_INICIALStruct HESTADO_INICIAL_tmp = new HESTADO_INICIALStruct();
AFILIADOS_IDStruct AFILIADOS_ID_tmp = new AFILIADOS_IDStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_34", false);
		start_Hash.put("tOracleInput_34", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_34";
	
	
		int tos_count_tOracleInput_34 = 0;
		
	


	
		    int nb_line_tOracleInput_34 = 0;
		    java.sql.Connection conn_tOracleInput_34 = null;
				conn_tOracleInput_34 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_34 = false;
				boolean isConnectionWrapped_tOracleInput_34 = !(conn_tOracleInput_34 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_34.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_34 = null;
                if (isConnectionWrapped_tOracleInput_34) {
					unwrappedOraConn_tOracleInput_34 = conn_tOracleInput_34.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_34 != null) {
                        isTimeZoneNull_tOracleInput_34 = (unwrappedOraConn_tOracleInput_34.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_34 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_34).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_34) {
					java.sql.Statement stmtGetTZ_tOracleInput_34 = conn_tOracleInput_34.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_34 = stmtGetTZ_tOracleInput_34.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_34 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_34.next()) {
						sessionTimezone_tOracleInput_34 = rsGetTZ_tOracleInput_34.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_34 && unwrappedOraConn_tOracleInput_34 != null) {
                        unwrappedOraConn_tOracleInput_34.setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_34).setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_34 = conn_tOracleInput_34.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_34.setFetchSize(1000);


		    String dbquery_tOracleInput_34 = "SELECT TC.PERSONAS_ID,\n       GA.ID AS AFILIADOS_ID,\n       TC.MOTIVO,\n       TC.MOTIVOSESTADO_ID,\n       TC.RNOVED"
+"ADES_ID,\n       TC.USUARIOS_ID,\n       SYSDATE AS FECHA,\n       'ESTADOS_ID' AS CAMPO\nFROM TST_CARGUEMASIVO TC\nINNE"
+"R JOIN GEN_AFILIADOS GA ON GA.PERSONAS_ID = TC.PERSONAS_ID\nWHERE TC.PERSONAS_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_34_QUERY",dbquery_tOracleInput_34);

		    java.sql.ResultSet rs_tOracleInput_34 = null;

		    try {
		    	rs_tOracleInput_34 = stmt_tOracleInput_34.executeQuery(dbquery_tOracleInput_34);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_34 = rs_tOracleInput_34.getMetaData();
		    	int colQtyInRs_tOracleInput_34 = rsmd_tOracleInput_34.getColumnCount();

		    String tmpContent_tOracleInput_34 = null;
		    
		    
		    while (rs_tOracleInput_34.next()) {
		        nb_line_tOracleInput_34++;
		        
							if(colQtyInRs_tOracleInput_34 < 1) {
								row84.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(1) != null) {
						row84.PERSONAS_ID = rs_tOracleInput_34.getInt(1);
					} else {
				
						row84.PERSONAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 2) {
								row84.AFILIADOS_ID = 0;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(2) != null) {
						row84.AFILIADOS_ID = rs_tOracleInput_34.getInt(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 3) {
								row84.MOTIVO = null;
							} else {
	                         		
        	row84.MOTIVO = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 4) {
								row84.MOTIVOSESTADO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(4) != null) {
						row84.MOTIVOSESTADO_ID = rs_tOracleInput_34.getInt(4);
					} else {
				
						row84.MOTIVOSESTADO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 5) {
								row84.RNOVEDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(5) != null) {
						row84.RNOVEDADES_ID = rs_tOracleInput_34.getInt(5);
					} else {
				
						row84.RNOVEDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 6) {
								row84.USUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(6) != null) {
						row84.USUARIOS_ID = rs_tOracleInput_34.getInt(6);
					} else {
				
						row84.USUARIOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_34 < 7) {
								row84.FECHA = null;
							} else {
										
			row84.FECHA = routines.system.JDBCUtil.getDate(rs_tOracleInput_34, 7);
		                    }
							if(colQtyInRs_tOracleInput_34 < 8) {
								row84.CAMPO = null;
							} else {
	                         		
        	row84.CAMPO = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 8, false);
		                    }
					




 



/**
 * [tOracleInput_34 begin ] stop
 */
	
	/**
	 * [tOracleInput_34 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 


	tos_count_tOracleInput_34++;

/**
 * [tOracleInput_34 main ] stop
 */
	
	/**
	 * [tOracleInput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row84"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row85Struct row85 = null;
					
						row86Struct row86 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row85" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow85 = false;
       		  	    	
       		  	    	
 							row85Struct row85ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row85HashKey.SIGLA = "IX";
                        		    		

								
		                        	row85HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row85.lookup( row85HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row85 != null && tHash_Lookup_row85.getCount(row85HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row85' and it contains more one result from keys :  row85.SIGLA = '" + row85HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row85Struct fromLookup_row85 = null;
							row85 = row85Default;
										 
							
								 
							
							
								if (tHash_Lookup_row85 !=null && tHash_Lookup_row85.hasNext()) { // G 099
								
							
								
								fromLookup_row85 = tHash_Lookup_row85.next();

							
							
								} // G 099
							
							

							if(fromLookup_row85 != null) {
								row85 = fromLookup_row85;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row86" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow86 = false;
       		  	    	
       		  	    	
 							row86Struct row86ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row86HashKey.SIGLA = "RI";
                        		    		

								
		                        	row86HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row86.lookup( row86HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row86 != null && tHash_Lookup_row86.getCount(row86HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row86' and it contains more one result from keys :  row86.SIGLA = '" + row86HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row86Struct fromLookup_row86 = null;
							row86 = row86Default;
										 
							
								 
							
							
								if (tHash_Lookup_row86 !=null && tHash_Lookup_row86.hasNext()) { // G 099
								
							
								
								fromLookup_row86 = tHash_Lookup_row86.next();

							
							
								} // G 099
							
							

							if(fromLookup_row86 != null) {
								row86 = fromLookup_row86;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

HAFILIADO_INICIAL = null;
HESTADO_INICIAL = null;
AFILIADOS_ID = null;


// # Output table : 'HAFILIADO_INICIAL'
HAFILIADO_INICIAL_tmp.AFILIADOS_ID = row84.AFILIADOS_ID;
HAFILIADO_INICIAL_tmp.PROCESOS_ID = context.vprocesos_id;
HAFILIADO_INICIAL_tmp.MOTIVO = row84.MOTIVO;
HAFILIADO_INICIAL_tmp.RNOVEDADES_ID = row84.RNOVEDADES_ID;
HAFILIADO_INICIAL_tmp.VANTERIOR = Integer.toString(row85.ID) ;
HAFILIADO_INICIAL_tmp.VACTUAL = Integer.toString(row86.ID) ;
HAFILIADO_INICIAL_tmp.CAMPO = row84.CAMPO;
HAFILIADO_INICIAL = HAFILIADO_INICIAL_tmp;

// # Output table : 'HESTADO_INICIAL'
HESTADO_INICIAL_tmp.USUARIOS_ID = row84.USUARIOS_ID;
HESTADO_INICIAL_tmp.AFILIADOS_ID = row84.AFILIADOS_ID;
HESTADO_INICIAL_tmp.ESTADOS_ID = row86.ID ;
HESTADO_INICIAL_tmp.MOTIVOSESTADO_ID = row84.MOTIVOSESTADO_ID;
HESTADO_INICIAL_tmp.FECHA = row84.FECHA;
HESTADO_INICIAL = HESTADO_INICIAL_tmp;

// # Output table : 'AFILIADOS_ID'
AFILIADOS_ID_tmp.PERSONAS_ID = row84.PERSONAS_ID;
AFILIADOS_ID_tmp.AFILIADO_ID = row84.AFILIADOS_ID;
AFILIADOS_ID = AFILIADOS_ID_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "HAFILIADO_INICIAL"
if(HAFILIADO_INICIAL != null) { 



	
	/**
	 * [tOracleOutput_30 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"HAFILIADO_INICIAL"
						
						);
					}
					



        whetherReject_tOracleOutput_30 = false;
                        pstmt_tOracleOutput_30.setInt(1, HAFILIADO_INICIAL.AFILIADOS_ID);

                        pstmt_tOracleOutput_30.setInt(2, HAFILIADO_INICIAL.PROCESOS_ID);

                        if(HAFILIADO_INICIAL.MOTIVO == null) {
pstmt_tOracleOutput_30.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_30.setString(3, HAFILIADO_INICIAL.MOTIVO);
}

                        pstmt_tOracleOutput_30.setInt(4, HAFILIADO_INICIAL.RNOVEDADES_ID);

                        if(HAFILIADO_INICIAL.VANTERIOR == null) {
pstmt_tOracleOutput_30.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_30.setString(5, HAFILIADO_INICIAL.VANTERIOR);
}

                        if(HAFILIADO_INICIAL.VACTUAL == null) {
pstmt_tOracleOutput_30.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_30.setString(6, HAFILIADO_INICIAL.VACTUAL);
}

                        if(HAFILIADO_INICIAL.CAMPO == null) {
pstmt_tOracleOutput_30.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_30.setString(7, HAFILIADO_INICIAL.CAMPO);
}

                try {
                    nb_line_tOracleOutput_30++;
                    int processedCount_tOracleOutput_30 = pstmt_tOracleOutput_30.executeUpdate();
                    insertedCount_tOracleOutput_30 += processedCount_tOracleOutput_30;
                    rowsToCommitCount_tOracleOutput_30 += processedCount_tOracleOutput_30;
                } catch(java.lang.Exception e_tOracleOutput_30) {
globalMap.put("tOracleOutput_30_ERROR_MESSAGE",e_tOracleOutput_30.getMessage());
                    whetherReject_tOracleOutput_30 = true;
                            System.err.print(e_tOracleOutput_30.getMessage());
                }

 


	tos_count_tOracleOutput_30++;

/**
 * [tOracleOutput_30 main ] stop
 */
	
	/**
	 * [tOracleOutput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_30";
	
	

 



/**
 * [tOracleOutput_30 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_30";
	
	

 



/**
 * [tOracleOutput_30 process_data_end ] stop
 */

} // End of branch "HAFILIADO_INICIAL"




// Start of branch "HESTADO_INICIAL"
if(HESTADO_INICIAL != null) { 



	
	/**
	 * [tOracleOutput_31 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_31";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"HESTADO_INICIAL"
						
						);
					}
					



        whetherReject_tOracleOutput_31 = false;
                        if(HESTADO_INICIAL.USUARIOS_ID == null) {
pstmt_tOracleOutput_31.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_31.setInt(1, HESTADO_INICIAL.USUARIOS_ID);
}

                        pstmt_tOracleOutput_31.setInt(2, HESTADO_INICIAL.AFILIADOS_ID);

                        pstmt_tOracleOutput_31.setInt(3, HESTADO_INICIAL.ESTADOS_ID);

                        if(HESTADO_INICIAL.MOTIVOSESTADO_ID == null) {
pstmt_tOracleOutput_31.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_31.setInt(4, HESTADO_INICIAL.MOTIVOSESTADO_ID);
}

                        if(HESTADO_INICIAL.FECHA != null) {
pstmt_tOracleOutput_31.setObject(5, new java.sql.Timestamp(HESTADO_INICIAL.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_31.setNull(5, java.sql.Types.DATE);
}

                try {
                    nb_line_tOracleOutput_31++;
                    int processedCount_tOracleOutput_31 = pstmt_tOracleOutput_31.executeUpdate();
                    insertedCount_tOracleOutput_31 += processedCount_tOracleOutput_31;
                    rowsToCommitCount_tOracleOutput_31 += processedCount_tOracleOutput_31;
                } catch(java.lang.Exception e_tOracleOutput_31) {
globalMap.put("tOracleOutput_31_ERROR_MESSAGE",e_tOracleOutput_31.getMessage());
                    whetherReject_tOracleOutput_31 = true;
                            System.err.print(e_tOracleOutput_31.getMessage());
                }

 


	tos_count_tOracleOutput_31++;

/**
 * [tOracleOutput_31 main ] stop
 */
	
	/**
	 * [tOracleOutput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_31";
	
	

 



/**
 * [tOracleOutput_31 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_31";
	
	

 



/**
 * [tOracleOutput_31 process_data_end ] stop
 */

} // End of branch "HESTADO_INICIAL"




// Start of branch "AFILIADOS_ID"
if(AFILIADOS_ID != null) { 



	
	/**
	 * [tOracleOutput_32 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"AFILIADOS_ID"
						
						);
					}
					



        whetherReject_tOracleOutput_32 = false;
                    if(AFILIADOS_ID.AFILIADO_ID == null) {
pstmt_tOracleOutput_32.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_32.setInt(1, AFILIADOS_ID.AFILIADO_ID);
}


                    if(AFILIADOS_ID.PERSONAS_ID == null) {
pstmt_tOracleOutput_32.setNull(2 + count_tOracleOutput_32, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_32.setInt(2 + count_tOracleOutput_32, AFILIADOS_ID.PERSONAS_ID);
}

                try {
                    nb_line_tOracleOutput_32++;
                    int processedCount_tOracleOutput_32 = pstmt_tOracleOutput_32.executeUpdate();
                    updatedCount_tOracleOutput_32 += processedCount_tOracleOutput_32;
                    rowsToCommitCount_tOracleOutput_32 += processedCount_tOracleOutput_32;
                } catch(java.lang.Exception e_tOracleOutput_32) {
globalMap.put("tOracleOutput_32_ERROR_MESSAGE",e_tOracleOutput_32.getMessage());
                    whetherReject_tOracleOutput_32 = true;
                            System.err.print(e_tOracleOutput_32.getMessage());
                }

 


	tos_count_tOracleOutput_32++;

/**
 * [tOracleOutput_32 main ] stop
 */
	
	/**
	 * [tOracleOutput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_32";
	
	

 



/**
 * [tOracleOutput_32 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_32";
	
	

 



/**
 * [tOracleOutput_32 process_data_end ] stop
 */

} // End of branch "AFILIADOS_ID"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_34 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

}
}finally{
	if (rs_tOracleInput_34 != null) {
		rs_tOracleInput_34.close();
	}
	if (stmt_tOracleInput_34 != null) {
		stmt_tOracleInput_34.close();
	}
}

globalMap.put("tOracleInput_34_NB_LINE",nb_line_tOracleInput_34);
 

ok_Hash.put("tOracleInput_34", true);
end_Hash.put("tOracleInput_34", System.currentTimeMillis());




/**
 * [tOracleInput_34 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row85 != null) {
						tHash_Lookup_row85.endGet();
					}
					globalMap.remove( "tHash_Lookup_row85" );

					
					
				
					if(tHash_Lookup_row86 != null) {
						tHash_Lookup_row86.endGet();
					}
					globalMap.remove( "tHash_Lookup_row86" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row84");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tOracleOutput_30 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_30";
	
	
	



	
        if(pstmt_tOracleOutput_30 != null) {
			
				pstmt_tOracleOutput_30.close();
				resourceMap.remove("pstmt_tOracleOutput_30");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_30", true);

	
	nb_line_deleted_tOracleOutput_30=nb_line_deleted_tOracleOutput_30+ deletedCount_tOracleOutput_30;
	nb_line_update_tOracleOutput_30=nb_line_update_tOracleOutput_30 + updatedCount_tOracleOutput_30;
	nb_line_inserted_tOracleOutput_30=nb_line_inserted_tOracleOutput_30 + insertedCount_tOracleOutput_30;
	nb_line_rejected_tOracleOutput_30=nb_line_rejected_tOracleOutput_30 + rejectedCount_tOracleOutput_30;
	
        globalMap.put("tOracleOutput_30_NB_LINE",nb_line_tOracleOutput_30);
        globalMap.put("tOracleOutput_30_NB_LINE_UPDATED",nb_line_update_tOracleOutput_30);
        globalMap.put("tOracleOutput_30_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_30);
        globalMap.put("tOracleOutput_30_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_30);
        globalMap.put("tOracleOutput_30_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_30);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"HAFILIADO_INICIAL");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_30", true);
end_Hash.put("tOracleOutput_30", System.currentTimeMillis());




/**
 * [tOracleOutput_30 end ] stop
 */




	
	/**
	 * [tOracleOutput_31 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_31";
	
	
	



	
        if(pstmt_tOracleOutput_31 != null) {
			
				pstmt_tOracleOutput_31.close();
				resourceMap.remove("pstmt_tOracleOutput_31");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_31", true);

	
	nb_line_deleted_tOracleOutput_31=nb_line_deleted_tOracleOutput_31+ deletedCount_tOracleOutput_31;
	nb_line_update_tOracleOutput_31=nb_line_update_tOracleOutput_31 + updatedCount_tOracleOutput_31;
	nb_line_inserted_tOracleOutput_31=nb_line_inserted_tOracleOutput_31 + insertedCount_tOracleOutput_31;
	nb_line_rejected_tOracleOutput_31=nb_line_rejected_tOracleOutput_31 + rejectedCount_tOracleOutput_31;
	
        globalMap.put("tOracleOutput_31_NB_LINE",nb_line_tOracleOutput_31);
        globalMap.put("tOracleOutput_31_NB_LINE_UPDATED",nb_line_update_tOracleOutput_31);
        globalMap.put("tOracleOutput_31_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_31);
        globalMap.put("tOracleOutput_31_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_31);
        globalMap.put("tOracleOutput_31_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_31);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"HESTADO_INICIAL");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_31", true);
end_Hash.put("tOracleOutput_31", System.currentTimeMillis());




/**
 * [tOracleOutput_31 end ] stop
 */




	
	/**
	 * [tOracleOutput_32 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_32";
	
	
	



	
        if(pstmt_tOracleOutput_32 != null) {
			
				pstmt_tOracleOutput_32.close();
				resourceMap.remove("pstmt_tOracleOutput_32");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_32", true);

	
	nb_line_deleted_tOracleOutput_32=nb_line_deleted_tOracleOutput_32+ deletedCount_tOracleOutput_32;
	nb_line_update_tOracleOutput_32=nb_line_update_tOracleOutput_32 + updatedCount_tOracleOutput_32;
	nb_line_inserted_tOracleOutput_32=nb_line_inserted_tOracleOutput_32 + insertedCount_tOracleOutput_32;
	nb_line_rejected_tOracleOutput_32=nb_line_rejected_tOracleOutput_32 + rejectedCount_tOracleOutput_32;
	
        globalMap.put("tOracleOutput_32_NB_LINE",nb_line_tOracleOutput_32);
        globalMap.put("tOracleOutput_32_NB_LINE_UPDATED",nb_line_update_tOracleOutput_32);
        globalMap.put("tOracleOutput_32_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_32);
        globalMap.put("tOracleOutput_32_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_32);
        globalMap.put("tOracleOutput_32_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_32);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"AFILIADOS_ID");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_32", true);
end_Hash.put("tOracleOutput_32", System.currentTimeMillis());




/**
 * [tOracleOutput_32 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_34:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk27", 0, "ok");
								} 
							
							tOracleInput_35Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row85"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row86"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_34 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tOracleOutput_30 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_30";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_30") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_30 = null;
                if ((pstmtToClose_tOracleOutput_30 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_30")) != null) {
                    pstmtToClose_tOracleOutput_30.close();
                }
    }
 



/**
 * [tOracleOutput_30 finally ] stop
 */




	
	/**
	 * [tOracleOutput_31 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_31";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_31") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_31 = null;
                if ((pstmtToClose_tOracleOutput_31 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_31")) != null) {
                    pstmtToClose_tOracleOutput_31.close();
                }
    }
 



/**
 * [tOracleOutput_31 finally ] stop
 */




	
	/**
	 * [tOracleOutput_32 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_32";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_32") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_32 = null;
                if ((pstmtToClose_tOracleOutput_32 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_32")) != null) {
                    pstmtToClose_tOracleOutput_32.close();
                }
    }
 



/**
 * [tOracleOutput_32 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_34_SUBPROCESS_STATE", 1);
	}
	


public static class HAFILIADO_FINALStruct implements routines.system.IPersistableRow<HAFILIADO_FINALStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "FK - GEN_AFILIADOS";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public int PROCESOS_ID;

				public int getPROCESOS_ID () {
					return this.PROCESOS_ID;
				}

				public Boolean PROCESOS_IDIsNullable(){
				    return false;
				}
				public Boolean PROCESOS_IDIsKey(){
				    return false;
				}
				public Integer PROCESOS_IDLength(){
				    return 0;
				}
				public Integer PROCESOS_IDPrecision(){
				    return null;
				}
				public String PROCESOS_IDDefault(){
				
					return "";
				
				}
				public String PROCESOS_IDComment(){
				
				    return "FK - AFI_PROCESOS";
				
				}
				public String PROCESOS_IDPattern(){
				
					return "";
				
				}
				public String PROCESOS_IDOriginalDbColumnName(){
				
					return "PROCESOS_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 500;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "Motivo de la edici\u00F3n";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public int RNOVEDADES_ID;

				public int getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return false;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "FK - AFI_NOVEDADES";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public String VANTERIOR;

				public String getVANTERIOR () {
					return this.VANTERIOR;
				}

				public Boolean VANTERIORIsNullable(){
				    return true;
				}
				public Boolean VANTERIORIsKey(){
				    return false;
				}
				public Integer VANTERIORLength(){
				    return 2000;
				}
				public Integer VANTERIORPrecision(){
				    return 0;
				}
				public String VANTERIORDefault(){
				
					return null;
				
				}
				public String VANTERIORComment(){
				
				    return "Valor anterior";
				
				}
				public String VANTERIORPattern(){
				
					return "";
				
				}
				public String VANTERIOROriginalDbColumnName(){
				
					return "VANTERIOR";
				
				}

				
			    public String VACTUAL;

				public String getVACTUAL () {
					return this.VACTUAL;
				}

				public Boolean VACTUALIsNullable(){
				    return true;
				}
				public Boolean VACTUALIsKey(){
				    return false;
				}
				public Integer VACTUALLength(){
				    return 2000;
				}
				public Integer VACTUALPrecision(){
				    return 0;
				}
				public String VACTUALDefault(){
				
					return null;
				
				}
				public String VACTUALComment(){
				
				    return "Valor actual";
				
				}
				public String VACTUALPattern(){
				
					return "";
				
				}
				public String VACTUALOriginalDbColumnName(){
				
					return "VACTUAL";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 150;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "Campo afectado por el historico";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.PROCESOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
			        this.RNOVEDADES_ID = dis.readInt();
					
					this.VANTERIOR = readString(dis);
					
					this.VACTUAL = readString(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.PROCESOS_ID = dis.readInt();
					
					this.MOTIVO = readString(dis);
					
			        this.RNOVEDADES_ID = dis.readInt();
					
					this.VANTERIOR = readString(dis);
					
					this.VACTUAL = readString(dis);
					
					this.CAMPO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.PROCESOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// int
				
		            	dos.writeInt(this.RNOVEDADES_ID);
					
					// String
				
						writeString(this.VANTERIOR,dos);
					
					// String
				
						writeString(this.VACTUAL,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.PROCESOS_ID);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// int
				
		            	dos.writeInt(this.RNOVEDADES_ID);
					
					// String
				
						writeString(this.VANTERIOR,dos);
					
					// String
				
						writeString(this.VACTUAL,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",PROCESOS_ID="+String.valueOf(PROCESOS_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",VANTERIOR="+VANTERIOR);
		sb.append(",VACTUAL="+VACTUAL);
		sb.append(",CAMPO="+CAMPO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(HAFILIADO_FINALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class HESTADO_FINALStruct implements routines.system.IPersistableRow<HESTADO_FINALStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public int AFILIADOS_ID;

				public int getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return false;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "FK - GEN_AFILIADOS";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public int ESTADOS_ID;

				public int getESTADOS_ID () {
					return this.ESTADOS_ID;
				}

				public Boolean ESTADOS_IDIsNullable(){
				    return false;
				}
				public Boolean ESTADOS_IDIsKey(){
				    return false;
				}
				public Integer ESTADOS_IDLength(){
				    return 0;
				}
				public Integer ESTADOS_IDPrecision(){
				    return null;
				}
				public String ESTADOS_IDDefault(){
				
					return "";
				
				}
				public String ESTADOS_IDComment(){
				
				    return "FK - AFI_ESTADOS";
				
				}
				public String ESTADOS_IDPattern(){
				
					return "";
				
				}
				public String ESTADOS_IDOriginalDbColumnName(){
				
					return "ESTADOS_ID";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "FK - AFI_MOTIVOSESTADOS";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha del cambio de estado";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.USUARIOS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.ESTADOS_ID = dis.readInt();
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.USUARIOS_ID = readInteger(dis);
					
			        this.AFILIADOS_ID = dis.readInt();
					
			        this.ESTADOS_ID = dis.readInt();
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.ESTADOS_ID);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// int
				
		            	dos.writeInt(this.AFILIADOS_ID);
					
					// int
				
		            	dos.writeInt(this.ESTADOS_ID);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",ESTADOS_ID="+String.valueOf(ESTADOS_ID));
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(HESTADO_FINALStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ENTIDAD_APORTANTEStruct implements routines.system.IPersistableRow<ENTIDAD_APORTANTEStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public Integer ENTAPORTANTES_ID;

				public Integer getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return 0;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return "";
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return 0;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				
			    public Integer PRINCIPAL;

				public Integer getPRINCIPAL () {
					return this.PRINCIPAL;
				}

				public Boolean PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean PRINCIPALIsKey(){
				    return false;
				}
				public Integer PRINCIPALLength(){
				    return 0;
				}
				public Integer PRINCIPALPrecision(){
				    return null;
				}
				public String PRINCIPALDefault(){
				
					return "";
				
				}
				public String PRINCIPALComment(){
				
				    return "";
				
				}
				public String PRINCIPALPattern(){
				
					return "";
				
				}
				public String PRINCIPALOriginalDbColumnName(){
				
					return "PRINCIPAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public Integer TREGIMEN_ID;

				public Integer getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return true;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return 0;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				
			    public String MOTIVO_REGISTRO;

				public String getMOTIVO_REGISTRO () {
					return this.MOTIVO_REGISTRO;
				}

				public Boolean MOTIVO_REGISTROIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_REGISTROIsKey(){
				    return false;
				}
				public Integer MOTIVO_REGISTROLength(){
				    return null;
				}
				public Integer MOTIVO_REGISTROPrecision(){
				    return null;
				}
				public String MOTIVO_REGISTRODefault(){
				
					return null;
				
				}
				public String MOTIVO_REGISTROComment(){
				
				    return "";
				
				}
				public String MOTIVO_REGISTROPattern(){
				
					return "";
				
				}
				public String MOTIVO_REGISTROOriginalDbColumnName(){
				
					return "MOTIVO_REGISTRO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
		sb.append(",PRINCIPAL="+String.valueOf(PRINCIPAL));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
		sb.append(",MOTIVO_REGISTRO="+MOTIVO_REGISTRO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ENTIDAD_APORTANTEStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class PROCESADOSStruct implements routines.system.IPersistableRow<PROCESADOSStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer AFILIADO_ID;

				public Integer getAFILIADO_ID () {
					return this.AFILIADO_ID;
				}

				public Boolean AFILIADO_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADO_IDIsKey(){
				    return false;
				}
				public Integer AFILIADO_IDLength(){
				    return null;
				}
				public Integer AFILIADO_IDPrecision(){
				    return null;
				}
				public String AFILIADO_IDDefault(){
				
					return null;
				
				}
				public String AFILIADO_IDComment(){
				
				    return "";
				
				}
				public String AFILIADO_IDPattern(){
				
					return "";
				
				}
				public String AFILIADO_IDOriginalDbColumnName(){
				
					return "AFILIADO_ID";
				
				}

				
			    public Integer PROCESADO;

				public Integer getPROCESADO () {
					return this.PROCESADO;
				}

				public Boolean PROCESADOIsNullable(){
				    return true;
				}
				public Boolean PROCESADOIsKey(){
				    return false;
				}
				public Integer PROCESADOLength(){
				    return null;
				}
				public Integer PROCESADOPrecision(){
				    return null;
				}
				public String PROCESADODefault(){
				
					return null;
				
				}
				public String PROCESADOComment(){
				
				    return "";
				
				}
				public String PROCESADOPattern(){
				
					return "";
				
				}
				public String PROCESADOOriginalDbColumnName(){
				
					return "PROCESADO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADO_ID = readInteger(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADO_ID = readInteger(dis);
					
						this.PROCESADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADO_ID,dos);
					
					// Integer
				
						writeInteger(this.PROCESADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADO_ID="+String.valueOf(AFILIADO_ID));
		sb.append(",PROCESADO="+String.valueOf(PROCESADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(PROCESADOSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row87Struct implements routines.system.IPersistableRow<row87Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public Integer ENTAPORTANTES_ID;

				public Integer getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return 0;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return "";
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return 0;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				
			    public Integer PRINCIPAL;

				public Integer getPRINCIPAL () {
					return this.PRINCIPAL;
				}

				public Boolean PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean PRINCIPALIsKey(){
				    return false;
				}
				public Integer PRINCIPALLength(){
				    return 0;
				}
				public Integer PRINCIPALPrecision(){
				    return null;
				}
				public String PRINCIPALDefault(){
				
					return "";
				
				}
				public String PRINCIPALComment(){
				
				    return "";
				
				}
				public String PRINCIPALPattern(){
				
					return "";
				
				}
				public String PRINCIPALOriginalDbColumnName(){
				
					return "PRINCIPAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public Integer TREGIMEN_ID;

				public Integer getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return true;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return 0;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 400;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return true;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 10;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				
			    public String MOTIVO_REGISTRO;

				public String getMOTIVO_REGISTRO () {
					return this.MOTIVO_REGISTRO;
				}

				public Boolean MOTIVO_REGISTROIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_REGISTROIsKey(){
				    return false;
				}
				public Integer MOTIVO_REGISTROLength(){
				    return null;
				}
				public Integer MOTIVO_REGISTROPrecision(){
				    return null;
				}
				public String MOTIVO_REGISTRODefault(){
				
					return null;
				
				}
				public String MOTIVO_REGISTROComment(){
				
				    return "";
				
				}
				public String MOTIVO_REGISTROPattern(){
				
					return "";
				
				}
				public String MOTIVO_REGISTROOriginalDbColumnName(){
				
					return "MOTIVO_REGISTRO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
		sb.append(",PRINCIPAL="+String.valueOf(PRINCIPAL));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CAMPO="+CAMPO);
		sb.append(",MOTIVO_REGISTRO="+MOTIVO_REGISTRO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row87Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_35Struct implements routines.system.IPersistableRow<after_tOracleInput_35Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer AFILIADOS_ID;

				public Integer getAFILIADOS_ID () {
					return this.AFILIADOS_ID;
				}

				public Boolean AFILIADOS_IDIsNullable(){
				    return true;
				}
				public Boolean AFILIADOS_IDIsKey(){
				    return false;
				}
				public Integer AFILIADOS_IDLength(){
				    return 0;
				}
				public Integer AFILIADOS_IDPrecision(){
				    return null;
				}
				public String AFILIADOS_IDDefault(){
				
					return "";
				
				}
				public String AFILIADOS_IDComment(){
				
				    return "";
				
				}
				public String AFILIADOS_IDPattern(){
				
					return "";
				
				}
				public String AFILIADOS_IDOriginalDbColumnName(){
				
					return "AFILIADOS_ID";
				
				}

				
			    public Integer ENTAPORTANTES_ID;

				public Integer getENTAPORTANTES_ID () {
					return this.ENTAPORTANTES_ID;
				}

				public Boolean ENTAPORTANTES_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTES_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTES_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTES_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTES_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTES_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTES_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTES_ID";
				
				}

				
			    public Integer GRDMILITARES_ID;

				public Integer getGRDMILITARES_ID () {
					return this.GRDMILITARES_ID;
				}

				public Boolean GRDMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean GRDMILITARES_IDIsKey(){
				    return false;
				}
				public Integer GRDMILITARES_IDLength(){
				    return 0;
				}
				public Integer GRDMILITARES_IDPrecision(){
				    return null;
				}
				public String GRDMILITARES_IDDefault(){
				
					return "";
				
				}
				public String GRDMILITARES_IDComment(){
				
				    return "";
				
				}
				public String GRDMILITARES_IDPattern(){
				
					return "";
				
				}
				public String GRDMILITARES_IDOriginalDbColumnName(){
				
					return "GRDMILITARES_ID";
				
				}

				
			    public Integer FUERZAS_ID;

				public Integer getFUERZAS_ID () {
					return this.FUERZAS_ID;
				}

				public Boolean FUERZAS_IDIsNullable(){
				    return true;
				}
				public Boolean FUERZAS_IDIsKey(){
				    return false;
				}
				public Integer FUERZAS_IDLength(){
				    return 0;
				}
				public Integer FUERZAS_IDPrecision(){
				    return null;
				}
				public String FUERZAS_IDDefault(){
				
					return "";
				
				}
				public String FUERZAS_IDComment(){
				
				    return "";
				
				}
				public String FUERZAS_IDPattern(){
				
					return "";
				
				}
				public String FUERZAS_IDOriginalDbColumnName(){
				
					return "FUERZAS_ID";
				
				}

				
			    public Integer UMILITARES_ID;

				public Integer getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return true;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return 0;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				
			    public Integer PRINCIPAL;

				public Integer getPRINCIPAL () {
					return this.PRINCIPAL;
				}

				public Boolean PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean PRINCIPALIsKey(){
				    return false;
				}
				public Integer PRINCIPALLength(){
				    return 0;
				}
				public Integer PRINCIPALPrecision(){
				    return null;
				}
				public String PRINCIPALDefault(){
				
					return "";
				
				}
				public String PRINCIPALComment(){
				
				    return "";
				
				}
				public String PRINCIPALPattern(){
				
					return "";
				
				}
				public String PRINCIPALOriginalDbColumnName(){
				
					return "PRINCIPAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 10;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer TVINCULACIONES_ID;

				public Integer getTVINCULACIONES_ID () {
					return this.TVINCULACIONES_ID;
				}

				public Boolean TVINCULACIONES_IDIsNullable(){
				    return true;
				}
				public Boolean TVINCULACIONES_IDIsKey(){
				    return false;
				}
				public Integer TVINCULACIONES_IDLength(){
				    return 0;
				}
				public Integer TVINCULACIONES_IDPrecision(){
				    return null;
				}
				public String TVINCULACIONES_IDDefault(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDComment(){
				
				    return "";
				
				}
				public String TVINCULACIONES_IDPattern(){
				
					return "";
				
				}
				public String TVINCULACIONES_IDOriginalDbColumnName(){
				
					return "TVINCULACIONES_ID";
				
				}

				
			    public java.util.Date FECHA_INGRESO;

				public java.util.Date getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return 0;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return 0;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public Integer TREGIMEN_ID;

				public Integer getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return true;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return 0;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				
			    public String MOTIVO;

				public String getMOTIVO () {
					return this.MOTIVO;
				}

				public Boolean MOTIVOIsNullable(){
				    return true;
				}
				public Boolean MOTIVOIsKey(){
				    return false;
				}
				public Integer MOTIVOLength(){
				    return 400;
				}
				public Integer MOTIVOPrecision(){
				    return 0;
				}
				public String MOTIVODefault(){
				
					return null;
				
				}
				public String MOTIVOComment(){
				
				    return "";
				
				}
				public String MOTIVOPattern(){
				
					return "";
				
				}
				public String MOTIVOOriginalDbColumnName(){
				
					return "MOTIVO";
				
				}

				
			    public Integer MOTIVOSESTADO_ID;

				public Integer getMOTIVOSESTADO_ID () {
					return this.MOTIVOSESTADO_ID;
				}

				public Boolean MOTIVOSESTADO_IDIsNullable(){
				    return true;
				}
				public Boolean MOTIVOSESTADO_IDIsKey(){
				    return false;
				}
				public Integer MOTIVOSESTADO_IDLength(){
				    return 0;
				}
				public Integer MOTIVOSESTADO_IDPrecision(){
				    return null;
				}
				public String MOTIVOSESTADO_IDDefault(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDComment(){
				
				    return "";
				
				}
				public String MOTIVOSESTADO_IDPattern(){
				
					return "";
				
				}
				public String MOTIVOSESTADO_IDOriginalDbColumnName(){
				
					return "MOTIVOSESTADO_ID";
				
				}

				
			    public Integer RNOVEDADES_ID;

				public Integer getRNOVEDADES_ID () {
					return this.RNOVEDADES_ID;
				}

				public Boolean RNOVEDADES_IDIsNullable(){
				    return true;
				}
				public Boolean RNOVEDADES_IDIsKey(){
				    return false;
				}
				public Integer RNOVEDADES_IDLength(){
				    return 0;
				}
				public Integer RNOVEDADES_IDPrecision(){
				    return null;
				}
				public String RNOVEDADES_IDDefault(){
				
					return "";
				
				}
				public String RNOVEDADES_IDComment(){
				
				    return "";
				
				}
				public String RNOVEDADES_IDPattern(){
				
					return "";
				
				}
				public String RNOVEDADES_IDOriginalDbColumnName(){
				
					return "RNOVEDADES_ID";
				
				}

				
			    public Integer USUARIOS_ID;

				public Integer getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 0;
				}
				public Integer USUARIOS_IDPrecision(){
				    return null;
				}
				public String USUARIOS_IDDefault(){
				
					return "";
				
				}
				public String USUARIOS_IDComment(){
				
				    return "";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return true;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 0;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "";
				
				}
				public String FECHAPattern(){
				
					return "";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String CAMPO;

				public String getCAMPO () {
					return this.CAMPO;
				}

				public Boolean CAMPOIsNullable(){
				    return true;
				}
				public Boolean CAMPOIsKey(){
				    return false;
				}
				public Integer CAMPOLength(){
				    return 10;
				}
				public Integer CAMPOPrecision(){
				    return 0;
				}
				public String CAMPODefault(){
				
					return null;
				
				}
				public String CAMPOComment(){
				
				    return "";
				
				}
				public String CAMPOPattern(){
				
					return "";
				
				}
				public String CAMPOOriginalDbColumnName(){
				
					return "CAMPO";
				
				}

				
			    public String MOTIVO_REGISTRO;

				public String getMOTIVO_REGISTRO () {
					return this.MOTIVO_REGISTRO;
				}

				public Boolean MOTIVO_REGISTROIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_REGISTROIsKey(){
				    return false;
				}
				public Integer MOTIVO_REGISTROLength(){
				    return null;
				}
				public Integer MOTIVO_REGISTROPrecision(){
				    return null;
				}
				public String MOTIVO_REGISTRODefault(){
				
					return null;
				
				}
				public String MOTIVO_REGISTROComment(){
				
				    return "";
				
				}
				public String MOTIVO_REGISTROPattern(){
				
					return "";
				
				}
				public String MOTIVO_REGISTROOriginalDbColumnName(){
				
					return "MOTIVO_REGISTRO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.AFILIADOS_ID = readInteger(dis);
					
						this.ENTAPORTANTES_ID = readInteger(dis);
					
						this.GRDMILITARES_ID = readInteger(dis);
					
						this.FUERZAS_ID = readInteger(dis);
					
						this.UMILITARES_ID = readInteger(dis);
					
						this.PRINCIPAL = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.TVINCULACIONES_ID = readInteger(dis);
					
					this.FECHA_INGRESO = readDate(dis);
					
						this.TREGIMEN_ID = readInteger(dis);
					
					this.MOTIVO = readString(dis);
					
						this.MOTIVOSESTADO_ID = readInteger(dis);
					
						this.RNOVEDADES_ID = readInteger(dis);
					
						this.USUARIOS_ID = readInteger(dis);
					
					this.FECHA = readDate(dis);
					
					this.CAMPO = readString(dis);
					
					this.MOTIVO_REGISTRO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.AFILIADOS_ID,dos);
					
					// Integer
				
						writeInteger(this.ENTAPORTANTES_ID,dos);
					
					// Integer
				
						writeInteger(this.GRDMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.FUERZAS_ID,dos);
					
					// Integer
				
						writeInteger(this.UMILITARES_ID,dos);
					
					// Integer
				
						writeInteger(this.PRINCIPAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.TVINCULACIONES_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_INGRESO,dos);
					
					// Integer
				
						writeInteger(this.TREGIMEN_ID,dos);
					
					// String
				
						writeString(this.MOTIVO,dos);
					
					// Integer
				
						writeInteger(this.MOTIVOSESTADO_ID,dos);
					
					// Integer
				
						writeInteger(this.RNOVEDADES_ID,dos);
					
					// Integer
				
						writeInteger(this.USUARIOS_ID,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.CAMPO,dos);
					
					// String
				
						writeString(this.MOTIVO_REGISTRO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("AFILIADOS_ID="+String.valueOf(AFILIADOS_ID));
		sb.append(",ENTAPORTANTES_ID="+String.valueOf(ENTAPORTANTES_ID));
		sb.append(",GRDMILITARES_ID="+String.valueOf(GRDMILITARES_ID));
		sb.append(",FUERZAS_ID="+String.valueOf(FUERZAS_ID));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
		sb.append(",PRINCIPAL="+String.valueOf(PRINCIPAL));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",TVINCULACIONES_ID="+String.valueOf(TVINCULACIONES_ID));
		sb.append(",FECHA_INGRESO="+String.valueOf(FECHA_INGRESO));
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
		sb.append(",MOTIVO="+MOTIVO);
		sb.append(",MOTIVOSESTADO_ID="+String.valueOf(MOTIVOSESTADO_ID));
		sb.append(",RNOVEDADES_ID="+String.valueOf(RNOVEDADES_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",CAMPO="+CAMPO);
		sb.append(",MOTIVO_REGISTRO="+MOTIVO_REGISTRO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_35Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_18Process(globalMap);
		tHashInput_19Process(globalMap);

		row87Struct row87 = new row87Struct();
HAFILIADO_FINALStruct HAFILIADO_FINAL = new HAFILIADO_FINALStruct();
HESTADO_FINALStruct HESTADO_FINAL = new HESTADO_FINALStruct();
ENTIDAD_APORTANTEStruct ENTIDAD_APORTANTE = new ENTIDAD_APORTANTEStruct();
PROCESADOSStruct PROCESADOS = new PROCESADOSStruct();





	
	/**
	 * [tOracleOutput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_33", false);
		start_Hash.put("tOracleOutput_33", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_33";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"HAFILIADO_FINAL");
					}
				
		int tos_count_tOracleOutput_33 = 0;
		






    
    int nb_line_tOracleOutput_33 = 0;
    int nb_line_update_tOracleOutput_33 = 0;
    int nb_line_inserted_tOracleOutput_33 = 0;
    int nb_line_deleted_tOracleOutput_33 = 0;
    int nb_line_rejected_tOracleOutput_33 = 0;

    int tmp_batchUpdateCount_tOracleOutput_33 = 0;

    int deletedCount_tOracleOutput_33=0;
    int updatedCount_tOracleOutput_33=0;
    int insertedCount_tOracleOutput_33=0;
    int rowsToCommitCount_tOracleOutput_33=0;
    int rejectedCount_tOracleOutput_33=0;

    boolean whetherReject_tOracleOutput_33 = false;

    java.sql.Connection conn_tOracleOutput_33 = null;

    //optional table
    String dbschema_tOracleOutput_33 = null;
    String tableName_tOracleOutput_33 = null;
        dbschema_tOracleOutput_33 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_33 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_33=0;

        if(dbschema_tOracleOutput_33 == null || dbschema_tOracleOutput_33.trim().length() == 0) {
            tableName_tOracleOutput_33 = ("AFI_HAFILIADOS");
        } else {
            tableName_tOracleOutput_33 = dbschema_tOracleOutput_33 + "." + ("AFI_HAFILIADOS");
        }
                String insert_tOracleOutput_33 = "INSERT INTO " + tableName_tOracleOutput_33 + " (AFILIADOS_ID,PROCESOS_ID,MOTIVO,RNOVEDADES_ID,VANTERIOR,VACTUAL,CAMPO) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_33 = conn_tOracleOutput_33.prepareStatement(insert_tOracleOutput_33);
                        resourceMap.put("pstmt_tOracleOutput_33", pstmt_tOracleOutput_33);





 



/**
 * [tOracleOutput_33 begin ] stop
 */




	
	/**
	 * [tOracleOutput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_34", false);
		start_Hash.put("tOracleOutput_34", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_34";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"HESTADO_FINAL");
					}
				
		int tos_count_tOracleOutput_34 = 0;
		






    
    int nb_line_tOracleOutput_34 = 0;
    int nb_line_update_tOracleOutput_34 = 0;
    int nb_line_inserted_tOracleOutput_34 = 0;
    int nb_line_deleted_tOracleOutput_34 = 0;
    int nb_line_rejected_tOracleOutput_34 = 0;

    int tmp_batchUpdateCount_tOracleOutput_34 = 0;

    int deletedCount_tOracleOutput_34=0;
    int updatedCount_tOracleOutput_34=0;
    int insertedCount_tOracleOutput_34=0;
    int rowsToCommitCount_tOracleOutput_34=0;
    int rejectedCount_tOracleOutput_34=0;

    boolean whetherReject_tOracleOutput_34 = false;

    java.sql.Connection conn_tOracleOutput_34 = null;

    //optional table
    String dbschema_tOracleOutput_34 = null;
    String tableName_tOracleOutput_34 = null;
        dbschema_tOracleOutput_34 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_34 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_34=0;

        if(dbschema_tOracleOutput_34 == null || dbschema_tOracleOutput_34.trim().length() == 0) {
            tableName_tOracleOutput_34 = ("AFI_HESTADOS");
        } else {
            tableName_tOracleOutput_34 = dbschema_tOracleOutput_34 + "." + ("AFI_HESTADOS");
        }
                String insert_tOracleOutput_34 = "INSERT INTO " + tableName_tOracleOutput_34 + " (USUARIOS_ID,AFILIADOS_ID,ESTADOS_ID,MOTIVOSESTADO_ID,FECHA) VALUES (?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_34 = conn_tOracleOutput_34.prepareStatement(insert_tOracleOutput_34);
                        resourceMap.put("pstmt_tOracleOutput_34", pstmt_tOracleOutput_34);





 



/**
 * [tOracleOutput_34 begin ] stop
 */




	
	/**
	 * [tOracleOutput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_35", false);
		start_Hash.put("tOracleOutput_35", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_35";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ENTIDAD_APORTANTE");
					}
				
		int tos_count_tOracleOutput_35 = 0;
		






    
    int nb_line_tOracleOutput_35 = 0;
    int nb_line_update_tOracleOutput_35 = 0;
    int nb_line_inserted_tOracleOutput_35 = 0;
    int nb_line_deleted_tOracleOutput_35 = 0;
    int nb_line_rejected_tOracleOutput_35 = 0;

    int tmp_batchUpdateCount_tOracleOutput_35 = 0;

    int deletedCount_tOracleOutput_35=0;
    int updatedCount_tOracleOutput_35=0;
    int insertedCount_tOracleOutput_35=0;
    int rowsToCommitCount_tOracleOutput_35=0;
    int rejectedCount_tOracleOutput_35=0;

    boolean whetherReject_tOracleOutput_35 = false;

    java.sql.Connection conn_tOracleOutput_35 = null;

    //optional table
    String dbschema_tOracleOutput_35 = null;
    String tableName_tOracleOutput_35 = null;
        dbschema_tOracleOutput_35 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_35 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_35=0;

        if(dbschema_tOracleOutput_35 == null || dbschema_tOracleOutput_35.trim().length() == 0) {
            tableName_tOracleOutput_35 = ("GEN_AFILIADOS_ENTAPORTANTE");
        } else {
            tableName_tOracleOutput_35 = dbschema_tOracleOutput_35 + "." + ("GEN_AFILIADOS_ENTAPORTANTE");
        }
                String insert_tOracleOutput_35 = "INSERT INTO " + tableName_tOracleOutput_35 + " (AFILIADOS_ID,ENTAPORTANTES_ID,GRDMILITARES_ID,FUERZAS_ID,UMILITARES_ID,PRINCIPAL,ESTADO,TVINCULACIONES_ID,FECHA_INGRESO,TREGIMEN_ID,MOTIVO_REGISTRO) VALUES (?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_35 = conn_tOracleOutput_35.prepareStatement(insert_tOracleOutput_35);
                        resourceMap.put("pstmt_tOracleOutput_35", pstmt_tOracleOutput_35);





 



/**
 * [tOracleOutput_35 begin ] stop
 */




	
	/**
	 * [tOracleOutput_38 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_38", false);
		start_Hash.put("tOracleOutput_38", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_38";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"PROCESADOS");
					}
				
		int tos_count_tOracleOutput_38 = 0;
		






        int updateKeyCount_tOracleOutput_38 = 1;
        if(updateKeyCount_tOracleOutput_38 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_38 == 2 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_38 = 0;
    int nb_line_update_tOracleOutput_38 = 0;
    int nb_line_inserted_tOracleOutput_38 = 0;
    int nb_line_deleted_tOracleOutput_38 = 0;
    int nb_line_rejected_tOracleOutput_38 = 0;

    int tmp_batchUpdateCount_tOracleOutput_38 = 0;

    int deletedCount_tOracleOutput_38=0;
    int updatedCount_tOracleOutput_38=0;
    int insertedCount_tOracleOutput_38=0;
    int rowsToCommitCount_tOracleOutput_38=0;
    int rejectedCount_tOracleOutput_38=0;

    boolean whetherReject_tOracleOutput_38 = false;

    java.sql.Connection conn_tOracleOutput_38 = null;

    //optional table
    String dbschema_tOracleOutput_38 = null;
    String tableName_tOracleOutput_38 = null;
        dbschema_tOracleOutput_38 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_38 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_38=0;

        if(dbschema_tOracleOutput_38 == null || dbschema_tOracleOutput_38.trim().length() == 0) {
            tableName_tOracleOutput_38 = ("TST_CARGUEMASIVO");
        } else {
            tableName_tOracleOutput_38 = dbschema_tOracleOutput_38 + "." + ("TST_CARGUEMASIVO");
        }
                String update_tOracleOutput_38 = "UPDATE " + tableName_tOracleOutput_38 + " SET PROCESADO = ? WHERE AFILIADO_ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_38 = conn_tOracleOutput_38.prepareStatement(update_tOracleOutput_38);
                resourceMap.put("pstmt_tOracleOutput_38", pstmt_tOracleOutput_38);





 



/**
 * [tOracleOutput_38 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row87");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row88Struct> tHash_Lookup_row88 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row88Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row88Struct>) 
					globalMap.get( "tHash_Lookup_row88" ))
					;					
					
	

row88Struct row88HashKey = new row88Struct();
row88Struct row88Default = new row88Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct> tHash_Lookup_row89 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct>) 
					globalMap.get( "tHash_Lookup_row89" ))
					;					
					
	

row89Struct row89HashKey = new row89Struct();
row89Struct row89Default = new row89Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
HAFILIADO_FINALStruct HAFILIADO_FINAL_tmp = new HAFILIADO_FINALStruct();
HESTADO_FINALStruct HESTADO_FINAL_tmp = new HESTADO_FINALStruct();
ENTIDAD_APORTANTEStruct ENTIDAD_APORTANTE_tmp = new ENTIDAD_APORTANTEStruct();
PROCESADOSStruct PROCESADOS_tmp = new PROCESADOSStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tOracleInput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_35", false);
		start_Hash.put("tOracleInput_35", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_35";
	
	
		int tos_count_tOracleInput_35 = 0;
		
	


	
		    int nb_line_tOracleInput_35 = 0;
		    java.sql.Connection conn_tOracleInput_35 = null;
				conn_tOracleInput_35 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_35 = false;
				boolean isConnectionWrapped_tOracleInput_35 = !(conn_tOracleInput_35 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_35.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_35 = null;
                if (isConnectionWrapped_tOracleInput_35) {
					unwrappedOraConn_tOracleInput_35 = conn_tOracleInput_35.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_35 != null) {
                        isTimeZoneNull_tOracleInput_35 = (unwrappedOraConn_tOracleInput_35.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_35 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_35).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_35) {
					java.sql.Statement stmtGetTZ_tOracleInput_35 = conn_tOracleInput_35.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_35 = stmtGetTZ_tOracleInput_35.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_35 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_35.next()) {
						sessionTimezone_tOracleInput_35 = rsGetTZ_tOracleInput_35.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_35 && unwrappedOraConn_tOracleInput_35 != null) {
                        unwrappedOraConn_tOracleInput_35.setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_35).setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_35 = conn_tOracleInput_35.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_35.setFetchSize(1000);


		    String dbquery_tOracleInput_35 = "SELECT TC.AFILIADO_ID AS AFILIADOS_ID,\n       DECODE(TC.ENTAPORTANTES_ID,0,NULL,TC.ENTAPORTANTES_ID) AS ENTAPORTANTES_"
+"ID,\n       DECODE(TC.GRDMILITARES_ID,0,NULL,TC.GRDMILITARES_ID) AS GRDMILITARES_ID,\n       DECODE(TC.FUERZAS_ID,0,NULL"
+",TC.FUERZAS_ID) AS FUERZAS_ID,\n       DECODE(TC.UMILITARES_ID,0,NULL,TC.UMILITARES_ID) AS UMILITARES_ID,\n       TC.PRI"
+"NCIPAL,\n       TC.ESTADO_ENTIDAD AS ESTADO,\n       DECODE(TC.TVINCULACIONES_ID,0,NULL,TC.TVINCULACIONES_ID) AS TVINCUL"
+"ACIONES_ID,\n       TC.FECHA_VINCULACION AS FECHA_INGRESO,\n       DECODE(TC.TREGIMEN_ID,0,NULL,TC.TREGIMEN_ID) AS TREGI"
+"MEN_ID,\n       TC.MOTIVO,\n       TC.MOTIVOSESTADO_ID,\n       TC.RNOVEDADES_ID,\n       TC.USUARIOS_ID,\n       SYSDAT"
+"E AS FECHA,\n       'ESTADOS_ID' AS CAMPO,\n       TC.MOTIVO AS MOTIVO_REGISTRO\nFROM TST_CARGUEMASIVO TC \nWHERE TC.AFI"
+"LIADO_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_35_QUERY",dbquery_tOracleInput_35);

		    java.sql.ResultSet rs_tOracleInput_35 = null;

		    try {
		    	rs_tOracleInput_35 = stmt_tOracleInput_35.executeQuery(dbquery_tOracleInput_35);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_35 = rs_tOracleInput_35.getMetaData();
		    	int colQtyInRs_tOracleInput_35 = rsmd_tOracleInput_35.getColumnCount();

		    String tmpContent_tOracleInput_35 = null;
		    
		    
		    while (rs_tOracleInput_35.next()) {
		        nb_line_tOracleInput_35++;
		        
							if(colQtyInRs_tOracleInput_35 < 1) {
								row87.AFILIADOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(1) != null) {
						row87.AFILIADOS_ID = rs_tOracleInput_35.getInt(1);
					} else {
				
						row87.AFILIADOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 2) {
								row87.ENTAPORTANTES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(2) != null) {
						row87.ENTAPORTANTES_ID = rs_tOracleInput_35.getInt(2);
					} else {
				
						row87.ENTAPORTANTES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 3) {
								row87.GRDMILITARES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(3) != null) {
						row87.GRDMILITARES_ID = rs_tOracleInput_35.getInt(3);
					} else {
				
						row87.GRDMILITARES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 4) {
								row87.FUERZAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(4) != null) {
						row87.FUERZAS_ID = rs_tOracleInput_35.getInt(4);
					} else {
				
						row87.FUERZAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 5) {
								row87.UMILITARES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(5) != null) {
						row87.UMILITARES_ID = rs_tOracleInput_35.getInt(5);
					} else {
				
						row87.UMILITARES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 6) {
								row87.PRINCIPAL = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(6) != null) {
						row87.PRINCIPAL = rs_tOracleInput_35.getInt(6);
					} else {
				
						row87.PRINCIPAL = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 7) {
								row87.ESTADO = null;
							} else {
	                         		
        	row87.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_35 < 8) {
								row87.TVINCULACIONES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(8) != null) {
						row87.TVINCULACIONES_ID = rs_tOracleInput_35.getInt(8);
					} else {
				
						row87.TVINCULACIONES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 9) {
								row87.FECHA_INGRESO = null;
							} else {
										
			row87.FECHA_INGRESO = routines.system.JDBCUtil.getDate(rs_tOracleInput_35, 9);
		                    }
							if(colQtyInRs_tOracleInput_35 < 10) {
								row87.TREGIMEN_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(10) != null) {
						row87.TREGIMEN_ID = rs_tOracleInput_35.getInt(10);
					} else {
				
						row87.TREGIMEN_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 11) {
								row87.MOTIVO = null;
							} else {
	                         		
        	row87.MOTIVO = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_35 < 12) {
								row87.MOTIVOSESTADO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(12) != null) {
						row87.MOTIVOSESTADO_ID = rs_tOracleInput_35.getInt(12);
					} else {
				
						row87.MOTIVOSESTADO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 13) {
								row87.RNOVEDADES_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(13) != null) {
						row87.RNOVEDADES_ID = rs_tOracleInput_35.getInt(13);
					} else {
				
						row87.RNOVEDADES_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 14) {
								row87.USUARIOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(14) != null) {
						row87.USUARIOS_ID = rs_tOracleInput_35.getInt(14);
					} else {
				
						row87.USUARIOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_35 < 15) {
								row87.FECHA = null;
							} else {
										
			row87.FECHA = routines.system.JDBCUtil.getDate(rs_tOracleInput_35, 15);
		                    }
							if(colQtyInRs_tOracleInput_35 < 16) {
								row87.CAMPO = null;
							} else {
	                         		
        	row87.CAMPO = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_35 < 17) {
								row87.MOTIVO_REGISTRO = null;
							} else {
	                         		
        	row87.MOTIVO_REGISTRO = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 17, false);
		                    }
					




 



/**
 * [tOracleInput_35 begin ] stop
 */
	
	/**
	 * [tOracleInput_35 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 


	tos_count_tOracleInput_35++;

/**
 * [tOracleInput_35 main ] stop
 */
	
	/**
	 * [tOracleInput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row87"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
						row88Struct row88 = null;
					
						row89Struct row89 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row88" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow88 = false;
       		  	    	
       		  	    	
 							row88Struct row88ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row88HashKey.SIGLA = "RI";
                        		    		

								
		                        	row88HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row88.lookup( row88HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row88 != null && tHash_Lookup_row88.getCount(row88HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row88' and it contains more one result from keys :  row88.SIGLA = '" + row88HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row88Struct fromLookup_row88 = null;
							row88 = row88Default;
										 
							
								 
							
							
								if (tHash_Lookup_row88 !=null && tHash_Lookup_row88.hasNext()) { // G 099
								
							
								
								fromLookup_row88 = tHash_Lookup_row88.next();

							
							
								} // G 099
							
							

							if(fromLookup_row88 != null) {
								row88 = fromLookup_row88;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row89" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow89 = false;
       		  	    	
       		  	    	
 							row89Struct row89ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row89HashKey.SIGLA = "AC";
                        		    		

								
		                        	row89HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row89.lookup( row89HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row89 != null && tHash_Lookup_row89.getCount(row89HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row89' and it contains more one result from keys :  row89.SIGLA = '" + row89HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row89Struct fromLookup_row89 = null;
							row89 = row89Default;
										 
							
								 
							
							
								if (tHash_Lookup_row89 !=null && tHash_Lookup_row89.hasNext()) { // G 099
								
							
								
								fromLookup_row89 = tHash_Lookup_row89.next();

							
							
								} // G 099
							
							

							if(fromLookup_row89 != null) {
								row89 = fromLookup_row89;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

HAFILIADO_FINAL = null;
HESTADO_FINAL = null;
ENTIDAD_APORTANTE = null;
PROCESADOS = null;


// # Output table : 'HAFILIADO_FINAL'
HAFILIADO_FINAL_tmp.AFILIADOS_ID = row87.AFILIADOS_ID;
HAFILIADO_FINAL_tmp.PROCESOS_ID = context.vprocesos_id;
HAFILIADO_FINAL_tmp.MOTIVO = row87.MOTIVO;
HAFILIADO_FINAL_tmp.RNOVEDADES_ID = row87.RNOVEDADES_ID ;
HAFILIADO_FINAL_tmp.VANTERIOR = Integer.toString(row88.ID) ;
HAFILIADO_FINAL_tmp.VACTUAL = Integer.toString(row89.ID) ;
HAFILIADO_FINAL_tmp.CAMPO = row87.CAMPO;
HAFILIADO_FINAL = HAFILIADO_FINAL_tmp;

// # Output table : 'HESTADO_FINAL'
HESTADO_FINAL_tmp.USUARIOS_ID = row87.USUARIOS_ID;
HESTADO_FINAL_tmp.AFILIADOS_ID = row87.AFILIADOS_ID;
HESTADO_FINAL_tmp.ESTADOS_ID = row89.ID ;
HESTADO_FINAL_tmp.MOTIVOSESTADO_ID = row87.MOTIVOSESTADO_ID;
HESTADO_FINAL_tmp.FECHA = row87.FECHA;
HESTADO_FINAL = HESTADO_FINAL_tmp;

// # Output table : 'ENTIDAD_APORTANTE'
ENTIDAD_APORTANTE_tmp.AFILIADOS_ID = row87.AFILIADOS_ID;
ENTIDAD_APORTANTE_tmp.ENTAPORTANTES_ID = row87.ENTAPORTANTES_ID;
ENTIDAD_APORTANTE_tmp.GRDMILITARES_ID = row87.GRDMILITARES_ID;
ENTIDAD_APORTANTE_tmp.FUERZAS_ID = row87.FUERZAS_ID;
ENTIDAD_APORTANTE_tmp.UMILITARES_ID = row87.UMILITARES_ID;
ENTIDAD_APORTANTE_tmp.PRINCIPAL = row87.PRINCIPAL;
ENTIDAD_APORTANTE_tmp.ESTADO = row87.ESTADO;
ENTIDAD_APORTANTE_tmp.TVINCULACIONES_ID = row87.TVINCULACIONES_ID;
ENTIDAD_APORTANTE_tmp.FECHA_INGRESO = row87.FECHA_INGRESO;
ENTIDAD_APORTANTE_tmp.TREGIMEN_ID = row87.TREGIMEN_ID;
ENTIDAD_APORTANTE_tmp.MOTIVO_REGISTRO = row87.MOTIVO_REGISTRO ;
ENTIDAD_APORTANTE = ENTIDAD_APORTANTE_tmp;

// # Output table : 'PROCESADOS'
PROCESADOS_tmp.AFILIADO_ID = row87.AFILIADOS_ID ;
PROCESADOS_tmp.PROCESADO = 7;
PROCESADOS = PROCESADOS_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "HAFILIADO_FINAL"
if(HAFILIADO_FINAL != null) { 



	
	/**
	 * [tOracleOutput_33 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_33";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"HAFILIADO_FINAL"
						
						);
					}
					



        whetherReject_tOracleOutput_33 = false;
                        pstmt_tOracleOutput_33.setInt(1, HAFILIADO_FINAL.AFILIADOS_ID);

                        pstmt_tOracleOutput_33.setInt(2, HAFILIADO_FINAL.PROCESOS_ID);

                        if(HAFILIADO_FINAL.MOTIVO == null) {
pstmt_tOracleOutput_33.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_33.setString(3, HAFILIADO_FINAL.MOTIVO);
}

                        pstmt_tOracleOutput_33.setInt(4, HAFILIADO_FINAL.RNOVEDADES_ID);

                        if(HAFILIADO_FINAL.VANTERIOR == null) {
pstmt_tOracleOutput_33.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_33.setString(5, HAFILIADO_FINAL.VANTERIOR);
}

                        if(HAFILIADO_FINAL.VACTUAL == null) {
pstmt_tOracleOutput_33.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_33.setString(6, HAFILIADO_FINAL.VACTUAL);
}

                        if(HAFILIADO_FINAL.CAMPO == null) {
pstmt_tOracleOutput_33.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_33.setString(7, HAFILIADO_FINAL.CAMPO);
}

                try {
                    nb_line_tOracleOutput_33++;
                    int processedCount_tOracleOutput_33 = pstmt_tOracleOutput_33.executeUpdate();
                    insertedCount_tOracleOutput_33 += processedCount_tOracleOutput_33;
                    rowsToCommitCount_tOracleOutput_33 += processedCount_tOracleOutput_33;
                } catch(java.lang.Exception e_tOracleOutput_33) {
globalMap.put("tOracleOutput_33_ERROR_MESSAGE",e_tOracleOutput_33.getMessage());
                    whetherReject_tOracleOutput_33 = true;
                            System.err.print(e_tOracleOutput_33.getMessage());
                }

 


	tos_count_tOracleOutput_33++;

/**
 * [tOracleOutput_33 main ] stop
 */
	
	/**
	 * [tOracleOutput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_33";
	
	

 



/**
 * [tOracleOutput_33 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_33";
	
	

 



/**
 * [tOracleOutput_33 process_data_end ] stop
 */

} // End of branch "HAFILIADO_FINAL"




// Start of branch "HESTADO_FINAL"
if(HESTADO_FINAL != null) { 



	
	/**
	 * [tOracleOutput_34 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"HESTADO_FINAL"
						
						);
					}
					



        whetherReject_tOracleOutput_34 = false;
                        if(HESTADO_FINAL.USUARIOS_ID == null) {
pstmt_tOracleOutput_34.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_34.setInt(1, HESTADO_FINAL.USUARIOS_ID);
}

                        pstmt_tOracleOutput_34.setInt(2, HESTADO_FINAL.AFILIADOS_ID);

                        pstmt_tOracleOutput_34.setInt(3, HESTADO_FINAL.ESTADOS_ID);

                        if(HESTADO_FINAL.MOTIVOSESTADO_ID == null) {
pstmt_tOracleOutput_34.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_34.setInt(4, HESTADO_FINAL.MOTIVOSESTADO_ID);
}

                        if(HESTADO_FINAL.FECHA != null) {
pstmt_tOracleOutput_34.setObject(5, new java.sql.Timestamp(HESTADO_FINAL.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_34.setNull(5, java.sql.Types.DATE);
}

                try {
                    nb_line_tOracleOutput_34++;
                    int processedCount_tOracleOutput_34 = pstmt_tOracleOutput_34.executeUpdate();
                    insertedCount_tOracleOutput_34 += processedCount_tOracleOutput_34;
                    rowsToCommitCount_tOracleOutput_34 += processedCount_tOracleOutput_34;
                } catch(java.lang.Exception e_tOracleOutput_34) {
globalMap.put("tOracleOutput_34_ERROR_MESSAGE",e_tOracleOutput_34.getMessage());
                    whetherReject_tOracleOutput_34 = true;
                            System.err.print(e_tOracleOutput_34.getMessage());
                }

 


	tos_count_tOracleOutput_34++;

/**
 * [tOracleOutput_34 main ] stop
 */
	
	/**
	 * [tOracleOutput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_34";
	
	

 



/**
 * [tOracleOutput_34 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_34";
	
	

 



/**
 * [tOracleOutput_34 process_data_end ] stop
 */

} // End of branch "HESTADO_FINAL"




// Start of branch "ENTIDAD_APORTANTE"
if(ENTIDAD_APORTANTE != null) { 



	
	/**
	 * [tOracleOutput_35 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_35";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ENTIDAD_APORTANTE"
						
						);
					}
					



        whetherReject_tOracleOutput_35 = false;
                        if(ENTIDAD_APORTANTE.AFILIADOS_ID == null) {
pstmt_tOracleOutput_35.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(1, ENTIDAD_APORTANTE.AFILIADOS_ID);
}

                        if(ENTIDAD_APORTANTE.ENTAPORTANTES_ID == null) {
pstmt_tOracleOutput_35.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(2, ENTIDAD_APORTANTE.ENTAPORTANTES_ID);
}

                        if(ENTIDAD_APORTANTE.GRDMILITARES_ID == null) {
pstmt_tOracleOutput_35.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(3, ENTIDAD_APORTANTE.GRDMILITARES_ID);
}

                        if(ENTIDAD_APORTANTE.FUERZAS_ID == null) {
pstmt_tOracleOutput_35.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(4, ENTIDAD_APORTANTE.FUERZAS_ID);
}

                        if(ENTIDAD_APORTANTE.UMILITARES_ID == null) {
pstmt_tOracleOutput_35.setNull(5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(5, ENTIDAD_APORTANTE.UMILITARES_ID);
}

                        if(ENTIDAD_APORTANTE.PRINCIPAL == null) {
pstmt_tOracleOutput_35.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(6, ENTIDAD_APORTANTE.PRINCIPAL);
}

                        if(ENTIDAD_APORTANTE.ESTADO == null) {
pstmt_tOracleOutput_35.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_35.setString(7, ENTIDAD_APORTANTE.ESTADO);
}

                        if(ENTIDAD_APORTANTE.TVINCULACIONES_ID == null) {
pstmt_tOracleOutput_35.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(8, ENTIDAD_APORTANTE.TVINCULACIONES_ID);
}

                        if(ENTIDAD_APORTANTE.FECHA_INGRESO != null) {
pstmt_tOracleOutput_35.setObject(9, new java.sql.Timestamp(ENTIDAD_APORTANTE.FECHA_INGRESO.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_35.setNull(9, java.sql.Types.DATE);
}

                        if(ENTIDAD_APORTANTE.TREGIMEN_ID == null) {
pstmt_tOracleOutput_35.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_35.setInt(10, ENTIDAD_APORTANTE.TREGIMEN_ID);
}

                        if(ENTIDAD_APORTANTE.MOTIVO_REGISTRO == null) {
pstmt_tOracleOutput_35.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_35.setString(11, ENTIDAD_APORTANTE.MOTIVO_REGISTRO);
}

                try {
                    nb_line_tOracleOutput_35++;
                    int processedCount_tOracleOutput_35 = pstmt_tOracleOutput_35.executeUpdate();
                    insertedCount_tOracleOutput_35 += processedCount_tOracleOutput_35;
                    rowsToCommitCount_tOracleOutput_35 += processedCount_tOracleOutput_35;
                } catch(java.lang.Exception e_tOracleOutput_35) {
globalMap.put("tOracleOutput_35_ERROR_MESSAGE",e_tOracleOutput_35.getMessage());
                    whetherReject_tOracleOutput_35 = true;
                            System.err.print(e_tOracleOutput_35.getMessage());
                }

 


	tos_count_tOracleOutput_35++;

/**
 * [tOracleOutput_35 main ] stop
 */
	
	/**
	 * [tOracleOutput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_35";
	
	

 



/**
 * [tOracleOutput_35 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_35";
	
	

 



/**
 * [tOracleOutput_35 process_data_end ] stop
 */

} // End of branch "ENTIDAD_APORTANTE"




// Start of branch "PROCESADOS"
if(PROCESADOS != null) { 



	
	/**
	 * [tOracleOutput_38 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_38";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"PROCESADOS"
						
						);
					}
					



        whetherReject_tOracleOutput_38 = false;
                    if(PROCESADOS.PROCESADO == null) {
pstmt_tOracleOutput_38.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_38.setInt(1, PROCESADOS.PROCESADO);
}


                    if(PROCESADOS.AFILIADO_ID == null) {
pstmt_tOracleOutput_38.setNull(2 + count_tOracleOutput_38, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_38.setInt(2 + count_tOracleOutput_38, PROCESADOS.AFILIADO_ID);
}

                try {
                    nb_line_tOracleOutput_38++;
                    int processedCount_tOracleOutput_38 = pstmt_tOracleOutput_38.executeUpdate();
                    updatedCount_tOracleOutput_38 += processedCount_tOracleOutput_38;
                    rowsToCommitCount_tOracleOutput_38 += processedCount_tOracleOutput_38;
                } catch(java.lang.Exception e_tOracleOutput_38) {
globalMap.put("tOracleOutput_38_ERROR_MESSAGE",e_tOracleOutput_38.getMessage());
                    whetherReject_tOracleOutput_38 = true;
                            System.err.print(e_tOracleOutput_38.getMessage());
                }

 


	tos_count_tOracleOutput_38++;

/**
 * [tOracleOutput_38 main ] stop
 */
	
	/**
	 * [tOracleOutput_38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_38";
	
	

 



/**
 * [tOracleOutput_38 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_38 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_38";
	
	

 



/**
 * [tOracleOutput_38 process_data_end ] stop
 */

} // End of branch "PROCESADOS"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_35 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

}
}finally{
	if (rs_tOracleInput_35 != null) {
		rs_tOracleInput_35.close();
	}
	if (stmt_tOracleInput_35 != null) {
		stmt_tOracleInput_35.close();
	}
}

globalMap.put("tOracleInput_35_NB_LINE",nb_line_tOracleInput_35);
 

ok_Hash.put("tOracleInput_35", true);
end_Hash.put("tOracleInput_35", System.currentTimeMillis());




/**
 * [tOracleInput_35 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row88 != null) {
						tHash_Lookup_row88.endGet();
					}
					globalMap.remove( "tHash_Lookup_row88" );

					
					
				
					if(tHash_Lookup_row89 != null) {
						tHash_Lookup_row89.endGet();
					}
					globalMap.remove( "tHash_Lookup_row89" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row87");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tOracleOutput_33 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_33";
	
	
	



	
        if(pstmt_tOracleOutput_33 != null) {
			
				pstmt_tOracleOutput_33.close();
				resourceMap.remove("pstmt_tOracleOutput_33");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_33", true);

	
	nb_line_deleted_tOracleOutput_33=nb_line_deleted_tOracleOutput_33+ deletedCount_tOracleOutput_33;
	nb_line_update_tOracleOutput_33=nb_line_update_tOracleOutput_33 + updatedCount_tOracleOutput_33;
	nb_line_inserted_tOracleOutput_33=nb_line_inserted_tOracleOutput_33 + insertedCount_tOracleOutput_33;
	nb_line_rejected_tOracleOutput_33=nb_line_rejected_tOracleOutput_33 + rejectedCount_tOracleOutput_33;
	
        globalMap.put("tOracleOutput_33_NB_LINE",nb_line_tOracleOutput_33);
        globalMap.put("tOracleOutput_33_NB_LINE_UPDATED",nb_line_update_tOracleOutput_33);
        globalMap.put("tOracleOutput_33_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_33);
        globalMap.put("tOracleOutput_33_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_33);
        globalMap.put("tOracleOutput_33_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_33);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"HAFILIADO_FINAL");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_33", true);
end_Hash.put("tOracleOutput_33", System.currentTimeMillis());




/**
 * [tOracleOutput_33 end ] stop
 */




	
	/**
	 * [tOracleOutput_34 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_34";
	
	
	



	
        if(pstmt_tOracleOutput_34 != null) {
			
				pstmt_tOracleOutput_34.close();
				resourceMap.remove("pstmt_tOracleOutput_34");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_34", true);

	
	nb_line_deleted_tOracleOutput_34=nb_line_deleted_tOracleOutput_34+ deletedCount_tOracleOutput_34;
	nb_line_update_tOracleOutput_34=nb_line_update_tOracleOutput_34 + updatedCount_tOracleOutput_34;
	nb_line_inserted_tOracleOutput_34=nb_line_inserted_tOracleOutput_34 + insertedCount_tOracleOutput_34;
	nb_line_rejected_tOracleOutput_34=nb_line_rejected_tOracleOutput_34 + rejectedCount_tOracleOutput_34;
	
        globalMap.put("tOracleOutput_34_NB_LINE",nb_line_tOracleOutput_34);
        globalMap.put("tOracleOutput_34_NB_LINE_UPDATED",nb_line_update_tOracleOutput_34);
        globalMap.put("tOracleOutput_34_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_34);
        globalMap.put("tOracleOutput_34_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_34);
        globalMap.put("tOracleOutput_34_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_34);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"HESTADO_FINAL");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_34", true);
end_Hash.put("tOracleOutput_34", System.currentTimeMillis());




/**
 * [tOracleOutput_34 end ] stop
 */




	
	/**
	 * [tOracleOutput_35 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_35";
	
	
	



	
        if(pstmt_tOracleOutput_35 != null) {
			
				pstmt_tOracleOutput_35.close();
				resourceMap.remove("pstmt_tOracleOutput_35");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_35", true);

	
	nb_line_deleted_tOracleOutput_35=nb_line_deleted_tOracleOutput_35+ deletedCount_tOracleOutput_35;
	nb_line_update_tOracleOutput_35=nb_line_update_tOracleOutput_35 + updatedCount_tOracleOutput_35;
	nb_line_inserted_tOracleOutput_35=nb_line_inserted_tOracleOutput_35 + insertedCount_tOracleOutput_35;
	nb_line_rejected_tOracleOutput_35=nb_line_rejected_tOracleOutput_35 + rejectedCount_tOracleOutput_35;
	
        globalMap.put("tOracleOutput_35_NB_LINE",nb_line_tOracleOutput_35);
        globalMap.put("tOracleOutput_35_NB_LINE_UPDATED",nb_line_update_tOracleOutput_35);
        globalMap.put("tOracleOutput_35_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_35);
        globalMap.put("tOracleOutput_35_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_35);
        globalMap.put("tOracleOutput_35_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_35);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ENTIDAD_APORTANTE");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_35", true);
end_Hash.put("tOracleOutput_35", System.currentTimeMillis());




/**
 * [tOracleOutput_35 end ] stop
 */




	
	/**
	 * [tOracleOutput_38 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_38";
	
	
	



	
        if(pstmt_tOracleOutput_38 != null) {
			
				pstmt_tOracleOutput_38.close();
				resourceMap.remove("pstmt_tOracleOutput_38");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_38", true);

	
	nb_line_deleted_tOracleOutput_38=nb_line_deleted_tOracleOutput_38+ deletedCount_tOracleOutput_38;
	nb_line_update_tOracleOutput_38=nb_line_update_tOracleOutput_38 + updatedCount_tOracleOutput_38;
	nb_line_inserted_tOracleOutput_38=nb_line_inserted_tOracleOutput_38 + insertedCount_tOracleOutput_38;
	nb_line_rejected_tOracleOutput_38=nb_line_rejected_tOracleOutput_38 + rejectedCount_tOracleOutput_38;
	
        globalMap.put("tOracleOutput_38_NB_LINE",nb_line_tOracleOutput_38);
        globalMap.put("tOracleOutput_38_NB_LINE_UPDATED",nb_line_update_tOracleOutput_38);
        globalMap.put("tOracleOutput_38_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_38);
        globalMap.put("tOracleOutput_38_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_38);
        globalMap.put("tOracleOutput_38_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_38);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"PROCESADOS");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_38", true);
end_Hash.put("tOracleOutput_38", System.currentTimeMillis());




/**
 * [tOracleOutput_38 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_35:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk30", 0, "ok");
								} 
							
							tOracleInput_37Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row88"); 
				     			
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row89"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_35 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tOracleOutput_33 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_33";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_33") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_33 = null;
                if ((pstmtToClose_tOracleOutput_33 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_33")) != null) {
                    pstmtToClose_tOracleOutput_33.close();
                }
    }
 



/**
 * [tOracleOutput_33 finally ] stop
 */




	
	/**
	 * [tOracleOutput_34 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_34";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_34") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_34 = null;
                if ((pstmtToClose_tOracleOutput_34 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_34")) != null) {
                    pstmtToClose_tOracleOutput_34.close();
                }
    }
 



/**
 * [tOracleOutput_34 finally ] stop
 */




	
	/**
	 * [tOracleOutput_35 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_35";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_35") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_35 = null;
                if ((pstmtToClose_tOracleOutput_35 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_35")) != null) {
                    pstmtToClose_tOracleOutput_35.close();
                }
    }
 



/**
 * [tOracleOutput_35 finally ] stop
 */




	
	/**
	 * [tOracleOutput_38 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_38";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_38") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_38 = null;
                if ((pstmtToClose_tOracleOutput_38 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_38")) != null) {
                    pstmtToClose_tOracleOutput_38.close();
                }
    }
 



/**
 * [tOracleOutput_38 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 1);
	}
	


public static class row118Struct implements routines.system.IPersistableRow<row118Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer TOTAL_REGISTROS;

				public Integer getTOTAL_REGISTROS () {
					return this.TOTAL_REGISTROS;
				}

				public Boolean TOTAL_REGISTROSIsNullable(){
				    return true;
				}
				public Boolean TOTAL_REGISTROSIsKey(){
				    return false;
				}
				public Integer TOTAL_REGISTROSLength(){
				    return null;
				}
				public Integer TOTAL_REGISTROSPrecision(){
				    return null;
				}
				public String TOTAL_REGISTROSDefault(){
				
					return null;
				
				}
				public String TOTAL_REGISTROSComment(){
				
				    return "";
				
				}
				public String TOTAL_REGISTROSPattern(){
				
					return "";
				
				}
				public String TOTAL_REGISTROSOriginalDbColumnName(){
				
					return "TOTAL_REGISTROS";
				
				}

				
			    public Integer TOTAL_ERRORES;

				public Integer getTOTAL_ERRORES () {
					return this.TOTAL_ERRORES;
				}

				public Boolean TOTAL_ERRORESIsNullable(){
				    return true;
				}
				public Boolean TOTAL_ERRORESIsKey(){
				    return false;
				}
				public Integer TOTAL_ERRORESLength(){
				    return null;
				}
				public Integer TOTAL_ERRORESPrecision(){
				    return null;
				}
				public String TOTAL_ERRORESDefault(){
				
					return null;
				
				}
				public String TOTAL_ERRORESComment(){
				
				    return "";
				
				}
				public String TOTAL_ERRORESPattern(){
				
					return "";
				
				}
				public String TOTAL_ERRORESOriginalDbColumnName(){
				
					return "TOTAL_ERRORES";
				
				}

				
			    public Integer TOTAL_REGISTRADOS;

				public Integer getTOTAL_REGISTRADOS () {
					return this.TOTAL_REGISTRADOS;
				}

				public Boolean TOTAL_REGISTRADOSIsNullable(){
				    return true;
				}
				public Boolean TOTAL_REGISTRADOSIsKey(){
				    return false;
				}
				public Integer TOTAL_REGISTRADOSLength(){
				    return null;
				}
				public Integer TOTAL_REGISTRADOSPrecision(){
				    return null;
				}
				public String TOTAL_REGISTRADOSDefault(){
				
					return null;
				
				}
				public String TOTAL_REGISTRADOSComment(){
				
				    return "";
				
				}
				public String TOTAL_REGISTRADOSPattern(){
				
					return "";
				
				}
				public String TOTAL_REGISTRADOSOriginalDbColumnName(){
				
					return "TOTAL_REGISTRADOS";
				
				}

				
			    public Integer ERR_ESTRUCTURA;

				public Integer getERR_ESTRUCTURA () {
					return this.ERR_ESTRUCTURA;
				}

				public Boolean ERR_ESTRUCTURAIsNullable(){
				    return true;
				}
				public Boolean ERR_ESTRUCTURAIsKey(){
				    return false;
				}
				public Integer ERR_ESTRUCTURALength(){
				    return null;
				}
				public Integer ERR_ESTRUCTURAPrecision(){
				    return null;
				}
				public String ERR_ESTRUCTURADefault(){
				
					return null;
				
				}
				public String ERR_ESTRUCTURAComment(){
				
				    return "";
				
				}
				public String ERR_ESTRUCTURAPattern(){
				
					return "";
				
				}
				public String ERR_ESTRUCTURAOriginalDbColumnName(){
				
					return "ERR_ESTRUCTURA";
				
				}

				
			    public Integer ERR_TD_DOC_ARC;

				public Integer getERR_TD_DOC_ARC () {
					return this.ERR_TD_DOC_ARC;
				}

				public Boolean ERR_TD_DOC_ARCIsNullable(){
				    return true;
				}
				public Boolean ERR_TD_DOC_ARCIsKey(){
				    return false;
				}
				public Integer ERR_TD_DOC_ARCLength(){
				    return null;
				}
				public Integer ERR_TD_DOC_ARCPrecision(){
				    return null;
				}
				public String ERR_TD_DOC_ARCDefault(){
				
					return null;
				
				}
				public String ERR_TD_DOC_ARCComment(){
				
				    return "";
				
				}
				public String ERR_TD_DOC_ARCPattern(){
				
					return "";
				
				}
				public String ERR_TD_DOC_ARCOriginalDbColumnName(){
				
					return "ERR_TD_DOC_ARC";
				
				}

				
			    public Integer ERR_PN_PA_DOC_ARC;

				public Integer getERR_PN_PA_DOC_ARC () {
					return this.ERR_PN_PA_DOC_ARC;
				}

				public Boolean ERR_PN_PA_DOC_ARCIsNullable(){
				    return true;
				}
				public Boolean ERR_PN_PA_DOC_ARCIsKey(){
				    return false;
				}
				public Integer ERR_PN_PA_DOC_ARCLength(){
				    return null;
				}
				public Integer ERR_PN_PA_DOC_ARCPrecision(){
				    return null;
				}
				public String ERR_PN_PA_DOC_ARCDefault(){
				
					return null;
				
				}
				public String ERR_PN_PA_DOC_ARCComment(){
				
				    return "";
				
				}
				public String ERR_PN_PA_DOC_ARCPattern(){
				
					return "";
				
				}
				public String ERR_PN_PA_DOC_ARCOriginalDbColumnName(){
				
					return "ERR_PN_PA_DOC_ARC";
				
				}

				
			    public Integer ERR_NOMBRES_FNAC_ARC;

				public Integer getERR_NOMBRES_FNAC_ARC () {
					return this.ERR_NOMBRES_FNAC_ARC;
				}

				public Boolean ERR_NOMBRES_FNAC_ARCIsNullable(){
				    return true;
				}
				public Boolean ERR_NOMBRES_FNAC_ARCIsKey(){
				    return false;
				}
				public Integer ERR_NOMBRES_FNAC_ARCLength(){
				    return null;
				}
				public Integer ERR_NOMBRES_FNAC_ARCPrecision(){
				    return null;
				}
				public String ERR_NOMBRES_FNAC_ARCDefault(){
				
					return null;
				
				}
				public String ERR_NOMBRES_FNAC_ARCComment(){
				
				    return "";
				
				}
				public String ERR_NOMBRES_FNAC_ARCPattern(){
				
					return "";
				
				}
				public String ERR_NOMBRES_FNAC_ARCOriginalDbColumnName(){
				
					return "ERR_NOMBRES_FNAC_ARC";
				
				}

				
			    public Integer ERR_TD_DOC_SIS;

				public Integer getERR_TD_DOC_SIS () {
					return this.ERR_TD_DOC_SIS;
				}

				public Boolean ERR_TD_DOC_SISIsNullable(){
				    return true;
				}
				public Boolean ERR_TD_DOC_SISIsKey(){
				    return false;
				}
				public Integer ERR_TD_DOC_SISLength(){
				    return null;
				}
				public Integer ERR_TD_DOC_SISPrecision(){
				    return null;
				}
				public String ERR_TD_DOC_SISDefault(){
				
					return null;
				
				}
				public String ERR_TD_DOC_SISComment(){
				
				    return "";
				
				}
				public String ERR_TD_DOC_SISPattern(){
				
					return "";
				
				}
				public String ERR_TD_DOC_SISOriginalDbColumnName(){
				
					return "ERR_TD_DOC_SIS";
				
				}

				
			    public Integer ERR_PN_PA_DOC_SIS;

				public Integer getERR_PN_PA_DOC_SIS () {
					return this.ERR_PN_PA_DOC_SIS;
				}

				public Boolean ERR_PN_PA_DOC_SISIsNullable(){
				    return true;
				}
				public Boolean ERR_PN_PA_DOC_SISIsKey(){
				    return false;
				}
				public Integer ERR_PN_PA_DOC_SISLength(){
				    return null;
				}
				public Integer ERR_PN_PA_DOC_SISPrecision(){
				    return null;
				}
				public String ERR_PN_PA_DOC_SISDefault(){
				
					return null;
				
				}
				public String ERR_PN_PA_DOC_SISComment(){
				
				    return "";
				
				}
				public String ERR_PN_PA_DOC_SISPattern(){
				
					return "";
				
				}
				public String ERR_PN_PA_DOC_SISOriginalDbColumnName(){
				
					return "ERR_PN_PA_DOC_SIS";
				
				}

				
			    public Integer ERR_NOMBRES_FNAC_SIS;

				public Integer getERR_NOMBRES_FNAC_SIS () {
					return this.ERR_NOMBRES_FNAC_SIS;
				}

				public Boolean ERR_NOMBRES_FNAC_SISIsNullable(){
				    return true;
				}
				public Boolean ERR_NOMBRES_FNAC_SISIsKey(){
				    return false;
				}
				public Integer ERR_NOMBRES_FNAC_SISLength(){
				    return null;
				}
				public Integer ERR_NOMBRES_FNAC_SISPrecision(){
				    return null;
				}
				public String ERR_NOMBRES_FNAC_SISDefault(){
				
					return null;
				
				}
				public String ERR_NOMBRES_FNAC_SISComment(){
				
				    return "";
				
				}
				public String ERR_NOMBRES_FNAC_SISPattern(){
				
					return "";
				
				}
				public String ERR_NOMBRES_FNAC_SISOriginalDbColumnName(){
				
					return "ERR_NOMBRES_FNAC_SIS";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TOTAL_REGISTROS = readInteger(dis);
					
						this.TOTAL_ERRORES = readInteger(dis);
					
						this.TOTAL_REGISTRADOS = readInteger(dis);
					
						this.ERR_ESTRUCTURA = readInteger(dis);
					
						this.ERR_TD_DOC_ARC = readInteger(dis);
					
						this.ERR_PN_PA_DOC_ARC = readInteger(dis);
					
						this.ERR_NOMBRES_FNAC_ARC = readInteger(dis);
					
						this.ERR_TD_DOC_SIS = readInteger(dis);
					
						this.ERR_PN_PA_DOC_SIS = readInteger(dis);
					
						this.ERR_NOMBRES_FNAC_SIS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.TOTAL_REGISTROS = readInteger(dis);
					
						this.TOTAL_ERRORES = readInteger(dis);
					
						this.TOTAL_REGISTRADOS = readInteger(dis);
					
						this.ERR_ESTRUCTURA = readInteger(dis);
					
						this.ERR_TD_DOC_ARC = readInteger(dis);
					
						this.ERR_PN_PA_DOC_ARC = readInteger(dis);
					
						this.ERR_NOMBRES_FNAC_ARC = readInteger(dis);
					
						this.ERR_TD_DOC_SIS = readInteger(dis);
					
						this.ERR_PN_PA_DOC_SIS = readInteger(dis);
					
						this.ERR_NOMBRES_FNAC_SIS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.TOTAL_REGISTROS,dos);
					
					// Integer
				
						writeInteger(this.TOTAL_ERRORES,dos);
					
					// Integer
				
						writeInteger(this.TOTAL_REGISTRADOS,dos);
					
					// Integer
				
						writeInteger(this.ERR_ESTRUCTURA,dos);
					
					// Integer
				
						writeInteger(this.ERR_TD_DOC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_PN_PA_DOC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_NOMBRES_FNAC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_TD_DOC_SIS,dos);
					
					// Integer
				
						writeInteger(this.ERR_PN_PA_DOC_SIS,dos);
					
					// Integer
				
						writeInteger(this.ERR_NOMBRES_FNAC_SIS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.TOTAL_REGISTROS,dos);
					
					// Integer
				
						writeInteger(this.TOTAL_ERRORES,dos);
					
					// Integer
				
						writeInteger(this.TOTAL_REGISTRADOS,dos);
					
					// Integer
				
						writeInteger(this.ERR_ESTRUCTURA,dos);
					
					// Integer
				
						writeInteger(this.ERR_TD_DOC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_PN_PA_DOC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_NOMBRES_FNAC_ARC,dos);
					
					// Integer
				
						writeInteger(this.ERR_TD_DOC_SIS,dos);
					
					// Integer
				
						writeInteger(this.ERR_PN_PA_DOC_SIS,dos);
					
					// Integer
				
						writeInteger(this.ERR_NOMBRES_FNAC_SIS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TOTAL_REGISTROS="+String.valueOf(TOTAL_REGISTROS));
		sb.append(",TOTAL_ERRORES="+String.valueOf(TOTAL_ERRORES));
		sb.append(",TOTAL_REGISTRADOS="+String.valueOf(TOTAL_REGISTRADOS));
		sb.append(",ERR_ESTRUCTURA="+String.valueOf(ERR_ESTRUCTURA));
		sb.append(",ERR_TD_DOC_ARC="+String.valueOf(ERR_TD_DOC_ARC));
		sb.append(",ERR_PN_PA_DOC_ARC="+String.valueOf(ERR_PN_PA_DOC_ARC));
		sb.append(",ERR_NOMBRES_FNAC_ARC="+String.valueOf(ERR_NOMBRES_FNAC_ARC));
		sb.append(",ERR_TD_DOC_SIS="+String.valueOf(ERR_TD_DOC_SIS));
		sb.append(",ERR_PN_PA_DOC_SIS="+String.valueOf(ERR_PN_PA_DOC_SIS));
		sb.append(",ERR_NOMBRES_FNAC_SIS="+String.valueOf(ERR_NOMBRES_FNAC_SIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row118Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_37Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row118Struct row118 = new row118Struct();




	
	/**
	 * [tJavaRow_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_29", false);
		start_Hash.put("tJavaRow_29", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_29";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row118");
					}
				
		int tos_count_tJavaRow_29 = 0;
		

int nb_line_tJavaRow_29 = 0;

 



/**
 * [tJavaRow_29 begin ] stop
 */



	
	/**
	 * [tOracleInput_37 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_37", false);
		start_Hash.put("tOracleInput_37", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_37";
	
	
		int tos_count_tOracleInput_37 = 0;
		
	


	
		    int nb_line_tOracleInput_37 = 0;
		    java.sql.Connection conn_tOracleInput_37 = null;
				conn_tOracleInput_37 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_37 = false;
				boolean isConnectionWrapped_tOracleInput_37 = !(conn_tOracleInput_37 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_37.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_37 = null;
                if (isConnectionWrapped_tOracleInput_37) {
					unwrappedOraConn_tOracleInput_37 = conn_tOracleInput_37.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_37 != null) {
                        isTimeZoneNull_tOracleInput_37 = (unwrappedOraConn_tOracleInput_37.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_37 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_37).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_37) {
					java.sql.Statement stmtGetTZ_tOracleInput_37 = conn_tOracleInput_37.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_37 = stmtGetTZ_tOracleInput_37.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_37 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_37.next()) {
						sessionTimezone_tOracleInput_37 = rsGetTZ_tOracleInput_37.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_37 && unwrappedOraConn_tOracleInput_37 != null) {
                        unwrappedOraConn_tOracleInput_37.setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_37).setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_37 = conn_tOracleInput_37.createStatement();

		    String dbquery_tOracleInput_37 = "SELECT \n--TOTAL DE REGISTROS\n(SELECT COUNT(1) FROM TST_ARCHIVO) AS TOTAL_REGISTROS,\n\n--TOTAL DE ERRORES\n(SELECT CO"
+"UNT(1) FROM TST_ERRCMASIVO TE\nWHERE NOT EXISTS (SELECT * FROM TST_CARGUEMASIVO TC\nWHERE TC.TDOCUMENTOS_ID = TE.TDOCUME"
+"NTOS_ID \nAND TC.DOCUMENTO = TE.DOCUMENTO AND (TC.PROCESADO = 7))) AS TOTAL_ERRORES,\n\n--TOTAL DE REGISTROS\n(SELECT CO"
+"UNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 7) AS TOTAL_REGISTRADOS,\n\n--REGISTROS CON ERRORES DE ESTRUCTURA"
+"\n(SELECT COUNT(1) FROM TST_ERRCMASIVO TE\nWHERE NOT EXISTS (SELECT * FROM TST_CARGUEMASIVO TC\nWHERE TC.TDOCUMENTOS_ID "
+"= TE.TDOCUMENTOS_ID AND TC.DOCUMENTO = TE.DOCUMENTO)) AS ERR_ESTRUCTURA,\n\n--ERROR DUPLICADOS TDOC Y DOC EN ARCHIVO\n(S"
+"ELECT COUNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 1) AS ERR_TD_DOC_ARC,\n\n--ERROR PRIMER NOMBRE, PRIMER AP"
+"ELLIDO Y DOCUMENTO EN ARCHIVO\n(SELECT COUNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 2) AS ERR_PN_PA_DOC_ARC,"
+"\n\n--ERROR NOMBRE Y FECHA NACIMIENTO EN ARCHIVO\n(SELECT COUNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 3) AS"
+" ERR_NOMBRES_FNAC_ARC,\n\n--ERROR DUPLICADOS TDOC Y DOC EN SISTEMA\n(SELECT COUNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC"
+".PROCESADO = 4) AS ERR_TD_DOC_SIS,\n\n--ERROR PRIMER NOMBRE, PRIMER APELLIDO Y DOCUMENTO EN SISTEMA\n(SELECT COUNT(1) FR"
+"OM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 5) AS ERR_PN_PA_DOC_SIS,\n\n--ERROR NOMBRE Y FECHA NACIMIENTO EN SISTEMA\n"
+"(SELECT COUNT(1) FROM TST_CARGUEMASIVO TC \nWHERE TC.PROCESADO = 6) AS ERR_NOMBRES_FNAC_SIS\n\nFROM DUAL";
		    

		    globalMap.put("tOracleInput_37_QUERY",dbquery_tOracleInput_37);

		    java.sql.ResultSet rs_tOracleInput_37 = null;

		    try {
		    	rs_tOracleInput_37 = stmt_tOracleInput_37.executeQuery(dbquery_tOracleInput_37);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_37 = rs_tOracleInput_37.getMetaData();
		    	int colQtyInRs_tOracleInput_37 = rsmd_tOracleInput_37.getColumnCount();

		    String tmpContent_tOracleInput_37 = null;
		    
		    
		    while (rs_tOracleInput_37.next()) {
		        nb_line_tOracleInput_37++;
		        
							if(colQtyInRs_tOracleInput_37 < 1) {
								row118.TOTAL_REGISTROS = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(1) != null) {
						row118.TOTAL_REGISTROS = rs_tOracleInput_37.getInt(1);
					} else {
				
						row118.TOTAL_REGISTROS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 2) {
								row118.TOTAL_ERRORES = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(2) != null) {
						row118.TOTAL_ERRORES = rs_tOracleInput_37.getInt(2);
					} else {
				
						row118.TOTAL_ERRORES = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 3) {
								row118.TOTAL_REGISTRADOS = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(3) != null) {
						row118.TOTAL_REGISTRADOS = rs_tOracleInput_37.getInt(3);
					} else {
				
						row118.TOTAL_REGISTRADOS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 4) {
								row118.ERR_ESTRUCTURA = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(4) != null) {
						row118.ERR_ESTRUCTURA = rs_tOracleInput_37.getInt(4);
					} else {
				
						row118.ERR_ESTRUCTURA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 5) {
								row118.ERR_TD_DOC_ARC = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(5) != null) {
						row118.ERR_TD_DOC_ARC = rs_tOracleInput_37.getInt(5);
					} else {
				
						row118.ERR_TD_DOC_ARC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 6) {
								row118.ERR_PN_PA_DOC_ARC = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(6) != null) {
						row118.ERR_PN_PA_DOC_ARC = rs_tOracleInput_37.getInt(6);
					} else {
				
						row118.ERR_PN_PA_DOC_ARC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 7) {
								row118.ERR_NOMBRES_FNAC_ARC = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(7) != null) {
						row118.ERR_NOMBRES_FNAC_ARC = rs_tOracleInput_37.getInt(7);
					} else {
				
						row118.ERR_NOMBRES_FNAC_ARC = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 8) {
								row118.ERR_TD_DOC_SIS = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(8) != null) {
						row118.ERR_TD_DOC_SIS = rs_tOracleInput_37.getInt(8);
					} else {
				
						row118.ERR_TD_DOC_SIS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 9) {
								row118.ERR_PN_PA_DOC_SIS = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(9) != null) {
						row118.ERR_PN_PA_DOC_SIS = rs_tOracleInput_37.getInt(9);
					} else {
				
						row118.ERR_PN_PA_DOC_SIS = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_37 < 10) {
								row118.ERR_NOMBRES_FNAC_SIS = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(10) != null) {
						row118.ERR_NOMBRES_FNAC_SIS = rs_tOracleInput_37.getInt(10);
					} else {
				
						row118.ERR_NOMBRES_FNAC_SIS = null;
					}
		                    }
					




 



/**
 * [tOracleInput_37 begin ] stop
 */
	
	/**
	 * [tOracleInput_37 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 


	tos_count_tOracleInput_37++;

/**
 * [tOracleInput_37 main ] stop
 */
	
	/**
	 * [tOracleInput_37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_29 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_29";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row118"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.vtotal_registros = row118.TOTAL_REGISTROS;
context.vtotal_errores = row118.TOTAL_ERRORES;
context.vtotal_registrados = row118.TOTAL_REGISTRADOS;
context.verror_estructura = row118.ERR_ESTRUCTURA;
context.verror_td_doc_arc = row118.ERR_TD_DOC_ARC;
context.verror_pn_pa_doc_arc = row118.ERR_PN_PA_DOC_ARC;
context.verror_nombres_fnac_arc = row118.ERR_NOMBRES_FNAC_ARC;
context.verror_td_doc_sis = row118.ERR_TD_DOC_SIS;
context.verror_pn_pa_doc_sis = row118.ERR_PN_PA_DOC_SIS;
context.verror_nombres_fnac_sis = row118.ERR_NOMBRES_FNAC_SIS;
    nb_line_tJavaRow_29++;   

 


	tos_count_tJavaRow_29++;

/**
 * [tJavaRow_29 main ] stop
 */
	
	/**
	 * [tJavaRow_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_29";
	
	

 



/**
 * [tJavaRow_29 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_29";
	
	

 



/**
 * [tJavaRow_29 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_37 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_37 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

}
}finally{
	if (rs_tOracleInput_37 != null) {
		rs_tOracleInput_37.close();
	}
	if (stmt_tOracleInput_37 != null) {
		stmt_tOracleInput_37.close();
	}
}

globalMap.put("tOracleInput_37_NB_LINE",nb_line_tOracleInput_37);
 

ok_Hash.put("tOracleInput_37", true);
end_Hash.put("tOracleInput_37", System.currentTimeMillis());




/**
 * [tOracleInput_37 end ] stop
 */

	
	/**
	 * [tJavaRow_29 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_29";
	
	

globalMap.put("tJavaRow_29_NB_LINE",nb_line_tJavaRow_29);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row118");
			  	}
			  	
 

ok_Hash.put("tJavaRow_29", true);
end_Hash.put("tJavaRow_29", System.currentTimeMillis());




/**
 * [tJavaRow_29 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_37:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk29", 0, "ok");
								} 
							
							tFixedFlowInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_37 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 finally ] stop
 */

	
	/**
	 * [tJavaRow_29 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_29";
	
	

 



/**
 * [tJavaRow_29 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 1);
	}
	


public static class row110Struct implements routines.system.IPersistableRow<row110Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String contenido;

				public String getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.contenido = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.contenido = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.contenido,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.contenido,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("contenido="+contenido);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row110Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row110Struct row110 = new row110Struct();




	
	/**
	 * [tFileOutputDelimited_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_4", false);
		start_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row110");
					}
				
		int tos_count_tFileOutputDelimited_4 = 0;
		

String fileName_tFileOutputDelimited_4 = "";
    fileName_tFileOutputDelimited_4 = (new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"AFI_RESUMEN_CMSIATH.txt")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_4 = null;
    String extension_tFileOutputDelimited_4 = null;
    String directory_tFileOutputDelimited_4 = null;
    if((fileName_tFileOutputDelimited_4.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") < fileName_tFileOutputDelimited_4.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        }
        directory_tFileOutputDelimited_4 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_4 = true;
    java.io.File filetFileOutputDelimited_4 = new java.io.File(fileName_tFileOutputDelimited_4);
    globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
            int nb_line_tFileOutputDelimited_4 = 0;
            int splitedFileNo_tFileOutputDelimited_4 = 0;
            int currentRow_tFileOutputDelimited_4 = 0;

            final String OUT_DELIM_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_4:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_4:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_4 != null && directory_tFileOutputDelimited_4.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_4 = new java.io.File(directory_tFileOutputDelimited_4);
                        if(!dir_tFileOutputDelimited_4.exists()) {
                            dir_tFileOutputDelimited_4.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_4 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_4 = new java.io.File(fileName_tFileOutputDelimited_4);
                        if(fileToDelete_tFileOutputDelimited_4.exists()) {
                            fileToDelete_tFileOutputDelimited_4.delete();
                        }
                        outtFileOutputDelimited_4 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_4, false),"UTF-8"));
                resourceMap.put("out_tFileOutputDelimited_4", outtFileOutputDelimited_4);


resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

 



/**
 * [tFileOutputDelimited_4 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	int nb_line_tFixedFlowInput_3 = 0;
	List<row110Struct> cacheList_tFixedFlowInput_3 = new java.util.ArrayList<row110Struct>();
	row110 = new row110Struct();        	            	
	row110.contenido = "===============================================================================================================================================";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "***************************************************** PROCESO DE ACTUALIZACIÓN MASIVA DIGSA ***************************************************";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "==  Fecha de inicio de ejecución (YYYY-MM-DD h24:mm:ss): "+ context.vfinicio;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "===============================================================================================================================================";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "****************************************************** RESUMEN PROCESAMIENTO ***********************************************************";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Total registros procesados: ".concat(Integer.toString(context.vtotal_registros));
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros procesados exitosamente: ".concat(Integer.toString(context.vtotal_registrados));
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros no procesados exitosamente: ".concat(Integer.toString(context.vtotal_errores));
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "===============================================================================================================================================";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "******************************************************** DETALLE PROCESAMIENTO ****************************************************************";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con errores de estructura en el archivo: "+context.verror_estructura;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el archivo por tipo y número de documento: "+context.verror_td_doc_arc;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el archivo por nombres, apellidos y fecha de nacimiento: "+context.verror_nombres_fnac_arc;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el archivo por primer nombre, primer apellido y número de documentos: "+context.verror_pn_pa_doc_arc;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el sistema por tipo y número de documento: "+context.verror_td_doc_sis;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el sistema por nombres, apellidos y fecha de nacimiento: "+context.verror_nombres_fnac_sis;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "--> Registros con duplicados en el sistema por primer nombre, primer apellido y número de documentos: "+context.verror_pn_pa_doc_sis;
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "==  Fecha final de ejecución: "+(TalendDate.formatDate("yyyy-MM-dd HH:mm:ss.SSS",TalendDate.getCurrentDate()));
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "***********************************************************************************************************************************************";
	cacheList_tFixedFlowInput_3.add(row110);
	row110 = new row110Struct();        	            	
	row110.contenido = "===============================================================================================================================================";
	cacheList_tFixedFlowInput_3.add(row110);
	for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {	
		for(row110Struct tmpRow_tFixedFlowInput_3 : cacheList_tFixedFlowInput_3){
			nb_line_tFixedFlowInput_3 ++;		
			row110 = tmpRow_tFixedFlowInput_3;

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row110"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_4 = new StringBuilder();
                            if(row110.contenido != null) {
                        sb_tFileOutputDelimited_4.append(
                            row110.contenido
                        );
                            }
                    sb_tFileOutputDelimited_4.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_4);


                    nb_line_tFileOutputDelimited_4++;
                    resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

                        outtFileOutputDelimited_4.write(sb_tFileOutputDelimited_4.toString());




 


	tos_count_tFileOutputDelimited_4++;

/**
 * [tFileOutputDelimited_4 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

		}
	}
	cacheList_tFixedFlowInput_3.clear();
	globalMap.put("tFixedFlowInput_3_NB_LINE", nb_line_tFixedFlowInput_3);

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	



		
			
					if(outtFileOutputDelimited_4!=null) {
						outtFileOutputDelimited_4.flush();
						outtFileOutputDelimited_4.close();
					}
				
				globalMap.put("tFileOutputDelimited_4_NB_LINE",nb_line_tFileOutputDelimited_4);
				globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_4", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row110");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_4", true);
end_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk39", 0, "ok");
				}
				tFixedFlowInput_10Process(globalMap);



/**
 * [tFileOutputDelimited_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFixedFlowInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk32", 0, "ok");
								} 
							
							tOracleInput_39Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_4") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_4 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_4");
						if(outtFileOutputDelimited_4!=null) {
							outtFileOutputDelimited_4.flush();
							outtFileOutputDelimited_4.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row91Struct implements routines.system.IPersistableRow<row91Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row91Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row90Struct implements routines.system.IPersistableRow<row90Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row90Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row90Struct row90 = new row90Struct();
row91Struct row91 = new row91Struct();





	
	/**
	 * [tFileDelete_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_2", false);
		start_Hash.put("tFileDelete_2", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row91");
					}
				
		int tos_count_tFileDelete_2 = 0;
		

 



/**
 * [tFileDelete_2 begin ] stop
 */



	
	/**
	 * [tOracleOutput_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_36", false);
		start_Hash.put("tOracleOutput_36", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row90");
					}
				
		int tos_count_tOracleOutput_36 = 0;
		






    
    int nb_line_tOracleOutput_36 = 0;
    int nb_line_update_tOracleOutput_36 = 0;
    int nb_line_inserted_tOracleOutput_36 = 0;
    int nb_line_deleted_tOracleOutput_36 = 0;
    int nb_line_rejected_tOracleOutput_36 = 0;

    int tmp_batchUpdateCount_tOracleOutput_36 = 0;

    int deletedCount_tOracleOutput_36=0;
    int updatedCount_tOracleOutput_36=0;
    int insertedCount_tOracleOutput_36=0;
    int rowsToCommitCount_tOracleOutput_36=0;
    int rejectedCount_tOracleOutput_36=0;

    boolean whetherReject_tOracleOutput_36 = false;

    java.sql.Connection conn_tOracleOutput_36 = null;

    //optional table
    String dbschema_tOracleOutput_36 = null;
    String tableName_tOracleOutput_36 = null;
        dbschema_tOracleOutput_36 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_36 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_36=0;

        if(dbschema_tOracleOutput_36 == null || dbschema_tOracleOutput_36.trim().length() == 0) {
            tableName_tOracleOutput_36 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_36 = dbschema_tOracleOutput_36 + "." + ("AFI_ARCHIVOS");
        }
                String insert_tOracleOutput_36 = "INSERT INTO " + tableName_tOracleOutput_36 + " (estado,archivo,tarchivos_id,usuarios_id,codigo,archivofs,fecha,extension,contenido,padre_id,fecha_inicio,fecha_fin,proceso_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_36 = conn_tOracleOutput_36.prepareStatement(insert_tOracleOutput_36);
                        resourceMap.put("pstmt_tOracleOutput_36", pstmt_tOracleOutput_36);

        class BlobTypeUtil_tOracleOutput_36 {
            public Object getBLOB(Object data, java.sql.Connection conn) throws java.sql.SQLException {
            	boolean containBlobFromOtherDB = false;
                if(!(data instanceof java.sql.Blob) || (data instanceof oracle.sql.BLOB && !containBlobFromOtherDB)) {
                	return data;
                }

                oracle.sql.BLOB blob = null;
                java.io.InputStream in = null;
                java.io.OutputStream out = null;
                try{
                	//in
                	java.sql.Blob blobData = (java.sql.Blob) data;
                	in = blobData.getBinaryStream();

                	//out
                	blob = oracle.sql.BLOB.createTemporary(conn, true, oracle.sql.BLOB.DURATION_SESSION);
                    blob.open(oracle.sql.BLOB.MODE_READWRITE);
                    //blob = conn.createBlob(); oracle jdbc don't support it
                	out = blob.setBinaryStream(1);

                    byte[] cache = new byte[8192];
                    int len = 0;
                    while ((len = in.read(cache)) != -1) {
                        out.write(cache, 0, len);
                    }

                    return blob;
                } catch(java.sql.SQLException sqlexp){
globalMap.put("tOracleOutput_36_ERROR_MESSAGE",sqlexp.getMessage());
                	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_36) {
                    		//keep quiet
                    	}
                    }
                    sqlexp.printStackTrace();
                } catch(java.lang.Exception exp){
globalMap.put("tOracleOutput_36_ERROR_MESSAGE",exp.getMessage());
                   	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_36) {
                    		//keep quiet
                    	}
                    }
                    exp.printStackTrace();
                } finally {
                	if(out!=null) {
                		try {
                			out.flush();
                    		out.close();
                    	} catch(java.io.IOException e_tOracleOutput_36) {
                    		//keep quiet
                    	}
                    }

            	 	if(in!=null) {
                		try {
                    		in.close();
                    	} catch(java.io.IOException e_tOracleOutput_36) {
                    		//keep quiet
                    	}
                    }

                    if(blob!=null) {
                		try {
                    		blob.close();
                    	} catch(java.sql.SQLException e_tOracleOutput_36) {
                    		//keep quiet
                    	}
                    }
                }

                return null;

            }

        }
        BlobTypeUtil_tOracleOutput_36 blobTypeUtil_tOracleOutput_36=new BlobTypeUtil_tOracleOutput_36();





 



/**
 * [tOracleOutput_36 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_10", false);
		start_Hash.put("tFixedFlowInput_10", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_10";
	
	
		int tos_count_tFixedFlowInput_10 = 0;
		

	    for (int i_tFixedFlowInput_10 = 0 ; i_tFixedFlowInput_10 < 1 ; i_tFixedFlowInput_10++) {
	                	            	
    	            		row90.estado = 7;
    	            	        	            	
    	            		row90.archivo = "AFI_RESUMEN_CMSIATH.txt";
    	            	        	            	
    	            		row90.tarchivos_id = 16;
    	            	        	            	
    	            		row90.usuarios_id = context.vusuarios_id;
    	            	        	            	
    	            		row90.codigo = "AFI_CMSIATH";
    	            	        	            	
    	            		row90.archivofs = "AFI_RESUMEN_CMSIATH";
    	            	        	            	
    	            		row90.fecha = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row90.extension = "txt";
    	            	        	            	
    	            		row90.contenido = ExtraerBlob.ByteArrayFromFile(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"AFI_RESUMEN_CMSIATH.txt");
    	            	        	            	
    	            		row90.padre_id = context.vafiarchivos_id;
    	            	        	            	
    	            		row90.fecha_inicio = context.vfinicio;
    	            	        	            	
    	            		row90.fecha_fin = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row90.procesos_id = context.vprocesos_id;
    	            	

 



/**
 * [tFixedFlowInput_10 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 


	tos_count_tFixedFlowInput_10++;

/**
 * [tFixedFlowInput_10 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_36 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row90"
						
						);
					}
					



            row91 = null;
        whetherReject_tOracleOutput_36 = false;
                        if(row90.estado == null) {
pstmt_tOracleOutput_36.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_36.setInt(1, row90.estado);
}

                        if(row90.archivo == null) {
pstmt_tOracleOutput_36.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_36.setString(2, row90.archivo);
}

                        if(row90.tarchivos_id == null) {
pstmt_tOracleOutput_36.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_36.setInt(3, row90.tarchivos_id);
}

                        if(row90.usuarios_id == null) {
pstmt_tOracleOutput_36.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_36.setInt(4, row90.usuarios_id);
}

                        if(row90.codigo == null) {
pstmt_tOracleOutput_36.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_36.setString(5, row90.codigo);
}

                        if(row90.archivofs == null) {
pstmt_tOracleOutput_36.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_36.setString(6, row90.archivofs);
}

                        if(row90.fecha != null) {
pstmt_tOracleOutput_36.setObject(7, new java.sql.Timestamp(row90.fecha.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_36.setNull(7, java.sql.Types.DATE);
}

                        if(row90.extension == null) {
pstmt_tOracleOutput_36.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_36.setString(8, row90.extension);
}

                        if(row90.contenido == null) {
pstmt_tOracleOutput_36.setNull(9, java.sql.Types.BLOB);
} else {pstmt_tOracleOutput_36.setObject(9,  blobTypeUtil_tOracleOutput_36.getBLOB(row90.contenido, conn_tOracleOutput_36));
}

                        if(row90.padre_id == null) {
pstmt_tOracleOutput_36.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_36.setInt(10, row90.padre_id);
}

                        if(row90.fecha_inicio != null) {
pstmt_tOracleOutput_36.setObject(11, new java.sql.Timestamp(row90.fecha_inicio.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_36.setNull(11, java.sql.Types.DATE);
}

                        if(row90.fecha_fin != null) {
pstmt_tOracleOutput_36.setObject(12, new java.sql.Timestamp(row90.fecha_fin.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_36.setNull(12, java.sql.Types.DATE);
}

                        if(row90.procesos_id == null) {
pstmt_tOracleOutput_36.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_36.setInt(13, row90.procesos_id);
}

                try {
                    nb_line_tOracleOutput_36++;
                    int processedCount_tOracleOutput_36 = pstmt_tOracleOutput_36.executeUpdate();
                    insertedCount_tOracleOutput_36 += processedCount_tOracleOutput_36;
                    rowsToCommitCount_tOracleOutput_36 += processedCount_tOracleOutput_36;
                } catch(java.lang.Exception e_tOracleOutput_36) {
globalMap.put("tOracleOutput_36_ERROR_MESSAGE",e_tOracleOutput_36.getMessage());
                    whetherReject_tOracleOutput_36 = true;
                            System.err.print(e_tOracleOutput_36.getMessage());
                }
            if(!whetherReject_tOracleOutput_36) {
                            row91 = new row91Struct();
                                row91.estado = row90.estado;
                                row91.archivo = row90.archivo;
                                row91.tarchivos_id = row90.tarchivos_id;
                                row91.usuarios_id = row90.usuarios_id;
                                row91.codigo = row90.codigo;
                                row91.archivofs = row90.archivofs;
                                row91.fecha = row90.fecha;
                                row91.extension = row90.extension;
                                row91.contenido = row90.contenido;
                                row91.padre_id = row90.padre_id;
                                row91.fecha_inicio = row90.fecha_inicio;
                                row91.fecha_fin = row90.fecha_fin;
                                row91.procesos_id = row90.procesos_id;
            }

 


	tos_count_tOracleOutput_36++;

/**
 * [tOracleOutput_36 main ] stop
 */
	
	/**
	 * [tOracleOutput_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_36";
	
	

 



/**
 * [tOracleOutput_36 process_data_begin ] stop
 */
// Start of branch "row91"
if(row91 != null) { 



	
	/**
	 * [tFileDelete_2 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row91"
						
						);
					}
					

 

class DeleteFoldertFileDelete_2{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_2=new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"AFI_RESUMEN_CMSIATH.txt");
    if(file_tFileDelete_2.exists()&& file_tFileDelete_2.isFile()){
    	if(file_tFileDelete_2.delete()){
    		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_2_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_2_DELETE_PATH",java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"AFI_RESUMEN_CMSIATH.txt");
 


	tos_count_tFileDelete_2++;

/**
 * [tFileDelete_2 main ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_end ] stop
 */

} // End of branch "row91"




	
	/**
	 * [tOracleOutput_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_36";
	
	

 



/**
 * [tOracleOutput_36 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

        }
        globalMap.put("tFixedFlowInput_10_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_10", true);
end_Hash.put("tFixedFlowInput_10", System.currentTimeMillis());




/**
 * [tFixedFlowInput_10 end ] stop
 */

	
	/**
	 * [tOracleOutput_36 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_36";
	
	
	



	
        if(pstmt_tOracleOutput_36 != null) {
			
				pstmt_tOracleOutput_36.close();
				resourceMap.remove("pstmt_tOracleOutput_36");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_36", true);

	
	nb_line_deleted_tOracleOutput_36=nb_line_deleted_tOracleOutput_36+ deletedCount_tOracleOutput_36;
	nb_line_update_tOracleOutput_36=nb_line_update_tOracleOutput_36 + updatedCount_tOracleOutput_36;
	nb_line_inserted_tOracleOutput_36=nb_line_inserted_tOracleOutput_36 + insertedCount_tOracleOutput_36;
	nb_line_rejected_tOracleOutput_36=nb_line_rejected_tOracleOutput_36 + rejectedCount_tOracleOutput_36;
	
        globalMap.put("tOracleOutput_36_NB_LINE",nb_line_tOracleOutput_36);
        globalMap.put("tOracleOutput_36_NB_LINE_UPDATED",nb_line_update_tOracleOutput_36);
        globalMap.put("tOracleOutput_36_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_36);
        globalMap.put("tOracleOutput_36_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_36);
        globalMap.put("tOracleOutput_36_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_36);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row90");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_36", true);
end_Hash.put("tOracleOutput_36", System.currentTimeMillis());




/**
 * [tOracleOutput_36 end ] stop
 */

	
	/**
	 * [tFileDelete_2 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row91");
			  	}
			  	
 

ok_Hash.put("tFileDelete_2", true);
end_Hash.put("tFileDelete_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk40", 0, "ok");
				}
				tFixedFlowInput_12Process(globalMap);



/**
 * [tFileDelete_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_10 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 finally ] stop
 */

	
	/**
	 * [tOracleOutput_36 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_36";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_36") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_36 = null;
                if ((pstmtToClose_tOracleOutput_36 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_36")) != null) {
                    pstmtToClose_tOracleOutput_36.close();
                }
    }
 



/**
 * [tOracleOutput_36 finally ] stop
 */

	
	/**
	 * [tFileDelete_2 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row113Struct implements routines.system.IPersistableRow<row113Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				
			    public Integer estado_;

				public Integer getEstado_ () {
					return this.estado_;
				}

				public Boolean estado_IsNullable(){
				    return true;
				}
				public Boolean estado_IsKey(){
				    return false;
				}
				public Integer estado_Length(){
				    return null;
				}
				public Integer estado_Precision(){
				    return null;
				}
				public String estado_Default(){
				
					return null;
				
				}
				public String estado_Comment(){
				
				    return "";
				
				}
				public String estado_Pattern(){
				
					return "";
				
				}
				public String estado_OriginalDbColumnName(){
				
					return "estado_";
				
				}

				
			    public java.util.Date finicio_;

				public java.util.Date getFinicio_ () {
					return this.finicio_;
				}

				public Boolean finicio_IsNullable(){
				    return true;
				}
				public Boolean finicio_IsKey(){
				    return false;
				}
				public Integer finicio_Length(){
				    return null;
				}
				public Integer finicio_Precision(){
				    return null;
				}
				public String finicio_Default(){
				
					return null;
				
				}
				public String finicio_Comment(){
				
				    return "";
				
				}
				public String finicio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String finicio_OriginalDbColumnName(){
				
					return "finicio_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("archivos_id_="+String.valueOf(archivos_id_));
		sb.append(",estado_="+String.valueOf(estado_));
		sb.append(",finicio_="+String.valueOf(finicio_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row113Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row113Struct row113 = new row113Struct();




	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row113");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "cms2.updestadoarchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_12", false);
		start_Hash.put("tFixedFlowInput_12", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_12";
	
	
		int tos_count_tFixedFlowInput_12 = 0;
		

	    for (int i_tFixedFlowInput_12 = 0 ; i_tFixedFlowInput_12 < 1 ; i_tFixedFlowInput_12++) {
	                	            	
    	            		row113.archivos_id_ = context.vafiarchivos_id;
    	            	        	            	
    	            		row113.estado_ = 6;
    	            	        	            	
    	            		row113.finicio_ = context.vfinicio;
    	            	

 



/**
 * [tFixedFlowInput_12 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 


	tos_count_tFixedFlowInput_12++;

/**
 * [tFixedFlowInput_12 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row113"
						
						);
					}
					

			// code for the argument 1 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row113.archivos_id_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_1.setInt(1, row113.archivos_id_);
    					}
    					
			// code for the argument 2 (estado_) of type 'IN AUTOMAPPING'
    					if (row113.estado_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_1.setInt(2, row113.estado_);
    					}
    					
			// code for the argument 3 (finicio_) of type 'IN TIMESTAMP'
    					if (row113.finicio_ == null) {
    						statement_tOracleSP_1.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_1.setTimestamp(3, new java.sql.Timestamp(row113.finicio_.getTime()));
    					
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

        }
        globalMap.put("tFixedFlowInput_12_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_12", true);
end_Hash.put("tFixedFlowInput_12", System.currentTimeMillis());




/**
 * [tFixedFlowInput_12 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row113");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_12 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row92Struct implements routines.system.IPersistableRow<row92Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String TDOCUMENTO;

				public String getTDOCUMENTO () {
					return this.TDOCUMENTO;
				}

				public Boolean TDOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOLength(){
				    return null;
				}
				public Integer TDOCUMENTOPrecision(){
				    return null;
				}
				public String TDOCUMENTODefault(){
				
					return null;
				
				}
				public String TDOCUMENTOComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOOriginalDbColumnName(){
				
					return "TDOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SEXO;

				public String getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return null;
				}
				public Integer SEXOPrecision(){
				    return null;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public java.util.Date FECHA_NACIMIENTO;

				public java.util.Date getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.FECHA_NACIMIENTO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA_NACIMIENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTO="+TDOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SEXO="+SEXO);
		sb.append(",FECHA_NACIMIENTO="+String.valueOf(FECHA_NACIMIENTO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row92Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_39Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_39_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row92Struct row92 = new row92Struct();




	
	/**
	 * [tFileOutputPositional_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputPositional_2", false);
		start_Hash.put("tFileOutputPositional_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputPositional_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row92");
					}
				
		int tos_count_tFileOutputPositional_2 = 0;
		

        if (false) {
            throw new RuntimeException("tFileOutputPositional doesn't support to work with tSetDynamicSchema when 'Guess schema from file' option is activated");
        }
		int nb_line_tFileOutputPositional_2 = 0;
		resourceMap.put("nb_line_tFileOutputPositional_2", nb_line_tFileOutputPositional_2);
				
		class PositionUtil_tFileOutputPositional_2{
		
              void writeHeader_0(String tempStringBtFileOutputPositional_2,int tempLengthBtFileOutputPositional_2,final java.io.BufferedWriter outtFileOutputPositional_2)throws IOException,java.io.UnsupportedEncodingException{
              
                 int tempLengthMtFileOutputPositional_2= 0;
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="TDOCUMENTO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 10) {
                }else if(tempLengthBtFileOutputPositional_2<10){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 10-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="DOCUMENTO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 50) {
                }else if(tempLengthBtFileOutputPositional_2<50){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 50-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="PRIMER_NOMBRE";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 100) {
                }else if(tempLengthBtFileOutputPositional_2<100){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 100-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="SEGUNDO_NOMBRE";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 100) {
                }else if(tempLengthBtFileOutputPositional_2<100){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 100-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="PRIMER_APELLIDO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 100) {
                }else if(tempLengthBtFileOutputPositional_2<100){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 100-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="SEGUNDO_APELLIDO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 100) {
                }else if(tempLengthBtFileOutputPositional_2<100){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 100-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="SEXO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 10) {
                }else if(tempLengthBtFileOutputPositional_2<10){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 10-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
    			//get  and format output String begin				
    			tempStringBtFileOutputPositional_2="FECHA_NACIMIENTO";
    			
    			tempLengthBtFileOutputPositional_2=tempStringBtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthBtFileOutputPositional_2 > 20) {
                }else if(tempLengthBtFileOutputPositional_2<20){
                    StringBuilder resulttFileOutputPositional_2 = new StringBuilder();
                        resulttFileOutputPositional_2.append(tempStringBtFileOutputPositional_2);
                        for(int itFileOutputPositional_2=0; itFileOutputPositional_2< 20-tempLengthBtFileOutputPositional_2; itFileOutputPositional_2++){
                            resulttFileOutputPositional_2.append(' ');
                        }
                        tempStringBtFileOutputPositional_2 = resulttFileOutputPositional_2.toString();       
                }
                //get  and format output String end
    			outtFileOutputPositional_2.write(tempStringBtFileOutputPositional_2);
              }  
				  void setValue_0(final row92Struct row92,StringBuilder sb_tFileOutputPositional_2,String tempStringMtFileOutputPositional_2,int tempLengthMtFileOutputPositional_2)throws IOException,java.io.UnsupportedEncodingException{
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.TDOCUMENTO == null) ? 
					"": row92.TDOCUMENTO ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=10) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<10){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 10-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.DOCUMENTO == null) ? 
					"": row92.DOCUMENTO ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=50) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<50){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 50-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.PRIMER_NOMBRE == null) ? 
					"": row92.PRIMER_NOMBRE ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=100) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<100){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 100-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.SEGUNDO_NOMBRE == null) ? 
					"": row92.SEGUNDO_NOMBRE ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=100) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<100){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 100-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.PRIMER_APELLIDO == null) ? 
					"": row92.PRIMER_APELLIDO ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=100) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<100){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 100-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.SEGUNDO_APELLIDO == null) ? 
					"": row92.SEGUNDO_APELLIDO ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=100) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<100){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 100-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.SEXO == null) ? 
					"": row92.SEXO ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=10) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<10){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 10-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
				//get  and format output String begin
    			tempStringMtFileOutputPositional_2=
					(row92.FECHA_NACIMIENTO == null) ? 
					"": FormatterUtils.format_Date(row92.FECHA_NACIMIENTO, "dd-MM-yyyy") ;
				
    			tempLengthMtFileOutputPositional_2=tempStringMtFileOutputPositional_2.length();
    			
    			
            	if (tempLengthMtFileOutputPositional_2 >=20) {
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                }else if(tempLengthMtFileOutputPositional_2<20){
                   
                        sb_tFileOutputPositional_2.append(tempStringMtFileOutputPositional_2);
                        for(int i_tFileOutputPositional_2=0; i_tFileOutputPositional_2< 20-tempLengthMtFileOutputPositional_2; i_tFileOutputPositional_2++){
                            sb_tFileOutputPositional_2.append(' ');
                        }
                               
                }
                //get  and format output String end				
			
                   }
		
		}
		
		PositionUtil_tFileOutputPositional_2 positionUtil_tFileOutputPositional_2=new PositionUtil_tFileOutputPositional_2();
		
		String fileNewName_tFileOutputPositional_2 = java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"PERSONAS_REGISTRADAS_CMSIATH.txt";
		java.io.File createFiletFileOutputPositional_2 = new java.io.File(fileNewName_tFileOutputPositional_2);
		boolean isFileGenerated_tFileOutputPositional_2 = true;
		resourceMap.put("createFiletFileOutputPositional_2", createFiletFileOutputPositional_2);
		resourceMap.put("isFileGenerated_tFileOutputPositional_2", isFileGenerated_tFileOutputPositional_2);
		if(createFiletFileOutputPositional_2.exists()){
			isFileGenerated_tFileOutputPositional_2 = false;
			resourceMap.put("isFileGenerated_tFileOutputPositional_2", isFileGenerated_tFileOutputPositional_2);
		}
        //create directory only if not exists
        java.io.File parentFile_tFileOutputPositional_2 = createFiletFileOutputPositional_2.getParentFile();
        if(parentFile_tFileOutputPositional_2 != null && !parentFile_tFileOutputPositional_2.exists()) {
            parentFile_tFileOutputPositional_2.mkdirs();
        }
		final java.io.BufferedWriter outtFileOutputPositional_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
        		new java.io.FileOutputStream(fileNewName_tFileOutputPositional_2, true),"UTF-8"));
        		resourceMap.put("outtFileOutputPositional_2", outtFileOutputPositional_2);
		if(createFiletFileOutputPositional_2.length()==0){
    		
    		String tempStringBtFileOutputPositional_2=null;
    		int tempLengthBtFileOutputPositional_2=0;
            positionUtil_tFileOutputPositional_2.writeHeader_0(tempStringBtFileOutputPositional_2,tempLengthBtFileOutputPositional_2,outtFileOutputPositional_2);
    		outtFileOutputPositional_2.write("\n");
    	}

 



/**
 * [tFileOutputPositional_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_39 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_39", false);
		start_Hash.put("tOracleInput_39", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_39";
	
	
		int tos_count_tOracleInput_39 = 0;
		
	


	
		    int nb_line_tOracleInput_39 = 0;
		    java.sql.Connection conn_tOracleInput_39 = null;
				conn_tOracleInput_39 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_39 = false;
				boolean isConnectionWrapped_tOracleInput_39 = !(conn_tOracleInput_39 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_39.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_39 = null;
                if (isConnectionWrapped_tOracleInput_39) {
					unwrappedOraConn_tOracleInput_39 = conn_tOracleInput_39.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_39 != null) {
                        isTimeZoneNull_tOracleInput_39 = (unwrappedOraConn_tOracleInput_39.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_39 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_39).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_39) {
					java.sql.Statement stmtGetTZ_tOracleInput_39 = conn_tOracleInput_39.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_39 = stmtGetTZ_tOracleInput_39.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_39 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_39.next()) {
						sessionTimezone_tOracleInput_39 = rsGetTZ_tOracleInput_39.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_39 && unwrappedOraConn_tOracleInput_39 != null) {
                        unwrappedOraConn_tOracleInput_39.setSessionTimeZone(sessionTimezone_tOracleInput_39);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_39).setSessionTimeZone(sessionTimezone_tOracleInput_39);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_39 = conn_tOracleInput_39.createStatement();

		    String dbquery_tOracleInput_39 = "SELECT TC.TDOCUMENTO, \n       TC.DOCUMENTO,\n       TC.PRIMER_NOMBRE,\n       TC.SEGUNDO_NOMBRE,\n       TC.PRIMER_APE"
+"LLIDO,\n       TC.SEGUNDO_APELLIDO,\n       GS.NOMBRE AS SEXO,\n       TC.FECHA_NACIMIENTO \nFROM TST_CARGUEMASIVO TC \n"
+"INNER JOIN GEN_SEXOS GS ON GS.ID = TC.SEXOS_ID\nWHERE TC.PROCESADO = 7 AND TC.AFILIADO_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_39_QUERY",dbquery_tOracleInput_39);

		    java.sql.ResultSet rs_tOracleInput_39 = null;

		    try {
		    	rs_tOracleInput_39 = stmt_tOracleInput_39.executeQuery(dbquery_tOracleInput_39);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_39 = rs_tOracleInput_39.getMetaData();
		    	int colQtyInRs_tOracleInput_39 = rsmd_tOracleInput_39.getColumnCount();

		    String tmpContent_tOracleInput_39 = null;
		    
		    
		    while (rs_tOracleInput_39.next()) {
		        nb_line_tOracleInput_39++;
		        
							if(colQtyInRs_tOracleInput_39 < 1) {
								row92.TDOCUMENTO = null;
							} else {
	                         		
        	row92.TDOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 2) {
								row92.DOCUMENTO = null;
							} else {
	                         		
        	row92.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 3) {
								row92.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row92.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 4) {
								row92.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row92.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 5) {
								row92.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row92.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 6) {
								row92.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row92.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 7) {
								row92.SEXO = null;
							} else {
	                         		
        	row92.SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 8) {
								row92.FECHA_NACIMIENTO = null;
							} else {
										
			row92.FECHA_NACIMIENTO = routines.system.JDBCUtil.getDate(rs_tOracleInput_39, 8);
		                    }
					




 



/**
 * [tOracleInput_39 begin ] stop
 */
	
	/**
	 * [tOracleInput_39 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 


	tos_count_tOracleInput_39++;

/**
 * [tOracleInput_39 main ] stop
 */
	
	/**
	 * [tOracleInput_39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputPositional_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row92"
						
						);
					}
					



				String tempStringMtFileOutputPositional_2= null;
				
				int tempLengthMtFileOutputPositional_2= 0;
				
				StringBuilder sb_tFileOutputPositional_2 = new StringBuilder();
    				positionUtil_tFileOutputPositional_2.setValue_0(row92,sb_tFileOutputPositional_2,tempStringMtFileOutputPositional_2,tempLengthMtFileOutputPositional_2);
			sb_tFileOutputPositional_2.append("\n");
			
			outtFileOutputPositional_2.write(sb_tFileOutputPositional_2.toString());
    		
    		 						
			nb_line_tFileOutputPositional_2++;
			resourceMap.put("nb_line_tFileOutputPositional_2", nb_line_tFileOutputPositional_2);

 


	tos_count_tFileOutputPositional_2++;

/**
 * [tFileOutputPositional_2 main ] stop
 */
	
	/**
	 * [tFileOutputPositional_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_2";
	
	

 



/**
 * [tFileOutputPositional_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputPositional_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_2";
	
	

 



/**
 * [tFileOutputPositional_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_39 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_39 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

}
}finally{
	if (rs_tOracleInput_39 != null) {
		rs_tOracleInput_39.close();
	}
	if (stmt_tOracleInput_39 != null) {
		stmt_tOracleInput_39.close();
	}
}

globalMap.put("tOracleInput_39_NB_LINE",nb_line_tOracleInput_39);
 

ok_Hash.put("tOracleInput_39", true);
end_Hash.put("tOracleInput_39", System.currentTimeMillis());




/**
 * [tOracleInput_39 end ] stop
 */

	
	/**
	 * [tFileOutputPositional_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_2";
	
	
	
	
	
	
	outtFileOutputPositional_2.close();
	
	globalMap.put("tFileOutputPositional_2_NB_LINE",nb_line_tFileOutputPositional_2);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row92");
			  	}
			  	
 

ok_Hash.put("tFileOutputPositional_2", true);
end_Hash.put("tFileOutputPositional_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk42", 0, "ok");
				}
				tFixedFlowInput_13Process(globalMap);



/**
 * [tFileOutputPositional_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_39 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 finally ] stop
 */

	
	/**
	 * [tFileOutputPositional_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputPositional_2";
	
	
	
	
	
	java.io.Writer outtFileOutputPositional_2 = (java.io.Writer)resourceMap.get("outtFileOutputPositional_2");
	outtFileOutputPositional_2.close();
	

 



/**
 * [tFileOutputPositional_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_39_SUBPROCESS_STATE", 1);
	}
	


public static class row102Struct implements routines.system.IPersistableRow<row102Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row102Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row97Struct implements routines.system.IPersistableRow<row97Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer estado;

				public Integer getEstado () {
					return this.estado;
				}

				public Boolean estadoIsNullable(){
				    return true;
				}
				public Boolean estadoIsKey(){
				    return false;
				}
				public Integer estadoLength(){
				    return null;
				}
				public Integer estadoPrecision(){
				    return null;
				}
				public String estadoDefault(){
				
					return null;
				
				}
				public String estadoComment(){
				
				    return "";
				
				}
				public String estadoPattern(){
				
					return "";
				
				}
				public String estadoOriginalDbColumnName(){
				
					return "estado";
				
				}

				
			    public String archivo;

				public String getArchivo () {
					return this.archivo;
				}

				public Boolean archivoIsNullable(){
				    return true;
				}
				public Boolean archivoIsKey(){
				    return false;
				}
				public Integer archivoLength(){
				    return null;
				}
				public Integer archivoPrecision(){
				    return null;
				}
				public String archivoDefault(){
				
					return null;
				
				}
				public String archivoComment(){
				
				    return "";
				
				}
				public String archivoPattern(){
				
					return "";
				
				}
				public String archivoOriginalDbColumnName(){
				
					return "archivo";
				
				}

				
			    public Integer tarchivos_id;

				public Integer getTarchivos_id () {
					return this.tarchivos_id;
				}

				public Boolean tarchivos_idIsNullable(){
				    return true;
				}
				public Boolean tarchivos_idIsKey(){
				    return false;
				}
				public Integer tarchivos_idLength(){
				    return null;
				}
				public Integer tarchivos_idPrecision(){
				    return null;
				}
				public String tarchivos_idDefault(){
				
					return null;
				
				}
				public String tarchivos_idComment(){
				
				    return "";
				
				}
				public String tarchivos_idPattern(){
				
					return "";
				
				}
				public String tarchivos_idOriginalDbColumnName(){
				
					return "tarchivos_id";
				
				}

				
			    public Integer usuarios_id;

				public Integer getUsuarios_id () {
					return this.usuarios_id;
				}

				public Boolean usuarios_idIsNullable(){
				    return true;
				}
				public Boolean usuarios_idIsKey(){
				    return false;
				}
				public Integer usuarios_idLength(){
				    return null;
				}
				public Integer usuarios_idPrecision(){
				    return null;
				}
				public String usuarios_idDefault(){
				
					return null;
				
				}
				public String usuarios_idComment(){
				
				    return "";
				
				}
				public String usuarios_idPattern(){
				
					return "";
				
				}
				public String usuarios_idOriginalDbColumnName(){
				
					return "usuarios_id";
				
				}

				
			    public String codigo;

				public String getCodigo () {
					return this.codigo;
				}

				public Boolean codigoIsNullable(){
				    return true;
				}
				public Boolean codigoIsKey(){
				    return false;
				}
				public Integer codigoLength(){
				    return null;
				}
				public Integer codigoPrecision(){
				    return null;
				}
				public String codigoDefault(){
				
					return null;
				
				}
				public String codigoComment(){
				
				    return "";
				
				}
				public String codigoPattern(){
				
					return "";
				
				}
				public String codigoOriginalDbColumnName(){
				
					return "codigo";
				
				}

				
			    public String archivofs;

				public String getArchivofs () {
					return this.archivofs;
				}

				public Boolean archivofsIsNullable(){
				    return true;
				}
				public Boolean archivofsIsKey(){
				    return false;
				}
				public Integer archivofsLength(){
				    return null;
				}
				public Integer archivofsPrecision(){
				    return null;
				}
				public String archivofsDefault(){
				
					return null;
				
				}
				public String archivofsComment(){
				
				    return "";
				
				}
				public String archivofsPattern(){
				
					return "";
				
				}
				public String archivofsOriginalDbColumnName(){
				
					return "archivofs";
				
				}

				
			    public java.util.Date fecha;

				public java.util.Date getFecha () {
					return this.fecha;
				}

				public Boolean fechaIsNullable(){
				    return true;
				}
				public Boolean fechaIsKey(){
				    return false;
				}
				public Integer fechaLength(){
				    return null;
				}
				public Integer fechaPrecision(){
				    return null;
				}
				public String fechaDefault(){
				
					return null;
				
				}
				public String fechaComment(){
				
				    return "";
				
				}
				public String fechaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fechaOriginalDbColumnName(){
				
					return "fecha";
				
				}

				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}

				public Boolean extensionIsNullable(){
				    return true;
				}
				public Boolean extensionIsKey(){
				    return false;
				}
				public Integer extensionLength(){
				    return null;
				}
				public Integer extensionPrecision(){
				    return null;
				}
				public String extensionDefault(){
				
					return null;
				
				}
				public String extensionComment(){
				
				    return "";
				
				}
				public String extensionPattern(){
				
					return "";
				
				}
				public String extensionOriginalDbColumnName(){
				
					return "extension";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public Integer padre_id;

				public Integer getPadre_id () {
					return this.padre_id;
				}

				public Boolean padre_idIsNullable(){
				    return true;
				}
				public Boolean padre_idIsKey(){
				    return false;
				}
				public Integer padre_idLength(){
				    return null;
				}
				public Integer padre_idPrecision(){
				    return null;
				}
				public String padre_idDefault(){
				
					return null;
				
				}
				public String padre_idComment(){
				
				    return "";
				
				}
				public String padre_idPattern(){
				
					return "";
				
				}
				public String padre_idOriginalDbColumnName(){
				
					return "padre_id";
				
				}

				
			    public java.util.Date fecha_inicio;

				public java.util.Date getFecha_inicio () {
					return this.fecha_inicio;
				}

				public Boolean fecha_inicioIsNullable(){
				    return true;
				}
				public Boolean fecha_inicioIsKey(){
				    return false;
				}
				public Integer fecha_inicioLength(){
				    return null;
				}
				public Integer fecha_inicioPrecision(){
				    return null;
				}
				public String fecha_inicioDefault(){
				
					return null;
				
				}
				public String fecha_inicioComment(){
				
				    return "";
				
				}
				public String fecha_inicioPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_inicioOriginalDbColumnName(){
				
					return "fecha_inicio";
				
				}

				
			    public java.util.Date fecha_fin;

				public java.util.Date getFecha_fin () {
					return this.fecha_fin;
				}

				public Boolean fecha_finIsNullable(){
				    return true;
				}
				public Boolean fecha_finIsKey(){
				    return false;
				}
				public Integer fecha_finLength(){
				    return null;
				}
				public Integer fecha_finPrecision(){
				    return null;
				}
				public String fecha_finDefault(){
				
					return null;
				
				}
				public String fecha_finComment(){
				
				    return "";
				
				}
				public String fecha_finPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String fecha_finOriginalDbColumnName(){
				
					return "fecha_fin";
				
				}

				
			    public Integer procesos_id;

				public Integer getProcesos_id () {
					return this.procesos_id;
				}

				public Boolean procesos_idIsNullable(){
				    return true;
				}
				public Boolean procesos_idIsKey(){
				    return false;
				}
				public Integer procesos_idLength(){
				    return null;
				}
				public Integer procesos_idPrecision(){
				    return null;
				}
				public String procesos_idDefault(){
				
					return null;
				
				}
				public String procesos_idComment(){
				
				    return "";
				
				}
				public String procesos_idPattern(){
				
					return "";
				
				}
				public String procesos_idOriginalDbColumnName(){
				
					return "proceso_id";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.estado = readInteger(dis);
					
					this.archivo = readString(dis);
					
						this.tarchivos_id = readInteger(dis);
					
						this.usuarios_id = readInteger(dis);
					
					this.codigo = readString(dis);
					
					this.archivofs = readString(dis);
					
					this.fecha = readDate(dis);
					
					this.extension = readString(dis);
					
						this.contenido = (Object) dis.readObject();
					
						this.padre_id = readInteger(dis);
					
					this.fecha_inicio = readDate(dis);
					
					this.fecha_fin = readDate(dis);
					
						this.procesos_id = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.estado,dos);
					
					// String
				
						writeString(this.archivo,dos);
					
					// Integer
				
						writeInteger(this.tarchivos_id,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id,dos);
					
					// String
				
						writeString(this.codigo,dos);
					
					// String
				
						writeString(this.archivofs,dos);
					
					// java.util.Date
				
						writeDate(this.fecha,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// Integer
				
						writeInteger(this.padre_id,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_inicio,dos);
					
					// java.util.Date
				
						writeDate(this.fecha_fin,dos);
					
					// Integer
				
						writeInteger(this.procesos_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("estado="+String.valueOf(estado));
		sb.append(",archivo="+archivo);
		sb.append(",tarchivos_id="+String.valueOf(tarchivos_id));
		sb.append(",usuarios_id="+String.valueOf(usuarios_id));
		sb.append(",codigo="+codigo);
		sb.append(",archivofs="+archivofs);
		sb.append(",fecha="+String.valueOf(fecha));
		sb.append(",extension="+extension);
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",padre_id="+String.valueOf(padre_id));
		sb.append(",fecha_inicio="+String.valueOf(fecha_inicio));
		sb.append(",fecha_fin="+String.valueOf(fecha_fin));
		sb.append(",procesos_id="+String.valueOf(procesos_id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row97Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row97Struct row97 = new row97Struct();
row102Struct row102 = new row102Struct();





	
	/**
	 * [tFileDelete_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_4", false);
		start_Hash.put("tFileDelete_4", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row102");
					}
				
		int tos_count_tFileDelete_4 = 0;
		

 



/**
 * [tFileDelete_4 begin ] stop
 */



	
	/**
	 * [tOracleOutput_39 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_39", false);
		start_Hash.put("tOracleOutput_39", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_39";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row97");
					}
				
		int tos_count_tOracleOutput_39 = 0;
		






    
    int nb_line_tOracleOutput_39 = 0;
    int nb_line_update_tOracleOutput_39 = 0;
    int nb_line_inserted_tOracleOutput_39 = 0;
    int nb_line_deleted_tOracleOutput_39 = 0;
    int nb_line_rejected_tOracleOutput_39 = 0;

    int tmp_batchUpdateCount_tOracleOutput_39 = 0;

    int deletedCount_tOracleOutput_39=0;
    int updatedCount_tOracleOutput_39=0;
    int insertedCount_tOracleOutput_39=0;
    int rowsToCommitCount_tOracleOutput_39=0;
    int rejectedCount_tOracleOutput_39=0;

    boolean whetherReject_tOracleOutput_39 = false;

    java.sql.Connection conn_tOracleOutput_39 = null;

    //optional table
    String dbschema_tOracleOutput_39 = null;
    String tableName_tOracleOutput_39 = null;
        dbschema_tOracleOutput_39 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_39 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_39=0;

        if(dbschema_tOracleOutput_39 == null || dbschema_tOracleOutput_39.trim().length() == 0) {
            tableName_tOracleOutput_39 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_39 = dbschema_tOracleOutput_39 + "." + ("AFI_ARCHIVOS");
        }
                String insert_tOracleOutput_39 = "INSERT INTO " + tableName_tOracleOutput_39 + " (estado,archivo,tarchivos_id,usuarios_id,codigo,archivofs,fecha,extension,contenido,padre_id,fecha_inicio,fecha_fin,proceso_id) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_39 = conn_tOracleOutput_39.prepareStatement(insert_tOracleOutput_39);
                        resourceMap.put("pstmt_tOracleOutput_39", pstmt_tOracleOutput_39);

        class BlobTypeUtil_tOracleOutput_39 {
            public Object getBLOB(Object data, java.sql.Connection conn) throws java.sql.SQLException {
            	boolean containBlobFromOtherDB = false;
                if(!(data instanceof java.sql.Blob) || (data instanceof oracle.sql.BLOB && !containBlobFromOtherDB)) {
                	return data;
                }

                oracle.sql.BLOB blob = null;
                java.io.InputStream in = null;
                java.io.OutputStream out = null;
                try{
                	//in
                	java.sql.Blob blobData = (java.sql.Blob) data;
                	in = blobData.getBinaryStream();

                	//out
                	blob = oracle.sql.BLOB.createTemporary(conn, true, oracle.sql.BLOB.DURATION_SESSION);
                    blob.open(oracle.sql.BLOB.MODE_READWRITE);
                    //blob = conn.createBlob(); oracle jdbc don't support it
                	out = blob.setBinaryStream(1);

                    byte[] cache = new byte[8192];
                    int len = 0;
                    while ((len = in.read(cache)) != -1) {
                        out.write(cache, 0, len);
                    }

                    return blob;
                } catch(java.sql.SQLException sqlexp){
globalMap.put("tOracleOutput_39_ERROR_MESSAGE",sqlexp.getMessage());
                	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_39) {
                    		//keep quiet
                    	}
                    }
                    sqlexp.printStackTrace();
                } catch(java.lang.Exception exp){
globalMap.put("tOracleOutput_39_ERROR_MESSAGE",exp.getMessage());
                   	if(blob!=null) {
                		try {
                    		blob.freeTemporary();
                    	} catch(java.sql.SQLException e_tOracleOutput_39) {
                    		//keep quiet
                    	}
                    }
                    exp.printStackTrace();
                } finally {
                	if(out!=null) {
                		try {
                			out.flush();
                    		out.close();
                    	} catch(java.io.IOException e_tOracleOutput_39) {
                    		//keep quiet
                    	}
                    }

            	 	if(in!=null) {
                		try {
                    		in.close();
                    	} catch(java.io.IOException e_tOracleOutput_39) {
                    		//keep quiet
                    	}
                    }

                    if(blob!=null) {
                		try {
                    		blob.close();
                    	} catch(java.sql.SQLException e_tOracleOutput_39) {
                    		//keep quiet
                    	}
                    }
                }

                return null;

            }

        }
        BlobTypeUtil_tOracleOutput_39 blobTypeUtil_tOracleOutput_39=new BlobTypeUtil_tOracleOutput_39();





 



/**
 * [tOracleOutput_39 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_13", false);
		start_Hash.put("tFixedFlowInput_13", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_13";
	
	
		int tos_count_tFixedFlowInput_13 = 0;
		

	    for (int i_tFixedFlowInput_13 = 0 ; i_tFixedFlowInput_13 < 1 ; i_tFixedFlowInput_13++) {
	                	            	
    	            		row97.estado = 7;
    	            	        	            	
    	            		row97.archivo = "REGISTROS_AFI_CMSIATH.txt";
    	            	        	            	
    	            		row97.tarchivos_id = 16;
    	            	        	            	
    	            		row97.usuarios_id = context.vusuarios_id;
    	            	        	            	
    	            		row97.codigo = "AFI_CMSIATH";
    	            	        	            	
    	            		row97.archivofs = "REGISTROS_AFI_CMSIATH.txt";
    	            	        	            	
    	            		row97.fecha = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row97.extension = "txt";
    	            	        	            	
    	            		row97.contenido = ExtraerBlob.ByteArrayFromFile(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"PERSONAS_REGISTRADAS_CMSIATH.txt");
    	            	        	            	
    	            		row97.padre_id = context.vafiarchivos_id;
    	            	        	            	
    	            		row97.fecha_inicio = context.vfinicio;
    	            	        	            	
    	            		row97.fecha_fin = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row97.procesos_id = context.vprocesos_id;
    	            	

 



/**
 * [tFixedFlowInput_13 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 


	tos_count_tFixedFlowInput_13++;

/**
 * [tFixedFlowInput_13 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_39 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_39";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row97"
						
						);
					}
					



            row102 = null;
        whetherReject_tOracleOutput_39 = false;
                        if(row97.estado == null) {
pstmt_tOracleOutput_39.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_39.setInt(1, row97.estado);
}

                        if(row97.archivo == null) {
pstmt_tOracleOutput_39.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_39.setString(2, row97.archivo);
}

                        if(row97.tarchivos_id == null) {
pstmt_tOracleOutput_39.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_39.setInt(3, row97.tarchivos_id);
}

                        if(row97.usuarios_id == null) {
pstmt_tOracleOutput_39.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_39.setInt(4, row97.usuarios_id);
}

                        if(row97.codigo == null) {
pstmt_tOracleOutput_39.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_39.setString(5, row97.codigo);
}

                        if(row97.archivofs == null) {
pstmt_tOracleOutput_39.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_39.setString(6, row97.archivofs);
}

                        if(row97.fecha != null) {
pstmt_tOracleOutput_39.setObject(7, new java.sql.Timestamp(row97.fecha.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_39.setNull(7, java.sql.Types.DATE);
}

                        if(row97.extension == null) {
pstmt_tOracleOutput_39.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_39.setString(8, row97.extension);
}

                        if(row97.contenido == null) {
pstmt_tOracleOutput_39.setNull(9, java.sql.Types.BLOB);
} else {pstmt_tOracleOutput_39.setObject(9,  blobTypeUtil_tOracleOutput_39.getBLOB(row97.contenido, conn_tOracleOutput_39));
}

                        if(row97.padre_id == null) {
pstmt_tOracleOutput_39.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_39.setInt(10, row97.padre_id);
}

                        if(row97.fecha_inicio != null) {
pstmt_tOracleOutput_39.setObject(11, new java.sql.Timestamp(row97.fecha_inicio.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_39.setNull(11, java.sql.Types.DATE);
}

                        if(row97.fecha_fin != null) {
pstmt_tOracleOutput_39.setObject(12, new java.sql.Timestamp(row97.fecha_fin.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_39.setNull(12, java.sql.Types.DATE);
}

                        if(row97.procesos_id == null) {
pstmt_tOracleOutput_39.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_39.setInt(13, row97.procesos_id);
}

                try {
                    nb_line_tOracleOutput_39++;
                    int processedCount_tOracleOutput_39 = pstmt_tOracleOutput_39.executeUpdate();
                    insertedCount_tOracleOutput_39 += processedCount_tOracleOutput_39;
                    rowsToCommitCount_tOracleOutput_39 += processedCount_tOracleOutput_39;
                } catch(java.lang.Exception e_tOracleOutput_39) {
globalMap.put("tOracleOutput_39_ERROR_MESSAGE",e_tOracleOutput_39.getMessage());
                    whetherReject_tOracleOutput_39 = true;
                            System.err.print(e_tOracleOutput_39.getMessage());
                }
            if(!whetherReject_tOracleOutput_39) {
                            row102 = new row102Struct();
                                row102.estado = row97.estado;
                                row102.archivo = row97.archivo;
                                row102.tarchivos_id = row97.tarchivos_id;
                                row102.usuarios_id = row97.usuarios_id;
                                row102.codigo = row97.codigo;
                                row102.archivofs = row97.archivofs;
                                row102.fecha = row97.fecha;
                                row102.extension = row97.extension;
                                row102.contenido = row97.contenido;
                                row102.padre_id = row97.padre_id;
                                row102.fecha_inicio = row97.fecha_inicio;
                                row102.fecha_fin = row97.fecha_fin;
                                row102.procesos_id = row97.procesos_id;
            }

 


	tos_count_tOracleOutput_39++;

/**
 * [tOracleOutput_39 main ] stop
 */
	
	/**
	 * [tOracleOutput_39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_39";
	
	

 



/**
 * [tOracleOutput_39 process_data_begin ] stop
 */
// Start of branch "row102"
if(row102 != null) { 



	
	/**
	 * [tFileDelete_4 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row102"
						
						);
					}
					

 

class DeleteFoldertFileDelete_4{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_4=new java.io.File(java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"PERSONAS_REGISTRADAS_CMSIATH.txt");
    if(file_tFileDelete_4.exists()&& file_tFileDelete_4.isFile()){
    	if(file_tFileDelete_4.delete()){
    		globalMap.put("tFileDelete_4_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_4_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_4.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_4_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_4.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_4_DELETE_PATH",java.nio.file.Paths.get(".").toAbsolutePath().normalize().toString()+"PERSONAS_REGISTRADAS_CMSIATH.txt");
 


	tos_count_tFileDelete_4++;

/**
 * [tFileDelete_4 main ] stop
 */
	
	/**
	 * [tFileDelete_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 process_data_end ] stop
 */

} // End of branch "row102"




	
	/**
	 * [tOracleOutput_39 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_39";
	
	

 



/**
 * [tOracleOutput_39 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

        }
        globalMap.put("tFixedFlowInput_13_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_13", true);
end_Hash.put("tFixedFlowInput_13", System.currentTimeMillis());




/**
 * [tFixedFlowInput_13 end ] stop
 */

	
	/**
	 * [tOracleOutput_39 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_39";
	
	
	



	
        if(pstmt_tOracleOutput_39 != null) {
			
				pstmt_tOracleOutput_39.close();
				resourceMap.remove("pstmt_tOracleOutput_39");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_39", true);

	
	nb_line_deleted_tOracleOutput_39=nb_line_deleted_tOracleOutput_39+ deletedCount_tOracleOutput_39;
	nb_line_update_tOracleOutput_39=nb_line_update_tOracleOutput_39 + updatedCount_tOracleOutput_39;
	nb_line_inserted_tOracleOutput_39=nb_line_inserted_tOracleOutput_39 + insertedCount_tOracleOutput_39;
	nb_line_rejected_tOracleOutput_39=nb_line_rejected_tOracleOutput_39 + rejectedCount_tOracleOutput_39;
	
        globalMap.put("tOracleOutput_39_NB_LINE",nb_line_tOracleOutput_39);
        globalMap.put("tOracleOutput_39_NB_LINE_UPDATED",nb_line_update_tOracleOutput_39);
        globalMap.put("tOracleOutput_39_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_39);
        globalMap.put("tOracleOutput_39_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_39);
        globalMap.put("tOracleOutput_39_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_39);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row97");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_39", true);
end_Hash.put("tOracleOutput_39", System.currentTimeMillis());




/**
 * [tOracleOutput_39 end ] stop
 */

	
	/**
	 * [tFileDelete_4 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row102");
			  	}
			  	
 

ok_Hash.put("tFileDelete_4", true);
end_Hash.put("tFileDelete_4", System.currentTimeMillis());




/**
 * [tFileDelete_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_13 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 finally ] stop
 */

	
	/**
	 * [tOracleOutput_39 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_39";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_39") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_39 = null;
                if ((pstmtToClose_tOracleOutput_39 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_39")) != null) {
                    pstmtToClose_tOracleOutput_39.close();
                }
    }
 



/**
 * [tOracleOutput_39 finally ] stop
 */

	
	/**
	 * [tFileDelete_4 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_4";
	
	

 



/**
 * [tFileDelete_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer REGISTROS;

				public Integer getREGISTROS () {
					return this.REGISTROS;
				}

				public Boolean REGISTROSIsNullable(){
				    return true;
				}
				public Boolean REGISTROSIsKey(){
				    return false;
				}
				public Integer REGISTROSLength(){
				    return null;
				}
				public Integer REGISTROSPrecision(){
				    return null;
				}
				public String REGISTROSDefault(){
				
					return null;
				
				}
				public String REGISTROSComment(){
				
				    return "";
				
				}
				public String REGISTROSPattern(){
				
					return "";
				
				}
				public String REGISTROSOriginalDbColumnName(){
				
					return "REGISTROS";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.REGISTROS = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.REGISTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("REGISTROS="+String.valueOf(REGISTROS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_16", false);
		start_Hash.put("tOracleInput_16", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_16";
	
	
		int tos_count_tOracleInput_16 = 0;
		
	


	
		    int nb_line_tOracleInput_16 = 0;
		    java.sql.Connection conn_tOracleInput_16 = null;
				conn_tOracleInput_16 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_16 = false;
				boolean isConnectionWrapped_tOracleInput_16 = !(conn_tOracleInput_16 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_16.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_16 = null;
                if (isConnectionWrapped_tOracleInput_16) {
					unwrappedOraConn_tOracleInput_16 = conn_tOracleInput_16.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_16 != null) {
                        isTimeZoneNull_tOracleInput_16 = (unwrappedOraConn_tOracleInput_16.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_16 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_16).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_16) {
					java.sql.Statement stmtGetTZ_tOracleInput_16 = conn_tOracleInput_16.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_16 = stmtGetTZ_tOracleInput_16.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_16 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_16.next()) {
						sessionTimezone_tOracleInput_16 = rsGetTZ_tOracleInput_16.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_16 && unwrappedOraConn_tOracleInput_16 != null) {
                        unwrappedOraConn_tOracleInput_16.setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_16).setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_16 = conn_tOracleInput_16.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_16.setFetchSize(1000);


		    String dbquery_tOracleInput_16 = "SELECT COUNT(1) AS REGISTROS \nFROM TST_ARCHIVO TA \nWHERE TA.CARGADO_SIATH <> 1";
		    

		    globalMap.put("tOracleInput_16_QUERY",dbquery_tOracleInput_16);

		    java.sql.ResultSet rs_tOracleInput_16 = null;

		    try {
		    	rs_tOracleInput_16 = stmt_tOracleInput_16.executeQuery(dbquery_tOracleInput_16);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_16 = rs_tOracleInput_16.getMetaData();
		    	int colQtyInRs_tOracleInput_16 = rsmd_tOracleInput_16.getColumnCount();

		    String tmpContent_tOracleInput_16 = null;
		    
		    
		    while (rs_tOracleInput_16.next()) {
		        nb_line_tOracleInput_16++;
		        
							if(colQtyInRs_tOracleInput_16 < 1) {
								row23.REGISTROS = null;
							} else {
		                          
					if(rs_tOracleInput_16.getObject(1) != null) {
						row23.REGISTROS = rs_tOracleInput_16.getInt(1);
					} else {
				
						row23.REGISTROS = null;
					}
		                    }
					




 



/**
 * [tOracleInput_16 begin ] stop
 */
	
	/**
	 * [tOracleInput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 


	tos_count_tOracleInput_16++;

/**
 * [tOracleInput_16 main ] stop
 */
	
	/**
	 * [tOracleInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

    context.vcount_registros = row23.REGISTROS;
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

}
}finally{
	if (rs_tOracleInput_16 != null) {
		rs_tOracleInput_16.close();
	}
	if (stmt_tOracleInput_16 != null) {
		stmt_tOracleInput_16.close();
	}
}

globalMap.put("tOracleInput_16_NB_LINE",nb_line_tOracleInput_16);
 

ok_Hash.put("tOracleInput_16", true);
end_Hash.put("tOracleInput_16", System.currentTimeMillis());




/**
 * [tOracleInput_16 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());

   			if (context.vcount_registros == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tFixedFlowInput_4Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}
   			if (context.vcount_registros > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If1", 0, "true");
					}
				tFixedFlowInput_6Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If1", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_16:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tOracleInput_15Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				
			    public Integer estado_;

				public Integer getEstado_ () {
					return this.estado_;
				}

				public Boolean estado_IsNullable(){
				    return true;
				}
				public Boolean estado_IsKey(){
				    return false;
				}
				public Integer estado_Length(){
				    return null;
				}
				public Integer estado_Precision(){
				    return null;
				}
				public String estado_Default(){
				
					return null;
				
				}
				public String estado_Comment(){
				
				    return "";
				
				}
				public String estado_Pattern(){
				
					return "";
				
				}
				public String estado_OriginalDbColumnName(){
				
					return "estado_";
				
				}

				
			    public java.util.Date finicio_;

				public java.util.Date getFinicio_ () {
					return this.finicio_;
				}

				public Boolean finicio_IsNullable(){
				    return true;
				}
				public Boolean finicio_IsKey(){
				    return false;
				}
				public Integer finicio_Length(){
				    return null;
				}
				public Integer finicio_Precision(){
				    return null;
				}
				public String finicio_Default(){
				
					return null;
				
				}
				public String finicio_Comment(){
				
				    return "";
				
				}
				public String finicio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String finicio_OriginalDbColumnName(){
				
					return "finicio_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.archivos_id_ = readInteger(dis);
					
						this.estado_ = readInteger(dis);
					
					this.finicio_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
					// Integer
				
						writeInteger(this.estado_,dos);
					
					// java.util.Date
				
						writeDate(this.finicio_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("archivos_id_="+String.valueOf(archivos_id_));
		sb.append(",estado_="+String.valueOf(estado_));
		sb.append(",finicio_="+String.valueOf(finicio_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tOracleSP_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_2", false);
		start_Hash.put("tOracleSP_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tOracleSP_2 = 0;
		

	java.sql.Connection connection_tOracleSP_2 = null;
	connection_tOracleSP_2 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_2 = connection_tOracleSP_2.prepareCall("{call " + "cms2.updestadoarchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_2;
String tmpString_tOracleSP_2;

 



/**
 * [tOracleSP_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_4", false);
		start_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_4";
	
	
		int tos_count_tFixedFlowInput_4 = 0;
		

	    for (int i_tFixedFlowInput_4 = 0 ; i_tFixedFlowInput_4 < 1 ; i_tFixedFlowInput_4++) {
	                	            	
    	            		row24.archivos_id_ = context.vafiarchivos_id;
    	            	        	            	
    	            		row24.estado_ = 8;
    	            	        	            	
    	            		row24.finicio_ = context.vfinicio;
    	            	

 



/**
 * [tFixedFlowInput_4 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 


	tos_count_tFixedFlowInput_4++;

/**
 * [tFixedFlowInput_4 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_2 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

			// code for the argument 1 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row24.archivos_id_ == null) {
    						statement_tOracleSP_2.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_2.setInt(1, row24.archivos_id_);
    					}
    					
			// code for the argument 2 (estado_) of type 'IN AUTOMAPPING'
    					if (row24.estado_ == null) {
    						statement_tOracleSP_2.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_2.setInt(2, row24.estado_);
    					}
    					
			// code for the argument 3 (finicio_) of type 'IN TIMESTAMP'
    					if (row24.finicio_ == null) {
    						statement_tOracleSP_2.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_2.setTimestamp(3, new java.sql.Timestamp(row24.finicio_.getTime()));
    					
    					}
    					
		statement_tOracleSP_2.execute();
		

 


	tos_count_tOracleSP_2++;

/**
 * [tOracleSP_2 main ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

        }
        globalMap.put("tFixedFlowInput_4_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_4", true);
end_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());




/**
 * [tFixedFlowInput_4 end ] stop
 */

	
	/**
	 * [tOracleSP_2 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	


	statement_tOracleSP_2.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tOracleSP_2", true);
end_Hash.put("tOracleSP_2", System.currentTimeMillis());

   			if (context.vcount_registros == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If3", 0, "true");
					}
				tFixedFlowInput_5Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If3", 0, "false");
					}   	 
   				}



/**
 * [tOracleSP_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_4 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 finally ] stop
 */

	
	/**
	 * [tOracleSP_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String respuesta;

				public String getRespuesta () {
					return this.respuesta;
				}

				public Boolean respuestaIsNullable(){
				    return true;
				}
				public Boolean respuestaIsKey(){
				    return false;
				}
				public Integer respuestaLength(){
				    return null;
				}
				public Integer respuestaPrecision(){
				    return null;
				}
				public String respuestaDefault(){
				
					return null;
				
				}
				public String respuestaComment(){
				
				    return "";
				
				}
				public String respuestaPattern(){
				
					return "";
				
				}
				public String respuestaOriginalDbColumnName(){
				
					return "respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("respuesta="+respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String respuesta;

				public String getRespuesta () {
					return this.respuesta;
				}

				public Boolean respuestaIsNullable(){
				    return true;
				}
				public Boolean respuestaIsKey(){
				    return false;
				}
				public Integer respuestaLength(){
				    return null;
				}
				public Integer respuestaPrecision(){
				    return null;
				}
				public String respuestaDefault(){
				
					return null;
				
				}
				public String respuestaComment(){
				
				    return "";
				
				}
				public String respuestaPattern(){
				
					return "";
				
				}
				public String respuestaOriginalDbColumnName(){
				
					return "respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("respuesta="+respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();
row25Struct row26 = row25;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */



	
	/**
	 * [tBufferOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_1", false);
		start_Hash.put("tBufferOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tBufferOutput_1 = 0;
		

 



/**
 * [tBufferOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_5", false);
		start_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_5";
	
	
		int tos_count_tFixedFlowInput_5 = 0;
		

	    for (int i_tFixedFlowInput_5 = 0 ; i_tFixedFlowInput_5 < 1 ; i_tFixedFlowInput_5++) {
	                	            	
    	            		row25.respuesta = "ERROR: No hay registros por procesar";
    	            	

 



/**
 * [tFixedFlowInput_5 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 


	tos_count_tFixedFlowInput_5++;

/**
 * [tFixedFlowInput_5 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_1 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					



String[] row_tBufferOutput_1=new String[]{"",};		
	    if(row25.respuesta != null){
	        
	            row_tBufferOutput_1[0] = row25.respuesta;
	                        			    
	    }else{
	    	row_tBufferOutput_1[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_1);	
	
 
     row26 = row25;


	tos_count_tBufferOutput_1++;

/**
 * [tBufferOutput_1 main ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_begin ] stop
 */

	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_1", 5, "ERROR: No se encuentra archivos para procesar en la tabla  AFI_ARCHIVOS", 4);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("ERROR: No se encuentra archivos para procesar en la tabla  AFI_ARCHIVOS");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "ERROR: No se encuentra archivos para procesar en la tabla  AFI_ARCHIVOS");
	globalMap.put("tDie_1_DIE_MESSAGES", "ERROR: No se encuentra archivos para procesar en la tabla  AFI_ARCHIVOS");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
        errorCode = new Integer(4);
        globalMap.put("tDie_1_DIE_CODE", errorCode);        

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */



	
	/**
	 * [tBufferOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

        }
        globalMap.put("tFixedFlowInput_5_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_5", true);
end_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());




/**
 * [tFixedFlowInput_5 end ] stop
 */

	
	/**
	 * [tBufferOutput_1 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_1", true);
end_Hash.put("tBufferOutput_1", System.currentTimeMillis());




/**
 * [tBufferOutput_1 end ] stop
 */

	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_5 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 finally ] stop
 */

	
	/**
	 * [tBufferOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 finally ] stop
 */

	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer procesos_id_;

				public Integer getProcesos_id_ () {
					return this.procesos_id_;
				}

				public Boolean procesos_id_IsNullable(){
				    return true;
				}
				public Boolean procesos_id_IsKey(){
				    return false;
				}
				public Integer procesos_id_Length(){
				    return null;
				}
				public Integer procesos_id_Precision(){
				    return null;
				}
				public String procesos_id_Default(){
				
					return null;
				
				}
				public String procesos_id_Comment(){
				
				    return "";
				
				}
				public String procesos_id_Pattern(){
				
					return "";
				
				}
				public String procesos_id_OriginalDbColumnName(){
				
					return "procesos_id_";
				
				}

				
			    public Integer usuarios_id_;

				public Integer getUsuarios_id_ () {
					return this.usuarios_id_;
				}

				public Boolean usuarios_id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_id_IsKey(){
				    return false;
				}
				public Integer usuarios_id_Length(){
				    return null;
				}
				public Integer usuarios_id_Precision(){
				    return null;
				}
				public String usuarios_id_Default(){
				
					return null;
				
				}
				public String usuarios_id_Comment(){
				
				    return "";
				
				}
				public String usuarios_id_Pattern(){
				
					return "";
				
				}
				public String usuarios_id_OriginalDbColumnName(){
				
					return "usuarios_id_";
				
				}

				
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id_ = readInteger(dis);
					
						this.usuarios_id_ = readInteger(dis);
					
						this.archivos_id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id_ = readInteger(dis);
					
						this.usuarios_id_ = readInteger(dis);
					
						this.archivos_id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id_,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id_,dos);
					
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id_,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id_,dos);
					
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("procesos_id_="+String.valueOf(procesos_id_));
		sb.append(",usuarios_id_="+String.valueOf(usuarios_id_));
		sb.append(",archivos_id_="+String.valueOf(archivos_id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23_0Struct implements routines.system.IPersistableRow<row23_0Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public Integer procesos_id_;

				public Integer getProcesos_id_ () {
					return this.procesos_id_;
				}

				public Boolean procesos_id_IsNullable(){
				    return true;
				}
				public Boolean procesos_id_IsKey(){
				    return false;
				}
				public Integer procesos_id_Length(){
				    return null;
				}
				public Integer procesos_id_Precision(){
				    return null;
				}
				public String procesos_id_Default(){
				
					return null;
				
				}
				public String procesos_id_Comment(){
				
				    return "";
				
				}
				public String procesos_id_Pattern(){
				
					return "";
				
				}
				public String procesos_id_OriginalDbColumnName(){
				
					return "procesos_id_";
				
				}

				
			    public Integer usuarios_id_;

				public Integer getUsuarios_id_ () {
					return this.usuarios_id_;
				}

				public Boolean usuarios_id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_id_IsKey(){
				    return false;
				}
				public Integer usuarios_id_Length(){
				    return null;
				}
				public Integer usuarios_id_Precision(){
				    return null;
				}
				public String usuarios_id_Default(){
				
					return null;
				
				}
				public String usuarios_id_Comment(){
				
				    return "";
				
				}
				public String usuarios_id_Pattern(){
				
					return "";
				
				}
				public String usuarios_id_OriginalDbColumnName(){
				
					return "usuarios_id_";
				
				}

				
			    public Integer archivos_id_;

				public Integer getArchivos_id_ () {
					return this.archivos_id_;
				}

				public Boolean archivos_id_IsNullable(){
				    return true;
				}
				public Boolean archivos_id_IsKey(){
				    return false;
				}
				public Integer archivos_id_Length(){
				    return null;
				}
				public Integer archivos_id_Precision(){
				    return null;
				}
				public String archivos_id_Default(){
				
					return null;
				
				}
				public String archivos_id_Comment(){
				
				    return "";
				
				}
				public String archivos_id_Pattern(){
				
					return "";
				
				}
				public String archivos_id_OriginalDbColumnName(){
				
					return "archivos_id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id_ = readInteger(dis);
					
						this.usuarios_id_ = readInteger(dis);
					
						this.archivos_id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.procesos_id_ = readInteger(dis);
					
						this.usuarios_id_ = readInteger(dis);
					
						this.archivos_id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id_,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id_,dos);
					
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.procesos_id_,dos);
					
					// Integer
				
						writeInteger(this.usuarios_id_,dos);
					
					// Integer
				
						writeInteger(this.archivos_id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("procesos_id_="+String.valueOf(procesos_id_));
		sb.append(",usuarios_id_="+String.valueOf(usuarios_id_));
		sb.append(",archivos_id_="+String.valueOf(archivos_id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23_0Struct row23_0 = new row23_0Struct();
row27Struct row27 = new row27Struct();





	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tOracleSP_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_3", false);
		start_Hash.put("tOracleSP_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23_0");
					}
				
		int tos_count_tOracleSP_3 = 0;
		

	java.sql.Connection connection_tOracleSP_3 = null;
	connection_tOracleSP_3 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_3 = connection_tOracleSP_3.prepareCall("{call " + "cms2.insafiprocesos" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_3;
String tmpString_tOracleSP_3;

 



/**
 * [tOracleSP_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_6", false);
		start_Hash.put("tFixedFlowInput_6", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_6";
	
	
		int tos_count_tFixedFlowInput_6 = 0;
		

	    for (int i_tFixedFlowInput_6 = 0 ; i_tFixedFlowInput_6 < 1 ; i_tFixedFlowInput_6++) {
	                	            	
    	            		row23_0.procesos_id_ = null;        	            	
    	            	        	            	
    	            		row23_0.usuarios_id_ = null;        	            	
    	            	        	            	
    	            		row23_0.archivos_id_ = context.vafiarchivos_id;
    	            	

 



/**
 * [tFixedFlowInput_6 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 


	tos_count_tFixedFlowInput_6++;

/**
 * [tFixedFlowInput_6 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_3 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23_0"
						
						);
					}
					

			// code for the argument 1 (procesos_id_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(1, java.sql.Types.INTEGER);
			// code for the argument 2 (usuarios_id_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(2, java.sql.Types.INTEGER);
			// code for the argument 3 (archivos_id_) of type 'IN AUTOMAPPING'
    					if (row23_0.archivos_id_ == null) {
    						statement_tOracleSP_3.setNull(3, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_3.setInt(3, row23_0.archivos_id_);
    					}
    					
		statement_tOracleSP_3.execute();
		
									row27.procesos_id_ = statement_tOracleSP_3.getInt(1);
									
									if (statement_tOracleSP_3.wasNull()) {
										row27.procesos_id_ = null;
									}
									
									row27.usuarios_id_ = statement_tOracleSP_3.getInt(2);
									
									if (statement_tOracleSP_3.wasNull()) {
										row27.usuarios_id_ = null;
									}
									
								row27.archivos_id_ = row23_0.archivos_id_;
								

 


	tos_count_tOracleSP_3++;

/**
 * [tOracleSP_3 main ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.vprocesos_id = row27.procesos_id_;
context.vusuarios_id = row27.usuarios_id_;


    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

        }
        globalMap.put("tFixedFlowInput_6_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_6", true);
end_Hash.put("tFixedFlowInput_6", System.currentTimeMillis());




/**
 * [tFixedFlowInput_6 end ] stop
 */

	
	/**
	 * [tOracleSP_3 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	


	statement_tOracleSP_3.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23_0");
			  	}
			  	
 

ok_Hash.put("tOracleSP_3", true);
end_Hash.put("tOracleSP_3", System.currentTimeMillis());




/**
 * [tOracleSP_3 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_6 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 finally ] stop
 */

	
	/**
	 * [tOracleSP_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row119Struct implements routines.system.IPersistableComparableLookupRow<row119Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String TIPO;

				public String getTIPO () {
					return this.TIPO;
				}

				public Boolean TIPOIsNullable(){
				    return false;
				}
				public Boolean TIPOIsKey(){
				    return false;
				}
				public Integer TIPOLength(){
				    return 50;
				}
				public Integer TIPOPrecision(){
				    return 0;
				}
				public String TIPODefault(){
				
					return null;
				
				}
				public String TIPOComment(){
				
				    return "";
				
				}
				public String TIPOPattern(){
				
					return "";
				
				}
				public String TIPOOriginalDbColumnName(){
				
					return "TIPO";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA_SALUDSIS == null) ? 0 : this.SIGLA_SALUDSIS.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row119Struct other = (row119Struct) obj;
		
						if (this.SIGLA_SALUDSIS == null) {
							if (other.SIGLA_SALUDSIS != null)
								return false;
						
						} else if (!this.SIGLA_SALUDSIS.equals(other.SIGLA_SALUDSIS))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row119Struct other) {

		other.SIGLA = this.SIGLA;
	            other.TIPO = this.TIPO;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row119Struct other) {

		other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_SALUDSIS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_SALUDSIS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_SALUDSIS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SIGLA = readString(dis,ois);
					
						this.TIPO = readString(dis,ois);
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SIGLA = readString(dis,objectIn);
					
						this.TIPO = readString(dis,objectIn);
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.SIGLA, dos, oos);
					
						writeString(this.TIPO, dos, oos);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.SIGLA, dos, objectOut);
					
						writeString(this.TIPO, dos, objectOut);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",TIPO="+TIPO);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row119Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA_SALUDSIS, other.SIGLA_SALUDSIS);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row119Struct row119 = new row119Struct();




	
	/**
	 * [tAdvancedHash_row119 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row119", false);
		start_Hash.put("tAdvancedHash_row119", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row119";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row119");
					}
				
		int tos_count_tAdvancedHash_row119 = 0;
		

			   		// connection name:row119
			   		// source node:tHashInput_21 - inputs:(after_tOracleInput_17) outputs:(row119,row119) | target node:tAdvancedHash_row119 - inputs:(row119) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row119 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row119Struct> tHash_Lookup_row119 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row119Struct>getLookup(matchingModeEnum_row119);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row119", tHash_Lookup_row119);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row119 begin ] stop
 */



	
	/**
	 * [tHashInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_21", false);
		start_Hash.put("tHashInput_21", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_21";
	
	
		int tos_count_tHashInput_21 = 0;
		


int nb_line_tHashInput_21 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_21=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_21 = mf_tHashInput_21.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_21==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_21 = tHashFile_tHashInput_21.iterator();
while (iterator_tHashInput_21.hasNext()) {
    row14Struct next_tHashInput_21 = iterator_tHashInput_21.next();

	row119.SIGLA = next_tHashInput_21.SIGLA;
	row119.TIPO = next_tHashInput_21.TIPO;
	row119.SIGLA_SALUDSIS = next_tHashInput_21.SIGLA_SALUDSIS;
	row119.ID_SALUDSIS = next_tHashInput_21.ID_SALUDSIS;

 



/**
 * [tHashInput_21 begin ] stop
 */
	
	/**
	 * [tHashInput_21 main ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 


	tos_count_tHashInput_21++;

/**
 * [tHashInput_21 main ] stop
 */
	
	/**
	 * [tHashInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row119 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row119";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row119"
						
						);
					}
					


			   
			   

					row119Struct row119_HashRow = new row119Struct();
		   	   	   
				
				row119_HashRow.SIGLA = row119.SIGLA;
				
				row119_HashRow.TIPO = row119.TIPO;
				
				row119_HashRow.SIGLA_SALUDSIS = row119.SIGLA_SALUDSIS;
				
				row119_HashRow.ID_SALUDSIS = row119.ID_SALUDSIS;
				
			tHash_Lookup_row119.put(row119_HashRow);
			
            




 


	tos_count_tAdvancedHash_row119++;

/**
 * [tAdvancedHash_row119 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row119 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row119";
	
	

 



/**
 * [tAdvancedHash_row119 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row119 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row119";
	
	

 



/**
 * [tAdvancedHash_row119 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_21 end ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	
    

		
			nb_line_tHashInput_21++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_21_NB_LINE", nb_line_tHashInput_21);       

 

ok_Hash.put("tHashInput_21", true);
end_Hash.put("tHashInput_21", System.currentTimeMillis());




/**
 * [tHashInput_21 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row119 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row119";
	
	

tHash_Lookup_row119.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row119");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row119", true);
end_Hash.put("tAdvancedHash_row119", System.currentTimeMillis());




/**
 * [tAdvancedHash_row119 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_21 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row119 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row119";
	
	

 



/**
 * [tAdvancedHash_row119 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal CODIGO;

				public BigDecimal getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 0;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return "";
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.ID = this.ID;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODIGO="+String.valueOf(CODIGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tHashInput_2 - inputs:(after_tOracleInput_17) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row18Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row18Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row18Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row7.ID = next_tHashInput_2.ID;
	row7.CODIGO = next_tHashInput_2.CODIGO;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.ID = row7.ID;
				
				row7_HashRow.CODIGO = row7.CODIGO;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.SIGLA = this.SIGLA;
	            other.DESCRIPCION = this.DESCRIPCION;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRIPCION = readString(dis,ois);
					
						this.SIGLA_SALUDSIS = readString(dis,ois);
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRIPCION = readString(dis,objectIn);
					
						this.SIGLA_SALUDSIS = readString(dis,objectIn);
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRIPCION, dos, oos);
					
						writeString(this.SIGLA_SALUDSIS, dos, oos);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRIPCION, dos, objectOut);
					
						writeString(this.SIGLA_SALUDSIS, dos, objectOut);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tHashInput_3 - inputs:(after_tOracleInput_17) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row8Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row8Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row9.SIGLA = next_tHashInput_3.SIGLA;
	row9.DESCRIPCION = next_tHashInput_3.DESCRIPCION;
	row9.SIGLA_SALUDSIS = next_tHashInput_3.SIGLA_SALUDSIS;
	row9.ID_SALUDSIS = next_tHashInput_3.ID_SALUDSIS;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.SIGLA = row9.SIGLA;
				
				row9_HashRow.DESCRIPCION = row9.DESCRIPCION;
				
				row9_HashRow.SIGLA_SALUDSIS = row9.SIGLA_SALUDSIS;
				
				row9_HashRow.ID_SALUDSIS = row9.ID_SALUDSIS;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.DESCRIPCION == null) ? 0 : this.DESCRIPCION.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.DESCRIPCION == null) {
							if (other.DESCRIPCION != null)
								return false;
						
						} else if (!this.DESCRIPCION.equals(other.DESCRIPCION))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.SIGLA = this.SIGLA;
	            other.DESCRIPCION = this.DESCRIPCION;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.DESCRIPCION = this.DESCRIPCION;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.DESCRIPCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.DESCRIPCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.DESCRIPCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.DESCRIPCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SIGLA = readString(dis,ois);
					
						this.SIGLA_SALUDSIS = readString(dis,ois);
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SIGLA = readString(dis,objectIn);
					
						this.SIGLA_SALUDSIS = readString(dis,objectIn);
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.SIGLA, dos, oos);
					
						writeString(this.SIGLA_SALUDSIS, dos, oos);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.SIGLA, dos, objectOut);
					
						writeString(this.SIGLA_SALUDSIS, dos, objectOut);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.DESCRIPCION, other.DESCRIPCION);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tHashInput_4 - inputs:(after_tOracleInput_17) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row45Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_14");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row45Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row45Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row11.SIGLA = next_tHashInput_4.SIGLA;
	row11.DESCRIPCION = next_tHashInput_4.DESCRIPCION;
	row11.SIGLA_SALUDSIS = next_tHashInput_4.SIGLA_SALUDSIS;
	row11.ID_SALUDSIS = next_tHashInput_4.ID_SALUDSIS;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.SIGLA = row11.SIGLA;
				
				row11_HashRow.DESCRIPCION = row11.DESCRIPCION;
				
				row11_HashRow.SIGLA_SALUDSIS = row11.SIGLA_SALUDSIS;
				
				row11_HashRow.ID_SALUDSIS = row11.ID_SALUDSIS;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_14");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal CODIGO;

				public BigDecimal getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 0;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return "";
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.ID = this.ID;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CODIGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODIGO="+String.valueOf(CODIGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tHashInput_5 - inputs:(after_tOracleInput_17) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row18Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row18Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row18Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row13.ID = next_tHashInput_5.ID;
	row13.CODIGO = next_tHashInput_5.CODIGO;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.ID = row13.ID;
				
				row13_HashRow.CODIGO = row13.CODIGO;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 20;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tHashInput_6 - inputs:(after_tOracleInput_17) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row46Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row46Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row46Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row15.ID = next_tHashInput_6.ID;
	row15.NOMBRE = next_tHashInput_6.NOMBRE;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.ID = row15.ID;
				
				row15_HashRow.NOMBRE = row15.NOMBRE;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableComparableLookupRow<row44Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return false;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return 20;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return 0;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public Integer ENTAPORTANTE_ID;

				public Integer getENTAPORTANTE_ID () {
					return this.ENTAPORTANTE_ID;
				}

				public Boolean ENTAPORTANTE_IDIsNullable(){
				    return true;
				}
				public Boolean ENTAPORTANTE_IDIsKey(){
				    return false;
				}
				public Integer ENTAPORTANTE_IDLength(){
				    return 0;
				}
				public Integer ENTAPORTANTE_IDPrecision(){
				    return null;
				}
				public String ENTAPORTANTE_IDDefault(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDComment(){
				
				    return "";
				
				}
				public String ENTAPORTANTE_IDPattern(){
				
					return "";
				
				}
				public String ENTAPORTANTE_IDOriginalDbColumnName(){
				
					return "ENTAPORTANTE_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA_FUERZA == null) ? 0 : this.SIGLA_FUERZA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row44Struct other = (row44Struct) obj;
		
						if (this.SIGLA_FUERZA == null) {
							if (other.SIGLA_FUERZA != null)
								return false;
						
						} else if (!this.SIGLA_FUERZA.equals(other.SIGLA_FUERZA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row44Struct other) {

		other.SIGLA_FUERZA = this.SIGLA_FUERZA;
	            other.ENTAPORTANTE_ID = this.ENTAPORTANTE_ID;
	            
	}

	public void copyKeysDataTo(row44Struct other) {

		other.SIGLA_FUERZA = this.SIGLA_FUERZA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_FUERZA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA_FUERZA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ENTAPORTANTE_ID = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ENTAPORTANTE_ID = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ENTAPORTANTE_ID, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ENTAPORTANTE_ID, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",ENTAPORTANTE_ID="+String.valueOf(ENTAPORTANTE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA_FUERZA, other.SIGLA_FUERZA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tAdvancedHash_row44 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row44", false);
		start_Hash.put("tAdvancedHash_row44", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row44";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tAdvancedHash_row44 = 0;
		

			   		// connection name:row44
			   		// source node:tHashInput_7 - inputs:(after_tOracleInput_17) outputs:(row44,row44) | target node:tAdvancedHash_row44 - inputs:(row44) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row44 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct> tHash_Lookup_row44 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row44Struct>getLookup(matchingModeEnum_row44);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row44", tHash_Lookup_row44);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row44 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row17Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row17Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row44.SIGLA_FUERZA = next_tHashInput_7.SIGLA_FUERZA;
	row44.ENTAPORTANTE_ID = next_tHashInput_7.ENTAPORTANTE_ID;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					


			   
			   

					row44Struct row44_HashRow = new row44Struct();
		   	   	   
				
				row44_HashRow.SIGLA_FUERZA = row44.SIGLA_FUERZA;
				
				row44_HashRow.ENTAPORTANTE_ID = row44.ENTAPORTANTE_ID;
				
			tHash_Lookup_row44.put(row44_HashRow);
			
            




 


	tos_count_tAdvancedHash_row44++;

/**
 * [tAdvancedHash_row44 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row44 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

tHash_Lookup_row44.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row44", true);
end_Hash.put("tAdvancedHash_row44", System.currentTimeMillis());




/**
 * [tAdvancedHash_row44 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableComparableLookupRow<row48Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public int CODIGO_SALUDSIS;

				public int getCODIGO_SALUDSIS () {
					return this.CODIGO_SALUDSIS;
				}

				public Boolean CODIGO_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean CODIGO_SALUDSISIsKey(){
				    return false;
				}
				public Integer CODIGO_SALUDSISLength(){
				    return 0;
				}
				public Integer CODIGO_SALUDSISPrecision(){
				    return null;
				}
				public String CODIGO_SALUDSISDefault(){
				
					return "";
				
				}
				public String CODIGO_SALUDSISComment(){
				
				    return "";
				
				}
				public String CODIGO_SALUDSISPattern(){
				
					return "";
				
				}
				public String CODIGO_SALUDSISOriginalDbColumnName(){
				
					return "CODIGO_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.CATEGORIA;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.CATEGORIA != other.CATEGORIA)
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            other.DESCRIPCION = this.DESCRIPCION;
	            other.CODIGO_SALUDSIS = this.CODIGO_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRIPCION = readString(dis,ois);
					
			            this.CODIGO_SALUDSIS = dis.readInt();
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRIPCION = readString(dis,objectIn);
					
			            this.CODIGO_SALUDSIS = objectIn.readInt();
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRIPCION, dos, oos);
					
		            	dos.writeInt(this.CODIGO_SALUDSIS);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRIPCION, dos, objectOut);
					
					objectOut.writeInt(this.CODIGO_SALUDSIS);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",CODIGO_SALUDSIS="+String.valueOf(CODIGO_SALUDSIS));
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CATEGORIA, other.CATEGORIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tAdvancedHash_row48 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row48", false);
		start_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tAdvancedHash_row48 = 0;
		

			   		// connection name:row48
			   		// source node:tHashInput_8 - inputs:(after_tOracleInput_17) outputs:(row48,row48) | target node:tAdvancedHash_row48 - inputs:(row48) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row48 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row48Struct>getLookup(matchingModeEnum_row48);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row48", tHash_Lookup_row48);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row48 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row16Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row16Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row48.CATEGORIA = next_tHashInput_8.CATEGORIA;
	row48.DESCRIPCION = next_tHashInput_8.DESCRIPCION;
	row48.CODIGO_SALUDSIS = next_tHashInput_8.CODIGO_SALUDSIS;
	row48.ID_SALUDSIS = next_tHashInput_8.ID_SALUDSIS;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					


			   
			   

					row48Struct row48_HashRow = new row48Struct();
		   	   	   
				
				row48_HashRow.CATEGORIA = row48.CATEGORIA;
				
				row48_HashRow.DESCRIPCION = row48.DESCRIPCION;
				
				row48_HashRow.CODIGO_SALUDSIS = row48.CODIGO_SALUDSIS;
				
				row48_HashRow.ID_SALUDSIS = row48.ID_SALUDSIS;
				
			tHash_Lookup_row48.put(row48_HashRow);
			
            




 


	tos_count_tAdvancedHash_row48++;

/**
 * [tAdvancedHash_row48 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

tHash_Lookup_row48.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row48", true);
end_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());




/**
 * [tAdvancedHash_row48 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row50Struct implements routines.system.IPersistableComparableLookupRow<row50Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return null;
				}
				public Integer SIGLAPrecision(){
				    return null;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return null;
				}
				public Integer NOMBREPrecision(){
				    return null;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row50Struct other = (row50Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row50Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row50Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID = readInteger(dis,ois);
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID = readInteger(dis,objectIn);
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID, dos, oos);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID, dos, objectOut);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row50Struct row50 = new row50Struct();




	
	/**
	 * [tAdvancedHash_row50 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row50", false);
		start_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tAdvancedHash_row50 = 0;
		

			   		// connection name:row50
			   		// source node:tHashInput_9 - inputs:(after_tOracleInput_17) outputs:(row50,row50) | target node:tAdvancedHash_row50 - inputs:(row50) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row50 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row50Struct>getLookup(matchingModeEnum_row50);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row50", tHash_Lookup_row50);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row50 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row35Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row35Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row50.ID = next_tHashInput_9.ID;
	row50.SIGLA = next_tHashInput_9.SIGLA;
	row50.NOMBRE = next_tHashInput_9.NOMBRE;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					


			   
			   

					row50Struct row50_HashRow = new row50Struct();
		   	   	   
				
				row50_HashRow.ID = row50.ID;
				
				row50_HashRow.SIGLA = row50.SIGLA;
				
				row50_HashRow.NOMBRE = row50.NOMBRE;
				
			tHash_Lookup_row50.put(row50_HashRow);
			
            




 


	tos_count_tAdvancedHash_row50++;

/**
 * [tAdvancedHash_row50 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

tHash_Lookup_row50.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row50", true);
end_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());




/**
 * [tAdvancedHash_row50 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row51Struct implements routines.system.IPersistableComparableLookupRow<row51Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 50;
				}
				public Integer CATEGORIAPrecision(){
				    return 0;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.CATEGORIA;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row51Struct other = (row51Struct) obj;
		
						if (this.CATEGORIA != other.CATEGORIA)
							return false;
					

		return true;
    }

	public void copyDataTo(row51Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            other.DESCRIPCION = this.DESCRIPCION;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row51Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRIPCION = readString(dis,ois);
					
						this.SIGLA_SALUDSIS = readString(dis,ois);
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRIPCION = readString(dis,objectIn);
					
						this.SIGLA_SALUDSIS = readString(dis,objectIn);
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRIPCION, dos, oos);
					
						writeString(this.SIGLA_SALUDSIS, dos, oos);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRIPCION, dos, objectOut);
					
						writeString(this.SIGLA_SALUDSIS, dos, objectOut);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CATEGORIA, other.CATEGORIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row51Struct row51 = new row51Struct();




	
	/**
	 * [tAdvancedHash_row51 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row51", false);
		start_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tAdvancedHash_row51 = 0;
		

			   		// connection name:row51
			   		// source node:tHashInput_10 - inputs:(after_tOracleInput_17) outputs:(row51,row51) | target node:tAdvancedHash_row51 - inputs:(row51) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row51 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row51Struct>getLookup(matchingModeEnum_row51);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row51", tHash_Lookup_row51);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row51 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row12Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row12Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row51.CATEGORIA = next_tHashInput_10.CATEGORIA;
	row51.DESCRIPCION = next_tHashInput_10.DESCRIPCION;
	row51.SIGLA_SALUDSIS = next_tHashInput_10.SIGLA_SALUDSIS;
	row51.ID_SALUDSIS = next_tHashInput_10.ID_SALUDSIS;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					


			   
			   

					row51Struct row51_HashRow = new row51Struct();
		   	   	   
				
				row51_HashRow.CATEGORIA = row51.CATEGORIA;
				
				row51_HashRow.DESCRIPCION = row51.DESCRIPCION;
				
				row51_HashRow.SIGLA_SALUDSIS = row51.SIGLA_SALUDSIS;
				
				row51_HashRow.ID_SALUDSIS = row51.ID_SALUDSIS;
				
			tHash_Lookup_row51.put(row51_HashRow);
			
            




 


	tos_count_tAdvancedHash_row51++;

/**
 * [tAdvancedHash_row51 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

tHash_Lookup_row51.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row51", true);
end_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());




/**
 * [tAdvancedHash_row51 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row52Struct implements routines.system.IPersistableComparableLookupRow<row52Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESCRIPCION;

				public String getDESCRIPCION () {
					return this.DESCRIPCION;
				}

				public Boolean DESCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean DESCRIPCIONIsKey(){
				    return false;
				}
				public Integer DESCRIPCIONLength(){
				    return 50;
				}
				public Integer DESCRIPCIONPrecision(){
				    return 0;
				}
				public String DESCRIPCIONDefault(){
				
					return null;
				
				}
				public String DESCRIPCIONComment(){
				
				    return "";
				
				}
				public String DESCRIPCIONPattern(){
				
					return "";
				
				}
				public String DESCRIPCIONOriginalDbColumnName(){
				
					return "DESCRIPCION";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public int ID_SALUDSIS;

				public int getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return 0;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return "";
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.CATEGORIA;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row52Struct other = (row52Struct) obj;
		
						if (this.CATEGORIA != other.CATEGORIA)
							return false;
					

		return true;
    }

	public void copyDataTo(row52Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            other.DESCRIPCION = this.DESCRIPCION;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row52Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DESCRIPCION = readString(dis,ois);
					
						this.SIGLA_SALUDSIS = readString(dis,ois);
					
			            this.ID_SALUDSIS = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DESCRIPCION = readString(dis,objectIn);
					
						this.SIGLA_SALUDSIS = readString(dis,objectIn);
					
			            this.ID_SALUDSIS = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DESCRIPCION, dos, oos);
					
						writeString(this.SIGLA_SALUDSIS, dos, oos);
					
		            	dos.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DESCRIPCION, dos, objectOut);
					
						writeString(this.SIGLA_SALUDSIS, dos, objectOut);
					
					objectOut.writeInt(this.ID_SALUDSIS);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",DESCRIPCION="+DESCRIPCION);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CATEGORIA, other.CATEGORIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row52Struct row52 = new row52Struct();




	
	/**
	 * [tAdvancedHash_row52 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row52", false);
		start_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tAdvancedHash_row52 = 0;
		

			   		// connection name:row52
			   		// source node:tHashInput_11 - inputs:(after_tOracleInput_17) outputs:(row52,row52) | target node:tAdvancedHash_row52 - inputs:(row52) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row52 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row52Struct>getLookup(matchingModeEnum_row52);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row52", tHash_Lookup_row52);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row52 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row10Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row52.CATEGORIA = next_tHashInput_11.CATEGORIA;
	row52.DESCRIPCION = next_tHashInput_11.DESCRIPCION;
	row52.SIGLA_SALUDSIS = next_tHashInput_11.SIGLA_SALUDSIS;
	row52.ID_SALUDSIS = next_tHashInput_11.ID_SALUDSIS;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					


			   
			   

					row52Struct row52_HashRow = new row52Struct();
		   	   	   
				
				row52_HashRow.CATEGORIA = row52.CATEGORIA;
				
				row52_HashRow.DESCRIPCION = row52.DESCRIPCION;
				
				row52_HashRow.SIGLA_SALUDSIS = row52.SIGLA_SALUDSIS;
				
				row52_HashRow.ID_SALUDSIS = row52.ID_SALUDSIS;
				
			tHash_Lookup_row52.put(row52_HashRow);
			
            




 


	tos_count_tAdvancedHash_row52++;

/**
 * [tAdvancedHash_row52 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

tHash_Lookup_row52.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row52", true);
end_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());




/**
 * [tAdvancedHash_row52 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableComparableLookupRow<row54Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tAdvancedHash_row54 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row54", false);
		start_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tAdvancedHash_row54 = 0;
		

			   		// connection name:row54
			   		// source node:tHashInput_12 - inputs:(after_tOracleInput_17) outputs:(row54,row54) | target node:tAdvancedHash_row54 - inputs:(row54) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row54 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row54Struct>getLookup(matchingModeEnum_row54);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row54", tHash_Lookup_row54);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row54 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row53Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row53Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row54.ID = next_tHashInput_12.ID;
	row54.NOMBRE = next_tHashInput_12.NOMBRE;
	row54.SIGLA = next_tHashInput_12.SIGLA;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					


			   
			   

					row54Struct row54_HashRow = new row54Struct();
		   	   	   
				
				row54_HashRow.ID = row54.ID;
				
				row54_HashRow.NOMBRE = row54.NOMBRE;
				
				row54_HashRow.SIGLA = row54.SIGLA;
				
			tHash_Lookup_row54.put(row54_HashRow);
			
            




 


	tos_count_tAdvancedHash_row54++;

/**
 * [tAdvancedHash_row54 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

tHash_Lookup_row54.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row54", true);
end_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());




/**
 * [tAdvancedHash_row54 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row56Struct implements routines.system.IPersistableComparableLookupRow<row56Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 5;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row56Struct other = (row56Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row56Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row56Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CODIGO="+CODIGO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row56Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row56Struct row56 = new row56Struct();




	
	/**
	 * [tAdvancedHash_row56 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row56", false);
		start_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row56";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row56");
					}
				
		int tos_count_tAdvancedHash_row56 = 0;
		

			   		// connection name:row56
			   		// source node:tHashInput_13 - inputs:(after_tOracleInput_17) outputs:(row56,row56) | target node:tAdvancedHash_row56 - inputs:(row56) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row56 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row56Struct>getLookup(matchingModeEnum_row56);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row56", tHash_Lookup_row56);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row56 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row55Struct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row55Struct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    row55Struct next_tHashInput_13 = iterator_tHashInput_13.next();

	row56.ID = next_tHashInput_13.ID;
	row56.NOMBRE = next_tHashInput_13.NOMBRE;
	row56.CODIGO = next_tHashInput_13.CODIGO;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row56"
						
						);
					}
					


			   
			   

					row56Struct row56_HashRow = new row56Struct();
		   	   	   
				
				row56_HashRow.ID = row56.ID;
				
				row56_HashRow.NOMBRE = row56.NOMBRE;
				
				row56_HashRow.CODIGO = row56.CODIGO;
				
			tHash_Lookup_row56.put(row56_HashRow);
			
            




 


	tos_count_tAdvancedHash_row56++;

/**
 * [tAdvancedHash_row56 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row56 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row56 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

tHash_Lookup_row56.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row56");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row56", true);
end_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());




/**
 * [tAdvancedHash_row56 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableComparableLookupRow<row43Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int CATEGORIA;

				public int getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return false;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return 0;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public int VINCULACION;

				public int getVINCULACION () {
					return this.VINCULACION;
				}

				public Boolean VINCULACIONIsNullable(){
				    return false;
				}
				public Boolean VINCULACIONIsKey(){
				    return false;
				}
				public Integer VINCULACIONLength(){
				    return 0;
				}
				public Integer VINCULACIONPrecision(){
				    return null;
				}
				public String VINCULACIONDefault(){
				
					return "";
				
				}
				public String VINCULACIONComment(){
				
				    return "";
				
				}
				public String VINCULACIONPattern(){
				
					return "";
				
				}
				public String VINCULACIONOriginalDbColumnName(){
				
					return "VINCULACION";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 50;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public int TREGIMEN_ID;

				public int getTREGIMEN_ID () {
					return this.TREGIMEN_ID;
				}

				public Boolean TREGIMEN_IDIsNullable(){
				    return false;
				}
				public Boolean TREGIMEN_IDIsKey(){
				    return false;
				}
				public Integer TREGIMEN_IDLength(){
				    return 0;
				}
				public Integer TREGIMEN_IDPrecision(){
				    return null;
				}
				public String TREGIMEN_IDDefault(){
				
					return "";
				
				}
				public String TREGIMEN_IDComment(){
				
				    return "";
				
				}
				public String TREGIMEN_IDPattern(){
				
					return "";
				
				}
				public String TREGIMEN_IDOriginalDbColumnName(){
				
					return "TREGIMEN_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.CATEGORIA;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row43Struct other = (row43Struct) obj;
		
						if (this.CATEGORIA != other.CATEGORIA)
							return false;
					

		return true;
    }

	public void copyDataTo(row43Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            other.VINCULACION = this.VINCULACION;
	            other.SIGLA = this.SIGLA;
	            other.TREGIMEN_ID = this.TREGIMEN_ID;
	            
	}

	public void copyKeysDataTo(row43Struct other) {

		other.CATEGORIA = this.CATEGORIA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.CATEGORIA = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.CATEGORIA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.VINCULACION = dis.readInt();
					
						this.SIGLA = readString(dis,ois);
					
			            this.TREGIMEN_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.VINCULACION = objectIn.readInt();
					
						this.SIGLA = readString(dis,objectIn);
					
			            this.TREGIMEN_ID = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.VINCULACION);
					
						writeString(this.SIGLA, dos, oos);
					
		            	dos.writeInt(this.TREGIMEN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.VINCULACION);
					
						writeString(this.SIGLA, dos, objectOut);
					
					objectOut.writeInt(this.TREGIMEN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",VINCULACION="+String.valueOf(VINCULACION));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",TREGIMEN_ID="+String.valueOf(TREGIMEN_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CATEGORIA, other.CATEGORIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row43Struct row43 = new row43Struct();




	
	/**
	 * [tAdvancedHash_row43 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row43", false);
		start_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tAdvancedHash_row43 = 0;
		

			   		// connection name:row43
			   		// source node:tHashInput_14 - inputs:(after_tOracleInput_17) outputs:(row43,row43) | target node:tAdvancedHash_row43 - inputs:(row43) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row43 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row43Struct>getLookup(matchingModeEnum_row43);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row43", tHash_Lookup_row43);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row43 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    row42Struct next_tHashInput_14 = iterator_tHashInput_14.next();

	row43.CATEGORIA = next_tHashInput_14.CATEGORIA;
	row43.VINCULACION = next_tHashInput_14.VINCULACION;
	row43.SIGLA = next_tHashInput_14.SIGLA;
	row43.TREGIMEN_ID = next_tHashInput_14.TREGIMEN_ID;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					


			   
			   

					row43Struct row43_HashRow = new row43Struct();
		   	   	   
				
				row43_HashRow.CATEGORIA = row43.CATEGORIA;
				
				row43_HashRow.VINCULACION = row43.VINCULACION;
				
				row43_HashRow.SIGLA = row43.SIGLA;
				
				row43_HashRow.TREGIMEN_ID = row43.TREGIMEN_ID;
				
			tHash_Lookup_row43.put(row43_HashRow);
			
            




 


	tos_count_tAdvancedHash_row43++;

/**
 * [tAdvancedHash_row43 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

tHash_Lookup_row43.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row43", true);
end_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());




/**
 * [tAdvancedHash_row43 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row83Struct implements routines.system.IPersistableComparableLookupRow<row83Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Integer CODIGO;

				public Integer getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 0;
				}
				public Integer CODIGOPrecision(){
				    return null;
				}
				public String CODIGODefault(){
				
					return "";
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row83Struct other = (row83Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row83Struct other) {

		other.ID = this.ID;
	            other.CODIGO = this.CODIGO;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row83Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODIGO="+String.valueOf(CODIGO));
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row83Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row83Struct row83 = new row83Struct();




	
	/**
	 * [tAdvancedHash_row83 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row83", false);
		start_Hash.put("tAdvancedHash_row83", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row83";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row83");
					}
				
		int tos_count_tAdvancedHash_row83 = 0;
		

			   		// connection name:row83
			   		// source node:tHashInput_15 - inputs:(after_tOracleInput_17) outputs:(row83,row83) | target node:tAdvancedHash_row83 - inputs:(row83) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row83 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct> tHash_Lookup_row83 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row83Struct>getLookup(matchingModeEnum_row83);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row83", tHash_Lookup_row83);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row83 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1191Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_19");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row1191Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    row1191Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row83.ID = next_tHashInput_15.ID;
	row83.CODIGO = next_tHashInput_15.CODIGO;
	row83.NOMBRE = next_tHashInput_15.NOMBRE;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row83"
						
						);
					}
					


			   
			   

					row83Struct row83_HashRow = new row83Struct();
		   	   	   
				
				row83_HashRow.ID = row83.ID;
				
				row83_HashRow.CODIGO = row83.CODIGO;
				
				row83_HashRow.NOMBRE = row83.NOMBRE;
				
			tHash_Lookup_row83.put(row83_HashRow);
			
            




 


	tos_count_tAdvancedHash_row83++;

/**
 * [tAdvancedHash_row83 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row83 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row83 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_19");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

tHash_Lookup_row83.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row83");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row83", true);
end_Hash.put("tAdvancedHash_row83", System.currentTimeMillis());




/**
 * [tAdvancedHash_row83 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row104Struct implements routines.system.IPersistableComparableLookupRow<row104Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return null;
				}
				public Integer CODIGOPrecision(){
				    return null;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row104Struct other = (row104Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row104Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row104Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.CODIGO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",CODIGO="+CODIGO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row104Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row104Struct row104 = new row104Struct();




	
	/**
	 * [tAdvancedHash_row104 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row104", false);
		start_Hash.put("tAdvancedHash_row104", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row104";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row104");
					}
				
		int tos_count_tAdvancedHash_row104 = 0;
		

			   		// connection name:row104
			   		// source node:tHashInput_22 - inputs:(after_tOracleInput_17) outputs:(row104,row104) | target node:tAdvancedHash_row104 - inputs:(row104) outputs:()
			   		// linked node: tMap_7 - inputs:(row28,row119,row7,row9,row11,row13,row15,row44,row48,row50,row51,row52,row54,row56,row43,row83,row104) outputs:(Errores,AptosRegistro)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row104 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct> tHash_Lookup_row104 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row104Struct>getLookup(matchingModeEnum_row104);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row104", tHash_Lookup_row104);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row104 begin ] stop
 */



	
	/**
	 * [tHashInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_22", false);
		start_Hash.put("tHashInput_22", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_22";
	
	
		int tos_count_tHashInput_22 = 0;
		


int nb_line_tHashInput_22 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_22=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row105Struct> tHashFile_tHashInput_22 = mf_tHashInput_22.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_16");
if(tHashFile_tHashInput_22==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row105Struct> iterator_tHashInput_22 = tHashFile_tHashInput_22.iterator();
while (iterator_tHashInput_22.hasNext()) {
    row105Struct next_tHashInput_22 = iterator_tHashInput_22.next();

	row104.ID = next_tHashInput_22.ID;
	row104.SIGLA = next_tHashInput_22.SIGLA;
	row104.CODIGO = next_tHashInput_22.CODIGO;

 



/**
 * [tHashInput_22 begin ] stop
 */
	
	/**
	 * [tHashInput_22 main ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 


	tos_count_tHashInput_22++;

/**
 * [tHashInput_22 main ] stop
 */
	
	/**
	 * [tHashInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row104"
						
						);
					}
					


			   
			   

					row104Struct row104_HashRow = new row104Struct();
		   	   	   
				
				row104_HashRow.ID = row104.ID;
				
				row104_HashRow.SIGLA = row104.SIGLA;
				
				row104_HashRow.CODIGO = row104.CODIGO;
				
			tHash_Lookup_row104.put(row104_HashRow);
			
            




 


	tos_count_tAdvancedHash_row104++;

/**
 * [tAdvancedHash_row104 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row104 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row104 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_22 end ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	
    

		
			nb_line_tHashInput_22++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_16");
	


	globalMap.put("tHashInput_22_NB_LINE", nb_line_tHashInput_22);       

 

ok_Hash.put("tHashInput_22", true);
end_Hash.put("tHashInput_22", System.currentTimeMillis());




/**
 * [tHashInput_22 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

tHash_Lookup_row104.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row104");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row104", true);
end_Hash.put("tAdvancedHash_row104", System.currentTimeMillis());




/**
 * [tAdvancedHash_row104 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_22 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row106Struct implements routines.system.IPersistableComparableLookupRow<row106Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public Integer VIGENCIA;

				public Integer getVIGENCIA () {
					return this.VIGENCIA;
				}

				public Boolean VIGENCIAIsNullable(){
				    return true;
				}
				public Boolean VIGENCIAIsKey(){
				    return false;
				}
				public Integer VIGENCIALength(){
				    return null;
				}
				public Integer VIGENCIAPrecision(){
				    return null;
				}
				public String VIGENCIADefault(){
				
					return null;
				
				}
				public String VIGENCIAComment(){
				
				    return "";
				
				}
				public String VIGENCIAPattern(){
				
					return "";
				
				}
				public String VIGENCIAOriginalDbColumnName(){
				
					return "VIGENCIA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row106Struct other = (row106Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row106Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.VIGENCIA = this.VIGENCIA;
	            
	}

	public void copyKeysDataTo(row106Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.VIGENCIA = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.VIGENCIA = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
					writeInteger(this.VIGENCIA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
					writeInteger(this.VIGENCIA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",VIGENCIA="+String.valueOf(VIGENCIA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row106Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row106Struct row106 = new row106Struct();




	
	/**
	 * [tAdvancedHash_row106 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row106", false);
		start_Hash.put("tAdvancedHash_row106", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row106";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row106");
					}
				
		int tos_count_tAdvancedHash_row106 = 0;
		

			   		// connection name:row106
			   		// source node:tHashInput_20 - inputs:(after_tOracleInput_17) outputs:(row106,row106) | target node:tAdvancedHash_row106 - inputs:(row106) outputs:()
			   		// linked node: tMap_8 - inputs:(AptosRegistro,row106,row108) outputs:(PERSONAS_FAILURE,PERSONAL_SUCCESS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row106 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct> tHash_Lookup_row106 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row106Struct>getLookup(matchingModeEnum_row106);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row106", tHash_Lookup_row106);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row106 begin ] stop
 */



	
	/**
	 * [tHashInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_20", false);
		start_Hash.put("tHashInput_20", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_20";
	
	
		int tos_count_tHashInput_20 = 0;
		


int nb_line_tHashInput_20 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_20=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row103Struct> tHashFile_tHashInput_20 = mf_tHashInput_20.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_20==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row103Struct> iterator_tHashInput_20 = tHashFile_tHashInput_20.iterator();
while (iterator_tHashInput_20.hasNext()) {
    row103Struct next_tHashInput_20 = iterator_tHashInput_20.next();

	row106.ID = next_tHashInput_20.ID;
	row106.SIGLA = next_tHashInput_20.SIGLA;
	row106.VIGENCIA = next_tHashInput_20.VIGENCIA;

 



/**
 * [tHashInput_20 begin ] stop
 */
	
	/**
	 * [tHashInput_20 main ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 


	tos_count_tHashInput_20++;

/**
 * [tHashInput_20 main ] stop
 */
	
	/**
	 * [tHashInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row106"
						
						);
					}
					


			   
			   

					row106Struct row106_HashRow = new row106Struct();
		   	   	   
				
				row106_HashRow.ID = row106.ID;
				
				row106_HashRow.SIGLA = row106.SIGLA;
				
				row106_HashRow.VIGENCIA = row106.VIGENCIA;
				
			tHash_Lookup_row106.put(row106_HashRow);
			
            




 


	tos_count_tAdvancedHash_row106++;

/**
 * [tAdvancedHash_row106 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row106 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row106 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_20 end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	
    

		
			nb_line_tHashInput_20++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_20_NB_LINE", nb_line_tHashInput_20);       

 

ok_Hash.put("tHashInput_20", true);
end_Hash.put("tHashInput_20", System.currentTimeMillis());




/**
 * [tHashInput_20 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

tHash_Lookup_row106.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row106");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row106", true);
end_Hash.put("tAdvancedHash_row106", System.currentTimeMillis());




/**
 * [tAdvancedHash_row106 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_20 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class row108Struct implements routines.system.IPersistableComparableLookupRow<row108Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ESM;

				public int getESM () {
					return this.ESM;
				}

				public Boolean ESMIsNullable(){
				    return false;
				}
				public Boolean ESMIsKey(){
				    return false;
				}
				public Integer ESMLength(){
				    return 0;
				}
				public Integer ESMPrecision(){
				    return null;
				}
				public String ESMDefault(){
				
					return "";
				
				}
				public String ESMComment(){
				
				    return "";
				
				}
				public String ESMPattern(){
				
					return "";
				
				}
				public String ESMOriginalDbColumnName(){
				
					return "ESM";
				
				}

				
			    public int UMILITARES_ID;

				public int getUMILITARES_ID () {
					return this.UMILITARES_ID;
				}

				public Boolean UMILITARES_IDIsNullable(){
				    return false;
				}
				public Boolean UMILITARES_IDIsKey(){
				    return false;
				}
				public Integer UMILITARES_IDLength(){
				    return 0;
				}
				public Integer UMILITARES_IDPrecision(){
				    return null;
				}
				public String UMILITARES_IDDefault(){
				
					return "";
				
				}
				public String UMILITARES_IDComment(){
				
				    return "";
				
				}
				public String UMILITARES_IDPattern(){
				
					return "";
				
				}
				public String UMILITARES_IDOriginalDbColumnName(){
				
					return "UMILITARES_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.UMILITARES_ID;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row108Struct other = (row108Struct) obj;
		
						if (this.UMILITARES_ID != other.UMILITARES_ID)
							return false;
					

		return true;
    }

	public void copyDataTo(row108Struct other) {

		other.ESM = this.ESM;
	            other.UMILITARES_ID = this.UMILITARES_ID;
	            
	}

	public void copyKeysDataTo(row108Struct other) {

		other.UMILITARES_ID = this.UMILITARES_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.UMILITARES_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
			        this.UMILITARES_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.UMILITARES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.UMILITARES_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ESM = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ESM = objectIn.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ESM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ESM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESM="+String.valueOf(ESM));
		sb.append(",UMILITARES_ID="+String.valueOf(UMILITARES_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row108Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.UMILITARES_ID, other.UMILITARES_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row108Struct row108 = new row108Struct();




	
	/**
	 * [tAdvancedHash_row108 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row108", false);
		start_Hash.put("tAdvancedHash_row108", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row108";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row108");
					}
				
		int tos_count_tAdvancedHash_row108 = 0;
		

			   		// connection name:row108
			   		// source node:tHashInput_23 - inputs:(after_tOracleInput_17) outputs:(row108,row108) | target node:tAdvancedHash_row108 - inputs:(row108) outputs:()
			   		// linked node: tMap_8 - inputs:(AptosRegistro,row106,row108) outputs:(PERSONAS_FAILURE,PERSONAL_SUCCESS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row108 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row108Struct> tHash_Lookup_row108 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row108Struct>getLookup(matchingModeEnum_row108);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row108", tHash_Lookup_row108);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row108 begin ] stop
 */



	
	/**
	 * [tHashInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_23", false);
		start_Hash.put("tHashInput_23", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_23";
	
	
		int tos_count_tHashInput_23 = 0;
		


int nb_line_tHashInput_23 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_23=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row107Struct> tHashFile_tHashInput_23 = mf_tHashInput_23.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_17");
if(tHashFile_tHashInput_23==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row107Struct> iterator_tHashInput_23 = tHashFile_tHashInput_23.iterator();
while (iterator_tHashInput_23.hasNext()) {
    row107Struct next_tHashInput_23 = iterator_tHashInput_23.next();

	row108.ESM = next_tHashInput_23.ESM;
	row108.UMILITARES_ID = next_tHashInput_23.UMILITARES_ID;

 



/**
 * [tHashInput_23 begin ] stop
 */
	
	/**
	 * [tHashInput_23 main ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 


	tos_count_tHashInput_23++;

/**
 * [tHashInput_23 main ] stop
 */
	
	/**
	 * [tHashInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row108 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row108";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row108"
						
						);
					}
					


			   
			   

					row108Struct row108_HashRow = new row108Struct();
		   	   	   
				
				row108_HashRow.ESM = row108.ESM;
				
				row108_HashRow.UMILITARES_ID = row108.UMILITARES_ID;
				
			tHash_Lookup_row108.put(row108_HashRow);
			
            




 


	tos_count_tAdvancedHash_row108++;

/**
 * [tAdvancedHash_row108 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row108 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row108";
	
	

 



/**
 * [tAdvancedHash_row108 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row108 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row108";
	
	

 



/**
 * [tAdvancedHash_row108 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_23 end ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	
    

		
			nb_line_tHashInput_23++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_17");
	


	globalMap.put("tHashInput_23_NB_LINE", nb_line_tHashInput_23);       

 

ok_Hash.put("tHashInput_23", true);
end_Hash.put("tHashInput_23", System.currentTimeMillis());




/**
 * [tHashInput_23 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row108 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row108";
	
	

tHash_Lookup_row108.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row108");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row108", true);
end_Hash.put("tAdvancedHash_row108", System.currentTimeMillis());




/**
 * [tAdvancedHash_row108 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_23 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row108 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row108";
	
	

 



/**
 * [tAdvancedHash_row108 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class row85Struct implements routines.system.IPersistableComparableLookupRow<row85Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row85Struct other = (row85Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row85Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row85Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row85Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row85Struct row85 = new row85Struct();




	
	/**
	 * [tAdvancedHash_row85 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row85", false);
		start_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row85");
					}
				
		int tos_count_tAdvancedHash_row85 = 0;
		

			   		// connection name:row85
			   		// source node:tHashInput_16 - inputs:(after_tOracleInput_34) outputs:(row85,row85) | target node:tAdvancedHash_row85 - inputs:(row85) outputs:()
			   		// linked node: tMap_5 - inputs:(row84,row85,row86) outputs:(HAFILIADO_INICIAL,HESTADO_INICIAL,AFILIADOS_ID)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row85 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row85Struct>getLookup(matchingModeEnum_row85);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row85", tHash_Lookup_row85);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row85 begin ] stop
 */



	
	/**
	 * [tHashInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_16", false);
		start_Hash.put("tHashInput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_16";
	
	
		int tos_count_tHashInput_16 = 0;
		


int nb_line_tHashInput_16 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashInput_16 = mf_tHashInput_16.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_16==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row82Struct> iterator_tHashInput_16 = tHashFile_tHashInput_16.iterator();
while (iterator_tHashInput_16.hasNext()) {
    row82Struct next_tHashInput_16 = iterator_tHashInput_16.next();

	row85.ID = next_tHashInput_16.ID;
	row85.SIGLA = next_tHashInput_16.SIGLA;
	row85.NOMBRE = next_tHashInput_16.NOMBRE;

 



/**
 * [tHashInput_16 begin ] stop
 */
	
	/**
	 * [tHashInput_16 main ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 


	tos_count_tHashInput_16++;

/**
 * [tHashInput_16 main ] stop
 */
	
	/**
	 * [tHashInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row85"
						
						);
					}
					


			   
			   

					row85Struct row85_HashRow = new row85Struct();
		   	   	   
				
				row85_HashRow.ID = row85.ID;
				
				row85_HashRow.SIGLA = row85.SIGLA;
				
				row85_HashRow.NOMBRE = row85.NOMBRE;
				
			tHash_Lookup_row85.put(row85_HashRow);
			
            




 


	tos_count_tAdvancedHash_row85++;

/**
 * [tAdvancedHash_row85 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_16 end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	
    

		
			nb_line_tHashInput_16++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_16_NB_LINE", nb_line_tHashInput_16);       

 

ok_Hash.put("tHashInput_16", true);
end_Hash.put("tHashInput_16", System.currentTimeMillis());




/**
 * [tHashInput_16 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

tHash_Lookup_row85.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row85");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row85", true);
end_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());




/**
 * [tAdvancedHash_row85 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row86Struct implements routines.system.IPersistableComparableLookupRow<row86Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row86Struct other = (row86Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row86Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row86Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row86Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row86Struct row86 = new row86Struct();




	
	/**
	 * [tAdvancedHash_row86 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row86", false);
		start_Hash.put("tAdvancedHash_row86", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row86";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row86");
					}
				
		int tos_count_tAdvancedHash_row86 = 0;
		

			   		// connection name:row86
			   		// source node:tHashInput_17 - inputs:(after_tOracleInput_34) outputs:(row86,row86) | target node:tAdvancedHash_row86 - inputs:(row86) outputs:()
			   		// linked node: tMap_5 - inputs:(row84,row85,row86) outputs:(HAFILIADO_INICIAL,HESTADO_INICIAL,AFILIADOS_ID)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row86 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct> tHash_Lookup_row86 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row86Struct>getLookup(matchingModeEnum_row86);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row86", tHash_Lookup_row86);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row86 begin ] stop
 */



	
	/**
	 * [tHashInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_17", false);
		start_Hash.put("tHashInput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_17";
	
	
		int tos_count_tHashInput_17 = 0;
		


int nb_line_tHashInput_17 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashInput_17 = mf_tHashInput_17.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_17==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row82Struct> iterator_tHashInput_17 = tHashFile_tHashInput_17.iterator();
while (iterator_tHashInput_17.hasNext()) {
    row82Struct next_tHashInput_17 = iterator_tHashInput_17.next();

	row86.ID = next_tHashInput_17.ID;
	row86.SIGLA = next_tHashInput_17.SIGLA;
	row86.NOMBRE = next_tHashInput_17.NOMBRE;

 



/**
 * [tHashInput_17 begin ] stop
 */
	
	/**
	 * [tHashInput_17 main ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 


	tos_count_tHashInput_17++;

/**
 * [tHashInput_17 main ] stop
 */
	
	/**
	 * [tHashInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row86"
						
						);
					}
					


			   
			   

					row86Struct row86_HashRow = new row86Struct();
		   	   	   
				
				row86_HashRow.ID = row86.ID;
				
				row86_HashRow.SIGLA = row86.SIGLA;
				
				row86_HashRow.NOMBRE = row86.NOMBRE;
				
			tHash_Lookup_row86.put(row86_HashRow);
			
            




 


	tos_count_tAdvancedHash_row86++;

/**
 * [tAdvancedHash_row86 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row86 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row86 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_17 end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	
    

		
			nb_line_tHashInput_17++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_17_NB_LINE", nb_line_tHashInput_17);       

 

ok_Hash.put("tHashInput_17", true);
end_Hash.put("tHashInput_17", System.currentTimeMillis());




/**
 * [tHashInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

tHash_Lookup_row86.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row86");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row86", true);
end_Hash.put("tAdvancedHash_row86", System.currentTimeMillis());




/**
 * [tAdvancedHash_row86 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row88Struct implements routines.system.IPersistableComparableLookupRow<row88Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row88Struct other = (row88Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row88Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row88Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row88Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row88Struct row88 = new row88Struct();




	
	/**
	 * [tAdvancedHash_row88 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row88", false);
		start_Hash.put("tAdvancedHash_row88", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row88";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row88");
					}
				
		int tos_count_tAdvancedHash_row88 = 0;
		

			   		// connection name:row88
			   		// source node:tHashInput_18 - inputs:(after_tOracleInput_35) outputs:(row88,row88) | target node:tAdvancedHash_row88 - inputs:(row88) outputs:()
			   		// linked node: tMap_6 - inputs:(row87,row88,row89) outputs:(HAFILIADO_FINAL,HESTADO_FINAL,ENTIDAD_APORTANTE,PROCESADOS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row88 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row88Struct> tHash_Lookup_row88 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row88Struct>getLookup(matchingModeEnum_row88);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row88", tHash_Lookup_row88);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row88 begin ] stop
 */



	
	/**
	 * [tHashInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_18", false);
		start_Hash.put("tHashInput_18", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_18";
	
	
		int tos_count_tHashInput_18 = 0;
		


int nb_line_tHashInput_18 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_18=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashInput_18 = mf_tHashInput_18.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_18==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row82Struct> iterator_tHashInput_18 = tHashFile_tHashInput_18.iterator();
while (iterator_tHashInput_18.hasNext()) {
    row82Struct next_tHashInput_18 = iterator_tHashInput_18.next();

	row88.ID = next_tHashInput_18.ID;
	row88.SIGLA = next_tHashInput_18.SIGLA;
	row88.NOMBRE = next_tHashInput_18.NOMBRE;

 



/**
 * [tHashInput_18 begin ] stop
 */
	
	/**
	 * [tHashInput_18 main ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 


	tos_count_tHashInput_18++;

/**
 * [tHashInput_18 main ] stop
 */
	
	/**
	 * [tHashInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row88 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row88";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row88"
						
						);
					}
					


			   
			   

					row88Struct row88_HashRow = new row88Struct();
		   	   	   
				
				row88_HashRow.ID = row88.ID;
				
				row88_HashRow.SIGLA = row88.SIGLA;
				
				row88_HashRow.NOMBRE = row88.NOMBRE;
				
			tHash_Lookup_row88.put(row88_HashRow);
			
            




 


	tos_count_tAdvancedHash_row88++;

/**
 * [tAdvancedHash_row88 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row88 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row88";
	
	

 



/**
 * [tAdvancedHash_row88 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row88 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row88";
	
	

 



/**
 * [tAdvancedHash_row88 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_18 end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	
    

		
			nb_line_tHashInput_18++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_18_NB_LINE", nb_line_tHashInput_18);       

 

ok_Hash.put("tHashInput_18", true);
end_Hash.put("tHashInput_18", System.currentTimeMillis());




/**
 * [tHashInput_18 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row88 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row88";
	
	

tHash_Lookup_row88.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row88");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row88", true);
end_Hash.put("tAdvancedHash_row88", System.currentTimeMillis());




/**
 * [tAdvancedHash_row88 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_18 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row88 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row88";
	
	

 



/**
 * [tAdvancedHash_row88 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row89Struct implements routines.system.IPersistableComparableLookupRow<row89Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row89Struct other = (row89Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row89Struct other) {

		other.ID = this.ID;
	            other.SIGLA = this.SIGLA;
	            other.NOMBRE = this.NOMBRE;
	            
	}

	public void copyKeysDataTo(row89Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",SIGLA="+SIGLA);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row89Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row89Struct row89 = new row89Struct();




	
	/**
	 * [tAdvancedHash_row89 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row89", false);
		start_Hash.put("tAdvancedHash_row89", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row89";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row89");
					}
				
		int tos_count_tAdvancedHash_row89 = 0;
		

			   		// connection name:row89
			   		// source node:tHashInput_19 - inputs:(after_tOracleInput_35) outputs:(row89,row89) | target node:tAdvancedHash_row89 - inputs:(row89) outputs:()
			   		// linked node: tMap_6 - inputs:(row87,row88,row89) outputs:(HAFILIADO_FINAL,HESTADO_FINAL,ENTIDAD_APORTANTE,PROCESADOS)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row89 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct> tHash_Lookup_row89 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row89Struct>getLookup(matchingModeEnum_row89);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row89", tHash_Lookup_row89);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row89 begin ] stop
 */



	
	/**
	 * [tHashInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_19", false);
		start_Hash.put("tHashInput_19", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_19";
	
	
		int tos_count_tHashInput_19 = 0;
		


int nb_line_tHashInput_19 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_19=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row82Struct> tHashFile_tHashInput_19 = mf_tHashInput_19.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_19==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row82Struct> iterator_tHashInput_19 = tHashFile_tHashInput_19.iterator();
while (iterator_tHashInput_19.hasNext()) {
    row82Struct next_tHashInput_19 = iterator_tHashInput_19.next();

	row89.ID = next_tHashInput_19.ID;
	row89.SIGLA = next_tHashInput_19.SIGLA;
	row89.NOMBRE = next_tHashInput_19.NOMBRE;

 



/**
 * [tHashInput_19 begin ] stop
 */
	
	/**
	 * [tHashInput_19 main ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 


	tos_count_tHashInput_19++;

/**
 * [tHashInput_19 main ] stop
 */
	
	/**
	 * [tHashInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row89"
						
						);
					}
					


			   
			   

					row89Struct row89_HashRow = new row89Struct();
		   	   	   
				
				row89_HashRow.ID = row89.ID;
				
				row89_HashRow.SIGLA = row89.SIGLA;
				
				row89_HashRow.NOMBRE = row89.NOMBRE;
				
			tHash_Lookup_row89.put(row89_HashRow);
			
            




 


	tos_count_tAdvancedHash_row89++;

/**
 * [tAdvancedHash_row89 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row89 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row89 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_19 end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	
    

		
			nb_line_tHashInput_19++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_19_NB_LINE", nb_line_tHashInput_19);       

 

ok_Hash.put("tHashInput_19", true);
end_Hash.put("tHashInput_19", System.currentTimeMillis());




/**
 * [tHashInput_19 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

tHash_Lookup_row89.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row89");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row89", true);
end_Hash.put("tAdvancedHash_row89", System.currentTimeMillis());




/**
 * [tAdvancedHash_row89 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_19 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class TST_ARCHIVOStruct implements routines.system.IPersistableRow<TST_ARCHIVOStruct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 400;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 400;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 400;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 400;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String TIPO_DE_DOCUMENTO;

				public String getTIPO_DE_DOCUMENTO () {
					return this.TIPO_DE_DOCUMENTO;
				}

				public Boolean TIPO_DE_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DE_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DE_DOCUMENTOLength(){
				    return 400;
				}
				public Integer TIPO_DE_DOCUMENTOPrecision(){
				    return 0;
				}
				public String TIPO_DE_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DE_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DE_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DE_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DE_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 400;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String SEXO;

				public String getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return true;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 400;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return 400;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return 400;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return 0;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return 400;
				}
				public Integer DIRECCIONPrecision(){
				    return 0;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return 400;
				}
				public Integer TELEFONOPrecision(){
				    return 0;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String CORREO_ELECTRONICO;

				public String getCORREO_ELECTRONICO () {
					return this.CORREO_ELECTRONICO;
				}

				public Boolean CORREO_ELECTRONICOIsNullable(){
				    return true;
				}
				public Boolean CORREO_ELECTRONICOIsKey(){
				    return false;
				}
				public Integer CORREO_ELECTRONICOLength(){
				    return 400;
				}
				public Integer CORREO_ELECTRONICOPrecision(){
				    return 0;
				}
				public String CORREO_ELECTRONICODefault(){
				
					return null;
				
				}
				public String CORREO_ELECTRONICOComment(){
				
				    return "";
				
				}
				public String CORREO_ELECTRONICOPattern(){
				
					return "";
				
				}
				public String CORREO_ELECTRONICOOriginalDbColumnName(){
				
					return "CORREO_ELECTRONICO";
				
				}

				
			    public String MUNICIPIO_RESIDENCIA;

				public String getMUNICIPIO_RESIDENCIA () {
					return this.MUNICIPIO_RESIDENCIA;
				}

				public Boolean MUNICIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_RESIDENCIALength(){
				    return 400;
				}
				public Integer MUNICIPIO_RESIDENCIAPrecision(){
				    return 0;
				}
				public String MUNICIPIO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String MUNICIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "MUNICIPIO_RESIDENCIA";
				
				}

				
			    public String LOCALIDAD_RESIDENCIA;

				public String getLOCALIDAD_RESIDENCIA () {
					return this.LOCALIDAD_RESIDENCIA;
				}

				public Boolean LOCALIDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LOCALIDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LOCALIDAD_RESIDENCIALength(){
				    return 400;
				}
				public Integer LOCALIDAD_RESIDENCIAPrecision(){
				    return 0;
				}
				public String LOCALIDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LOCALIDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LOCALIDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LOCALIDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "LOCALIDAD_RESIDENCIA";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return 400;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return 0;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return 400;
				}
				public Integer FACTOR_RHPrecision(){
				    return 0;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String CODIGO_ESTABLECIMIENTO;

				public String getCODIGO_ESTABLECIMIENTO () {
					return this.CODIGO_ESTABLECIMIENTO;
				}

				public Boolean CODIGO_ESTABLECIMIENTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESTABLECIMIENTOIsKey(){
				    return false;
				}
				public Integer CODIGO_ESTABLECIMIENTOLength(){
				    return 400;
				}
				public Integer CODIGO_ESTABLECIMIENTOPrecision(){
				    return 0;
				}
				public String CODIGO_ESTABLECIMIENTODefault(){
				
					return null;
				
				}
				public String CODIGO_ESTABLECIMIENTOComment(){
				
				    return "";
				
				}
				public String CODIGO_ESTABLECIMIENTOPattern(){
				
					return "";
				
				}
				public String CODIGO_ESTABLECIMIENTOOriginalDbColumnName(){
				
					return "CODIGO_ESTABLECIMIENTO";
				
				}

				
			    public String ESTABLECIMIENTO_ADSCRITO;

				public String getESTABLECIMIENTO_ADSCRITO () {
					return this.ESTABLECIMIENTO_ADSCRITO;
				}

				public Boolean ESTABLECIMIENTO_ADSCRITOIsNullable(){
				    return true;
				}
				public Boolean ESTABLECIMIENTO_ADSCRITOIsKey(){
				    return false;
				}
				public Integer ESTABLECIMIENTO_ADSCRITOLength(){
				    return 400;
				}
				public Integer ESTABLECIMIENTO_ADSCRITOPrecision(){
				    return 0;
				}
				public String ESTABLECIMIENTO_ADSCRITODefault(){
				
					return null;
				
				}
				public String ESTABLECIMIENTO_ADSCRITOComment(){
				
				    return "";
				
				}
				public String ESTABLECIMIENTO_ADSCRITOPattern(){
				
					return "";
				
				}
				public String ESTABLECIMIENTO_ADSCRITOOriginalDbColumnName(){
				
					return "ESTABLECIMIENTO_ADSCRITO";
				
				}

				
			    public String CODIGO_GRDMILITAR;

				public String getCODIGO_GRDMILITAR () {
					return this.CODIGO_GRDMILITAR;
				}

				public Boolean CODIGO_GRDMILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRDMILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_GRDMILITARLength(){
				    return 400;
				}
				public Integer CODIGO_GRDMILITARPrecision(){
				    return 0;
				}
				public String CODIGO_GRDMILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_GRDMILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_GRDMILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_GRDMILITAROriginalDbColumnName(){
				
					return "CODIGO_GRDMILITAR";
				
				}

				
			    public String SIGLA_GRDMILITAR;

				public String getSIGLA_GRDMILITAR () {
					return this.SIGLA_GRDMILITAR;
				}

				public Boolean SIGLA_GRDMILITARIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRDMILITARIsKey(){
				    return false;
				}
				public Integer SIGLA_GRDMILITARLength(){
				    return 400;
				}
				public Integer SIGLA_GRDMILITARPrecision(){
				    return 0;
				}
				public String SIGLA_GRDMILITARDefault(){
				
					return null;
				
				}
				public String SIGLA_GRDMILITARComment(){
				
				    return "";
				
				}
				public String SIGLA_GRDMILITARPattern(){
				
					return "";
				
				}
				public String SIGLA_GRDMILITAROriginalDbColumnName(){
				
					return "SIGLA_GRDMILITAR";
				
				}

				
			    public String FUERZA_MILITAR;

				public String getFUERZA_MILITAR () {
					return this.FUERZA_MILITAR;
				}

				public Boolean FUERZA_MILITARIsNullable(){
				    return true;
				}
				public Boolean FUERZA_MILITARIsKey(){
				    return false;
				}
				public Integer FUERZA_MILITARLength(){
				    return 400;
				}
				public Integer FUERZA_MILITARPrecision(){
				    return 0;
				}
				public String FUERZA_MILITARDefault(){
				
					return null;
				
				}
				public String FUERZA_MILITARComment(){
				
				    return "";
				
				}
				public String FUERZA_MILITARPattern(){
				
					return "";
				
				}
				public String FUERZA_MILITAROriginalDbColumnName(){
				
					return "FUERZA_MILITAR";
				
				}

				
			    public String CODIGO_UMILITAR;

				public String getCODIGO_UMILITAR () {
					return this.CODIGO_UMILITAR;
				}

				public Boolean CODIGO_UMILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UMILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_UMILITARLength(){
				    return 400;
				}
				public Integer CODIGO_UMILITARPrecision(){
				    return 0;
				}
				public String CODIGO_UMILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_UMILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_UMILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_UMILITAROriginalDbColumnName(){
				
					return "CODIGO_UMILITAR";
				
				}

				
			    public String UNIDAD_MILITAR;

				public String getUNIDAD_MILITAR () {
					return this.UNIDAD_MILITAR;
				}

				public Boolean UNIDAD_MILITARIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MILITARIsKey(){
				    return false;
				}
				public Integer UNIDAD_MILITARLength(){
				    return 400;
				}
				public Integer UNIDAD_MILITARPrecision(){
				    return 0;
				}
				public String UNIDAD_MILITARDefault(){
				
					return null;
				
				}
				public String UNIDAD_MILITARComment(){
				
				    return "";
				
				}
				public String UNIDAD_MILITARPattern(){
				
					return "";
				
				}
				public String UNIDAD_MILITAROriginalDbColumnName(){
				
					return "UNIDAD_MILITAR";
				
				}

				
			    public String ESTADO_AFILIACION;

				public String getESTADO_AFILIACION () {
					return this.ESTADO_AFILIACION;
				}

				public Boolean ESTADO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean ESTADO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer ESTADO_AFILIACIONLength(){
				    return 400;
				}
				public Integer ESTADO_AFILIACIONPrecision(){
				    return 0;
				}
				public String ESTADO_AFILIACIONDefault(){
				
					return null;
				
				}
				public String ESTADO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String ESTADO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONOriginalDbColumnName(){
				
					return "ESTADO_AFILIACION";
				
				}

				
			    public String FECHA_FIN_AFILIACION;

				public String getFECHA_FIN_AFILIACION () {
					return this.FECHA_FIN_AFILIACION;
				}

				public Boolean FECHA_FIN_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_FIN_AFILIACIONIsKey(){
				    return false;
				}
				public Integer FECHA_FIN_AFILIACIONLength(){
				    return 400;
				}
				public Integer FECHA_FIN_AFILIACIONPrecision(){
				    return 0;
				}
				public String FECHA_FIN_AFILIACIONDefault(){
				
					return null;
				
				}
				public String FECHA_FIN_AFILIACIONComment(){
				
				    return "";
				
				}
				public String FECHA_FIN_AFILIACIONPattern(){
				
					return "";
				
				}
				public String FECHA_FIN_AFILIACIONOriginalDbColumnName(){
				
					return "FECHA_FIN_AFILIACION";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return 400;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return 0;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String MUNICIPIO_EXP_DOCUMENTO;

				public String getMUNICIPIO_EXP_DOCUMENTO () {
					return this.MUNICIPIO_EXP_DOCUMENTO;
				}

				public Boolean MUNICIPIO_EXP_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean MUNICIPIO_EXP_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOLength(){
				    return 400;
				}
				public Integer MUNICIPIO_EXP_DOCUMENTOPrecision(){
				    return 0;
				}
				public String MUNICIPIO_EXP_DOCUMENTODefault(){
				
					return null;
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String MUNICIPIO_EXP_DOCUMENTOOriginalDbColumnName(){
				
					return "MUNICIPIO_EXP_DOCUMENTO";
				
				}

				
			    public Integer CARGADO_SIATH;

				public Integer getCARGADO_SIATH () {
					return this.CARGADO_SIATH;
				}

				public Boolean CARGADO_SIATHIsNullable(){
				    return true;
				}
				public Boolean CARGADO_SIATHIsKey(){
				    return false;
				}
				public Integer CARGADO_SIATHLength(){
				    return null;
				}
				public Integer CARGADO_SIATHPrecision(){
				    return null;
				}
				public String CARGADO_SIATHDefault(){
				
					return "";
				
				}
				public String CARGADO_SIATHComment(){
				
				    return "";
				
				}
				public String CARGADO_SIATHPattern(){
				
					return "";
				
				}
				public String CARGADO_SIATHOriginalDbColumnName(){
				
					return "CARGADO_SIATH";
				
				}

				
			    public Integer CATEGORIA;

				public Integer getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return "";
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String SIGLA_DOCUMENTO;

				public String getSIGLA_DOCUMENTO () {
					return this.SIGLA_DOCUMENTO;
				}

				public Boolean SIGLA_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer SIGLA_DOCUMENTOLength(){
				    return null;
				}
				public Integer SIGLA_DOCUMENTOPrecision(){
				    return null;
				}
				public String SIGLA_DOCUMENTODefault(){
				
					return null;
				
				}
				public String SIGLA_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String SIGLA_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String SIGLA_DOCUMENTOOriginalDbColumnName(){
				
					return "SIGLA_DOCUMENTO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DE_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.MUNICIPIO_RESIDENCIA = readString(dis);
					
					this.LOCALIDAD_RESIDENCIA = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.CODIGO_ESTABLECIMIENTO = readString(dis);
					
					this.ESTABLECIMIENTO_ADSCRITO = readString(dis);
					
					this.CODIGO_GRDMILITAR = readString(dis);
					
					this.SIGLA_GRDMILITAR = readString(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.CODIGO_UMILITAR = readString(dis);
					
					this.UNIDAD_MILITAR = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.FECHA_FIN_AFILIACION = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.MUNICIPIO_EXP_DOCUMENTO = readString(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DE_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SEXO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.CORREO_ELECTRONICO = readString(dis);
					
					this.MUNICIPIO_RESIDENCIA = readString(dis);
					
					this.LOCALIDAD_RESIDENCIA = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.CODIGO_ESTABLECIMIENTO = readString(dis);
					
					this.ESTABLECIMIENTO_ADSCRITO = readString(dis);
					
					this.CODIGO_GRDMILITAR = readString(dis);
					
					this.SIGLA_GRDMILITAR = readString(dis);
					
					this.FUERZA_MILITAR = readString(dis);
					
					this.CODIGO_UMILITAR = readString(dis);
					
					this.UNIDAD_MILITAR = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.FECHA_FIN_AFILIACION = readString(dis);
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.MUNICIPIO_EXP_DOCUMENTO = readString(dis);
					
						this.CARGADO_SIATH = readInteger(dis);
					
						this.CATEGORIA = readInteger(dis);
					
					this.SIGLA_DOCUMENTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DE_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.MUNICIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LOCALIDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.CODIGO_ESTABLECIMIENTO,dos);
					
					// String
				
						writeString(this.ESTABLECIMIENTO_ADSCRITO,dos);
					
					// String
				
						writeString(this.CODIGO_GRDMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_GRDMILITAR,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.CODIGO_UMILITAR,dos);
					
					// String
				
						writeString(this.UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_FIN_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.MUNICIPIO_EXP_DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DE_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SEXO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.CORREO_ELECTRONICO,dos);
					
					// String
				
						writeString(this.MUNICIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LOCALIDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.CODIGO_ESTABLECIMIENTO,dos);
					
					// String
				
						writeString(this.ESTABLECIMIENTO_ADSCRITO,dos);
					
					// String
				
						writeString(this.CODIGO_GRDMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_GRDMILITAR,dos);
					
					// String
				
						writeString(this.FUERZA_MILITAR,dos);
					
					// String
				
						writeString(this.CODIGO_UMILITAR,dos);
					
					// String
				
						writeString(this.UNIDAD_MILITAR,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_FIN_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.MUNICIPIO_EXP_DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.CARGADO_SIATH,dos);
					
					// Integer
				
						writeInteger(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.SIGLA_DOCUMENTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TIPO_DE_DOCUMENTO="+TIPO_DE_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",SEXO="+SEXO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",CORREO_ELECTRONICO="+CORREO_ELECTRONICO);
		sb.append(",MUNICIPIO_RESIDENCIA="+MUNICIPIO_RESIDENCIA);
		sb.append(",LOCALIDAD_RESIDENCIA="+LOCALIDAD_RESIDENCIA);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",CODIGO_ESTABLECIMIENTO="+CODIGO_ESTABLECIMIENTO);
		sb.append(",ESTABLECIMIENTO_ADSCRITO="+ESTABLECIMIENTO_ADSCRITO);
		sb.append(",CODIGO_GRDMILITAR="+CODIGO_GRDMILITAR);
		sb.append(",SIGLA_GRDMILITAR="+SIGLA_GRDMILITAR);
		sb.append(",FUERZA_MILITAR="+FUERZA_MILITAR);
		sb.append(",CODIGO_UMILITAR="+CODIGO_UMILITAR);
		sb.append(",UNIDAD_MILITAR="+UNIDAD_MILITAR);
		sb.append(",ESTADO_AFILIACION="+ESTADO_AFILIACION);
		sb.append(",FECHA_FIN_AFILIACION="+FECHA_FIN_AFILIACION);
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",MUNICIPIO_EXP_DOCUMENTO="+MUNICIPIO_EXP_DOCUMENTO);
		sb.append(",CARGADO_SIATH="+String.valueOf(CARGADO_SIATH));
		sb.append(",CATEGORIA="+String.valueOf(CATEGORIA));
		sb.append(",SIGLA_DOCUMENTO="+SIGLA_DOCUMENTO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(TST_ARCHIVOStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row126Struct implements routines.system.IPersistableRow<row126Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return null;
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String CODIGO_MILITAR;

				public String getCODIGO_MILITAR () {
					return this.CODIGO_MILITAR;
				}

				public Boolean CODIGO_MILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_MILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_MILITARLength(){
				    return null;
				}
				public Integer CODIGO_MILITARPrecision(){
				    return null;
				}
				public String CODIGO_MILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_MILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_MILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_MILITAROriginalDbColumnName(){
				
					return "CODIGO_MILITAR";
				
				}

				
			    public String APELLIDOS;

				public String getAPELLIDOS () {
					return this.APELLIDOS;
				}

				public Boolean APELLIDOSIsNullable(){
				    return true;
				}
				public Boolean APELLIDOSIsKey(){
				    return false;
				}
				public Integer APELLIDOSLength(){
				    return null;
				}
				public Integer APELLIDOSPrecision(){
				    return null;
				}
				public String APELLIDOSDefault(){
				
					return null;
				
				}
				public String APELLIDOSComment(){
				
				    return "";
				
				}
				public String APELLIDOSPattern(){
				
					return "";
				
				}
				public String APELLIDOSOriginalDbColumnName(){
				
					return "APELLIDOS";
				
				}

				
			    public String NOMBRES;

				public String getNOMBRES () {
					return this.NOMBRES;
				}

				public Boolean NOMBRESIsNullable(){
				    return true;
				}
				public Boolean NOMBRESIsKey(){
				    return false;
				}
				public Integer NOMBRESLength(){
				    return null;
				}
				public Integer NOMBRESPrecision(){
				    return null;
				}
				public String NOMBRESDefault(){
				
					return null;
				
				}
				public String NOMBRESComment(){
				
				    return "";
				
				}
				public String NOMBRESPattern(){
				
					return "";
				
				}
				public String NOMBRESOriginalDbColumnName(){
				
					return "NOMBRES";
				
				}

				
			    public String IDENTIFICACION;

				public String getIDENTIFICACION () {
					return this.IDENTIFICACION;
				}

				public Boolean IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer IDENTIFICACIONLength(){
				    return null;
				}
				public Integer IDENTIFICACIONPrecision(){
				    return null;
				}
				public String IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String IDENTIFICACIONOriginalDbColumnName(){
				
					return "IDENTIFICACION";
				
				}

				
			    public String TIPO_IDENTIFICACION;

				public String getTIPO_IDENTIFICACION () {
					return this.TIPO_IDENTIFICACION;
				}

				public Boolean TIPO_IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer TIPO_IDENTIFICACIONLength(){
				    return null;
				}
				public Integer TIPO_IDENTIFICACIONPrecision(){
				    return null;
				}
				public String TIPO_IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String TIPO_IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String TIPO_IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String TIPO_IDENTIFICACIONOriginalDbColumnName(){
				
					return "TIPO_IDENTIFICACION";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return true;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return null;
				}
				public Integer GRADOPrecision(){
				    return null;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String ARMA;

				public String getARMA () {
					return this.ARMA;
				}

				public Boolean ARMAIsNullable(){
				    return true;
				}
				public Boolean ARMAIsKey(){
				    return false;
				}
				public Integer ARMALength(){
				    return null;
				}
				public Integer ARMAPrecision(){
				    return null;
				}
				public String ARMADefault(){
				
					return null;
				
				}
				public String ARMAComment(){
				
				    return "";
				
				}
				public String ARMAPattern(){
				
					return "";
				
				}
				public String ARMAOriginalDbColumnName(){
				
					return "ARMA";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String LUGAR_NACIMIENTO;

				public String getLUGAR_NACIMIENTO () {
					return this.LUGAR_NACIMIENTO;
				}

				public Boolean LUGAR_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean LUGAR_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer LUGAR_NACIMIENTOLength(){
				    return null;
				}
				public Integer LUGAR_NACIMIENTOPrecision(){
				    return null;
				}
				public String LUGAR_NACIMIENTODefault(){
				
					return null;
				
				}
				public String LUGAR_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String LUGAR_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String LUGAR_NACIMIENTOOriginalDbColumnName(){
				
					return "LUGAR_NACIMIENTO";
				
				}

				
			    public String EXPEDICION_DOCUMENTO;

				public String getEXPEDICION_DOCUMENTO () {
					return this.EXPEDICION_DOCUMENTO;
				}

				public Boolean EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "EXPEDICION_DOCUMENTO";
				
				}

				
			    public String EMAIL_PERSONAL;

				public String getEMAIL_PERSONAL () {
					return this.EMAIL_PERSONAL;
				}

				public Boolean EMAIL_PERSONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_PERSONALIsKey(){
				    return false;
				}
				public Integer EMAIL_PERSONALLength(){
				    return null;
				}
				public Integer EMAIL_PERSONALPrecision(){
				    return null;
				}
				public String EMAIL_PERSONALDefault(){
				
					return null;
				
				}
				public String EMAIL_PERSONALComment(){
				
				    return "";
				
				}
				public String EMAIL_PERSONALPattern(){
				
					return "";
				
				}
				public String EMAIL_PERSONALOriginalDbColumnName(){
				
					return "EMAIL_PERSONAL";
				
				}

				
			    public String EMAIL_INSTITUCIONAL;

				public String getEMAIL_INSTITUCIONAL () {
					return this.EMAIL_INSTITUCIONAL;
				}

				public Boolean EMAIL_INSTITUCIONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_INSTITUCIONALIsKey(){
				    return false;
				}
				public Integer EMAIL_INSTITUCIONALLength(){
				    return null;
				}
				public Integer EMAIL_INSTITUCIONALPrecision(){
				    return null;
				}
				public String EMAIL_INSTITUCIONALDefault(){
				
					return null;
				
				}
				public String EMAIL_INSTITUCIONALComment(){
				
				    return "";
				
				}
				public String EMAIL_INSTITUCIONALPattern(){
				
					return "";
				
				}
				public String EMAIL_INSTITUCIONALOriginalDbColumnName(){
				
					return "EMAIL_INSTITUCIONAL";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String CIUDAD_RESIDENCIA;

				public String getCIUDAD_RESIDENCIA () {
					return this.CIUDAD_RESIDENCIA;
				}

				public Boolean CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "CIUDAD_RESIDENCIA";
				
				}

				
			    public String LUGAR_CIUDAD_RESIDENCIA;

				public String getLUGAR_CIUDAD_RESIDENCIA () {
					return this.LUGAR_CIUDAD_RESIDENCIA;
				}

				public Boolean LUGAR_CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_CIUDAD_RESIDENCIA";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return null;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return null;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				
			    public String UNIDAD_LABORAL;

				public String getUNIDAD_LABORAL () {
					return this.UNIDAD_LABORAL;
				}

				public Boolean UNIDAD_LABORALIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_LABORALIsKey(){
				    return false;
				}
				public Integer UNIDAD_LABORALLength(){
				    return null;
				}
				public Integer UNIDAD_LABORALPrecision(){
				    return null;
				}
				public String UNIDAD_LABORALDefault(){
				
					return null;
				
				}
				public String UNIDAD_LABORALComment(){
				
				    return "";
				
				}
				public String UNIDAD_LABORALPattern(){
				
					return "";
				
				}
				public String UNIDAD_LABORALOriginalDbColumnName(){
				
					return "UNIDAD_LABORAL";
				
				}

				
			    public String UBICACION_UNIDAD;

				public String getUBICACION_UNIDAD () {
					return this.UBICACION_UNIDAD;
				}

				public Boolean UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String UBICACION_UNIDADOriginalDbColumnName(){
				
					return "UBICACION_UNIDAD";
				
				}

				
			    public String LUGAR_UBICACION_UNIDAD;

				public String getLUGAR_UBICACION_UNIDAD () {
					return this.LUGAR_UBICACION_UNIDAD;
				}

				public Boolean LUGAR_UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean LUGAR_UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer LUGAR_UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer LUGAR_UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String LUGAR_UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String LUGAR_UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String LUGAR_UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String LUGAR_UBICACION_UNIDADOriginalDbColumnName(){
				
					return "LUGAR_UBICACION_UNIDAD";
				
				}

				
			    public String ESTADO_CIVIL_SIGLA;

				public String getESTADO_CIVIL_SIGLA () {
					return this.ESTADO_CIVIL_SIGLA;
				}

				public Boolean ESTADO_CIVIL_SIGLAIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVIL_SIGLAIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVIL_SIGLALength(){
				    return null;
				}
				public Integer ESTADO_CIVIL_SIGLAPrecision(){
				    return null;
				}
				public String ESTADO_CIVIL_SIGLADefault(){
				
					return null;
				
				}
				public String ESTADO_CIVIL_SIGLAComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVIL_SIGLAPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVIL_SIGLAOriginalDbColumnName(){
				
					return "ESTADO_CIVIL_SIGLA";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return null;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return null;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String FUNDAMENTO_LEGAL;

				public String getFUNDAMENTO_LEGAL () {
					return this.FUNDAMENTO_LEGAL;
				}

				public Boolean FUNDAMENTO_LEGALIsNullable(){
				    return true;
				}
				public Boolean FUNDAMENTO_LEGALIsKey(){
				    return false;
				}
				public Integer FUNDAMENTO_LEGALLength(){
				    return null;
				}
				public Integer FUNDAMENTO_LEGALPrecision(){
				    return null;
				}
				public String FUNDAMENTO_LEGALDefault(){
				
					return null;
				
				}
				public String FUNDAMENTO_LEGALComment(){
				
				    return "";
				
				}
				public String FUNDAMENTO_LEGALPattern(){
				
					return "";
				
				}
				public String FUNDAMENTO_LEGALOriginalDbColumnName(){
				
					return "FUNDAMENTO_LEGAL";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String GENERO_DESCRI;

				public String getGENERO_DESCRI () {
					return this.GENERO_DESCRI;
				}

				public Boolean GENERO_DESCRIIsNullable(){
				    return true;
				}
				public Boolean GENERO_DESCRIIsKey(){
				    return false;
				}
				public Integer GENERO_DESCRILength(){
				    return null;
				}
				public Integer GENERO_DESCRIPrecision(){
				    return null;
				}
				public String GENERO_DESCRIDefault(){
				
					return null;
				
				}
				public String GENERO_DESCRIComment(){
				
				    return "";
				
				}
				public String GENERO_DESCRIPattern(){
				
					return "";
				
				}
				public String GENERO_DESCRIOriginalDbColumnName(){
				
					return "GENERO_DESCRI";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return null;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return null;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String ACTIVO;

				public String getACTIVO () {
					return this.ACTIVO;
				}

				public Boolean ACTIVOIsNullable(){
				    return true;
				}
				public Boolean ACTIVOIsKey(){
				    return false;
				}
				public Integer ACTIVOLength(){
				    return null;
				}
				public Integer ACTIVOPrecision(){
				    return null;
				}
				public String ACTIVODefault(){
				
					return null;
				
				}
				public String ACTIVOComment(){
				
				    return "";
				
				}
				public String ACTIVOPattern(){
				
					return "";
				
				}
				public String ACTIVOOriginalDbColumnName(){
				
					return "ACTIVO";
				
				}

				
			    public String UNDE_SIGLA;

				public String getUNDE_SIGLA () {
					return this.UNDE_SIGLA;
				}

				public Boolean UNDE_SIGLAIsNullable(){
				    return true;
				}
				public Boolean UNDE_SIGLAIsKey(){
				    return false;
				}
				public Integer UNDE_SIGLALength(){
				    return null;
				}
				public Integer UNDE_SIGLAPrecision(){
				    return null;
				}
				public String UNDE_SIGLADefault(){
				
					return null;
				
				}
				public String UNDE_SIGLAComment(){
				
				    return "";
				
				}
				public String UNDE_SIGLAPattern(){
				
					return "";
				
				}
				public String UNDE_SIGLAOriginalDbColumnName(){
				
					return "UNDE_SIGLA";
				
				}

				
			    public String NOMBRE_CIUDAD;

				public String getNOMBRE_CIUDAD () {
					return this.NOMBRE_CIUDAD;
				}

				public Boolean NOMBRE_CIUDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_CIUDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_CIUDADLength(){
				    return null;
				}
				public Integer NOMBRE_CIUDADPrecision(){
				    return null;
				}
				public String NOMBRE_CIUDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_CIUDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_CIUDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_CIUDADOriginalDbColumnName(){
				
					return "NOMBRE_CIUDAD";
				
				}

				
			    public String NOMBRE_BARRIO;

				public String getNOMBRE_BARRIO () {
					return this.NOMBRE_BARRIO;
				}

				public Boolean NOMBRE_BARRIOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_BARRIOIsKey(){
				    return false;
				}
				public Integer NOMBRE_BARRIOLength(){
				    return null;
				}
				public Integer NOMBRE_BARRIOPrecision(){
				    return null;
				}
				public String NOMBRE_BARRIODefault(){
				
					return null;
				
				}
				public String NOMBRE_BARRIOComment(){
				
				    return "";
				
				}
				public String NOMBRE_BARRIOPattern(){
				
					return "";
				
				}
				public String NOMBRE_BARRIOOriginalDbColumnName(){
				
					return "NOMBRE_BARRIO";
				
				}

				
			    public String FECHA_RETIRO;

				public String getFECHA_RETIRO () {
					return this.FECHA_RETIRO;
				}

				public Boolean FECHA_RETIROIsNullable(){
				    return true;
				}
				public Boolean FECHA_RETIROIsKey(){
				    return false;
				}
				public Integer FECHA_RETIROLength(){
				    return null;
				}
				public Integer FECHA_RETIROPrecision(){
				    return null;
				}
				public String FECHA_RETIRODefault(){
				
					return null;
				
				}
				public String FECHA_RETIROComment(){
				
				    return "";
				
				}
				public String FECHA_RETIROPattern(){
				
					return "";
				
				}
				public String FECHA_RETIROOriginalDbColumnName(){
				
					return "FECHA_RETIRO";
				
				}

				
			    public String UNDE_FUERZA;

				public String getUNDE_FUERZA () {
					return this.UNDE_FUERZA;
				}

				public Boolean UNDE_FUERZAIsNullable(){
				    return true;
				}
				public Boolean UNDE_FUERZAIsKey(){
				    return false;
				}
				public Integer UNDE_FUERZALength(){
				    return null;
				}
				public Integer UNDE_FUERZAPrecision(){
				    return null;
				}
				public String UNDE_FUERZADefault(){
				
					return null;
				
				}
				public String UNDE_FUERZAComment(){
				
				    return "";
				
				}
				public String UNDE_FUERZAPattern(){
				
					return "";
				
				}
				public String UNDE_FUERZAOriginalDbColumnName(){
				
					return "UNDE_FUERZA";
				
				}

				
			    public String CARG_CARGO;

				public String getCARG_CARGO () {
					return this.CARG_CARGO;
				}

				public Boolean CARG_CARGOIsNullable(){
				    return true;
				}
				public Boolean CARG_CARGOIsKey(){
				    return false;
				}
				public Integer CARG_CARGOLength(){
				    return null;
				}
				public Integer CARG_CARGOPrecision(){
				    return null;
				}
				public String CARG_CARGODefault(){
				
					return null;
				
				}
				public String CARG_CARGOComment(){
				
				    return "";
				
				}
				public String CARG_CARGOPattern(){
				
					return "";
				
				}
				public String CARG_CARGOOriginalDbColumnName(){
				
					return "CARG_CARGO";
				
				}

				
			    public String DESC_CARGO;

				public String getDESC_CARGO () {
					return this.DESC_CARGO;
				}

				public Boolean DESC_CARGOIsNullable(){
				    return true;
				}
				public Boolean DESC_CARGOIsKey(){
				    return false;
				}
				public Integer DESC_CARGOLength(){
				    return null;
				}
				public Integer DESC_CARGOPrecision(){
				    return null;
				}
				public String DESC_CARGODefault(){
				
					return null;
				
				}
				public String DESC_CARGOComment(){
				
				    return "";
				
				}
				public String DESC_CARGOPattern(){
				
					return "";
				
				}
				public String DESC_CARGOOriginalDbColumnName(){
				
					return "DESC_CARGO";
				
				}

				
			    public String CARRE_ID_CARRERA;

				public String getCARRE_ID_CARRERA () {
					return this.CARRE_ID_CARRERA;
				}

				public Boolean CARRE_ID_CARRERAIsNullable(){
				    return true;
				}
				public Boolean CARRE_ID_CARRERAIsKey(){
				    return false;
				}
				public Integer CARRE_ID_CARRERALength(){
				    return null;
				}
				public Integer CARRE_ID_CARRERAPrecision(){
				    return null;
				}
				public String CARRE_ID_CARRERADefault(){
				
					return null;
				
				}
				public String CARRE_ID_CARRERAComment(){
				
				    return "";
				
				}
				public String CARRE_ID_CARRERAPattern(){
				
					return "";
				
				}
				public String CARRE_ID_CARRERAOriginalDbColumnName(){
				
					return "CARRE_ID_CARRERA";
				
				}

				
			    public String DESC_CARRERA;

				public String getDESC_CARRERA () {
					return this.DESC_CARRERA;
				}

				public Boolean DESC_CARRERAIsNullable(){
				    return true;
				}
				public Boolean DESC_CARRERAIsKey(){
				    return false;
				}
				public Integer DESC_CARRERALength(){
				    return null;
				}
				public Integer DESC_CARRERAPrecision(){
				    return null;
				}
				public String DESC_CARRERADefault(){
				
					return null;
				
				}
				public String DESC_CARRERAComment(){
				
				    return "";
				
				}
				public String DESC_CARRERAPattern(){
				
					return "";
				
				}
				public String DESC_CARRERAOriginalDbColumnName(){
				
					return "DESC_CARRERA";
				
				}

				
			    public String TIEMPO;

				public String getTIEMPO () {
					return this.TIEMPO;
				}

				public Boolean TIEMPOIsNullable(){
				    return true;
				}
				public Boolean TIEMPOIsKey(){
				    return false;
				}
				public Integer TIEMPOLength(){
				    return null;
				}
				public Integer TIEMPOPrecision(){
				    return null;
				}
				public String TIEMPODefault(){
				
					return null;
				
				}
				public String TIEMPOComment(){
				
				    return "";
				
				}
				public String TIEMPOPattern(){
				
					return "";
				
				}
				public String TIEMPOOriginalDbColumnName(){
				
					return "TIEMPO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESC_CATEGORIA;

				public String getDESC_CATEGORIA () {
					return this.DESC_CATEGORIA;
				}

				public Boolean DESC_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean DESC_CATEGORIAIsKey(){
				    return false;
				}
				public Integer DESC_CATEGORIALength(){
				    return null;
				}
				public Integer DESC_CATEGORIAPrecision(){
				    return null;
				}
				public String DESC_CATEGORIADefault(){
				
					return null;
				
				}
				public String DESC_CATEGORIAComment(){
				
				    return "";
				
				}
				public String DESC_CATEGORIAPattern(){
				
					return "";
				
				}
				public String DESC_CATEGORIAOriginalDbColumnName(){
				
					return "DESC_CATEGORIA";
				
				}

				
			    public String REGIMEN;

				public String getREGIMEN () {
					return this.REGIMEN;
				}

				public Boolean REGIMENIsNullable(){
				    return true;
				}
				public Boolean REGIMENIsKey(){
				    return false;
				}
				public Integer REGIMENLength(){
				    return null;
				}
				public Integer REGIMENPrecision(){
				    return null;
				}
				public String REGIMENDefault(){
				
					return null;
				
				}
				public String REGIMENComment(){
				
				    return "";
				
				}
				public String REGIMENPattern(){
				
					return "";
				
				}
				public String REGIMENOriginalDbColumnName(){
				
					return "REGIMEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FUERZA="+FUERZA);
		sb.append(",CODIGO_MILITAR="+CODIGO_MILITAR);
		sb.append(",APELLIDOS="+APELLIDOS);
		sb.append(",NOMBRES="+NOMBRES);
		sb.append(",IDENTIFICACION="+IDENTIFICACION);
		sb.append(",TIPO_IDENTIFICACION="+TIPO_IDENTIFICACION);
		sb.append(",GRADO="+GRADO);
		sb.append(",ARMA="+ARMA);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",LUGAR_NACIMIENTO="+LUGAR_NACIMIENTO);
		sb.append(",EXPEDICION_DOCUMENTO="+EXPEDICION_DOCUMENTO);
		sb.append(",EMAIL_PERSONAL="+EMAIL_PERSONAL);
		sb.append(",EMAIL_INSTITUCIONAL="+EMAIL_INSTITUCIONAL);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",CIUDAD_RESIDENCIA="+CIUDAD_RESIDENCIA);
		sb.append(",LUGAR_CIUDAD_RESIDENCIA="+LUGAR_CIUDAD_RESIDENCIA);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
		sb.append(",UNIDAD_LABORAL="+UNIDAD_LABORAL);
		sb.append(",UBICACION_UNIDAD="+UBICACION_UNIDAD);
		sb.append(",LUGAR_UBICACION_UNIDAD="+LUGAR_UBICACION_UNIDAD);
		sb.append(",ESTADO_CIVIL_SIGLA="+ESTADO_CIVIL_SIGLA);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",FUNDAMENTO_LEGAL="+FUNDAMENTO_LEGAL);
		sb.append(",GENERO="+GENERO);
		sb.append(",GENERO_DESCRI="+GENERO_DESCRI);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",ACTIVO="+ACTIVO);
		sb.append(",UNDE_SIGLA="+UNDE_SIGLA);
		sb.append(",NOMBRE_CIUDAD="+NOMBRE_CIUDAD);
		sb.append(",NOMBRE_BARRIO="+NOMBRE_BARRIO);
		sb.append(",FECHA_RETIRO="+FECHA_RETIRO);
		sb.append(",UNDE_FUERZA="+UNDE_FUERZA);
		sb.append(",CARG_CARGO="+CARG_CARGO);
		sb.append(",DESC_CARGO="+DESC_CARGO);
		sb.append(",CARRE_ID_CARRERA="+CARRE_ID_CARRERA);
		sb.append(",DESC_CARRERA="+DESC_CARRERA);
		sb.append(",TIEMPO="+TIEMPO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",DESC_CATEGORIA="+DESC_CATEGORIA);
		sb.append(",REGIMEN="+REGIMEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row126Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row123Struct implements routines.system.IPersistableRow<row123Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return null;
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String CODIGO_MILITAR;

				public String getCODIGO_MILITAR () {
					return this.CODIGO_MILITAR;
				}

				public Boolean CODIGO_MILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_MILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_MILITARLength(){
				    return null;
				}
				public Integer CODIGO_MILITARPrecision(){
				    return null;
				}
				public String CODIGO_MILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_MILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_MILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_MILITAROriginalDbColumnName(){
				
					return "CODIGO_MILITAR";
				
				}

				
			    public String APELLIDOS;

				public String getAPELLIDOS () {
					return this.APELLIDOS;
				}

				public Boolean APELLIDOSIsNullable(){
				    return true;
				}
				public Boolean APELLIDOSIsKey(){
				    return false;
				}
				public Integer APELLIDOSLength(){
				    return null;
				}
				public Integer APELLIDOSPrecision(){
				    return null;
				}
				public String APELLIDOSDefault(){
				
					return null;
				
				}
				public String APELLIDOSComment(){
				
				    return "";
				
				}
				public String APELLIDOSPattern(){
				
					return "";
				
				}
				public String APELLIDOSOriginalDbColumnName(){
				
					return "APELLIDOS";
				
				}

				
			    public String NOMBRES;

				public String getNOMBRES () {
					return this.NOMBRES;
				}

				public Boolean NOMBRESIsNullable(){
				    return true;
				}
				public Boolean NOMBRESIsKey(){
				    return false;
				}
				public Integer NOMBRESLength(){
				    return null;
				}
				public Integer NOMBRESPrecision(){
				    return null;
				}
				public String NOMBRESDefault(){
				
					return null;
				
				}
				public String NOMBRESComment(){
				
				    return "";
				
				}
				public String NOMBRESPattern(){
				
					return "";
				
				}
				public String NOMBRESOriginalDbColumnName(){
				
					return "NOMBRES";
				
				}

				
			    public String IDENTIFICACION;

				public String getIDENTIFICACION () {
					return this.IDENTIFICACION;
				}

				public Boolean IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer IDENTIFICACIONLength(){
				    return null;
				}
				public Integer IDENTIFICACIONPrecision(){
				    return null;
				}
				public String IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String IDENTIFICACIONOriginalDbColumnName(){
				
					return "IDENTIFICACION";
				
				}

				
			    public String TIPO_IDENTIFICACION;

				public String getTIPO_IDENTIFICACION () {
					return this.TIPO_IDENTIFICACION;
				}

				public Boolean TIPO_IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer TIPO_IDENTIFICACIONLength(){
				    return null;
				}
				public Integer TIPO_IDENTIFICACIONPrecision(){
				    return null;
				}
				public String TIPO_IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String TIPO_IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String TIPO_IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String TIPO_IDENTIFICACIONOriginalDbColumnName(){
				
					return "TIPO_IDENTIFICACION";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return true;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return null;
				}
				public Integer GRADOPrecision(){
				    return null;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String ARMA;

				public String getARMA () {
					return this.ARMA;
				}

				public Boolean ARMAIsNullable(){
				    return true;
				}
				public Boolean ARMAIsKey(){
				    return false;
				}
				public Integer ARMALength(){
				    return null;
				}
				public Integer ARMAPrecision(){
				    return null;
				}
				public String ARMADefault(){
				
					return null;
				
				}
				public String ARMAComment(){
				
				    return "";
				
				}
				public String ARMAPattern(){
				
					return "";
				
				}
				public String ARMAOriginalDbColumnName(){
				
					return "ARMA";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String LUGAR_NACIMIENTO;

				public String getLUGAR_NACIMIENTO () {
					return this.LUGAR_NACIMIENTO;
				}

				public Boolean LUGAR_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean LUGAR_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer LUGAR_NACIMIENTOLength(){
				    return null;
				}
				public Integer LUGAR_NACIMIENTOPrecision(){
				    return null;
				}
				public String LUGAR_NACIMIENTODefault(){
				
					return null;
				
				}
				public String LUGAR_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String LUGAR_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String LUGAR_NACIMIENTOOriginalDbColumnName(){
				
					return "LUGAR_NACIMIENTO";
				
				}

				
			    public String EXPEDICION_DOCUMENTO;

				public String getEXPEDICION_DOCUMENTO () {
					return this.EXPEDICION_DOCUMENTO;
				}

				public Boolean EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "EXPEDICION_DOCUMENTO";
				
				}

				
			    public String EMAIL_PERSONAL;

				public String getEMAIL_PERSONAL () {
					return this.EMAIL_PERSONAL;
				}

				public Boolean EMAIL_PERSONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_PERSONALIsKey(){
				    return false;
				}
				public Integer EMAIL_PERSONALLength(){
				    return null;
				}
				public Integer EMAIL_PERSONALPrecision(){
				    return null;
				}
				public String EMAIL_PERSONALDefault(){
				
					return null;
				
				}
				public String EMAIL_PERSONALComment(){
				
				    return "";
				
				}
				public String EMAIL_PERSONALPattern(){
				
					return "";
				
				}
				public String EMAIL_PERSONALOriginalDbColumnName(){
				
					return "EMAIL_PERSONAL";
				
				}

				
			    public String EMAIL_INSTITUCIONAL;

				public String getEMAIL_INSTITUCIONAL () {
					return this.EMAIL_INSTITUCIONAL;
				}

				public Boolean EMAIL_INSTITUCIONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_INSTITUCIONALIsKey(){
				    return false;
				}
				public Integer EMAIL_INSTITUCIONALLength(){
				    return null;
				}
				public Integer EMAIL_INSTITUCIONALPrecision(){
				    return null;
				}
				public String EMAIL_INSTITUCIONALDefault(){
				
					return null;
				
				}
				public String EMAIL_INSTITUCIONALComment(){
				
				    return "";
				
				}
				public String EMAIL_INSTITUCIONALPattern(){
				
					return "";
				
				}
				public String EMAIL_INSTITUCIONALOriginalDbColumnName(){
				
					return "EMAIL_INSTITUCIONAL";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String CIUDAD_RESIDENCIA;

				public String getCIUDAD_RESIDENCIA () {
					return this.CIUDAD_RESIDENCIA;
				}

				public Boolean CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "CIUDAD_RESIDENCIA";
				
				}

				
			    public String LUGAR_CIUDAD_RESIDENCIA;

				public String getLUGAR_CIUDAD_RESIDENCIA () {
					return this.LUGAR_CIUDAD_RESIDENCIA;
				}

				public Boolean LUGAR_CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_CIUDAD_RESIDENCIA";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return null;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return null;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				
			    public String UNIDAD_LABORAL;

				public String getUNIDAD_LABORAL () {
					return this.UNIDAD_LABORAL;
				}

				public Boolean UNIDAD_LABORALIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_LABORALIsKey(){
				    return false;
				}
				public Integer UNIDAD_LABORALLength(){
				    return null;
				}
				public Integer UNIDAD_LABORALPrecision(){
				    return null;
				}
				public String UNIDAD_LABORALDefault(){
				
					return null;
				
				}
				public String UNIDAD_LABORALComment(){
				
				    return "";
				
				}
				public String UNIDAD_LABORALPattern(){
				
					return "";
				
				}
				public String UNIDAD_LABORALOriginalDbColumnName(){
				
					return "UNIDAD_LABORAL";
				
				}

				
			    public String UBICACION_UNIDAD;

				public String getUBICACION_UNIDAD () {
					return this.UBICACION_UNIDAD;
				}

				public Boolean UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String UBICACION_UNIDADOriginalDbColumnName(){
				
					return "UBICACION_UNIDAD";
				
				}

				
			    public String LUGAR_UBICACION_UNIDAD;

				public String getLUGAR_UBICACION_UNIDAD () {
					return this.LUGAR_UBICACION_UNIDAD;
				}

				public Boolean LUGAR_UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean LUGAR_UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer LUGAR_UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer LUGAR_UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String LUGAR_UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String LUGAR_UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String LUGAR_UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String LUGAR_UBICACION_UNIDADOriginalDbColumnName(){
				
					return "LUGAR_UBICACION_UNIDAD";
				
				}

				
			    public String ESTADO_CIVIL_SIGLA;

				public String getESTADO_CIVIL_SIGLA () {
					return this.ESTADO_CIVIL_SIGLA;
				}

				public Boolean ESTADO_CIVIL_SIGLAIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVIL_SIGLAIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVIL_SIGLALength(){
				    return null;
				}
				public Integer ESTADO_CIVIL_SIGLAPrecision(){
				    return null;
				}
				public String ESTADO_CIVIL_SIGLADefault(){
				
					return null;
				
				}
				public String ESTADO_CIVIL_SIGLAComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVIL_SIGLAPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVIL_SIGLAOriginalDbColumnName(){
				
					return "ESTADO_CIVIL_SIGLA";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return null;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return null;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String FUNDAMENTO_LEGAL;

				public String getFUNDAMENTO_LEGAL () {
					return this.FUNDAMENTO_LEGAL;
				}

				public Boolean FUNDAMENTO_LEGALIsNullable(){
				    return true;
				}
				public Boolean FUNDAMENTO_LEGALIsKey(){
				    return false;
				}
				public Integer FUNDAMENTO_LEGALLength(){
				    return null;
				}
				public Integer FUNDAMENTO_LEGALPrecision(){
				    return null;
				}
				public String FUNDAMENTO_LEGALDefault(){
				
					return null;
				
				}
				public String FUNDAMENTO_LEGALComment(){
				
				    return "";
				
				}
				public String FUNDAMENTO_LEGALPattern(){
				
					return "";
				
				}
				public String FUNDAMENTO_LEGALOriginalDbColumnName(){
				
					return "FUNDAMENTO_LEGAL";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String GENERO_DESCRI;

				public String getGENERO_DESCRI () {
					return this.GENERO_DESCRI;
				}

				public Boolean GENERO_DESCRIIsNullable(){
				    return true;
				}
				public Boolean GENERO_DESCRIIsKey(){
				    return false;
				}
				public Integer GENERO_DESCRILength(){
				    return null;
				}
				public Integer GENERO_DESCRIPrecision(){
				    return null;
				}
				public String GENERO_DESCRIDefault(){
				
					return null;
				
				}
				public String GENERO_DESCRIComment(){
				
				    return "";
				
				}
				public String GENERO_DESCRIPattern(){
				
					return "";
				
				}
				public String GENERO_DESCRIOriginalDbColumnName(){
				
					return "GENERO_DESCRI";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return null;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return null;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String ACTIVO;

				public String getACTIVO () {
					return this.ACTIVO;
				}

				public Boolean ACTIVOIsNullable(){
				    return true;
				}
				public Boolean ACTIVOIsKey(){
				    return false;
				}
				public Integer ACTIVOLength(){
				    return null;
				}
				public Integer ACTIVOPrecision(){
				    return null;
				}
				public String ACTIVODefault(){
				
					return null;
				
				}
				public String ACTIVOComment(){
				
				    return "";
				
				}
				public String ACTIVOPattern(){
				
					return "";
				
				}
				public String ACTIVOOriginalDbColumnName(){
				
					return "ACTIVO";
				
				}

				
			    public String UNDE_SIGLA;

				public String getUNDE_SIGLA () {
					return this.UNDE_SIGLA;
				}

				public Boolean UNDE_SIGLAIsNullable(){
				    return true;
				}
				public Boolean UNDE_SIGLAIsKey(){
				    return false;
				}
				public Integer UNDE_SIGLALength(){
				    return null;
				}
				public Integer UNDE_SIGLAPrecision(){
				    return null;
				}
				public String UNDE_SIGLADefault(){
				
					return null;
				
				}
				public String UNDE_SIGLAComment(){
				
				    return "";
				
				}
				public String UNDE_SIGLAPattern(){
				
					return "";
				
				}
				public String UNDE_SIGLAOriginalDbColumnName(){
				
					return "UNDE_SIGLA";
				
				}

				
			    public String NOMBRE_CIUDAD;

				public String getNOMBRE_CIUDAD () {
					return this.NOMBRE_CIUDAD;
				}

				public Boolean NOMBRE_CIUDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_CIUDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_CIUDADLength(){
				    return null;
				}
				public Integer NOMBRE_CIUDADPrecision(){
				    return null;
				}
				public String NOMBRE_CIUDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_CIUDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_CIUDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_CIUDADOriginalDbColumnName(){
				
					return "NOMBRE_CIUDAD";
				
				}

				
			    public String NOMBRE_BARRIO;

				public String getNOMBRE_BARRIO () {
					return this.NOMBRE_BARRIO;
				}

				public Boolean NOMBRE_BARRIOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_BARRIOIsKey(){
				    return false;
				}
				public Integer NOMBRE_BARRIOLength(){
				    return null;
				}
				public Integer NOMBRE_BARRIOPrecision(){
				    return null;
				}
				public String NOMBRE_BARRIODefault(){
				
					return null;
				
				}
				public String NOMBRE_BARRIOComment(){
				
				    return "";
				
				}
				public String NOMBRE_BARRIOPattern(){
				
					return "";
				
				}
				public String NOMBRE_BARRIOOriginalDbColumnName(){
				
					return "NOMBRE_BARRIO";
				
				}

				
			    public String FECHA_RETIRO;

				public String getFECHA_RETIRO () {
					return this.FECHA_RETIRO;
				}

				public Boolean FECHA_RETIROIsNullable(){
				    return true;
				}
				public Boolean FECHA_RETIROIsKey(){
				    return false;
				}
				public Integer FECHA_RETIROLength(){
				    return null;
				}
				public Integer FECHA_RETIROPrecision(){
				    return null;
				}
				public String FECHA_RETIRODefault(){
				
					return null;
				
				}
				public String FECHA_RETIROComment(){
				
				    return "";
				
				}
				public String FECHA_RETIROPattern(){
				
					return "";
				
				}
				public String FECHA_RETIROOriginalDbColumnName(){
				
					return "FECHA_RETIRO";
				
				}

				
			    public String UNDE_FUERZA;

				public String getUNDE_FUERZA () {
					return this.UNDE_FUERZA;
				}

				public Boolean UNDE_FUERZAIsNullable(){
				    return true;
				}
				public Boolean UNDE_FUERZAIsKey(){
				    return false;
				}
				public Integer UNDE_FUERZALength(){
				    return null;
				}
				public Integer UNDE_FUERZAPrecision(){
				    return null;
				}
				public String UNDE_FUERZADefault(){
				
					return null;
				
				}
				public String UNDE_FUERZAComment(){
				
				    return "";
				
				}
				public String UNDE_FUERZAPattern(){
				
					return "";
				
				}
				public String UNDE_FUERZAOriginalDbColumnName(){
				
					return "UNDE_FUERZA";
				
				}

				
			    public String CARG_CARGO;

				public String getCARG_CARGO () {
					return this.CARG_CARGO;
				}

				public Boolean CARG_CARGOIsNullable(){
				    return true;
				}
				public Boolean CARG_CARGOIsKey(){
				    return false;
				}
				public Integer CARG_CARGOLength(){
				    return null;
				}
				public Integer CARG_CARGOPrecision(){
				    return null;
				}
				public String CARG_CARGODefault(){
				
					return null;
				
				}
				public String CARG_CARGOComment(){
				
				    return "";
				
				}
				public String CARG_CARGOPattern(){
				
					return "";
				
				}
				public String CARG_CARGOOriginalDbColumnName(){
				
					return "CARG_CARGO";
				
				}

				
			    public String DESC_CARGO;

				public String getDESC_CARGO () {
					return this.DESC_CARGO;
				}

				public Boolean DESC_CARGOIsNullable(){
				    return true;
				}
				public Boolean DESC_CARGOIsKey(){
				    return false;
				}
				public Integer DESC_CARGOLength(){
				    return null;
				}
				public Integer DESC_CARGOPrecision(){
				    return null;
				}
				public String DESC_CARGODefault(){
				
					return null;
				
				}
				public String DESC_CARGOComment(){
				
				    return "";
				
				}
				public String DESC_CARGOPattern(){
				
					return "";
				
				}
				public String DESC_CARGOOriginalDbColumnName(){
				
					return "DESC_CARGO";
				
				}

				
			    public String CARRE_ID_CARRERA;

				public String getCARRE_ID_CARRERA () {
					return this.CARRE_ID_CARRERA;
				}

				public Boolean CARRE_ID_CARRERAIsNullable(){
				    return true;
				}
				public Boolean CARRE_ID_CARRERAIsKey(){
				    return false;
				}
				public Integer CARRE_ID_CARRERALength(){
				    return null;
				}
				public Integer CARRE_ID_CARRERAPrecision(){
				    return null;
				}
				public String CARRE_ID_CARRERADefault(){
				
					return null;
				
				}
				public String CARRE_ID_CARRERAComment(){
				
				    return "";
				
				}
				public String CARRE_ID_CARRERAPattern(){
				
					return "";
				
				}
				public String CARRE_ID_CARRERAOriginalDbColumnName(){
				
					return "CARRE_ID_CARRERA";
				
				}

				
			    public String DESC_CARRERA;

				public String getDESC_CARRERA () {
					return this.DESC_CARRERA;
				}

				public Boolean DESC_CARRERAIsNullable(){
				    return true;
				}
				public Boolean DESC_CARRERAIsKey(){
				    return false;
				}
				public Integer DESC_CARRERALength(){
				    return null;
				}
				public Integer DESC_CARRERAPrecision(){
				    return null;
				}
				public String DESC_CARRERADefault(){
				
					return null;
				
				}
				public String DESC_CARRERAComment(){
				
				    return "";
				
				}
				public String DESC_CARRERAPattern(){
				
					return "";
				
				}
				public String DESC_CARRERAOriginalDbColumnName(){
				
					return "DESC_CARRERA";
				
				}

				
			    public String TIEMPO;

				public String getTIEMPO () {
					return this.TIEMPO;
				}

				public Boolean TIEMPOIsNullable(){
				    return true;
				}
				public Boolean TIEMPOIsKey(){
				    return false;
				}
				public Integer TIEMPOLength(){
				    return null;
				}
				public Integer TIEMPOPrecision(){
				    return null;
				}
				public String TIEMPODefault(){
				
					return null;
				
				}
				public String TIEMPOComment(){
				
				    return "";
				
				}
				public String TIEMPOPattern(){
				
					return "";
				
				}
				public String TIEMPOOriginalDbColumnName(){
				
					return "TIEMPO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESC_CATEGORIA;

				public String getDESC_CATEGORIA () {
					return this.DESC_CATEGORIA;
				}

				public Boolean DESC_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean DESC_CATEGORIAIsKey(){
				    return false;
				}
				public Integer DESC_CATEGORIALength(){
				    return null;
				}
				public Integer DESC_CATEGORIAPrecision(){
				    return null;
				}
				public String DESC_CATEGORIADefault(){
				
					return null;
				
				}
				public String DESC_CATEGORIAComment(){
				
				    return "";
				
				}
				public String DESC_CATEGORIAPattern(){
				
					return "";
				
				}
				public String DESC_CATEGORIAOriginalDbColumnName(){
				
					return "DESC_CATEGORIA";
				
				}

				
			    public String REGIMEN;

				public String getREGIMEN () {
					return this.REGIMEN;
				}

				public Boolean REGIMENIsNullable(){
				    return true;
				}
				public Boolean REGIMENIsKey(){
				    return false;
				}
				public Integer REGIMENLength(){
				    return null;
				}
				public Integer REGIMENPrecision(){
				    return null;
				}
				public String REGIMENDefault(){
				
					return null;
				
				}
				public String REGIMENComment(){
				
				    return "";
				
				}
				public String REGIMENPattern(){
				
					return "";
				
				}
				public String REGIMENOriginalDbColumnName(){
				
					return "REGIMEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FUERZA="+FUERZA);
		sb.append(",CODIGO_MILITAR="+CODIGO_MILITAR);
		sb.append(",APELLIDOS="+APELLIDOS);
		sb.append(",NOMBRES="+NOMBRES);
		sb.append(",IDENTIFICACION="+IDENTIFICACION);
		sb.append(",TIPO_IDENTIFICACION="+TIPO_IDENTIFICACION);
		sb.append(",GRADO="+GRADO);
		sb.append(",ARMA="+ARMA);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",LUGAR_NACIMIENTO="+LUGAR_NACIMIENTO);
		sb.append(",EXPEDICION_DOCUMENTO="+EXPEDICION_DOCUMENTO);
		sb.append(",EMAIL_PERSONAL="+EMAIL_PERSONAL);
		sb.append(",EMAIL_INSTITUCIONAL="+EMAIL_INSTITUCIONAL);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",CIUDAD_RESIDENCIA="+CIUDAD_RESIDENCIA);
		sb.append(",LUGAR_CIUDAD_RESIDENCIA="+LUGAR_CIUDAD_RESIDENCIA);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
		sb.append(",UNIDAD_LABORAL="+UNIDAD_LABORAL);
		sb.append(",UBICACION_UNIDAD="+UBICACION_UNIDAD);
		sb.append(",LUGAR_UBICACION_UNIDAD="+LUGAR_UBICACION_UNIDAD);
		sb.append(",ESTADO_CIVIL_SIGLA="+ESTADO_CIVIL_SIGLA);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",FUNDAMENTO_LEGAL="+FUNDAMENTO_LEGAL);
		sb.append(",GENERO="+GENERO);
		sb.append(",GENERO_DESCRI="+GENERO_DESCRI);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",ACTIVO="+ACTIVO);
		sb.append(",UNDE_SIGLA="+UNDE_SIGLA);
		sb.append(",NOMBRE_CIUDAD="+NOMBRE_CIUDAD);
		sb.append(",NOMBRE_BARRIO="+NOMBRE_BARRIO);
		sb.append(",FECHA_RETIRO="+FECHA_RETIRO);
		sb.append(",UNDE_FUERZA="+UNDE_FUERZA);
		sb.append(",CARG_CARGO="+CARG_CARGO);
		sb.append(",DESC_CARGO="+DESC_CARGO);
		sb.append(",CARRE_ID_CARRERA="+CARRE_ID_CARRERA);
		sb.append(",DESC_CARRERA="+DESC_CARRERA);
		sb.append(",TIEMPO="+TIEMPO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",DESC_CATEGORIA="+DESC_CATEGORIA);
		sb.append(",REGIMEN="+REGIMEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row123Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row117Struct implements routines.system.IPersistableRow<row117Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row117Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tREST_1Struct implements routines.system.IPersistableRow<after_tREST_1Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tREST_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row124Struct implements routines.system.IPersistableRow<row124Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return null;
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String CODIGO_MILITAR;

				public String getCODIGO_MILITAR () {
					return this.CODIGO_MILITAR;
				}

				public Boolean CODIGO_MILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_MILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_MILITARLength(){
				    return null;
				}
				public Integer CODIGO_MILITARPrecision(){
				    return null;
				}
				public String CODIGO_MILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_MILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_MILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_MILITAROriginalDbColumnName(){
				
					return "CODIGO_MILITAR";
				
				}

				
			    public String APELLIDOS;

				public String getAPELLIDOS () {
					return this.APELLIDOS;
				}

				public Boolean APELLIDOSIsNullable(){
				    return true;
				}
				public Boolean APELLIDOSIsKey(){
				    return false;
				}
				public Integer APELLIDOSLength(){
				    return null;
				}
				public Integer APELLIDOSPrecision(){
				    return null;
				}
				public String APELLIDOSDefault(){
				
					return null;
				
				}
				public String APELLIDOSComment(){
				
				    return "";
				
				}
				public String APELLIDOSPattern(){
				
					return "";
				
				}
				public String APELLIDOSOriginalDbColumnName(){
				
					return "APELLIDOS";
				
				}

				
			    public String NOMBRES;

				public String getNOMBRES () {
					return this.NOMBRES;
				}

				public Boolean NOMBRESIsNullable(){
				    return true;
				}
				public Boolean NOMBRESIsKey(){
				    return false;
				}
				public Integer NOMBRESLength(){
				    return null;
				}
				public Integer NOMBRESPrecision(){
				    return null;
				}
				public String NOMBRESDefault(){
				
					return null;
				
				}
				public String NOMBRESComment(){
				
				    return "";
				
				}
				public String NOMBRESPattern(){
				
					return "";
				
				}
				public String NOMBRESOriginalDbColumnName(){
				
					return "NOMBRES";
				
				}

				
			    public String IDENTIFICACION;

				public String getIDENTIFICACION () {
					return this.IDENTIFICACION;
				}

				public Boolean IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer IDENTIFICACIONLength(){
				    return null;
				}
				public Integer IDENTIFICACIONPrecision(){
				    return null;
				}
				public String IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String IDENTIFICACIONOriginalDbColumnName(){
				
					return "IDENTIFICACION";
				
				}

				
			    public String TIPO_IDENTIFICACION;

				public String getTIPO_IDENTIFICACION () {
					return this.TIPO_IDENTIFICACION;
				}

				public Boolean TIPO_IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer TIPO_IDENTIFICACIONLength(){
				    return null;
				}
				public Integer TIPO_IDENTIFICACIONPrecision(){
				    return null;
				}
				public String TIPO_IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String TIPO_IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String TIPO_IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String TIPO_IDENTIFICACIONOriginalDbColumnName(){
				
					return "TIPO_IDENTIFICACION";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return true;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return null;
				}
				public Integer GRADOPrecision(){
				    return null;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String ARMA;

				public String getARMA () {
					return this.ARMA;
				}

				public Boolean ARMAIsNullable(){
				    return true;
				}
				public Boolean ARMAIsKey(){
				    return false;
				}
				public Integer ARMALength(){
				    return null;
				}
				public Integer ARMAPrecision(){
				    return null;
				}
				public String ARMADefault(){
				
					return null;
				
				}
				public String ARMAComment(){
				
				    return "";
				
				}
				public String ARMAPattern(){
				
					return "";
				
				}
				public String ARMAOriginalDbColumnName(){
				
					return "ARMA";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String LUGAR_NACIMIENTO;

				public String getLUGAR_NACIMIENTO () {
					return this.LUGAR_NACIMIENTO;
				}

				public Boolean LUGAR_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean LUGAR_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer LUGAR_NACIMIENTOLength(){
				    return null;
				}
				public Integer LUGAR_NACIMIENTOPrecision(){
				    return null;
				}
				public String LUGAR_NACIMIENTODefault(){
				
					return null;
				
				}
				public String LUGAR_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String LUGAR_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String LUGAR_NACIMIENTOOriginalDbColumnName(){
				
					return "LUGAR_NACIMIENTO";
				
				}

				
			    public String EXPEDICION_DOCUMENTO;

				public String getEXPEDICION_DOCUMENTO () {
					return this.EXPEDICION_DOCUMENTO;
				}

				public Boolean EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "EXPEDICION_DOCUMENTO";
				
				}

				
			    public String EMAIL_PERSONAL;

				public String getEMAIL_PERSONAL () {
					return this.EMAIL_PERSONAL;
				}

				public Boolean EMAIL_PERSONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_PERSONALIsKey(){
				    return false;
				}
				public Integer EMAIL_PERSONALLength(){
				    return null;
				}
				public Integer EMAIL_PERSONALPrecision(){
				    return null;
				}
				public String EMAIL_PERSONALDefault(){
				
					return null;
				
				}
				public String EMAIL_PERSONALComment(){
				
				    return "";
				
				}
				public String EMAIL_PERSONALPattern(){
				
					return "";
				
				}
				public String EMAIL_PERSONALOriginalDbColumnName(){
				
					return "EMAIL_PERSONAL";
				
				}

				
			    public String EMAIL_INSTITUCIONAL;

				public String getEMAIL_INSTITUCIONAL () {
					return this.EMAIL_INSTITUCIONAL;
				}

				public Boolean EMAIL_INSTITUCIONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_INSTITUCIONALIsKey(){
				    return false;
				}
				public Integer EMAIL_INSTITUCIONALLength(){
				    return null;
				}
				public Integer EMAIL_INSTITUCIONALPrecision(){
				    return null;
				}
				public String EMAIL_INSTITUCIONALDefault(){
				
					return null;
				
				}
				public String EMAIL_INSTITUCIONALComment(){
				
				    return "";
				
				}
				public String EMAIL_INSTITUCIONALPattern(){
				
					return "";
				
				}
				public String EMAIL_INSTITUCIONALOriginalDbColumnName(){
				
					return "EMAIL_INSTITUCIONAL";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String CIUDAD_RESIDENCIA;

				public String getCIUDAD_RESIDENCIA () {
					return this.CIUDAD_RESIDENCIA;
				}

				public Boolean CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "CIUDAD_RESIDENCIA";
				
				}

				
			    public String LUGAR_CIUDAD_RESIDENCIA;

				public String getLUGAR_CIUDAD_RESIDENCIA () {
					return this.LUGAR_CIUDAD_RESIDENCIA;
				}

				public Boolean LUGAR_CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_CIUDAD_RESIDENCIA";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return null;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return null;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				
			    public String UNIDAD_LABORAL;

				public String getUNIDAD_LABORAL () {
					return this.UNIDAD_LABORAL;
				}

				public Boolean UNIDAD_LABORALIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_LABORALIsKey(){
				    return false;
				}
				public Integer UNIDAD_LABORALLength(){
				    return null;
				}
				public Integer UNIDAD_LABORALPrecision(){
				    return null;
				}
				public String UNIDAD_LABORALDefault(){
				
					return null;
				
				}
				public String UNIDAD_LABORALComment(){
				
				    return "";
				
				}
				public String UNIDAD_LABORALPattern(){
				
					return "";
				
				}
				public String UNIDAD_LABORALOriginalDbColumnName(){
				
					return "UNIDAD_LABORAL";
				
				}

				
			    public String UBICACION_UNIDAD;

				public String getUBICACION_UNIDAD () {
					return this.UBICACION_UNIDAD;
				}

				public Boolean UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String UBICACION_UNIDADOriginalDbColumnName(){
				
					return "UBICACION_UNIDAD";
				
				}

				
			    public String LUGAR_UBICACION_UNIDAD;

				public String getLUGAR_UBICACION_UNIDAD () {
					return this.LUGAR_UBICACION_UNIDAD;
				}

				public Boolean LUGAR_UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean LUGAR_UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer LUGAR_UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer LUGAR_UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String LUGAR_UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String LUGAR_UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String LUGAR_UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String LUGAR_UBICACION_UNIDADOriginalDbColumnName(){
				
					return "LUGAR_UBICACION_UNIDAD";
				
				}

				
			    public String ESTADO_CIVIL_SIGLA;

				public String getESTADO_CIVIL_SIGLA () {
					return this.ESTADO_CIVIL_SIGLA;
				}

				public Boolean ESTADO_CIVIL_SIGLAIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVIL_SIGLAIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVIL_SIGLALength(){
				    return null;
				}
				public Integer ESTADO_CIVIL_SIGLAPrecision(){
				    return null;
				}
				public String ESTADO_CIVIL_SIGLADefault(){
				
					return null;
				
				}
				public String ESTADO_CIVIL_SIGLAComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVIL_SIGLAPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVIL_SIGLAOriginalDbColumnName(){
				
					return "ESTADO_CIVIL_SIGLA";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return null;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return null;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String FUNDAMENTO_LEGAL;

				public String getFUNDAMENTO_LEGAL () {
					return this.FUNDAMENTO_LEGAL;
				}

				public Boolean FUNDAMENTO_LEGALIsNullable(){
				    return true;
				}
				public Boolean FUNDAMENTO_LEGALIsKey(){
				    return false;
				}
				public Integer FUNDAMENTO_LEGALLength(){
				    return null;
				}
				public Integer FUNDAMENTO_LEGALPrecision(){
				    return null;
				}
				public String FUNDAMENTO_LEGALDefault(){
				
					return null;
				
				}
				public String FUNDAMENTO_LEGALComment(){
				
				    return "";
				
				}
				public String FUNDAMENTO_LEGALPattern(){
				
					return "";
				
				}
				public String FUNDAMENTO_LEGALOriginalDbColumnName(){
				
					return "FUNDAMENTO_LEGAL";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String GENERO_DESCRI;

				public String getGENERO_DESCRI () {
					return this.GENERO_DESCRI;
				}

				public Boolean GENERO_DESCRIIsNullable(){
				    return true;
				}
				public Boolean GENERO_DESCRIIsKey(){
				    return false;
				}
				public Integer GENERO_DESCRILength(){
				    return null;
				}
				public Integer GENERO_DESCRIPrecision(){
				    return null;
				}
				public String GENERO_DESCRIDefault(){
				
					return null;
				
				}
				public String GENERO_DESCRIComment(){
				
				    return "";
				
				}
				public String GENERO_DESCRIPattern(){
				
					return "";
				
				}
				public String GENERO_DESCRIOriginalDbColumnName(){
				
					return "GENERO_DESCRI";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return null;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return null;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String ACTIVO;

				public String getACTIVO () {
					return this.ACTIVO;
				}

				public Boolean ACTIVOIsNullable(){
				    return true;
				}
				public Boolean ACTIVOIsKey(){
				    return false;
				}
				public Integer ACTIVOLength(){
				    return null;
				}
				public Integer ACTIVOPrecision(){
				    return null;
				}
				public String ACTIVODefault(){
				
					return null;
				
				}
				public String ACTIVOComment(){
				
				    return "";
				
				}
				public String ACTIVOPattern(){
				
					return "";
				
				}
				public String ACTIVOOriginalDbColumnName(){
				
					return "ACTIVO";
				
				}

				
			    public String UNDE_SIGLA;

				public String getUNDE_SIGLA () {
					return this.UNDE_SIGLA;
				}

				public Boolean UNDE_SIGLAIsNullable(){
				    return true;
				}
				public Boolean UNDE_SIGLAIsKey(){
				    return false;
				}
				public Integer UNDE_SIGLALength(){
				    return null;
				}
				public Integer UNDE_SIGLAPrecision(){
				    return null;
				}
				public String UNDE_SIGLADefault(){
				
					return null;
				
				}
				public String UNDE_SIGLAComment(){
				
				    return "";
				
				}
				public String UNDE_SIGLAPattern(){
				
					return "";
				
				}
				public String UNDE_SIGLAOriginalDbColumnName(){
				
					return "UNDE_SIGLA";
				
				}

				
			    public String NOMBRE_CIUDAD;

				public String getNOMBRE_CIUDAD () {
					return this.NOMBRE_CIUDAD;
				}

				public Boolean NOMBRE_CIUDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_CIUDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_CIUDADLength(){
				    return null;
				}
				public Integer NOMBRE_CIUDADPrecision(){
				    return null;
				}
				public String NOMBRE_CIUDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_CIUDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_CIUDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_CIUDADOriginalDbColumnName(){
				
					return "NOMBRE_CIUDAD";
				
				}

				
			    public String NOMBRE_BARRIO;

				public String getNOMBRE_BARRIO () {
					return this.NOMBRE_BARRIO;
				}

				public Boolean NOMBRE_BARRIOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_BARRIOIsKey(){
				    return false;
				}
				public Integer NOMBRE_BARRIOLength(){
				    return null;
				}
				public Integer NOMBRE_BARRIOPrecision(){
				    return null;
				}
				public String NOMBRE_BARRIODefault(){
				
					return null;
				
				}
				public String NOMBRE_BARRIOComment(){
				
				    return "";
				
				}
				public String NOMBRE_BARRIOPattern(){
				
					return "";
				
				}
				public String NOMBRE_BARRIOOriginalDbColumnName(){
				
					return "NOMBRE_BARRIO";
				
				}

				
			    public String FECHA_RETIRO;

				public String getFECHA_RETIRO () {
					return this.FECHA_RETIRO;
				}

				public Boolean FECHA_RETIROIsNullable(){
				    return true;
				}
				public Boolean FECHA_RETIROIsKey(){
				    return false;
				}
				public Integer FECHA_RETIROLength(){
				    return null;
				}
				public Integer FECHA_RETIROPrecision(){
				    return null;
				}
				public String FECHA_RETIRODefault(){
				
					return null;
				
				}
				public String FECHA_RETIROComment(){
				
				    return "";
				
				}
				public String FECHA_RETIROPattern(){
				
					return "";
				
				}
				public String FECHA_RETIROOriginalDbColumnName(){
				
					return "FECHA_RETIRO";
				
				}

				
			    public String UNDE_FUERZA;

				public String getUNDE_FUERZA () {
					return this.UNDE_FUERZA;
				}

				public Boolean UNDE_FUERZAIsNullable(){
				    return true;
				}
				public Boolean UNDE_FUERZAIsKey(){
				    return false;
				}
				public Integer UNDE_FUERZALength(){
				    return null;
				}
				public Integer UNDE_FUERZAPrecision(){
				    return null;
				}
				public String UNDE_FUERZADefault(){
				
					return null;
				
				}
				public String UNDE_FUERZAComment(){
				
				    return "";
				
				}
				public String UNDE_FUERZAPattern(){
				
					return "";
				
				}
				public String UNDE_FUERZAOriginalDbColumnName(){
				
					return "UNDE_FUERZA";
				
				}

				
			    public String CARG_CARGO;

				public String getCARG_CARGO () {
					return this.CARG_CARGO;
				}

				public Boolean CARG_CARGOIsNullable(){
				    return true;
				}
				public Boolean CARG_CARGOIsKey(){
				    return false;
				}
				public Integer CARG_CARGOLength(){
				    return null;
				}
				public Integer CARG_CARGOPrecision(){
				    return null;
				}
				public String CARG_CARGODefault(){
				
					return null;
				
				}
				public String CARG_CARGOComment(){
				
				    return "";
				
				}
				public String CARG_CARGOPattern(){
				
					return "";
				
				}
				public String CARG_CARGOOriginalDbColumnName(){
				
					return "CARG_CARGO";
				
				}

				
			    public String DESC_CARGO;

				public String getDESC_CARGO () {
					return this.DESC_CARGO;
				}

				public Boolean DESC_CARGOIsNullable(){
				    return true;
				}
				public Boolean DESC_CARGOIsKey(){
				    return false;
				}
				public Integer DESC_CARGOLength(){
				    return null;
				}
				public Integer DESC_CARGOPrecision(){
				    return null;
				}
				public String DESC_CARGODefault(){
				
					return null;
				
				}
				public String DESC_CARGOComment(){
				
				    return "";
				
				}
				public String DESC_CARGOPattern(){
				
					return "";
				
				}
				public String DESC_CARGOOriginalDbColumnName(){
				
					return "DESC_CARGO";
				
				}

				
			    public String CARRE_ID_CARRERA;

				public String getCARRE_ID_CARRERA () {
					return this.CARRE_ID_CARRERA;
				}

				public Boolean CARRE_ID_CARRERAIsNullable(){
				    return true;
				}
				public Boolean CARRE_ID_CARRERAIsKey(){
				    return false;
				}
				public Integer CARRE_ID_CARRERALength(){
				    return null;
				}
				public Integer CARRE_ID_CARRERAPrecision(){
				    return null;
				}
				public String CARRE_ID_CARRERADefault(){
				
					return null;
				
				}
				public String CARRE_ID_CARRERAComment(){
				
				    return "";
				
				}
				public String CARRE_ID_CARRERAPattern(){
				
					return "";
				
				}
				public String CARRE_ID_CARRERAOriginalDbColumnName(){
				
					return "CARRE_ID_CARRERA";
				
				}

				
			    public String DESC_CARRERA;

				public String getDESC_CARRERA () {
					return this.DESC_CARRERA;
				}

				public Boolean DESC_CARRERAIsNullable(){
				    return true;
				}
				public Boolean DESC_CARRERAIsKey(){
				    return false;
				}
				public Integer DESC_CARRERALength(){
				    return null;
				}
				public Integer DESC_CARRERAPrecision(){
				    return null;
				}
				public String DESC_CARRERADefault(){
				
					return null;
				
				}
				public String DESC_CARRERAComment(){
				
				    return "";
				
				}
				public String DESC_CARRERAPattern(){
				
					return "";
				
				}
				public String DESC_CARRERAOriginalDbColumnName(){
				
					return "DESC_CARRERA";
				
				}

				
			    public String TIEMPO;

				public String getTIEMPO () {
					return this.TIEMPO;
				}

				public Boolean TIEMPOIsNullable(){
				    return true;
				}
				public Boolean TIEMPOIsKey(){
				    return false;
				}
				public Integer TIEMPOLength(){
				    return null;
				}
				public Integer TIEMPOPrecision(){
				    return null;
				}
				public String TIEMPODefault(){
				
					return null;
				
				}
				public String TIEMPOComment(){
				
				    return "";
				
				}
				public String TIEMPOPattern(){
				
					return "";
				
				}
				public String TIEMPOOriginalDbColumnName(){
				
					return "TIEMPO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESC_CATEGORIA;

				public String getDESC_CATEGORIA () {
					return this.DESC_CATEGORIA;
				}

				public Boolean DESC_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean DESC_CATEGORIAIsKey(){
				    return false;
				}
				public Integer DESC_CATEGORIALength(){
				    return null;
				}
				public Integer DESC_CATEGORIAPrecision(){
				    return null;
				}
				public String DESC_CATEGORIADefault(){
				
					return null;
				
				}
				public String DESC_CATEGORIAComment(){
				
				    return "";
				
				}
				public String DESC_CATEGORIAPattern(){
				
					return "";
				
				}
				public String DESC_CATEGORIAOriginalDbColumnName(){
				
					return "DESC_CATEGORIA";
				
				}

				
			    public String REGIMEN;

				public String getREGIMEN () {
					return this.REGIMEN;
				}

				public Boolean REGIMENIsNullable(){
				    return true;
				}
				public Boolean REGIMENIsKey(){
				    return false;
				}
				public Integer REGIMENLength(){
				    return null;
				}
				public Integer REGIMENPrecision(){
				    return null;
				}
				public String REGIMENDefault(){
				
					return null;
				
				}
				public String REGIMENComment(){
				
				    return "";
				
				}
				public String REGIMENPattern(){
				
					return "";
				
				}
				public String REGIMENOriginalDbColumnName(){
				
					return "REGIMEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FUERZA="+FUERZA);
		sb.append(",CODIGO_MILITAR="+CODIGO_MILITAR);
		sb.append(",APELLIDOS="+APELLIDOS);
		sb.append(",NOMBRES="+NOMBRES);
		sb.append(",IDENTIFICACION="+IDENTIFICACION);
		sb.append(",TIPO_IDENTIFICACION="+TIPO_IDENTIFICACION);
		sb.append(",GRADO="+GRADO);
		sb.append(",ARMA="+ARMA);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",LUGAR_NACIMIENTO="+LUGAR_NACIMIENTO);
		sb.append(",EXPEDICION_DOCUMENTO="+EXPEDICION_DOCUMENTO);
		sb.append(",EMAIL_PERSONAL="+EMAIL_PERSONAL);
		sb.append(",EMAIL_INSTITUCIONAL="+EMAIL_INSTITUCIONAL);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",CIUDAD_RESIDENCIA="+CIUDAD_RESIDENCIA);
		sb.append(",LUGAR_CIUDAD_RESIDENCIA="+LUGAR_CIUDAD_RESIDENCIA);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
		sb.append(",UNIDAD_LABORAL="+UNIDAD_LABORAL);
		sb.append(",UBICACION_UNIDAD="+UBICACION_UNIDAD);
		sb.append(",LUGAR_UBICACION_UNIDAD="+LUGAR_UBICACION_UNIDAD);
		sb.append(",ESTADO_CIVIL_SIGLA="+ESTADO_CIVIL_SIGLA);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",FUNDAMENTO_LEGAL="+FUNDAMENTO_LEGAL);
		sb.append(",GENERO="+GENERO);
		sb.append(",GENERO_DESCRI="+GENERO_DESCRI);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",ACTIVO="+ACTIVO);
		sb.append(",UNDE_SIGLA="+UNDE_SIGLA);
		sb.append(",NOMBRE_CIUDAD="+NOMBRE_CIUDAD);
		sb.append(",NOMBRE_BARRIO="+NOMBRE_BARRIO);
		sb.append(",FECHA_RETIRO="+FECHA_RETIRO);
		sb.append(",UNDE_FUERZA="+UNDE_FUERZA);
		sb.append(",CARG_CARGO="+CARG_CARGO);
		sb.append(",DESC_CARGO="+DESC_CARGO);
		sb.append(",CARRE_ID_CARRERA="+CARRE_ID_CARRERA);
		sb.append(",DESC_CARRERA="+DESC_CARRERA);
		sb.append(",TIEMPO="+TIEMPO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",DESC_CATEGORIA="+DESC_CATEGORIA);
		sb.append(",REGIMEN="+REGIMEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row124Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row122Struct implements routines.system.IPersistableRow<row122Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row122Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row125Struct implements routines.system.IPersistableRow<row125Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return null;
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String CODIGO_MILITAR;

				public String getCODIGO_MILITAR () {
					return this.CODIGO_MILITAR;
				}

				public Boolean CODIGO_MILITARIsNullable(){
				    return true;
				}
				public Boolean CODIGO_MILITARIsKey(){
				    return false;
				}
				public Integer CODIGO_MILITARLength(){
				    return null;
				}
				public Integer CODIGO_MILITARPrecision(){
				    return null;
				}
				public String CODIGO_MILITARDefault(){
				
					return null;
				
				}
				public String CODIGO_MILITARComment(){
				
				    return "";
				
				}
				public String CODIGO_MILITARPattern(){
				
					return "";
				
				}
				public String CODIGO_MILITAROriginalDbColumnName(){
				
					return "CODIGO_MILITAR";
				
				}

				
			    public String APELLIDOS;

				public String getAPELLIDOS () {
					return this.APELLIDOS;
				}

				public Boolean APELLIDOSIsNullable(){
				    return true;
				}
				public Boolean APELLIDOSIsKey(){
				    return false;
				}
				public Integer APELLIDOSLength(){
				    return null;
				}
				public Integer APELLIDOSPrecision(){
				    return null;
				}
				public String APELLIDOSDefault(){
				
					return null;
				
				}
				public String APELLIDOSComment(){
				
				    return "";
				
				}
				public String APELLIDOSPattern(){
				
					return "";
				
				}
				public String APELLIDOSOriginalDbColumnName(){
				
					return "APELLIDOS";
				
				}

				
			    public String NOMBRES;

				public String getNOMBRES () {
					return this.NOMBRES;
				}

				public Boolean NOMBRESIsNullable(){
				    return true;
				}
				public Boolean NOMBRESIsKey(){
				    return false;
				}
				public Integer NOMBRESLength(){
				    return null;
				}
				public Integer NOMBRESPrecision(){
				    return null;
				}
				public String NOMBRESDefault(){
				
					return null;
				
				}
				public String NOMBRESComment(){
				
				    return "";
				
				}
				public String NOMBRESPattern(){
				
					return "";
				
				}
				public String NOMBRESOriginalDbColumnName(){
				
					return "NOMBRES";
				
				}

				
			    public String IDENTIFICACION;

				public String getIDENTIFICACION () {
					return this.IDENTIFICACION;
				}

				public Boolean IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer IDENTIFICACIONLength(){
				    return null;
				}
				public Integer IDENTIFICACIONPrecision(){
				    return null;
				}
				public String IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String IDENTIFICACIONOriginalDbColumnName(){
				
					return "IDENTIFICACION";
				
				}

				
			    public String TIPO_IDENTIFICACION;

				public String getTIPO_IDENTIFICACION () {
					return this.TIPO_IDENTIFICACION;
				}

				public Boolean TIPO_IDENTIFICACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_IDENTIFICACIONIsKey(){
				    return false;
				}
				public Integer TIPO_IDENTIFICACIONLength(){
				    return null;
				}
				public Integer TIPO_IDENTIFICACIONPrecision(){
				    return null;
				}
				public String TIPO_IDENTIFICACIONDefault(){
				
					return null;
				
				}
				public String TIPO_IDENTIFICACIONComment(){
				
				    return "";
				
				}
				public String TIPO_IDENTIFICACIONPattern(){
				
					return "";
				
				}
				public String TIPO_IDENTIFICACIONOriginalDbColumnName(){
				
					return "TIPO_IDENTIFICACION";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return true;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return null;
				}
				public Integer GRADOPrecision(){
				    return null;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String ARMA;

				public String getARMA () {
					return this.ARMA;
				}

				public Boolean ARMAIsNullable(){
				    return true;
				}
				public Boolean ARMAIsKey(){
				    return false;
				}
				public Integer ARMALength(){
				    return null;
				}
				public Integer ARMAPrecision(){
				    return null;
				}
				public String ARMADefault(){
				
					return null;
				
				}
				public String ARMAComment(){
				
				    return "";
				
				}
				public String ARMAPattern(){
				
					return "";
				
				}
				public String ARMAOriginalDbColumnName(){
				
					return "ARMA";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String LUGAR_NACIMIENTO;

				public String getLUGAR_NACIMIENTO () {
					return this.LUGAR_NACIMIENTO;
				}

				public Boolean LUGAR_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean LUGAR_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer LUGAR_NACIMIENTOLength(){
				    return null;
				}
				public Integer LUGAR_NACIMIENTOPrecision(){
				    return null;
				}
				public String LUGAR_NACIMIENTODefault(){
				
					return null;
				
				}
				public String LUGAR_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String LUGAR_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String LUGAR_NACIMIENTOOriginalDbColumnName(){
				
					return "LUGAR_NACIMIENTO";
				
				}

				
			    public String EXPEDICION_DOCUMENTO;

				public String getEXPEDICION_DOCUMENTO () {
					return this.EXPEDICION_DOCUMENTO;
				}

				public Boolean EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "EXPEDICION_DOCUMENTO";
				
				}

				
			    public String EMAIL_PERSONAL;

				public String getEMAIL_PERSONAL () {
					return this.EMAIL_PERSONAL;
				}

				public Boolean EMAIL_PERSONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_PERSONALIsKey(){
				    return false;
				}
				public Integer EMAIL_PERSONALLength(){
				    return null;
				}
				public Integer EMAIL_PERSONALPrecision(){
				    return null;
				}
				public String EMAIL_PERSONALDefault(){
				
					return null;
				
				}
				public String EMAIL_PERSONALComment(){
				
				    return "";
				
				}
				public String EMAIL_PERSONALPattern(){
				
					return "";
				
				}
				public String EMAIL_PERSONALOriginalDbColumnName(){
				
					return "EMAIL_PERSONAL";
				
				}

				
			    public String EMAIL_INSTITUCIONAL;

				public String getEMAIL_INSTITUCIONAL () {
					return this.EMAIL_INSTITUCIONAL;
				}

				public Boolean EMAIL_INSTITUCIONALIsNullable(){
				    return true;
				}
				public Boolean EMAIL_INSTITUCIONALIsKey(){
				    return false;
				}
				public Integer EMAIL_INSTITUCIONALLength(){
				    return null;
				}
				public Integer EMAIL_INSTITUCIONALPrecision(){
				    return null;
				}
				public String EMAIL_INSTITUCIONALDefault(){
				
					return null;
				
				}
				public String EMAIL_INSTITUCIONALComment(){
				
				    return "";
				
				}
				public String EMAIL_INSTITUCIONALPattern(){
				
					return "";
				
				}
				public String EMAIL_INSTITUCIONALOriginalDbColumnName(){
				
					return "EMAIL_INSTITUCIONAL";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String CIUDAD_RESIDENCIA;

				public String getCIUDAD_RESIDENCIA () {
					return this.CIUDAD_RESIDENCIA;
				}

				public Boolean CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "CIUDAD_RESIDENCIA";
				
				}

				
			    public String LUGAR_CIUDAD_RESIDENCIA;

				public String getLUGAR_CIUDAD_RESIDENCIA () {
					return this.LUGAR_CIUDAD_RESIDENCIA;
				}

				public Boolean LUGAR_CIUDAD_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean LUGAR_CIUDAD_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIALength(){
				    return null;
				}
				public Integer LUGAR_CIUDAD_RESIDENCIAPrecision(){
				    return null;
				}
				public String LUGAR_CIUDAD_RESIDENCIADefault(){
				
					return null;
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String LUGAR_CIUDAD_RESIDENCIAOriginalDbColumnName(){
				
					return "LUGAR_CIUDAD_RESIDENCIA";
				
				}

				
			    public String CODIGO_UNIDAD;

				public String getCODIGO_UNIDAD () {
					return this.CODIGO_UNIDAD;
				}

				public Boolean CODIGO_UNIDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_UNIDADIsKey(){
				    return false;
				}
				public Integer CODIGO_UNIDADLength(){
				    return null;
				}
				public Integer CODIGO_UNIDADPrecision(){
				    return null;
				}
				public String CODIGO_UNIDADDefault(){
				
					return null;
				
				}
				public String CODIGO_UNIDADComment(){
				
				    return "";
				
				}
				public String CODIGO_UNIDADPattern(){
				
					return "";
				
				}
				public String CODIGO_UNIDADOriginalDbColumnName(){
				
					return "CODIGO_UNIDAD";
				
				}

				
			    public String UNIDAD_LABORAL;

				public String getUNIDAD_LABORAL () {
					return this.UNIDAD_LABORAL;
				}

				public Boolean UNIDAD_LABORALIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_LABORALIsKey(){
				    return false;
				}
				public Integer UNIDAD_LABORALLength(){
				    return null;
				}
				public Integer UNIDAD_LABORALPrecision(){
				    return null;
				}
				public String UNIDAD_LABORALDefault(){
				
					return null;
				
				}
				public String UNIDAD_LABORALComment(){
				
				    return "";
				
				}
				public String UNIDAD_LABORALPattern(){
				
					return "";
				
				}
				public String UNIDAD_LABORALOriginalDbColumnName(){
				
					return "UNIDAD_LABORAL";
				
				}

				
			    public String UBICACION_UNIDAD;

				public String getUBICACION_UNIDAD () {
					return this.UBICACION_UNIDAD;
				}

				public Boolean UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String UBICACION_UNIDADOriginalDbColumnName(){
				
					return "UBICACION_UNIDAD";
				
				}

				
			    public String LUGAR_UBICACION_UNIDAD;

				public String getLUGAR_UBICACION_UNIDAD () {
					return this.LUGAR_UBICACION_UNIDAD;
				}

				public Boolean LUGAR_UBICACION_UNIDADIsNullable(){
				    return true;
				}
				public Boolean LUGAR_UBICACION_UNIDADIsKey(){
				    return false;
				}
				public Integer LUGAR_UBICACION_UNIDADLength(){
				    return null;
				}
				public Integer LUGAR_UBICACION_UNIDADPrecision(){
				    return null;
				}
				public String LUGAR_UBICACION_UNIDADDefault(){
				
					return null;
				
				}
				public String LUGAR_UBICACION_UNIDADComment(){
				
				    return "";
				
				}
				public String LUGAR_UBICACION_UNIDADPattern(){
				
					return "";
				
				}
				public String LUGAR_UBICACION_UNIDADOriginalDbColumnName(){
				
					return "LUGAR_UBICACION_UNIDAD";
				
				}

				
			    public String ESTADO_CIVIL_SIGLA;

				public String getESTADO_CIVIL_SIGLA () {
					return this.ESTADO_CIVIL_SIGLA;
				}

				public Boolean ESTADO_CIVIL_SIGLAIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVIL_SIGLAIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVIL_SIGLALength(){
				    return null;
				}
				public Integer ESTADO_CIVIL_SIGLAPrecision(){
				    return null;
				}
				public String ESTADO_CIVIL_SIGLADefault(){
				
					return null;
				
				}
				public String ESTADO_CIVIL_SIGLAComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVIL_SIGLAPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVIL_SIGLAOriginalDbColumnName(){
				
					return "ESTADO_CIVIL_SIGLA";
				
				}

				
			    public String ESTADO_CIVIL;

				public String getESTADO_CIVIL () {
					return this.ESTADO_CIVIL;
				}

				public Boolean ESTADO_CIVILIsNullable(){
				    return true;
				}
				public Boolean ESTADO_CIVILIsKey(){
				    return false;
				}
				public Integer ESTADO_CIVILLength(){
				    return null;
				}
				public Integer ESTADO_CIVILPrecision(){
				    return null;
				}
				public String ESTADO_CIVILDefault(){
				
					return null;
				
				}
				public String ESTADO_CIVILComment(){
				
				    return "";
				
				}
				public String ESTADO_CIVILPattern(){
				
					return "";
				
				}
				public String ESTADO_CIVILOriginalDbColumnName(){
				
					return "ESTADO_CIVIL";
				
				}

				
			    public String FUNDAMENTO_LEGAL;

				public String getFUNDAMENTO_LEGAL () {
					return this.FUNDAMENTO_LEGAL;
				}

				public Boolean FUNDAMENTO_LEGALIsNullable(){
				    return true;
				}
				public Boolean FUNDAMENTO_LEGALIsKey(){
				    return false;
				}
				public Integer FUNDAMENTO_LEGALLength(){
				    return null;
				}
				public Integer FUNDAMENTO_LEGALPrecision(){
				    return null;
				}
				public String FUNDAMENTO_LEGALDefault(){
				
					return null;
				
				}
				public String FUNDAMENTO_LEGALComment(){
				
				    return "";
				
				}
				public String FUNDAMENTO_LEGALPattern(){
				
					return "";
				
				}
				public String FUNDAMENTO_LEGALOriginalDbColumnName(){
				
					return "FUNDAMENTO_LEGAL";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String GENERO_DESCRI;

				public String getGENERO_DESCRI () {
					return this.GENERO_DESCRI;
				}

				public Boolean GENERO_DESCRIIsNullable(){
				    return true;
				}
				public Boolean GENERO_DESCRIIsKey(){
				    return false;
				}
				public Integer GENERO_DESCRILength(){
				    return null;
				}
				public Integer GENERO_DESCRIPrecision(){
				    return null;
				}
				public String GENERO_DESCRIDefault(){
				
					return null;
				
				}
				public String GENERO_DESCRIComment(){
				
				    return "";
				
				}
				public String GENERO_DESCRIPattern(){
				
					return "";
				
				}
				public String GENERO_DESCRIOriginalDbColumnName(){
				
					return "GENERO_DESCRI";
				
				}

				
			    public String GRUPO_SANGUINEO;

				public String getGRUPO_SANGUINEO () {
					return this.GRUPO_SANGUINEO;
				}

				public Boolean GRUPO_SANGUINEOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_SANGUINEOIsKey(){
				    return false;
				}
				public Integer GRUPO_SANGUINEOLength(){
				    return null;
				}
				public Integer GRUPO_SANGUINEOPrecision(){
				    return null;
				}
				public String GRUPO_SANGUINEODefault(){
				
					return null;
				
				}
				public String GRUPO_SANGUINEOComment(){
				
				    return "";
				
				}
				public String GRUPO_SANGUINEOPattern(){
				
					return "";
				
				}
				public String GRUPO_SANGUINEOOriginalDbColumnName(){
				
					return "GRUPO_SANGUINEO";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String ACTIVO;

				public String getACTIVO () {
					return this.ACTIVO;
				}

				public Boolean ACTIVOIsNullable(){
				    return true;
				}
				public Boolean ACTIVOIsKey(){
				    return false;
				}
				public Integer ACTIVOLength(){
				    return null;
				}
				public Integer ACTIVOPrecision(){
				    return null;
				}
				public String ACTIVODefault(){
				
					return null;
				
				}
				public String ACTIVOComment(){
				
				    return "";
				
				}
				public String ACTIVOPattern(){
				
					return "";
				
				}
				public String ACTIVOOriginalDbColumnName(){
				
					return "ACTIVO";
				
				}

				
			    public String UNDE_SIGLA;

				public String getUNDE_SIGLA () {
					return this.UNDE_SIGLA;
				}

				public Boolean UNDE_SIGLAIsNullable(){
				    return true;
				}
				public Boolean UNDE_SIGLAIsKey(){
				    return false;
				}
				public Integer UNDE_SIGLALength(){
				    return null;
				}
				public Integer UNDE_SIGLAPrecision(){
				    return null;
				}
				public String UNDE_SIGLADefault(){
				
					return null;
				
				}
				public String UNDE_SIGLAComment(){
				
				    return "";
				
				}
				public String UNDE_SIGLAPattern(){
				
					return "";
				
				}
				public String UNDE_SIGLAOriginalDbColumnName(){
				
					return "UNDE_SIGLA";
				
				}

				
			    public String NOMBRE_CIUDAD;

				public String getNOMBRE_CIUDAD () {
					return this.NOMBRE_CIUDAD;
				}

				public Boolean NOMBRE_CIUDADIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_CIUDADIsKey(){
				    return false;
				}
				public Integer NOMBRE_CIUDADLength(){
				    return null;
				}
				public Integer NOMBRE_CIUDADPrecision(){
				    return null;
				}
				public String NOMBRE_CIUDADDefault(){
				
					return null;
				
				}
				public String NOMBRE_CIUDADComment(){
				
				    return "";
				
				}
				public String NOMBRE_CIUDADPattern(){
				
					return "";
				
				}
				public String NOMBRE_CIUDADOriginalDbColumnName(){
				
					return "NOMBRE_CIUDAD";
				
				}

				
			    public String NOMBRE_BARRIO;

				public String getNOMBRE_BARRIO () {
					return this.NOMBRE_BARRIO;
				}

				public Boolean NOMBRE_BARRIOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_BARRIOIsKey(){
				    return false;
				}
				public Integer NOMBRE_BARRIOLength(){
				    return null;
				}
				public Integer NOMBRE_BARRIOPrecision(){
				    return null;
				}
				public String NOMBRE_BARRIODefault(){
				
					return null;
				
				}
				public String NOMBRE_BARRIOComment(){
				
				    return "";
				
				}
				public String NOMBRE_BARRIOPattern(){
				
					return "";
				
				}
				public String NOMBRE_BARRIOOriginalDbColumnName(){
				
					return "NOMBRE_BARRIO";
				
				}

				
			    public String FECHA_RETIRO;

				public String getFECHA_RETIRO () {
					return this.FECHA_RETIRO;
				}

				public Boolean FECHA_RETIROIsNullable(){
				    return true;
				}
				public Boolean FECHA_RETIROIsKey(){
				    return false;
				}
				public Integer FECHA_RETIROLength(){
				    return null;
				}
				public Integer FECHA_RETIROPrecision(){
				    return null;
				}
				public String FECHA_RETIRODefault(){
				
					return null;
				
				}
				public String FECHA_RETIROComment(){
				
				    return "";
				
				}
				public String FECHA_RETIROPattern(){
				
					return "";
				
				}
				public String FECHA_RETIROOriginalDbColumnName(){
				
					return "FECHA_RETIRO";
				
				}

				
			    public String UNDE_FUERZA;

				public String getUNDE_FUERZA () {
					return this.UNDE_FUERZA;
				}

				public Boolean UNDE_FUERZAIsNullable(){
				    return true;
				}
				public Boolean UNDE_FUERZAIsKey(){
				    return false;
				}
				public Integer UNDE_FUERZALength(){
				    return null;
				}
				public Integer UNDE_FUERZAPrecision(){
				    return null;
				}
				public String UNDE_FUERZADefault(){
				
					return null;
				
				}
				public String UNDE_FUERZAComment(){
				
				    return "";
				
				}
				public String UNDE_FUERZAPattern(){
				
					return "";
				
				}
				public String UNDE_FUERZAOriginalDbColumnName(){
				
					return "UNDE_FUERZA";
				
				}

				
			    public String CARG_CARGO;

				public String getCARG_CARGO () {
					return this.CARG_CARGO;
				}

				public Boolean CARG_CARGOIsNullable(){
				    return true;
				}
				public Boolean CARG_CARGOIsKey(){
				    return false;
				}
				public Integer CARG_CARGOLength(){
				    return null;
				}
				public Integer CARG_CARGOPrecision(){
				    return null;
				}
				public String CARG_CARGODefault(){
				
					return null;
				
				}
				public String CARG_CARGOComment(){
				
				    return "";
				
				}
				public String CARG_CARGOPattern(){
				
					return "";
				
				}
				public String CARG_CARGOOriginalDbColumnName(){
				
					return "CARG_CARGO";
				
				}

				
			    public String DESC_CARGO;

				public String getDESC_CARGO () {
					return this.DESC_CARGO;
				}

				public Boolean DESC_CARGOIsNullable(){
				    return true;
				}
				public Boolean DESC_CARGOIsKey(){
				    return false;
				}
				public Integer DESC_CARGOLength(){
				    return null;
				}
				public Integer DESC_CARGOPrecision(){
				    return null;
				}
				public String DESC_CARGODefault(){
				
					return null;
				
				}
				public String DESC_CARGOComment(){
				
				    return "";
				
				}
				public String DESC_CARGOPattern(){
				
					return "";
				
				}
				public String DESC_CARGOOriginalDbColumnName(){
				
					return "DESC_CARGO";
				
				}

				
			    public String CARRE_ID_CARRERA;

				public String getCARRE_ID_CARRERA () {
					return this.CARRE_ID_CARRERA;
				}

				public Boolean CARRE_ID_CARRERAIsNullable(){
				    return true;
				}
				public Boolean CARRE_ID_CARRERAIsKey(){
				    return false;
				}
				public Integer CARRE_ID_CARRERALength(){
				    return null;
				}
				public Integer CARRE_ID_CARRERAPrecision(){
				    return null;
				}
				public String CARRE_ID_CARRERADefault(){
				
					return null;
				
				}
				public String CARRE_ID_CARRERAComment(){
				
				    return "";
				
				}
				public String CARRE_ID_CARRERAPattern(){
				
					return "";
				
				}
				public String CARRE_ID_CARRERAOriginalDbColumnName(){
				
					return "CARRE_ID_CARRERA";
				
				}

				
			    public String DESC_CARRERA;

				public String getDESC_CARRERA () {
					return this.DESC_CARRERA;
				}

				public Boolean DESC_CARRERAIsNullable(){
				    return true;
				}
				public Boolean DESC_CARRERAIsKey(){
				    return false;
				}
				public Integer DESC_CARRERALength(){
				    return null;
				}
				public Integer DESC_CARRERAPrecision(){
				    return null;
				}
				public String DESC_CARRERADefault(){
				
					return null;
				
				}
				public String DESC_CARRERAComment(){
				
				    return "";
				
				}
				public String DESC_CARRERAPattern(){
				
					return "";
				
				}
				public String DESC_CARRERAOriginalDbColumnName(){
				
					return "DESC_CARRERA";
				
				}

				
			    public String TIEMPO;

				public String getTIEMPO () {
					return this.TIEMPO;
				}

				public Boolean TIEMPOIsNullable(){
				    return true;
				}
				public Boolean TIEMPOIsKey(){
				    return false;
				}
				public Integer TIEMPOLength(){
				    return null;
				}
				public Integer TIEMPOPrecision(){
				    return null;
				}
				public String TIEMPODefault(){
				
					return null;
				
				}
				public String TIEMPOComment(){
				
				    return "";
				
				}
				public String TIEMPOPattern(){
				
					return "";
				
				}
				public String TIEMPOOriginalDbColumnName(){
				
					return "TIEMPO";
				
				}

				
			    public String CATEGORIA;

				public String getCATEGORIA () {
					return this.CATEGORIA;
				}

				public Boolean CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean CATEGORIAIsKey(){
				    return false;
				}
				public Integer CATEGORIALength(){
				    return null;
				}
				public Integer CATEGORIAPrecision(){
				    return null;
				}
				public String CATEGORIADefault(){
				
					return null;
				
				}
				public String CATEGORIAComment(){
				
				    return "";
				
				}
				public String CATEGORIAPattern(){
				
					return "";
				
				}
				public String CATEGORIAOriginalDbColumnName(){
				
					return "CATEGORIA";
				
				}

				
			    public String DESC_CATEGORIA;

				public String getDESC_CATEGORIA () {
					return this.DESC_CATEGORIA;
				}

				public Boolean DESC_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean DESC_CATEGORIAIsKey(){
				    return false;
				}
				public Integer DESC_CATEGORIALength(){
				    return null;
				}
				public Integer DESC_CATEGORIAPrecision(){
				    return null;
				}
				public String DESC_CATEGORIADefault(){
				
					return null;
				
				}
				public String DESC_CATEGORIAComment(){
				
				    return "";
				
				}
				public String DESC_CATEGORIAPattern(){
				
					return "";
				
				}
				public String DESC_CATEGORIAOriginalDbColumnName(){
				
					return "DESC_CATEGORIA";
				
				}

				
			    public String REGIMEN;

				public String getREGIMEN () {
					return this.REGIMEN;
				}

				public Boolean REGIMENIsNullable(){
				    return true;
				}
				public Boolean REGIMENIsKey(){
				    return false;
				}
				public Integer REGIMENLength(){
				    return null;
				}
				public Integer REGIMENPrecision(){
				    return null;
				}
				public String REGIMENDefault(){
				
					return null;
				
				}
				public String REGIMENComment(){
				
				    return "";
				
				}
				public String REGIMENPattern(){
				
					return "";
				
				}
				public String REGIMENOriginalDbColumnName(){
				
					return "REGIMEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.FUERZA = readString(dis);
					
					this.CODIGO_MILITAR = readString(dis);
					
					this.APELLIDOS = readString(dis);
					
					this.NOMBRES = readString(dis);
					
					this.IDENTIFICACION = readString(dis);
					
					this.TIPO_IDENTIFICACION = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.ARMA = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.LUGAR_NACIMIENTO = readString(dis);
					
					this.EXPEDICION_DOCUMENTO = readString(dis);
					
					this.EMAIL_PERSONAL = readString(dis);
					
					this.EMAIL_INSTITUCIONAL = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.CIUDAD_RESIDENCIA = readString(dis);
					
					this.LUGAR_CIUDAD_RESIDENCIA = readString(dis);
					
					this.CODIGO_UNIDAD = readString(dis);
					
					this.UNIDAD_LABORAL = readString(dis);
					
					this.UBICACION_UNIDAD = readString(dis);
					
					this.LUGAR_UBICACION_UNIDAD = readString(dis);
					
					this.ESTADO_CIVIL_SIGLA = readString(dis);
					
					this.ESTADO_CIVIL = readString(dis);
					
					this.FUNDAMENTO_LEGAL = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.GENERO_DESCRI = readString(dis);
					
					this.GRUPO_SANGUINEO = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.ACTIVO = readString(dis);
					
					this.UNDE_SIGLA = readString(dis);
					
					this.NOMBRE_CIUDAD = readString(dis);
					
					this.NOMBRE_BARRIO = readString(dis);
					
					this.FECHA_RETIRO = readString(dis);
					
					this.UNDE_FUERZA = readString(dis);
					
					this.CARG_CARGO = readString(dis);
					
					this.DESC_CARGO = readString(dis);
					
					this.CARRE_ID_CARRERA = readString(dis);
					
					this.DESC_CARRERA = readString(dis);
					
					this.TIEMPO = readString(dis);
					
					this.CATEGORIA = readString(dis);
					
					this.DESC_CATEGORIA = readString(dis);
					
					this.REGIMEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.CODIGO_MILITAR,dos);
					
					// String
				
						writeString(this.APELLIDOS,dos);
					
					// String
				
						writeString(this.NOMBRES,dos);
					
					// String
				
						writeString(this.IDENTIFICACION,dos);
					
					// String
				
						writeString(this.TIPO_IDENTIFICACION,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.ARMA,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.LUGAR_NACIMIENTO,dos);
					
					// String
				
						writeString(this.EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.EMAIL_PERSONAL,dos);
					
					// String
				
						writeString(this.EMAIL_INSTITUCIONAL,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.LUGAR_CIUDAD_RESIDENCIA,dos);
					
					// String
				
						writeString(this.CODIGO_UNIDAD,dos);
					
					// String
				
						writeString(this.UNIDAD_LABORAL,dos);
					
					// String
				
						writeString(this.UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.LUGAR_UBICACION_UNIDAD,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL_SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO_CIVIL,dos);
					
					// String
				
						writeString(this.FUNDAMENTO_LEGAL,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.GENERO_DESCRI,dos);
					
					// String
				
						writeString(this.GRUPO_SANGUINEO,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.ACTIVO,dos);
					
					// String
				
						writeString(this.UNDE_SIGLA,dos);
					
					// String
				
						writeString(this.NOMBRE_CIUDAD,dos);
					
					// String
				
						writeString(this.NOMBRE_BARRIO,dos);
					
					// String
				
						writeString(this.FECHA_RETIRO,dos);
					
					// String
				
						writeString(this.UNDE_FUERZA,dos);
					
					// String
				
						writeString(this.CARG_CARGO,dos);
					
					// String
				
						writeString(this.DESC_CARGO,dos);
					
					// String
				
						writeString(this.CARRE_ID_CARRERA,dos);
					
					// String
				
						writeString(this.DESC_CARRERA,dos);
					
					// String
				
						writeString(this.TIEMPO,dos);
					
					// String
				
						writeString(this.CATEGORIA,dos);
					
					// String
				
						writeString(this.DESC_CATEGORIA,dos);
					
					// String
				
						writeString(this.REGIMEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FUERZA="+FUERZA);
		sb.append(",CODIGO_MILITAR="+CODIGO_MILITAR);
		sb.append(",APELLIDOS="+APELLIDOS);
		sb.append(",NOMBRES="+NOMBRES);
		sb.append(",IDENTIFICACION="+IDENTIFICACION);
		sb.append(",TIPO_IDENTIFICACION="+TIPO_IDENTIFICACION);
		sb.append(",GRADO="+GRADO);
		sb.append(",ARMA="+ARMA);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",LUGAR_NACIMIENTO="+LUGAR_NACIMIENTO);
		sb.append(",EXPEDICION_DOCUMENTO="+EXPEDICION_DOCUMENTO);
		sb.append(",EMAIL_PERSONAL="+EMAIL_PERSONAL);
		sb.append(",EMAIL_INSTITUCIONAL="+EMAIL_INSTITUCIONAL);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",CIUDAD_RESIDENCIA="+CIUDAD_RESIDENCIA);
		sb.append(",LUGAR_CIUDAD_RESIDENCIA="+LUGAR_CIUDAD_RESIDENCIA);
		sb.append(",CODIGO_UNIDAD="+CODIGO_UNIDAD);
		sb.append(",UNIDAD_LABORAL="+UNIDAD_LABORAL);
		sb.append(",UBICACION_UNIDAD="+UBICACION_UNIDAD);
		sb.append(",LUGAR_UBICACION_UNIDAD="+LUGAR_UBICACION_UNIDAD);
		sb.append(",ESTADO_CIVIL_SIGLA="+ESTADO_CIVIL_SIGLA);
		sb.append(",ESTADO_CIVIL="+ESTADO_CIVIL);
		sb.append(",FUNDAMENTO_LEGAL="+FUNDAMENTO_LEGAL);
		sb.append(",GENERO="+GENERO);
		sb.append(",GENERO_DESCRI="+GENERO_DESCRI);
		sb.append(",GRUPO_SANGUINEO="+GRUPO_SANGUINEO);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",ACTIVO="+ACTIVO);
		sb.append(",UNDE_SIGLA="+UNDE_SIGLA);
		sb.append(",NOMBRE_CIUDAD="+NOMBRE_CIUDAD);
		sb.append(",NOMBRE_BARRIO="+NOMBRE_BARRIO);
		sb.append(",FECHA_RETIRO="+FECHA_RETIRO);
		sb.append(",UNDE_FUERZA="+UNDE_FUERZA);
		sb.append(",CARG_CARGO="+CARG_CARGO);
		sb.append(",DESC_CARGO="+DESC_CARGO);
		sb.append(",CARRE_ID_CARRERA="+CARRE_ID_CARRERA);
		sb.append(",DESC_CARRERA="+DESC_CARRERA);
		sb.append(",TIEMPO="+TIEMPO);
		sb.append(",CATEGORIA="+CATEGORIA);
		sb.append(",DESC_CATEGORIA="+DESC_CATEGORIA);
		sb.append(",REGIMEN="+REGIMEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row125Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row120Struct implements routines.system.IPersistableRow<row120Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row120Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tREST_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tREST_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_24Process(globalMap);

		row117Struct row117 = new row117Struct();
row123Struct row123 = new row123Struct();

		row122Struct row122 = new row122Struct();
row124Struct row124 = new row124Struct();

		row120Struct row120 = new row120Struct();
row125Struct row125 = new row125Struct();

			row126Struct row126 = new row126Struct();
TST_ARCHIVOStruct TST_ARCHIVO = new TST_ARCHIVOStruct();





	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"TST_ARCHIVO");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
        dbschema_tOracleOutput_2 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("TST_ARCHIVO");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("TST_ARCHIVO");
        }
                String insert_tOracleOutput_2 = "INSERT INTO " + tableName_tOracleOutput_2 + " (PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,TIPO_DE_DOCUMENTO,DOCUMENTO,SEXO,FECHA_NACIMIENTO,ESTADO_CIVIL,DIRECCION,TELEFONO,CORREO_ELECTRONICO,MUNICIPIO_RESIDENCIA,LOCALIDAD_RESIDENCIA,GRUPO_SANGUINEO,FACTOR_RH,CODIGO_ESTABLECIMIENTO,ESTABLECIMIENTO_ADSCRITO,CODIGO_GRDMILITAR,SIGLA_GRDMILITAR,FUERZA_MILITAR,CODIGO_UMILITAR,UNIDAD_MILITAR,ESTADO_AFILIACION,FECHA_FIN_AFILIACION,FECHA_VINCULACION,MUNICIPIO_EXP_DOCUMENTO,CARGADO_SIATH,CATEGORIA,SIGLA_DOCUMENTO) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(insert_tOracleOutput_2);
                        resourceMap.put("pstmt_tOracleOutput_2", pstmt_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row126");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row121Struct> tHash_Lookup_row121 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row121Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row121Struct>) 
					globalMap.get( "tHash_Lookup_row121" ))
					;					
					
	

row121Struct row121HashKey = new row121Struct();
row121Struct row121Default = new row121Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
	int EspacioNombre;
	int EspacioApellido;
	int LongitudNombre;
	int LongitudApellido;
	String FechaNacimiento;
	String FechaVinculacion;
	String FechaCaducidad;
	int CheckFechaNacimiento;
	int CheckFechaVinculacion;
	int CheckFechaCaducidad;
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
TST_ARCHIVOStruct TST_ARCHIVO_tmp = new TST_ARCHIVOStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tUnite_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_1", false);
		start_Hash.put("tUnite_1", System.currentTimeMillis());
		
	
	currentComponent="tUnite_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row124","row125","row123");
					}
				
		int tos_count_tUnite_1 = 0;
		

int nb_line_tUnite_1 = 0;

 



/**
 * [tUnite_1 begin ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_1", false);
		start_Hash.put("tExtractJSONFields_1", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row117");
					}
				
		int tos_count_tExtractJSONFields_1 = 0;
		

int nb_line_tExtractJSONFields_1 = 0;
String jsonStr_tExtractJSONFields_1 = "";

	

class JsonPathCache_tExtractJSONFields_1 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_1 jsonPathCache_tExtractJSONFields_1 = new JsonPathCache_tExtractJSONFields_1();

 



/**
 * [tExtractJSONFields_1 begin ] stop
 */



	
	/**
	 * [tREST_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tREST_1", false);
		start_Hash.put("tREST_1", System.currentTimeMillis());
		
	
	currentComponent="tREST_1";
	
	
		int tos_count_tREST_1 = 0;
		
	

	
	String endpoint_tREST_1 = "https://portalapp.mindefensa.gov.co:8448/EXP_MINDEFENSA/MinDefensaRest/DGSM/infBasicoAlumnos";
	
	String trustStoreFile_tREST_1 = System.getProperty("javax.net.ssl.trustStore");
	String trustStoreType_tREST_1 = System.getProperty("javax.net.ssl.trustStoreType");
	String trustStorePWD_tREST_1 = System.getProperty("javax.net.ssl.trustStorePassword");
	
	String keyStoreFile_tREST_1 = System.getProperty("javax.net.ssl.keyStore");
	String keyStoreType_tREST_1 = System.getProperty("javax.net.ssl.keyStoreType");
	String keyStorePWD_tREST_1 = System.getProperty("javax.net.ssl.keyStorePassword");
	
	com.sun.jersey.api.client.config.ClientConfig config_tREST_1 = new com.sun.jersey.api.client.config.DefaultClientConfig();
	
	// APPINT-33909: add entitiy providers (for OSGi deployment)
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.StringProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.FileProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.InputStreamProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.DataSourceProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.MimeMultipartProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.FormProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.ReaderProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.DocumentProvider.class);
	config_tREST_1.getClasses().add(com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.class);
	
	javax.net.ssl.SSLContext ctx_tREST_1 = javax.net.ssl.SSLContext.getInstance("SSL");
	
	javax.net.ssl.TrustManager[] tms_tREST_1 = null;
	if(trustStoreFile_tREST_1!=null && trustStoreType_tREST_1!=null){
		char[] password_tREST_1 = null;
		if(trustStorePWD_tREST_1!=null)
			password_tREST_1 = trustStorePWD_tREST_1.toCharArray();
		java.security.KeyStore trustStore_tREST_1 = java.security.KeyStore.getInstance(trustStoreType_tREST_1);
		trustStore_tREST_1.load(new java.io.FileInputStream(trustStoreFile_tREST_1), password_tREST_1);
		
		javax.net.ssl.TrustManagerFactory tmf_tREST_1 = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        tmf_tREST_1.init(trustStore_tREST_1);
        tms_tREST_1 = tmf_tREST_1.getTrustManagers();
	}
	
	javax.net.ssl.KeyManager[] kms_tREST_1 = null;
	if(keyStoreFile_tREST_1!=null && keyStoreType_tREST_1!=null){
		char[] password_tREST_1 = null;
		if(keyStorePWD_tREST_1!=null)
			password_tREST_1 = keyStorePWD_tREST_1.toCharArray();
		java.security.KeyStore keyStore_tREST_1 = java.security.KeyStore.getInstance(keyStoreType_tREST_1);
		keyStore_tREST_1.load(new java.io.FileInputStream(keyStoreFile_tREST_1), password_tREST_1);
		
		javax.net.ssl.KeyManagerFactory kmf_tREST_1 = javax.net.ssl.KeyManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        kmf_tREST_1.init(keyStore_tREST_1,password_tREST_1);
        kms_tREST_1 = kmf_tREST_1.getKeyManagers();
	}
	
    ctx_tREST_1.init(kms_tREST_1, tms_tREST_1 , null);
    config_tREST_1.getProperties().put(com.sun.jersey.client.urlconnection.HTTPSProperties.PROPERTY_HTTPS_PROPERTIES,
                new com.sun.jersey.client.urlconnection.HTTPSProperties(new javax.net.ssl.HostnameVerifier() {

                    public boolean verify(String hostName, javax.net.ssl.SSLSession session) {
                        return true;
                    }
                }, ctx_tREST_1));

	com.sun.jersey.api.client.Client restClient_tREST_1 = com.sun.jersey.api.client.Client.create(config_tREST_1);
	
	java.util.Map<String, Object> headers_tREST_1 = new java.util.HashMap<String, Object>();
	
    	headers_tREST_1.put("idTransaccion",1234);
	
    	headers_tREST_1.put("sistemaOrigen","DGSM");
	
    	headers_tREST_1.put("usuario","WSDGSM");
	
    	headers_tREST_1.put("clave","C@rg@m@siv@06022017*");
	
    	headers_tREST_1.put("fechaInvocacion","2020-07-27T20:14:34.325-05:00");
	
    	headers_tREST_1.put("idTraza","");
	
    	headers_tREST_1.put("direccionIpCliente","172.23.22.38");
	
    	headers_tREST_1.put("direccionIpServidor","172.23.22.38");
	
    	headers_tREST_1.put("direccionMacCliente","172.23.22.38");
	
    	headers_tREST_1.put("direccionMacServidor","172.23.22.38");
	
    	headers_tREST_1.put("accion",1);
	
    	headers_tREST_1.put("sistemaDestino","SIATH");
	
    	headers_tREST_1.put("nombreServicio","MINDEF");
	
    	headers_tREST_1.put("canal",1);
	
    	headers_tREST_1.put("componente","cp");
	
	
	Object transfer_encoding_tREST_1 = headers_tREST_1.get("Transfer-Encoding");
	if(transfer_encoding_tREST_1!=null && "chunked".equals(transfer_encoding_tREST_1)) {
		restClient_tREST_1.setChunkedEncodingSize(4096);
	}
	
	com.sun.jersey.api.client.WebResource restResource_tREST_1;
	if(endpoint_tREST_1!=null && !("").equals(endpoint_tREST_1)){
		restResource_tREST_1 = restClient_tREST_1.resource(endpoint_tREST_1);
	}else{
		throw new IllegalArgumentException("url can't be empty!");
	}
	
	com.sun.jersey.api.client.ClientResponse errorResponse_tREST_1 = null;
	String restResponse_tREST_1 = "";
	try{
		
		com.sun.jersey.api.client.WebResource.Builder builder_tREST_1 = null;
		for(java.util.Map.Entry<String, Object> header_tREST_1 : headers_tREST_1.entrySet()) {
			if(builder_tREST_1 == null) {
				builder_tREST_1 = restResource_tREST_1.header(header_tREST_1.getKey(), header_tREST_1.getValue());
			} else {
				builder_tREST_1.header(header_tREST_1.getKey(), header_tREST_1.getValue());
			}
		}
		
		
			if(builder_tREST_1!=null) {
				restResponse_tREST_1 = builder_tREST_1.get(String.class);
			} else {
				restResponse_tREST_1 = restResource_tREST_1.get(String.class);
			} 
			
		
	}catch (com.sun.jersey.api.client.UniformInterfaceException ue) {
globalMap.put("tREST_1_ERROR_MESSAGE",ue.getMessage());
        errorResponse_tREST_1 = ue.getResponse();
    }
	
	// for output
			
				row117 = new row117Struct();
				if(errorResponse_tREST_1!=null){
					row117.ERROR_CODE = errorResponse_tREST_1.getStatus();
					if(row117.ERROR_CODE!=204){
					    row117.Body = errorResponse_tREST_1.getEntity(String.class);
					}
				}else{
					row117.Body = restResponse_tREST_1;
				}
			

 



/**
 * [tREST_1 begin ] stop
 */
	
	/**
	 * [tREST_1 main ] start
	 */

	

	
	
	currentComponent="tREST_1";
	
	

 


	tos_count_tREST_1++;

/**
 * [tREST_1 main ] stop
 */
	
	/**
	 * [tREST_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tREST_1";
	
	

 



/**
 * [tREST_1 process_data_begin ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row117"
						
						);
					}
					

            if(row117.Body!=null){// C_01
                jsonStr_tExtractJSONFields_1 = row117.Body.toString();
   
row123 = null;

	

String loopPath_tExtractJSONFields_1 = "$.Cursor.Row[*]";
java.util.List<Object> resultset_tExtractJSONFields_1 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_1 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_1 = null;
try {
	document_tExtractJSONFields_1 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_1);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(loopPath_tExtractJSONFields_1);
	Object result_tExtractJSONFields_1 = document_tExtractJSONFields_1.read(compiledLoopPath_tExtractJSONFields_1,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_1 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_1 = (net.minidev.json.JSONArray) result_tExtractJSONFields_1;
	} else {
		resultset_tExtractJSONFields_1.add(result_tExtractJSONFields_1);
	}
	
	isStructError_tExtractJSONFields_1 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",ex_tExtractJSONFields_1.getMessage());
		System.err.println(ex_tExtractJSONFields_1.getMessage());
}

String jsonPath_tExtractJSONFields_1 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_1 = null;

Object value_tExtractJSONFields_1 = null;

Object root_tExtractJSONFields_1 = null;
for(int i_tExtractJSONFields_1=0; isStructError_tExtractJSONFields_1 || (i_tExtractJSONFields_1 < resultset_tExtractJSONFields_1.size());i_tExtractJSONFields_1++){
	if(!isStructError_tExtractJSONFields_1){
		Object row_tExtractJSONFields_1 = resultset_tExtractJSONFields_1.get(i_tExtractJSONFields_1);
            row123 = null;
	row123 = new row123Struct();
	nb_line_tExtractJSONFields_1++;
	try {
		jsonPath_tExtractJSONFields_1 = "FUERZA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FUERZA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CODIGO_MILITAR";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CODIGO_MILITAR = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CODIGO_MILITAR = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "APELLIDOS";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.APELLIDOS = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.APELLIDOS = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "NOMBRES";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.NOMBRES = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.NOMBRES = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.IDENTIFICACION = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "TIPO_IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.TIPO_IDENTIFICACION = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.TIPO_IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "GRADO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.GRADO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.GRADO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "ARMA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.ARMA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.ARMA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "FECHA_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FECHA_NACIMIENTO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FECHA_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "LUGAR_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.LUGAR_NACIMIENTO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.LUGAR_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "EXPEDICION_DOCUMENTO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.EXPEDICION_DOCUMENTO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.EXPEDICION_DOCUMENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "EMAIL_PERSONAL";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.EMAIL_PERSONAL = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.EMAIL_PERSONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "EMAIL_INSTITUCIONAL";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.EMAIL_INSTITUCIONAL = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.EMAIL_INSTITUCIONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "TELEFONO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.TELEFONO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.TELEFONO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "DIRECCION";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.DIRECCION = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.DIRECCION = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "FECHA_INGRESO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FECHA_INGRESO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FECHA_INGRESO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CIUDAD_RESIDENCIA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "LUGAR_CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.LUGAR_CIUDAD_RESIDENCIA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.LUGAR_CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CODIGO_UNIDAD_NOMINA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CODIGO_UNIDAD = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CODIGO_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "UNIDAD_LABORAL";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.UNIDAD_LABORAL = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.UNIDAD_LABORAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.UBICACION_UNIDAD = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "LUGAR_UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.LUGAR_UBICACION_UNIDAD = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.LUGAR_UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "ESTADO_CIVIL_SIGLA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.ESTADO_CIVIL_SIGLA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.ESTADO_CIVIL_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "ESTADO_CIVIL";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.ESTADO_CIVIL = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.ESTADO_CIVIL = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "FUNDAMENTO_LEGAL";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FUNDAMENTO_LEGAL = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FUNDAMENTO_LEGAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "GENERO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.GENERO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.GENERO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "GENERO_DESCRI";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.GENERO_DESCRI = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.GENERO_DESCRI = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "GRUPO_SANGUINEO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.GRUPO_SANGUINEO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.GRUPO_SANGUINEO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "FACTOR_RH";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FACTOR_RH = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FACTOR_RH = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "ACTIVO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.ACTIVO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.ACTIVO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "UNDE_SIGLA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.UNDE_SIGLA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.UNDE_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "NOMBRE_CIUDAD";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.NOMBRE_CIUDAD = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.NOMBRE_CIUDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "NOMBRE_BARRIO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.NOMBRE_BARRIO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.NOMBRE_BARRIO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "FECHA_RETIRO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.FECHA_RETIRO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.FECHA_RETIRO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "UNDE_FUERZA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.UNDE_FUERZA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.UNDE_FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CARG_CARGO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CARG_CARGO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CARG_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "DESC_CARGO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.DESC_CARGO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.DESC_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CARRE_ID_CARRERA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CARRE_ID_CARRERA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CARRE_ID_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "DESC_CARRERA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.DESC_CARRERA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.DESC_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "TIEMPO";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.TIEMPO = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.TIEMPO = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "CATEGORIA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.CATEGORIA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "DESC_CATEGORIA";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.DESC_CATEGORIA = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.DESC_CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "REGIMEN";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row123.REGIMEN = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",e_tExtractJSONFields_1.getMessage());
			row123.REGIMEN = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_1) {
globalMap.put("tExtractJSONFields_1_ERROR_MESSAGE",ex_tExtractJSONFields_1.getMessage());
		    System.err.println(ex_tExtractJSONFields_1.getMessage());
		    row123 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_1 = false;
	
//}


 


	tos_count_tExtractJSONFields_1++;

/**
 * [tExtractJSONFields_1 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";
	
	

 



/**
 * [tExtractJSONFields_1 process_data_begin ] stop
 */
// Start of branch "row123"
if(row123 != null) { 



	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row123"
									
							);
						}
						
//////////
 

// for output
			row126 = new row126Struct();
								
			row126.FUERZA = row123.FUERZA;								
			row126.CODIGO_MILITAR = row123.CODIGO_MILITAR;								
			row126.APELLIDOS = row123.APELLIDOS;								
			row126.NOMBRES = row123.NOMBRES;								
			row126.IDENTIFICACION = row123.IDENTIFICACION;								
			row126.TIPO_IDENTIFICACION = row123.TIPO_IDENTIFICACION;								
			row126.GRADO = row123.GRADO;								
			row126.ARMA = row123.ARMA;								
			row126.FECHA_NACIMIENTO = row123.FECHA_NACIMIENTO;								
			row126.LUGAR_NACIMIENTO = row123.LUGAR_NACIMIENTO;								
			row126.EXPEDICION_DOCUMENTO = row123.EXPEDICION_DOCUMENTO;								
			row126.EMAIL_PERSONAL = row123.EMAIL_PERSONAL;								
			row126.EMAIL_INSTITUCIONAL = row123.EMAIL_INSTITUCIONAL;								
			row126.TELEFONO = row123.TELEFONO;								
			row126.DIRECCION = row123.DIRECCION;								
			row126.FECHA_INGRESO = row123.FECHA_INGRESO;								
			row126.CIUDAD_RESIDENCIA = row123.CIUDAD_RESIDENCIA;								
			row126.LUGAR_CIUDAD_RESIDENCIA = row123.LUGAR_CIUDAD_RESIDENCIA;								
			row126.CODIGO_UNIDAD = row123.CODIGO_UNIDAD;								
			row126.UNIDAD_LABORAL = row123.UNIDAD_LABORAL;								
			row126.UBICACION_UNIDAD = row123.UBICACION_UNIDAD;								
			row126.LUGAR_UBICACION_UNIDAD = row123.LUGAR_UBICACION_UNIDAD;								
			row126.ESTADO_CIVIL_SIGLA = row123.ESTADO_CIVIL_SIGLA;								
			row126.ESTADO_CIVIL = row123.ESTADO_CIVIL;								
			row126.FUNDAMENTO_LEGAL = row123.FUNDAMENTO_LEGAL;								
			row126.GENERO = row123.GENERO;								
			row126.GENERO_DESCRI = row123.GENERO_DESCRI;								
			row126.GRUPO_SANGUINEO = row123.GRUPO_SANGUINEO;								
			row126.FACTOR_RH = row123.FACTOR_RH;								
			row126.ACTIVO = row123.ACTIVO;								
			row126.UNDE_SIGLA = row123.UNDE_SIGLA;								
			row126.NOMBRE_CIUDAD = row123.NOMBRE_CIUDAD;								
			row126.NOMBRE_BARRIO = row123.NOMBRE_BARRIO;								
			row126.FECHA_RETIRO = row123.FECHA_RETIRO;								
			row126.UNDE_FUERZA = row123.UNDE_FUERZA;								
			row126.CARG_CARGO = row123.CARG_CARGO;								
			row126.DESC_CARGO = row123.DESC_CARGO;								
			row126.CARRE_ID_CARRERA = row123.CARRE_ID_CARRERA;								
			row126.DESC_CARRERA = row123.DESC_CARRERA;								
			row126.TIEMPO = row123.TIEMPO;								
			row126.CATEGORIA = row123.CATEGORIA;								
			row126.DESC_CATEGORIA = row123.DESC_CATEGORIA;								
			row126.REGIMEN = row123.REGIMEN;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row126"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row121Struct row121 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row121" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow121 = false;
       		  	    	
       		  	    	
 							row121Struct row121ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row121HashKey.SIGLA = StringHandling.TRIM(StringHandling.UPCASE(row126.TIPO_IDENTIFICACION)) ;
                        		    		

								
		                        	row121HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row121.lookup( row121HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row121 != null && tHash_Lookup_row121.getCount(row121HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row121' and it contains more one result from keys :  row121.SIGLA = '" + row121HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row121Struct fromLookup_row121 = null;
							row121 = row121Default;
										 
							
								 
							
							
								if (tHash_Lookup_row121 !=null && tHash_Lookup_row121.hasNext()) { // G 099
								
							
								
								fromLookup_row121 = tHash_Lookup_row121.next();

							
							
								} // G 099
							
							

							if(fromLookup_row121 != null) {
								row121 = fromLookup_row121;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;
Var.EspacioNombre = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.NOMBRES), " ".charAt(0)) ;
Var.EspacioApellido = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.APELLIDOS), " ".charAt(0)) ;
Var.LongitudNombre = StringHandling.TRIM(row126.NOMBRES).length() ;
Var.LongitudApellido = StringHandling.TRIM(row126.APELLIDOS).length() ;
Var.FechaNacimiento = row126.FECHA_NACIMIENTO ;
Var.FechaVinculacion = row126.FECHA_INGRESO ;
Var.FechaCaducidad = row126.FECHA_RETIRO ;
Var.CheckFechaNacimiento = (Var.FechaNacimiento != null && (!Var.FechaNacimiento.equals("")) ) ?
(TalendDate.isDate(Var.FechaNacimiento,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaVinculacion = (Var.FechaVinculacion != null && (!Var.FechaVinculacion.equals("")) ) ?
(TalendDate.isDate(Var.FechaVinculacion,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaCaducidad = (Var.FechaCaducidad != null && (!Var.FechaCaducidad.equals("")) ) ?
(TalendDate.isDate(Var.FechaCaducidad,"dd/mm/yyyy") == true?
1:0):0 ;// ###############################
        // ###############################
        // # Output tables

TST_ARCHIVO = null;


// # Output table : 'TST_ARCHIVO'
TST_ARCHIVO_tmp.PRIMER_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.NOMBRES,Var.EspacioNombre))) ;
TST_ARCHIVO_tmp.SEGUNDO_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.NOMBRES,(Var.LongitudNombre - Var.EspacioNombre)))) ;
TST_ARCHIVO_tmp.PRIMER_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.APELLIDOS,Var.EspacioApellido))) ;
TST_ARCHIVO_tmp.SEGUNDO_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.APELLIDOS,(Var.LongitudApellido - Var.EspacioApellido)))) ;
TST_ARCHIVO_tmp.TIPO_DE_DOCUMENTO = row121.SIGLA_SALUDSIS ;
TST_ARCHIVO_tmp.DOCUMENTO = row126.IDENTIFICACION ;
TST_ARCHIVO_tmp.SEXO = row126.GENERO;
TST_ARCHIVO_tmp.FECHA_NACIMIENTO = Var.FechaNacimiento ;
TST_ARCHIVO_tmp.ESTADO_CIVIL = row126.ESTADO_CIVIL;
TST_ARCHIVO_tmp.DIRECCION = StringHandling.TRIM(StringHandling.UPCASE(row126.DIRECCION)) ;
TST_ARCHIVO_tmp.TELEFONO = row126.TELEFONO;
TST_ARCHIVO_tmp.CORREO_ELECTRONICO = row126.EMAIL_PERSONAL;
TST_ARCHIVO_tmp.MUNICIPIO_RESIDENCIA = row126.CIUDAD_RESIDENCIA;
TST_ARCHIVO_tmp.LOCALIDAD_RESIDENCIA = StringHandling.TRIM(StringHandling.UPCASE(row126.NOMBRE_BARRIO)) ;
TST_ARCHIVO_tmp.GRUPO_SANGUINEO = row126.GRUPO_SANGUINEO;
TST_ARCHIVO_tmp.FACTOR_RH = row126.FACTOR_RH;
TST_ARCHIVO_tmp.CODIGO_ESTABLECIMIENTO = null;
TST_ARCHIVO_tmp.ESTABLECIMIENTO_ADSCRITO = null;
TST_ARCHIVO_tmp.CODIGO_GRDMILITAR = null;
TST_ARCHIVO_tmp.SIGLA_GRDMILITAR = row126.GRADO;
TST_ARCHIVO_tmp.FUERZA_MILITAR = row126.FUERZA;
TST_ARCHIVO_tmp.CODIGO_UMILITAR = row126.CODIGO_UNIDAD ;
TST_ARCHIVO_tmp.UNIDAD_MILITAR = StringHandling.TRIM(StringHandling.UPCASE(row126.UNDE_SIGLA)) ;
TST_ARCHIVO_tmp.ESTADO_AFILIACION = row126.ACTIVO;
TST_ARCHIVO_tmp.FECHA_FIN_AFILIACION = Var.FechaCaducidad ;
TST_ARCHIVO_tmp.FECHA_VINCULACION = Var.FechaVinculacion ;
TST_ARCHIVO_tmp.MUNICIPIO_EXP_DOCUMENTO = row126.EXPEDICION_DOCUMENTO;
TST_ARCHIVO_tmp.CARGADO_SIATH = (Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 0) ? 2 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 3 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 4 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 5 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 6 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 7 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 8 : 0 ;
TST_ARCHIVO_tmp.CATEGORIA = Integer.parseInt(row126.CATEGORIA) ;
TST_ARCHIVO_tmp.SIGLA_DOCUMENTO = row126.TIPO_IDENTIFICACION;
TST_ARCHIVO = TST_ARCHIVO_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "TST_ARCHIVO"
if(TST_ARCHIVO != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TST_ARCHIVO"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(TST_ARCHIVO.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(1, TST_ARCHIVO.PRIMER_NOMBRE);
}

                        if(TST_ARCHIVO.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2, TST_ARCHIVO.SEGUNDO_NOMBRE);
}

                        if(TST_ARCHIVO.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(3, TST_ARCHIVO.PRIMER_APELLIDO);
}

                        if(TST_ARCHIVO.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(4, TST_ARCHIVO.SEGUNDO_APELLIDO);
}

                        if(TST_ARCHIVO.TIPO_DE_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(5, TST_ARCHIVO.TIPO_DE_DOCUMENTO);
}

                        if(TST_ARCHIVO.DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(6, TST_ARCHIVO.DOCUMENTO);
}

                        if(TST_ARCHIVO.SEXO == null) {
pstmt_tOracleOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(7, TST_ARCHIVO.SEXO);
}

                        if(TST_ARCHIVO.FECHA_NACIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(8, TST_ARCHIVO.FECHA_NACIMIENTO);
}

                        if(TST_ARCHIVO.ESTADO_CIVIL == null) {
pstmt_tOracleOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(9, TST_ARCHIVO.ESTADO_CIVIL);
}

                        if(TST_ARCHIVO.DIRECCION == null) {
pstmt_tOracleOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(10, TST_ARCHIVO.DIRECCION);
}

                        if(TST_ARCHIVO.TELEFONO == null) {
pstmt_tOracleOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(11, TST_ARCHIVO.TELEFONO);
}

                        if(TST_ARCHIVO.CORREO_ELECTRONICO == null) {
pstmt_tOracleOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(12, TST_ARCHIVO.CORREO_ELECTRONICO);
}

                        if(TST_ARCHIVO.MUNICIPIO_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(13, TST_ARCHIVO.MUNICIPIO_RESIDENCIA);
}

                        if(TST_ARCHIVO.LOCALIDAD_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(14, TST_ARCHIVO.LOCALIDAD_RESIDENCIA);
}

                        if(TST_ARCHIVO.GRUPO_SANGUINEO == null) {
pstmt_tOracleOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(15, TST_ARCHIVO.GRUPO_SANGUINEO);
}

                        if(TST_ARCHIVO.FACTOR_RH == null) {
pstmt_tOracleOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(16, TST_ARCHIVO.FACTOR_RH);
}

                        if(TST_ARCHIVO.CODIGO_ESTABLECIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(17, TST_ARCHIVO.CODIGO_ESTABLECIMIENTO);
}

                        if(TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO == null) {
pstmt_tOracleOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(18, TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO);
}

                        if(TST_ARCHIVO.CODIGO_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(19, TST_ARCHIVO.CODIGO_GRDMILITAR);
}

                        if(TST_ARCHIVO.SIGLA_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(20, TST_ARCHIVO.SIGLA_GRDMILITAR);
}

                        if(TST_ARCHIVO.FUERZA_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(21, TST_ARCHIVO.FUERZA_MILITAR);
}

                        if(TST_ARCHIVO.CODIGO_UMILITAR == null) {
pstmt_tOracleOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(22, TST_ARCHIVO.CODIGO_UMILITAR);
}

                        if(TST_ARCHIVO.UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(23, TST_ARCHIVO.UNIDAD_MILITAR);
}

                        if(TST_ARCHIVO.ESTADO_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(24, TST_ARCHIVO.ESTADO_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_FIN_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(25, TST_ARCHIVO.FECHA_FIN_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_VINCULACION == null) {
pstmt_tOracleOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(26, TST_ARCHIVO.FECHA_VINCULACION);
}

                        if(TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(27, TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO);
}

                        if(TST_ARCHIVO.CARGADO_SIATH == null) {
pstmt_tOracleOutput_2.setNull(28, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(28, TST_ARCHIVO.CARGADO_SIATH);
}

                        if(TST_ARCHIVO.CATEGORIA == null) {
pstmt_tOracleOutput_2.setNull(29, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(29, TST_ARCHIVO.CATEGORIA);
}

                        if(TST_ARCHIVO.SIGLA_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(30, TST_ARCHIVO.SIGLA_DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }
            if(!whetherReject_tOracleOutput_2) {
            }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "TST_ARCHIVO"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */

} // End of branch "row123"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";
	
	

 



/**
 * [tExtractJSONFields_1 process_data_end ] stop
 */



	
	/**
	 * [tREST_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tREST_1";
	
	

 



/**
 * [tREST_1 process_data_end ] stop
 */
	
	/**
	 * [tREST_1 end ] start
	 */

	

	
	
	currentComponent="tREST_1";
	
	

 

ok_Hash.put("tREST_1", true);
end_Hash.put("tREST_1", System.currentTimeMillis());




/**
 * [tREST_1 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";
	
	
   globalMap.put("tExtractJSONFields_1_NB_LINE", nb_line_tExtractJSONFields_1);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row117");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_1", true);
end_Hash.put("tExtractJSONFields_1", System.currentTimeMillis());




/**
 * [tExtractJSONFields_1 end ] stop
 */




	
	/**
	 * [tExtractJSONFields_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_2", false);
		start_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row122");
					}
				
		int tos_count_tExtractJSONFields_2 = 0;
		

int nb_line_tExtractJSONFields_2 = 0;
String jsonStr_tExtractJSONFields_2 = "";

	

class JsonPathCache_tExtractJSONFields_2 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_2 jsonPathCache_tExtractJSONFields_2 = new JsonPathCache_tExtractJSONFields_2();

 



/**
 * [tExtractJSONFields_2 begin ] stop
 */



	
	/**
	 * [tREST_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tREST_2", false);
		start_Hash.put("tREST_2", System.currentTimeMillis());
		
	
	currentComponent="tREST_2";
	
	
		int tos_count_tREST_2 = 0;
		
	

	
	String endpoint_tREST_2 = "https://portalapp.mindefensa.gov.co:8448/EXP_MINDEFENSA/MinDefensaRest/DGSM/infBasicoAlumnosJ";
	
	String trustStoreFile_tREST_2 = System.getProperty("javax.net.ssl.trustStore");
	String trustStoreType_tREST_2 = System.getProperty("javax.net.ssl.trustStoreType");
	String trustStorePWD_tREST_2 = System.getProperty("javax.net.ssl.trustStorePassword");
	
	String keyStoreFile_tREST_2 = System.getProperty("javax.net.ssl.keyStore");
	String keyStoreType_tREST_2 = System.getProperty("javax.net.ssl.keyStoreType");
	String keyStorePWD_tREST_2 = System.getProperty("javax.net.ssl.keyStorePassword");
	
	com.sun.jersey.api.client.config.ClientConfig config_tREST_2 = new com.sun.jersey.api.client.config.DefaultClientConfig();
	
	// APPINT-33909: add entitiy providers (for OSGi deployment)
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.StringProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.FileProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.InputStreamProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.DataSourceProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.MimeMultipartProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.FormProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.ReaderProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.DocumentProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.class);
	
	javax.net.ssl.SSLContext ctx_tREST_2 = javax.net.ssl.SSLContext.getInstance("SSL");
	
	javax.net.ssl.TrustManager[] tms_tREST_2 = null;
	if(trustStoreFile_tREST_2!=null && trustStoreType_tREST_2!=null){
		char[] password_tREST_2 = null;
		if(trustStorePWD_tREST_2!=null)
			password_tREST_2 = trustStorePWD_tREST_2.toCharArray();
		java.security.KeyStore trustStore_tREST_2 = java.security.KeyStore.getInstance(trustStoreType_tREST_2);
		trustStore_tREST_2.load(new java.io.FileInputStream(trustStoreFile_tREST_2), password_tREST_2);
		
		javax.net.ssl.TrustManagerFactory tmf_tREST_2 = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        tmf_tREST_2.init(trustStore_tREST_2);
        tms_tREST_2 = tmf_tREST_2.getTrustManagers();
	}
	
	javax.net.ssl.KeyManager[] kms_tREST_2 = null;
	if(keyStoreFile_tREST_2!=null && keyStoreType_tREST_2!=null){
		char[] password_tREST_2 = null;
		if(keyStorePWD_tREST_2!=null)
			password_tREST_2 = keyStorePWD_tREST_2.toCharArray();
		java.security.KeyStore keyStore_tREST_2 = java.security.KeyStore.getInstance(keyStoreType_tREST_2);
		keyStore_tREST_2.load(new java.io.FileInputStream(keyStoreFile_tREST_2), password_tREST_2);
		
		javax.net.ssl.KeyManagerFactory kmf_tREST_2 = javax.net.ssl.KeyManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        kmf_tREST_2.init(keyStore_tREST_2,password_tREST_2);
        kms_tREST_2 = kmf_tREST_2.getKeyManagers();
	}
	
    ctx_tREST_2.init(kms_tREST_2, tms_tREST_2 , null);
    config_tREST_2.getProperties().put(com.sun.jersey.client.urlconnection.HTTPSProperties.PROPERTY_HTTPS_PROPERTIES,
                new com.sun.jersey.client.urlconnection.HTTPSProperties(new javax.net.ssl.HostnameVerifier() {

                    public boolean verify(String hostName, javax.net.ssl.SSLSession session) {
                        return true;
                    }
                }, ctx_tREST_2));

	com.sun.jersey.api.client.Client restClient_tREST_2 = com.sun.jersey.api.client.Client.create(config_tREST_2);
	
	java.util.Map<String, Object> headers_tREST_2 = new java.util.HashMap<String, Object>();
	
    	headers_tREST_2.put("idTransaccion",1234);
	
    	headers_tREST_2.put("sistemaOrigen","DGSM");
	
    	headers_tREST_2.put("usuario","WSDGSM");
	
    	headers_tREST_2.put("clave","C@rg@m@siv@06022017*");
	
    	headers_tREST_2.put("fechaInvocacion","2020-07-27T20:14:34.325-05:00");
	
    	headers_tREST_2.put("idTraza","");
	
    	headers_tREST_2.put("direccionIpCliente","172.23.22.38");
	
    	headers_tREST_2.put("direccionIpServidor","172.23.22.38");
	
    	headers_tREST_2.put("direccionMacCliente","172.23.22.38");
	
    	headers_tREST_2.put("direccionMacServidor","172.23.22.38");
	
    	headers_tREST_2.put("accion",1);
	
    	headers_tREST_2.put("sistemaDestino","SIATH");
	
    	headers_tREST_2.put("nombreServicio","MINDEF");
	
    	headers_tREST_2.put("canal",1);
	
    	headers_tREST_2.put("componente","cp");
	
	
	Object transfer_encoding_tREST_2 = headers_tREST_2.get("Transfer-Encoding");
	if(transfer_encoding_tREST_2!=null && "chunked".equals(transfer_encoding_tREST_2)) {
		restClient_tREST_2.setChunkedEncodingSize(4096);
	}
	
	com.sun.jersey.api.client.WebResource restResource_tREST_2;
	if(endpoint_tREST_2!=null && !("").equals(endpoint_tREST_2)){
		restResource_tREST_2 = restClient_tREST_2.resource(endpoint_tREST_2);
	}else{
		throw new IllegalArgumentException("url can't be empty!");
	}
	
	com.sun.jersey.api.client.ClientResponse errorResponse_tREST_2 = null;
	String restResponse_tREST_2 = "";
	try{
		
		com.sun.jersey.api.client.WebResource.Builder builder_tREST_2 = null;
		for(java.util.Map.Entry<String, Object> header_tREST_2 : headers_tREST_2.entrySet()) {
			if(builder_tREST_2 == null) {
				builder_tREST_2 = restResource_tREST_2.header(header_tREST_2.getKey(), header_tREST_2.getValue());
			} else {
				builder_tREST_2.header(header_tREST_2.getKey(), header_tREST_2.getValue());
			}
		}
		
		
			if(builder_tREST_2!=null) {
				restResponse_tREST_2 = builder_tREST_2.get(String.class);
			} else {
				restResponse_tREST_2 = restResource_tREST_2.get(String.class);
			} 
			
		
	}catch (com.sun.jersey.api.client.UniformInterfaceException ue) {
globalMap.put("tREST_2_ERROR_MESSAGE",ue.getMessage());
        errorResponse_tREST_2 = ue.getResponse();
    }
	
	// for output
			
				row122 = new row122Struct();
				if(errorResponse_tREST_2!=null){
					row122.ERROR_CODE = errorResponse_tREST_2.getStatus();
					if(row122.ERROR_CODE!=204){
					    row122.Body = errorResponse_tREST_2.getEntity(String.class);
					}
				}else{
					row122.Body = restResponse_tREST_2;
				}
			

 



/**
 * [tREST_2 begin ] stop
 */
	
	/**
	 * [tREST_2 main ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 


	tos_count_tREST_2++;

/**
 * [tREST_2 main ] stop
 */
	
	/**
	 * [tREST_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 process_data_begin ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row122"
						
						);
					}
					

            if(row122.Body!=null){// C_01
                jsonStr_tExtractJSONFields_2 = row122.Body.toString();
   
row124 = null;

	

String loopPath_tExtractJSONFields_2 = "$.Cursor.Row[*]";
java.util.List<Object> resultset_tExtractJSONFields_2 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_2 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_2 = null;
try {
	document_tExtractJSONFields_2 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_2);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(loopPath_tExtractJSONFields_2);
	Object result_tExtractJSONFields_2 = document_tExtractJSONFields_2.read(compiledLoopPath_tExtractJSONFields_2,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_2 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_2 = (net.minidev.json.JSONArray) result_tExtractJSONFields_2;
	} else {
		resultset_tExtractJSONFields_2.add(result_tExtractJSONFields_2);
	}
	
	isStructError_tExtractJSONFields_2 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",ex_tExtractJSONFields_2.getMessage());
		System.err.println(ex_tExtractJSONFields_2.getMessage());
}

String jsonPath_tExtractJSONFields_2 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_2 = null;

Object value_tExtractJSONFields_2 = null;

Object root_tExtractJSONFields_2 = null;
for(int i_tExtractJSONFields_2=0; isStructError_tExtractJSONFields_2 || (i_tExtractJSONFields_2 < resultset_tExtractJSONFields_2.size());i_tExtractJSONFields_2++){
	if(!isStructError_tExtractJSONFields_2){
		Object row_tExtractJSONFields_2 = resultset_tExtractJSONFields_2.get(i_tExtractJSONFields_2);
            row124 = null;
	row124 = new row124Struct();
	nb_line_tExtractJSONFields_2++;
	try {
		jsonPath_tExtractJSONFields_2 = "FUERZA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FUERZA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CODIGO_MILITAR";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CODIGO_MILITAR = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CODIGO_MILITAR = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "APELLIDOS";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.APELLIDOS = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.APELLIDOS = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "NOMBRES";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.NOMBRES = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.NOMBRES = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.IDENTIFICACION = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "TIPO_IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.TIPO_IDENTIFICACION = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.TIPO_IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "GRADO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.GRADO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.GRADO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "ARMA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.ARMA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.ARMA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "FECHA_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FECHA_NACIMIENTO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FECHA_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "LUGAR_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.LUGAR_NACIMIENTO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.LUGAR_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "EXPEDICION_DOCUMENTO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.EXPEDICION_DOCUMENTO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.EXPEDICION_DOCUMENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "EMAIL_PERSONAL";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.EMAIL_PERSONAL = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.EMAIL_PERSONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "EMAIL_INSTITUCIONAL";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.EMAIL_INSTITUCIONAL = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.EMAIL_INSTITUCIONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "TELEFONO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.TELEFONO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.TELEFONO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "DIRECCION";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.DIRECCION = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.DIRECCION = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "FECHA_INGRESO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FECHA_INGRESO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FECHA_INGRESO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CIUDAD_RESIDENCIA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "LUGAR_CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.LUGAR_CIUDAD_RESIDENCIA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.LUGAR_CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CODIGO_UNIDAD_NOMINA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CODIGO_UNIDAD = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CODIGO_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "UNIDAD_LABORAL";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.UNIDAD_LABORAL = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.UNIDAD_LABORAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.UBICACION_UNIDAD = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "LUGAR_UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.LUGAR_UBICACION_UNIDAD = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.LUGAR_UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "ESTADO_CIVIL_SIGLA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.ESTADO_CIVIL_SIGLA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.ESTADO_CIVIL_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "ESTADO_CIVIL";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.ESTADO_CIVIL = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.ESTADO_CIVIL = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "FUNDAMENTO_LEGAL";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FUNDAMENTO_LEGAL = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FUNDAMENTO_LEGAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "GENERO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.GENERO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.GENERO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "GENERO_DESCRI";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.GENERO_DESCRI = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.GENERO_DESCRI = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "GRUPO_SANGUINEO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.GRUPO_SANGUINEO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.GRUPO_SANGUINEO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "FACTOR_RH";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FACTOR_RH = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FACTOR_RH = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "ACTIVO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.ACTIVO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.ACTIVO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "UNDE_SIGLA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.UNDE_SIGLA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.UNDE_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "NOMBRE_CIUDAD";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.NOMBRE_CIUDAD = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.NOMBRE_CIUDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "NOMBRE_BARRIO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.NOMBRE_BARRIO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.NOMBRE_BARRIO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "FECHA_RETIRO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.FECHA_RETIRO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.FECHA_RETIRO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "UNDE_FUERZA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.UNDE_FUERZA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.UNDE_FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CARG_CARGO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CARG_CARGO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CARG_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "DESC_CARGO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.DESC_CARGO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.DESC_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CARRE_ID_CARRERA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CARRE_ID_CARRERA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CARRE_ID_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "DESC_CARRERA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.DESC_CARRERA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.DESC_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "TIEMPO";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.TIEMPO = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.TIEMPO = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "CATEGORIA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.CATEGORIA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "DESC_CATEGORIA";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.DESC_CATEGORIA = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.DESC_CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "REGIMEN";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row124.REGIMEN = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row124.REGIMEN = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",ex_tExtractJSONFields_2.getMessage());
		    System.err.println(ex_tExtractJSONFields_2.getMessage());
		    row124 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_2 = false;
	
//}


 


	tos_count_tExtractJSONFields_2++;

/**
 * [tExtractJSONFields_2 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 process_data_begin ] stop
 */
// Start of branch "row124"
if(row124 != null) { 



	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row124"
									
							);
						}
						
//////////
 

// for output
			row126 = new row126Struct();
								
			row126.FUERZA = row124.FUERZA;								
			row126.CODIGO_MILITAR = row124.CODIGO_MILITAR;								
			row126.APELLIDOS = row124.APELLIDOS;								
			row126.NOMBRES = row124.NOMBRES;								
			row126.IDENTIFICACION = row124.IDENTIFICACION;								
			row126.TIPO_IDENTIFICACION = row124.TIPO_IDENTIFICACION;								
			row126.GRADO = row124.GRADO;								
			row126.ARMA = row124.ARMA;								
			row126.FECHA_NACIMIENTO = row124.FECHA_NACIMIENTO;								
			row126.LUGAR_NACIMIENTO = row124.LUGAR_NACIMIENTO;								
			row126.EXPEDICION_DOCUMENTO = row124.EXPEDICION_DOCUMENTO;								
			row126.EMAIL_PERSONAL = row124.EMAIL_PERSONAL;								
			row126.EMAIL_INSTITUCIONAL = row124.EMAIL_INSTITUCIONAL;								
			row126.TELEFONO = row124.TELEFONO;								
			row126.DIRECCION = row124.DIRECCION;								
			row126.FECHA_INGRESO = row124.FECHA_INGRESO;								
			row126.CIUDAD_RESIDENCIA = row124.CIUDAD_RESIDENCIA;								
			row126.LUGAR_CIUDAD_RESIDENCIA = row124.LUGAR_CIUDAD_RESIDENCIA;								
			row126.CODIGO_UNIDAD = row124.CODIGO_UNIDAD;								
			row126.UNIDAD_LABORAL = row124.UNIDAD_LABORAL;								
			row126.UBICACION_UNIDAD = row124.UBICACION_UNIDAD;								
			row126.LUGAR_UBICACION_UNIDAD = row124.LUGAR_UBICACION_UNIDAD;								
			row126.ESTADO_CIVIL_SIGLA = row124.ESTADO_CIVIL_SIGLA;								
			row126.ESTADO_CIVIL = row124.ESTADO_CIVIL;								
			row126.FUNDAMENTO_LEGAL = row124.FUNDAMENTO_LEGAL;								
			row126.GENERO = row124.GENERO;								
			row126.GENERO_DESCRI = row124.GENERO_DESCRI;								
			row126.GRUPO_SANGUINEO = row124.GRUPO_SANGUINEO;								
			row126.FACTOR_RH = row124.FACTOR_RH;								
			row126.ACTIVO = row124.ACTIVO;								
			row126.UNDE_SIGLA = row124.UNDE_SIGLA;								
			row126.NOMBRE_CIUDAD = row124.NOMBRE_CIUDAD;								
			row126.NOMBRE_BARRIO = row124.NOMBRE_BARRIO;								
			row126.FECHA_RETIRO = row124.FECHA_RETIRO;								
			row126.UNDE_FUERZA = row124.UNDE_FUERZA;								
			row126.CARG_CARGO = row124.CARG_CARGO;								
			row126.DESC_CARGO = row124.DESC_CARGO;								
			row126.CARRE_ID_CARRERA = row124.CARRE_ID_CARRERA;								
			row126.DESC_CARRERA = row124.DESC_CARRERA;								
			row126.TIEMPO = row124.TIEMPO;								
			row126.CATEGORIA = row124.CATEGORIA;								
			row126.DESC_CATEGORIA = row124.DESC_CATEGORIA;								
			row126.REGIMEN = row124.REGIMEN;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row126"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row121Struct row121 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row121" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow121 = false;
       		  	    	
       		  	    	
 							row121Struct row121ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row121HashKey.SIGLA = StringHandling.TRIM(StringHandling.UPCASE(row126.TIPO_IDENTIFICACION)) ;
                        		    		

								
		                        	row121HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row121.lookup( row121HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row121 != null && tHash_Lookup_row121.getCount(row121HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row121' and it contains more one result from keys :  row121.SIGLA = '" + row121HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row121Struct fromLookup_row121 = null;
							row121 = row121Default;
										 
							
								 
							
							
								if (tHash_Lookup_row121 !=null && tHash_Lookup_row121.hasNext()) { // G 099
								
							
								
								fromLookup_row121 = tHash_Lookup_row121.next();

							
							
								} // G 099
							
							

							if(fromLookup_row121 != null) {
								row121 = fromLookup_row121;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;
Var.EspacioNombre = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.NOMBRES), " ".charAt(0)) ;
Var.EspacioApellido = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.APELLIDOS), " ".charAt(0)) ;
Var.LongitudNombre = StringHandling.TRIM(row126.NOMBRES).length() ;
Var.LongitudApellido = StringHandling.TRIM(row126.APELLIDOS).length() ;
Var.FechaNacimiento = row126.FECHA_NACIMIENTO ;
Var.FechaVinculacion = row126.FECHA_INGRESO ;
Var.FechaCaducidad = row126.FECHA_RETIRO ;
Var.CheckFechaNacimiento = (Var.FechaNacimiento != null && (!Var.FechaNacimiento.equals("")) ) ?
(TalendDate.isDate(Var.FechaNacimiento,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaVinculacion = (Var.FechaVinculacion != null && (!Var.FechaVinculacion.equals("")) ) ?
(TalendDate.isDate(Var.FechaVinculacion,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaCaducidad = (Var.FechaCaducidad != null && (!Var.FechaCaducidad.equals("")) ) ?
(TalendDate.isDate(Var.FechaCaducidad,"dd/mm/yyyy") == true?
1:0):0 ;// ###############################
        // ###############################
        // # Output tables

TST_ARCHIVO = null;


// # Output table : 'TST_ARCHIVO'
TST_ARCHIVO_tmp.PRIMER_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.NOMBRES,Var.EspacioNombre))) ;
TST_ARCHIVO_tmp.SEGUNDO_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.NOMBRES,(Var.LongitudNombre - Var.EspacioNombre)))) ;
TST_ARCHIVO_tmp.PRIMER_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.APELLIDOS,Var.EspacioApellido))) ;
TST_ARCHIVO_tmp.SEGUNDO_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.APELLIDOS,(Var.LongitudApellido - Var.EspacioApellido)))) ;
TST_ARCHIVO_tmp.TIPO_DE_DOCUMENTO = row121.SIGLA_SALUDSIS ;
TST_ARCHIVO_tmp.DOCUMENTO = row126.IDENTIFICACION ;
TST_ARCHIVO_tmp.SEXO = row126.GENERO;
TST_ARCHIVO_tmp.FECHA_NACIMIENTO = Var.FechaNacimiento ;
TST_ARCHIVO_tmp.ESTADO_CIVIL = row126.ESTADO_CIVIL;
TST_ARCHIVO_tmp.DIRECCION = StringHandling.TRIM(StringHandling.UPCASE(row126.DIRECCION)) ;
TST_ARCHIVO_tmp.TELEFONO = row126.TELEFONO;
TST_ARCHIVO_tmp.CORREO_ELECTRONICO = row126.EMAIL_PERSONAL;
TST_ARCHIVO_tmp.MUNICIPIO_RESIDENCIA = row126.CIUDAD_RESIDENCIA;
TST_ARCHIVO_tmp.LOCALIDAD_RESIDENCIA = StringHandling.TRIM(StringHandling.UPCASE(row126.NOMBRE_BARRIO)) ;
TST_ARCHIVO_tmp.GRUPO_SANGUINEO = row126.GRUPO_SANGUINEO;
TST_ARCHIVO_tmp.FACTOR_RH = row126.FACTOR_RH;
TST_ARCHIVO_tmp.CODIGO_ESTABLECIMIENTO = null;
TST_ARCHIVO_tmp.ESTABLECIMIENTO_ADSCRITO = null;
TST_ARCHIVO_tmp.CODIGO_GRDMILITAR = null;
TST_ARCHIVO_tmp.SIGLA_GRDMILITAR = row126.GRADO;
TST_ARCHIVO_tmp.FUERZA_MILITAR = row126.FUERZA;
TST_ARCHIVO_tmp.CODIGO_UMILITAR = row126.CODIGO_UNIDAD ;
TST_ARCHIVO_tmp.UNIDAD_MILITAR = StringHandling.TRIM(StringHandling.UPCASE(row126.UNDE_SIGLA)) ;
TST_ARCHIVO_tmp.ESTADO_AFILIACION = row126.ACTIVO;
TST_ARCHIVO_tmp.FECHA_FIN_AFILIACION = Var.FechaCaducidad ;
TST_ARCHIVO_tmp.FECHA_VINCULACION = Var.FechaVinculacion ;
TST_ARCHIVO_tmp.MUNICIPIO_EXP_DOCUMENTO = row126.EXPEDICION_DOCUMENTO;
TST_ARCHIVO_tmp.CARGADO_SIATH = (Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 0) ? 2 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 3 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 4 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 5 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 6 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 7 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 8 : 0 ;
TST_ARCHIVO_tmp.CATEGORIA = Integer.parseInt(row126.CATEGORIA) ;
TST_ARCHIVO_tmp.SIGLA_DOCUMENTO = row126.TIPO_IDENTIFICACION;
TST_ARCHIVO = TST_ARCHIVO_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "TST_ARCHIVO"
if(TST_ARCHIVO != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TST_ARCHIVO"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(TST_ARCHIVO.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(1, TST_ARCHIVO.PRIMER_NOMBRE);
}

                        if(TST_ARCHIVO.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2, TST_ARCHIVO.SEGUNDO_NOMBRE);
}

                        if(TST_ARCHIVO.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(3, TST_ARCHIVO.PRIMER_APELLIDO);
}

                        if(TST_ARCHIVO.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(4, TST_ARCHIVO.SEGUNDO_APELLIDO);
}

                        if(TST_ARCHIVO.TIPO_DE_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(5, TST_ARCHIVO.TIPO_DE_DOCUMENTO);
}

                        if(TST_ARCHIVO.DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(6, TST_ARCHIVO.DOCUMENTO);
}

                        if(TST_ARCHIVO.SEXO == null) {
pstmt_tOracleOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(7, TST_ARCHIVO.SEXO);
}

                        if(TST_ARCHIVO.FECHA_NACIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(8, TST_ARCHIVO.FECHA_NACIMIENTO);
}

                        if(TST_ARCHIVO.ESTADO_CIVIL == null) {
pstmt_tOracleOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(9, TST_ARCHIVO.ESTADO_CIVIL);
}

                        if(TST_ARCHIVO.DIRECCION == null) {
pstmt_tOracleOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(10, TST_ARCHIVO.DIRECCION);
}

                        if(TST_ARCHIVO.TELEFONO == null) {
pstmt_tOracleOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(11, TST_ARCHIVO.TELEFONO);
}

                        if(TST_ARCHIVO.CORREO_ELECTRONICO == null) {
pstmt_tOracleOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(12, TST_ARCHIVO.CORREO_ELECTRONICO);
}

                        if(TST_ARCHIVO.MUNICIPIO_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(13, TST_ARCHIVO.MUNICIPIO_RESIDENCIA);
}

                        if(TST_ARCHIVO.LOCALIDAD_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(14, TST_ARCHIVO.LOCALIDAD_RESIDENCIA);
}

                        if(TST_ARCHIVO.GRUPO_SANGUINEO == null) {
pstmt_tOracleOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(15, TST_ARCHIVO.GRUPO_SANGUINEO);
}

                        if(TST_ARCHIVO.FACTOR_RH == null) {
pstmt_tOracleOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(16, TST_ARCHIVO.FACTOR_RH);
}

                        if(TST_ARCHIVO.CODIGO_ESTABLECIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(17, TST_ARCHIVO.CODIGO_ESTABLECIMIENTO);
}

                        if(TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO == null) {
pstmt_tOracleOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(18, TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO);
}

                        if(TST_ARCHIVO.CODIGO_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(19, TST_ARCHIVO.CODIGO_GRDMILITAR);
}

                        if(TST_ARCHIVO.SIGLA_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(20, TST_ARCHIVO.SIGLA_GRDMILITAR);
}

                        if(TST_ARCHIVO.FUERZA_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(21, TST_ARCHIVO.FUERZA_MILITAR);
}

                        if(TST_ARCHIVO.CODIGO_UMILITAR == null) {
pstmt_tOracleOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(22, TST_ARCHIVO.CODIGO_UMILITAR);
}

                        if(TST_ARCHIVO.UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(23, TST_ARCHIVO.UNIDAD_MILITAR);
}

                        if(TST_ARCHIVO.ESTADO_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(24, TST_ARCHIVO.ESTADO_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_FIN_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(25, TST_ARCHIVO.FECHA_FIN_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_VINCULACION == null) {
pstmt_tOracleOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(26, TST_ARCHIVO.FECHA_VINCULACION);
}

                        if(TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(27, TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO);
}

                        if(TST_ARCHIVO.CARGADO_SIATH == null) {
pstmt_tOracleOutput_2.setNull(28, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(28, TST_ARCHIVO.CARGADO_SIATH);
}

                        if(TST_ARCHIVO.CATEGORIA == null) {
pstmt_tOracleOutput_2.setNull(29, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(29, TST_ARCHIVO.CATEGORIA);
}

                        if(TST_ARCHIVO.SIGLA_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(30, TST_ARCHIVO.SIGLA_DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }
            if(!whetherReject_tOracleOutput_2) {
            }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "TST_ARCHIVO"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */

} // End of branch "row124"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 process_data_end ] stop
 */



	
	/**
	 * [tREST_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 process_data_end ] stop
 */
	
	/**
	 * [tREST_2 end ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 

ok_Hash.put("tREST_2", true);
end_Hash.put("tREST_2", System.currentTimeMillis());




/**
 * [tREST_2 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	
   globalMap.put("tExtractJSONFields_2_NB_LINE", nb_line_tExtractJSONFields_2);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row122");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_2", true);
end_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());




/**
 * [tExtractJSONFields_2 end ] stop
 */




	
	/**
	 * [tExtractJSONFields_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_3", false);
		start_Hash.put("tExtractJSONFields_3", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row120");
					}
				
		int tos_count_tExtractJSONFields_3 = 0;
		

int nb_line_tExtractJSONFields_3 = 0;
String jsonStr_tExtractJSONFields_3 = "";

	

class JsonPathCache_tExtractJSONFields_3 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_3 jsonPathCache_tExtractJSONFields_3 = new JsonPathCache_tExtractJSONFields_3();

 



/**
 * [tExtractJSONFields_3 begin ] stop
 */



	
	/**
	 * [tREST_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tREST_3", false);
		start_Hash.put("tREST_3", System.currentTimeMillis());
		
	
	currentComponent="tREST_3";
	
	
		int tos_count_tREST_3 = 0;
		
	

	
	String endpoint_tREST_3 = "https://portalapp.mindefensa.gov.co:8448/EXP_MINDEFENSA/MinDefensaRest/DGSM/infBasicoAlumnosR";
	
	String trustStoreFile_tREST_3 = System.getProperty("javax.net.ssl.trustStore");
	String trustStoreType_tREST_3 = System.getProperty("javax.net.ssl.trustStoreType");
	String trustStorePWD_tREST_3 = System.getProperty("javax.net.ssl.trustStorePassword");
	
	String keyStoreFile_tREST_3 = System.getProperty("javax.net.ssl.keyStore");
	String keyStoreType_tREST_3 = System.getProperty("javax.net.ssl.keyStoreType");
	String keyStorePWD_tREST_3 = System.getProperty("javax.net.ssl.keyStorePassword");
	
	com.sun.jersey.api.client.config.ClientConfig config_tREST_3 = new com.sun.jersey.api.client.config.DefaultClientConfig();
	
	// APPINT-33909: add entitiy providers (for OSGi deployment)
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.StringProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.FileProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.InputStreamProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.DataSourceProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.MimeMultipartProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.FormProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.ReaderProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.DocumentProvider.class);
	config_tREST_3.getClasses().add(com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.class);
	
	javax.net.ssl.SSLContext ctx_tREST_3 = javax.net.ssl.SSLContext.getInstance("SSL");
	
	javax.net.ssl.TrustManager[] tms_tREST_3 = null;
	if(trustStoreFile_tREST_3!=null && trustStoreType_tREST_3!=null){
		char[] password_tREST_3 = null;
		if(trustStorePWD_tREST_3!=null)
			password_tREST_3 = trustStorePWD_tREST_3.toCharArray();
		java.security.KeyStore trustStore_tREST_3 = java.security.KeyStore.getInstance(trustStoreType_tREST_3);
		trustStore_tREST_3.load(new java.io.FileInputStream(trustStoreFile_tREST_3), password_tREST_3);
		
		javax.net.ssl.TrustManagerFactory tmf_tREST_3 = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        tmf_tREST_3.init(trustStore_tREST_3);
        tms_tREST_3 = tmf_tREST_3.getTrustManagers();
	}
	
	javax.net.ssl.KeyManager[] kms_tREST_3 = null;
	if(keyStoreFile_tREST_3!=null && keyStoreType_tREST_3!=null){
		char[] password_tREST_3 = null;
		if(keyStorePWD_tREST_3!=null)
			password_tREST_3 = keyStorePWD_tREST_3.toCharArray();
		java.security.KeyStore keyStore_tREST_3 = java.security.KeyStore.getInstance(keyStoreType_tREST_3);
		keyStore_tREST_3.load(new java.io.FileInputStream(keyStoreFile_tREST_3), password_tREST_3);
		
		javax.net.ssl.KeyManagerFactory kmf_tREST_3 = javax.net.ssl.KeyManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        kmf_tREST_3.init(keyStore_tREST_3,password_tREST_3);
        kms_tREST_3 = kmf_tREST_3.getKeyManagers();
	}
	
    ctx_tREST_3.init(kms_tREST_3, tms_tREST_3 , null);
    config_tREST_3.getProperties().put(com.sun.jersey.client.urlconnection.HTTPSProperties.PROPERTY_HTTPS_PROPERTIES,
                new com.sun.jersey.client.urlconnection.HTTPSProperties(new javax.net.ssl.HostnameVerifier() {

                    public boolean verify(String hostName, javax.net.ssl.SSLSession session) {
                        return true;
                    }
                }, ctx_tREST_3));

	com.sun.jersey.api.client.Client restClient_tREST_3 = com.sun.jersey.api.client.Client.create(config_tREST_3);
	
	java.util.Map<String, Object> headers_tREST_3 = new java.util.HashMap<String, Object>();
	
    	headers_tREST_3.put("idTransaccion",1234);
	
    	headers_tREST_3.put("sistemaOrigen","DGSM");
	
    	headers_tREST_3.put("usuario","WSDGSM");
	
    	headers_tREST_3.put("clave","C@rg@m@siv@06022017*");
	
    	headers_tREST_3.put("fechaInvocacion","2020-07-27T20:14:34.325-05:00");
	
    	headers_tREST_3.put("idTraza","");
	
    	headers_tREST_3.put("direccionIpCliente","172.23.22.38");
	
    	headers_tREST_3.put("direccionIpServidor","172.23.22.38");
	
    	headers_tREST_3.put("direccionMacCliente","172.23.22.38");
	
    	headers_tREST_3.put("direccionMacServidor","172.23.22.38");
	
    	headers_tREST_3.put("accion",1);
	
    	headers_tREST_3.put("sistemaDestino","SIATH");
	
    	headers_tREST_3.put("nombreServicio","MINDEF");
	
    	headers_tREST_3.put("canal",1);
	
    	headers_tREST_3.put("componente","cp");
	
	
	Object transfer_encoding_tREST_3 = headers_tREST_3.get("Transfer-Encoding");
	if(transfer_encoding_tREST_3!=null && "chunked".equals(transfer_encoding_tREST_3)) {
		restClient_tREST_3.setChunkedEncodingSize(4096);
	}
	
	com.sun.jersey.api.client.WebResource restResource_tREST_3;
	if(endpoint_tREST_3!=null && !("").equals(endpoint_tREST_3)){
		restResource_tREST_3 = restClient_tREST_3.resource(endpoint_tREST_3);
	}else{
		throw new IllegalArgumentException("url can't be empty!");
	}
	
	com.sun.jersey.api.client.ClientResponse errorResponse_tREST_3 = null;
	String restResponse_tREST_3 = "";
	try{
		
		com.sun.jersey.api.client.WebResource.Builder builder_tREST_3 = null;
		for(java.util.Map.Entry<String, Object> header_tREST_3 : headers_tREST_3.entrySet()) {
			if(builder_tREST_3 == null) {
				builder_tREST_3 = restResource_tREST_3.header(header_tREST_3.getKey(), header_tREST_3.getValue());
			} else {
				builder_tREST_3.header(header_tREST_3.getKey(), header_tREST_3.getValue());
			}
		}
		
		
			if(builder_tREST_3!=null) {
				restResponse_tREST_3 = builder_tREST_3.get(String.class);
			} else {
				restResponse_tREST_3 = restResource_tREST_3.get(String.class);
			} 
			
		
	}catch (com.sun.jersey.api.client.UniformInterfaceException ue) {
globalMap.put("tREST_3_ERROR_MESSAGE",ue.getMessage());
        errorResponse_tREST_3 = ue.getResponse();
    }
	
	// for output
			
				row120 = new row120Struct();
				if(errorResponse_tREST_3!=null){
					row120.ERROR_CODE = errorResponse_tREST_3.getStatus();
					if(row120.ERROR_CODE!=204){
					    row120.Body = errorResponse_tREST_3.getEntity(String.class);
					}
				}else{
					row120.Body = restResponse_tREST_3;
				}
			

 



/**
 * [tREST_3 begin ] stop
 */
	
	/**
	 * [tREST_3 main ] start
	 */

	

	
	
	currentComponent="tREST_3";
	
	

 


	tos_count_tREST_3++;

/**
 * [tREST_3 main ] stop
 */
	
	/**
	 * [tREST_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tREST_3";
	
	

 



/**
 * [tREST_3 process_data_begin ] stop
 */

	
	/**
	 * [tExtractJSONFields_3 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row120"
						
						);
					}
					

            if(row120.Body!=null){// C_01
                jsonStr_tExtractJSONFields_3 = row120.Body.toString();
   
row125 = null;

	

String loopPath_tExtractJSONFields_3 = "$.Cursor.Row[*]";
java.util.List<Object> resultset_tExtractJSONFields_3 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_3 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_3 = null;
try {
	document_tExtractJSONFields_3 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_3);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(loopPath_tExtractJSONFields_3);
	Object result_tExtractJSONFields_3 = document_tExtractJSONFields_3.read(compiledLoopPath_tExtractJSONFields_3,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_3 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_3 = (net.minidev.json.JSONArray) result_tExtractJSONFields_3;
	} else {
		resultset_tExtractJSONFields_3.add(result_tExtractJSONFields_3);
	}
	
	isStructError_tExtractJSONFields_3 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",ex_tExtractJSONFields_3.getMessage());
		System.err.println(ex_tExtractJSONFields_3.getMessage());
}

String jsonPath_tExtractJSONFields_3 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_3 = null;

Object value_tExtractJSONFields_3 = null;

Object root_tExtractJSONFields_3 = null;
for(int i_tExtractJSONFields_3=0; isStructError_tExtractJSONFields_3 || (i_tExtractJSONFields_3 < resultset_tExtractJSONFields_3.size());i_tExtractJSONFields_3++){
	if(!isStructError_tExtractJSONFields_3){
		Object row_tExtractJSONFields_3 = resultset_tExtractJSONFields_3.get(i_tExtractJSONFields_3);
            row125 = null;
	row125 = new row125Struct();
	nb_line_tExtractJSONFields_3++;
	try {
		jsonPath_tExtractJSONFields_3 = "FUERZA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FUERZA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CODIGO_MILITAR";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CODIGO_MILITAR = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CODIGO_MILITAR = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "APELLIDOS";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.APELLIDOS = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.APELLIDOS = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "NOMBRES";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.NOMBRES = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.NOMBRES = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.IDENTIFICACION = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "TIPO_IDENTIFICACION";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.TIPO_IDENTIFICACION = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.TIPO_IDENTIFICACION = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "GRADO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.GRADO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.GRADO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "ARMA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.ARMA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.ARMA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "FECHA_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FECHA_NACIMIENTO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FECHA_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "LUGAR_NACIMIENTO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.LUGAR_NACIMIENTO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.LUGAR_NACIMIENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "EXPEDICION_DOCUMENTO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.EXPEDICION_DOCUMENTO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.EXPEDICION_DOCUMENTO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "EMAIL_PERSONAL";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.EMAIL_PERSONAL = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.EMAIL_PERSONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "EMAIL_INSTITUCIONAL";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.EMAIL_INSTITUCIONAL = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.EMAIL_INSTITUCIONAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "TELEFONO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.TELEFONO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.TELEFONO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "DIRECCION";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.DIRECCION = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.DIRECCION = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "FECHA_INGRESO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FECHA_INGRESO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FECHA_INGRESO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CIUDAD_RESIDENCIA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "LUGAR_CIUDAD_RESIDENCIA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.LUGAR_CIUDAD_RESIDENCIA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.LUGAR_CIUDAD_RESIDENCIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CODIGO_UNIDAD_NOMINA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CODIGO_UNIDAD = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CODIGO_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "UNIDAD_LABORAL";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.UNIDAD_LABORAL = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.UNIDAD_LABORAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.UBICACION_UNIDAD = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "LUGAR_UBICACION_UNIDAD";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.LUGAR_UBICACION_UNIDAD = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.LUGAR_UBICACION_UNIDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "ESTADO_CIVIL_SIGLA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.ESTADO_CIVIL_SIGLA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.ESTADO_CIVIL_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "ESTADO_CIVIL";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.ESTADO_CIVIL = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.ESTADO_CIVIL = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "FUNDAMENTO_LEGAL";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FUNDAMENTO_LEGAL = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FUNDAMENTO_LEGAL = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "GENERO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.GENERO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.GENERO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "GENERO_DESCRI";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.GENERO_DESCRI = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.GENERO_DESCRI = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "GRUPO_SANGUINEO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.GRUPO_SANGUINEO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.GRUPO_SANGUINEO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "FACTOR_RH";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FACTOR_RH = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FACTOR_RH = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "ACTIVO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.ACTIVO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.ACTIVO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "UNDE_SIGLA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.UNDE_SIGLA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.UNDE_SIGLA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "NOMBRE_CIUDAD";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.NOMBRE_CIUDAD = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.NOMBRE_CIUDAD = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "NOMBRE_BARRIO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.NOMBRE_BARRIO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.NOMBRE_BARRIO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "FECHA_RETIRO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.FECHA_RETIRO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.FECHA_RETIRO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "UNDE_FUERZA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.UNDE_FUERZA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.UNDE_FUERZA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CARG_CARGO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CARG_CARGO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CARG_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "DESC_CARGO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.DESC_CARGO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.DESC_CARGO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CARRE_ID_CARRERA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CARRE_ID_CARRERA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CARRE_ID_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "DESC_CARRERA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.DESC_CARRERA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.DESC_CARRERA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "TIEMPO";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.TIEMPO = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.TIEMPO = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "CATEGORIA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.CATEGORIA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "DESC_CATEGORIA";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.DESC_CATEGORIA = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.DESC_CATEGORIA = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "REGIMEN";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		    
				row125.REGIMEN = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row125.REGIMEN = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",ex_tExtractJSONFields_3.getMessage());
		    System.err.println(ex_tExtractJSONFields_3.getMessage());
		    row125 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_3 = false;
	
//}


 


	tos_count_tExtractJSONFields_3++;

/**
 * [tExtractJSONFields_3 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 process_data_begin ] stop
 */
// Start of branch "row125"
if(row125 != null) { 



	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row125"
									
							);
						}
						
//////////
 

// for output
			row126 = new row126Struct();
								
			row126.FUERZA = row125.FUERZA;								
			row126.CODIGO_MILITAR = row125.CODIGO_MILITAR;								
			row126.APELLIDOS = row125.APELLIDOS;								
			row126.NOMBRES = row125.NOMBRES;								
			row126.IDENTIFICACION = row125.IDENTIFICACION;								
			row126.TIPO_IDENTIFICACION = row125.TIPO_IDENTIFICACION;								
			row126.GRADO = row125.GRADO;								
			row126.ARMA = row125.ARMA;								
			row126.FECHA_NACIMIENTO = row125.FECHA_NACIMIENTO;								
			row126.LUGAR_NACIMIENTO = row125.LUGAR_NACIMIENTO;								
			row126.EXPEDICION_DOCUMENTO = row125.EXPEDICION_DOCUMENTO;								
			row126.EMAIL_PERSONAL = row125.EMAIL_PERSONAL;								
			row126.EMAIL_INSTITUCIONAL = row125.EMAIL_INSTITUCIONAL;								
			row126.TELEFONO = row125.TELEFONO;								
			row126.DIRECCION = row125.DIRECCION;								
			row126.FECHA_INGRESO = row125.FECHA_INGRESO;								
			row126.CIUDAD_RESIDENCIA = row125.CIUDAD_RESIDENCIA;								
			row126.LUGAR_CIUDAD_RESIDENCIA = row125.LUGAR_CIUDAD_RESIDENCIA;								
			row126.CODIGO_UNIDAD = row125.CODIGO_UNIDAD;								
			row126.UNIDAD_LABORAL = row125.UNIDAD_LABORAL;								
			row126.UBICACION_UNIDAD = row125.UBICACION_UNIDAD;								
			row126.LUGAR_UBICACION_UNIDAD = row125.LUGAR_UBICACION_UNIDAD;								
			row126.ESTADO_CIVIL_SIGLA = row125.ESTADO_CIVIL_SIGLA;								
			row126.ESTADO_CIVIL = row125.ESTADO_CIVIL;								
			row126.FUNDAMENTO_LEGAL = row125.FUNDAMENTO_LEGAL;								
			row126.GENERO = row125.GENERO;								
			row126.GENERO_DESCRI = row125.GENERO_DESCRI;								
			row126.GRUPO_SANGUINEO = row125.GRUPO_SANGUINEO;								
			row126.FACTOR_RH = row125.FACTOR_RH;								
			row126.ACTIVO = row125.ACTIVO;								
			row126.UNDE_SIGLA = row125.UNDE_SIGLA;								
			row126.NOMBRE_CIUDAD = row125.NOMBRE_CIUDAD;								
			row126.NOMBRE_BARRIO = row125.NOMBRE_BARRIO;								
			row126.FECHA_RETIRO = row125.FECHA_RETIRO;								
			row126.UNDE_FUERZA = row125.UNDE_FUERZA;								
			row126.CARG_CARGO = row125.CARG_CARGO;								
			row126.DESC_CARGO = row125.DESC_CARGO;								
			row126.CARRE_ID_CARRERA = row125.CARRE_ID_CARRERA;								
			row126.DESC_CARRERA = row125.DESC_CARRERA;								
			row126.TIEMPO = row125.TIEMPO;								
			row126.CATEGORIA = row125.CATEGORIA;								
			row126.DESC_CATEGORIA = row125.DESC_CATEGORIA;								
			row126.REGIMEN = row125.REGIMEN;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row126"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row121Struct row121 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row121" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow121 = false;
       		  	    	
       		  	    	
 							row121Struct row121ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row121HashKey.SIGLA = StringHandling.TRIM(StringHandling.UPCASE(row126.TIPO_IDENTIFICACION)) ;
                        		    		

								
		                        	row121HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row121.lookup( row121HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row121 != null && tHash_Lookup_row121.getCount(row121HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row121' and it contains more one result from keys :  row121.SIGLA = '" + row121HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row121Struct fromLookup_row121 = null;
							row121 = row121Default;
										 
							
								 
							
							
								if (tHash_Lookup_row121 !=null && tHash_Lookup_row121.hasNext()) { // G 099
								
							
								
								fromLookup_row121 = tHash_Lookup_row121.next();

							
							
								} // G 099
							
							

							if(fromLookup_row121 != null) {
								row121 = fromLookup_row121;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;
Var.EspacioNombre = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.NOMBRES), " ".charAt(0)) ;
Var.EspacioApellido = ObtenerPosicionCaracter.determinarPosicion(StringHandling.TRIM(row126.APELLIDOS), " ".charAt(0)) ;
Var.LongitudNombre = StringHandling.TRIM(row126.NOMBRES).length() ;
Var.LongitudApellido = StringHandling.TRIM(row126.APELLIDOS).length() ;
Var.FechaNacimiento = row126.FECHA_NACIMIENTO ;
Var.FechaVinculacion = row126.FECHA_INGRESO ;
Var.FechaCaducidad = row126.FECHA_RETIRO ;
Var.CheckFechaNacimiento = (Var.FechaNacimiento != null && (!Var.FechaNacimiento.equals("")) ) ?
(TalendDate.isDate(Var.FechaNacimiento,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaVinculacion = (Var.FechaVinculacion != null && (!Var.FechaVinculacion.equals("")) ) ?
(TalendDate.isDate(Var.FechaVinculacion,"dd/mm/yyyy") == true?
1:0):0 ;
Var.CheckFechaCaducidad = (Var.FechaCaducidad != null && (!Var.FechaCaducidad.equals("")) ) ?
(TalendDate.isDate(Var.FechaCaducidad,"dd/mm/yyyy") == true?
1:0):0 ;// ###############################
        // ###############################
        // # Output tables

TST_ARCHIVO = null;


// # Output table : 'TST_ARCHIVO'
TST_ARCHIVO_tmp.PRIMER_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.NOMBRES,Var.EspacioNombre))) ;
TST_ARCHIVO_tmp.SEGUNDO_NOMBRE = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.NOMBRES,(Var.LongitudNombre - Var.EspacioNombre)))) ;
TST_ARCHIVO_tmp.PRIMER_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.LEFT(row126.APELLIDOS,Var.EspacioApellido))) ;
TST_ARCHIVO_tmp.SEGUNDO_APELLIDO = StringHandling.UPCASE(StringHandling.TRIM(StringHandling.RIGHT(row126.APELLIDOS,(Var.LongitudApellido - Var.EspacioApellido)))) ;
TST_ARCHIVO_tmp.TIPO_DE_DOCUMENTO = row121.SIGLA_SALUDSIS ;
TST_ARCHIVO_tmp.DOCUMENTO = row126.IDENTIFICACION ;
TST_ARCHIVO_tmp.SEXO = row126.GENERO;
TST_ARCHIVO_tmp.FECHA_NACIMIENTO = Var.FechaNacimiento ;
TST_ARCHIVO_tmp.ESTADO_CIVIL = row126.ESTADO_CIVIL;
TST_ARCHIVO_tmp.DIRECCION = StringHandling.TRIM(StringHandling.UPCASE(row126.DIRECCION)) ;
TST_ARCHIVO_tmp.TELEFONO = row126.TELEFONO;
TST_ARCHIVO_tmp.CORREO_ELECTRONICO = row126.EMAIL_PERSONAL;
TST_ARCHIVO_tmp.MUNICIPIO_RESIDENCIA = row126.CIUDAD_RESIDENCIA;
TST_ARCHIVO_tmp.LOCALIDAD_RESIDENCIA = StringHandling.TRIM(StringHandling.UPCASE(row126.NOMBRE_BARRIO)) ;
TST_ARCHIVO_tmp.GRUPO_SANGUINEO = row126.GRUPO_SANGUINEO;
TST_ARCHIVO_tmp.FACTOR_RH = row126.FACTOR_RH;
TST_ARCHIVO_tmp.CODIGO_ESTABLECIMIENTO = null;
TST_ARCHIVO_tmp.ESTABLECIMIENTO_ADSCRITO = null;
TST_ARCHIVO_tmp.CODIGO_GRDMILITAR = null;
TST_ARCHIVO_tmp.SIGLA_GRDMILITAR = row126.GRADO;
TST_ARCHIVO_tmp.FUERZA_MILITAR = row126.FUERZA;
TST_ARCHIVO_tmp.CODIGO_UMILITAR = row126.CODIGO_UNIDAD ;
TST_ARCHIVO_tmp.UNIDAD_MILITAR = StringHandling.TRIM(StringHandling.UPCASE(row126.UNDE_SIGLA)) ;
TST_ARCHIVO_tmp.ESTADO_AFILIACION = row126.ACTIVO;
TST_ARCHIVO_tmp.FECHA_FIN_AFILIACION = Var.FechaCaducidad ;
TST_ARCHIVO_tmp.FECHA_VINCULACION = Var.FechaVinculacion ;
TST_ARCHIVO_tmp.MUNICIPIO_EXP_DOCUMENTO = row126.EXPEDICION_DOCUMENTO;
TST_ARCHIVO_tmp.CARGADO_SIATH = (Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 0) ? 2 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 3 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 4 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 0 && Var.CheckFechaCaducidad == 1) ? 5 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 0) ? 6 : 
(Var.CheckFechaNacimiento == 0 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 7 : 
(Var.CheckFechaNacimiento == 1 && Var.CheckFechaVinculacion == 1 && Var.CheckFechaCaducidad == 1) ? 8 : 0 ;
TST_ARCHIVO_tmp.CATEGORIA = Integer.parseInt(row126.CATEGORIA) ;
TST_ARCHIVO_tmp.SIGLA_DOCUMENTO = row126.TIPO_IDENTIFICACION;
TST_ARCHIVO = TST_ARCHIVO_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "TST_ARCHIVO"
if(TST_ARCHIVO != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"TST_ARCHIVO"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(TST_ARCHIVO.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(1, TST_ARCHIVO.PRIMER_NOMBRE);
}

                        if(TST_ARCHIVO.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2, TST_ARCHIVO.SEGUNDO_NOMBRE);
}

                        if(TST_ARCHIVO.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(3, TST_ARCHIVO.PRIMER_APELLIDO);
}

                        if(TST_ARCHIVO.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(4, TST_ARCHIVO.SEGUNDO_APELLIDO);
}

                        if(TST_ARCHIVO.TIPO_DE_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(5, TST_ARCHIVO.TIPO_DE_DOCUMENTO);
}

                        if(TST_ARCHIVO.DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(6, TST_ARCHIVO.DOCUMENTO);
}

                        if(TST_ARCHIVO.SEXO == null) {
pstmt_tOracleOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(7, TST_ARCHIVO.SEXO);
}

                        if(TST_ARCHIVO.FECHA_NACIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(8, TST_ARCHIVO.FECHA_NACIMIENTO);
}

                        if(TST_ARCHIVO.ESTADO_CIVIL == null) {
pstmt_tOracleOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(9, TST_ARCHIVO.ESTADO_CIVIL);
}

                        if(TST_ARCHIVO.DIRECCION == null) {
pstmt_tOracleOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(10, TST_ARCHIVO.DIRECCION);
}

                        if(TST_ARCHIVO.TELEFONO == null) {
pstmt_tOracleOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(11, TST_ARCHIVO.TELEFONO);
}

                        if(TST_ARCHIVO.CORREO_ELECTRONICO == null) {
pstmt_tOracleOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(12, TST_ARCHIVO.CORREO_ELECTRONICO);
}

                        if(TST_ARCHIVO.MUNICIPIO_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(13, TST_ARCHIVO.MUNICIPIO_RESIDENCIA);
}

                        if(TST_ARCHIVO.LOCALIDAD_RESIDENCIA == null) {
pstmt_tOracleOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(14, TST_ARCHIVO.LOCALIDAD_RESIDENCIA);
}

                        if(TST_ARCHIVO.GRUPO_SANGUINEO == null) {
pstmt_tOracleOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(15, TST_ARCHIVO.GRUPO_SANGUINEO);
}

                        if(TST_ARCHIVO.FACTOR_RH == null) {
pstmt_tOracleOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(16, TST_ARCHIVO.FACTOR_RH);
}

                        if(TST_ARCHIVO.CODIGO_ESTABLECIMIENTO == null) {
pstmt_tOracleOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(17, TST_ARCHIVO.CODIGO_ESTABLECIMIENTO);
}

                        if(TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO == null) {
pstmt_tOracleOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(18, TST_ARCHIVO.ESTABLECIMIENTO_ADSCRITO);
}

                        if(TST_ARCHIVO.CODIGO_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(19, TST_ARCHIVO.CODIGO_GRDMILITAR);
}

                        if(TST_ARCHIVO.SIGLA_GRDMILITAR == null) {
pstmt_tOracleOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(20, TST_ARCHIVO.SIGLA_GRDMILITAR);
}

                        if(TST_ARCHIVO.FUERZA_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(21, TST_ARCHIVO.FUERZA_MILITAR);
}

                        if(TST_ARCHIVO.CODIGO_UMILITAR == null) {
pstmt_tOracleOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(22, TST_ARCHIVO.CODIGO_UMILITAR);
}

                        if(TST_ARCHIVO.UNIDAD_MILITAR == null) {
pstmt_tOracleOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(23, TST_ARCHIVO.UNIDAD_MILITAR);
}

                        if(TST_ARCHIVO.ESTADO_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(24, TST_ARCHIVO.ESTADO_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_FIN_AFILIACION == null) {
pstmt_tOracleOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(25, TST_ARCHIVO.FECHA_FIN_AFILIACION);
}

                        if(TST_ARCHIVO.FECHA_VINCULACION == null) {
pstmt_tOracleOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(26, TST_ARCHIVO.FECHA_VINCULACION);
}

                        if(TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(27, TST_ARCHIVO.MUNICIPIO_EXP_DOCUMENTO);
}

                        if(TST_ARCHIVO.CARGADO_SIATH == null) {
pstmt_tOracleOutput_2.setNull(28, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(28, TST_ARCHIVO.CARGADO_SIATH);
}

                        if(TST_ARCHIVO.CATEGORIA == null) {
pstmt_tOracleOutput_2.setNull(29, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(29, TST_ARCHIVO.CATEGORIA);
}

                        if(TST_ARCHIVO.SIGLA_DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(30, TST_ARCHIVO.SIGLA_DOCUMENTO);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }
            if(!whetherReject_tOracleOutput_2) {
            }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "TST_ARCHIVO"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */

} // End of branch "row125"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 process_data_end ] stop
 */



	
	/**
	 * [tREST_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tREST_3";
	
	

 



/**
 * [tREST_3 process_data_end ] stop
 */
	
	/**
	 * [tREST_3 end ] start
	 */

	

	
	
	currentComponent="tREST_3";
	
	

 

ok_Hash.put("tREST_3", true);
end_Hash.put("tREST_3", System.currentTimeMillis());




/**
 * [tREST_3 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_3 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	
   globalMap.put("tExtractJSONFields_3_NB_LINE", nb_line_tExtractJSONFields_3);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row120");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_3", true);
end_Hash.put("tExtractJSONFields_3", System.currentTimeMillis());




/**
 * [tExtractJSONFields_3 end ] stop
 */



	
	/**
	 * [tUnite_1 end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

globalMap.put("tUnite_1_NB_LINE", nb_line_tUnite_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row124","row125","row123");
			  	}
			  	
 

ok_Hash.put("tUnite_1", true);
end_Hash.put("tUnite_1", System.currentTimeMillis());




/**
 * [tUnite_1 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row121 != null) {
						tHash_Lookup_row121.endGet();
					}
					globalMap.remove( "tHash_Lookup_row121" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row126");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmt_tOracleOutput_2 != null) {
			
				pstmt_tOracleOutput_2.close();
				resourceMap.remove("pstmt_tOracleOutput_2");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"TST_ARCHIVO");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk23", 0, "ok");
				}
				tOracleInput_16Process(globalMap);



/**
 * [tOracleOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row121"); 
				     			
				try{
					
	
	/**
	 * [tREST_1 finally ] start
	 */

	

	
	
	currentComponent="tREST_1";
	
	

 



/**
 * [tREST_1 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";
	
	

 



/**
 * [tExtractJSONFields_1 finally ] stop
 */



	
	/**
	 * [tREST_2 finally ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 finally ] stop
 */



	
	/**
	 * [tREST_3 finally ] start
	 */

	

	
	
	currentComponent="tREST_3";
	
	

 



/**
 * [tREST_3 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_3 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 finally ] stop
 */



	
	/**
	 * [tUnite_1 finally ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_2 = null;
                if ((pstmtToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_2")) != null) {
                    pstmtToClose_tOracleOutput_2.close();
                }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tREST_1_SUBPROCESS_STATE", 1);
	}
	


public static class row121Struct implements routines.system.IPersistableComparableLookupRow<row121Struct> {
    final static byte[] commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
    static byte[] commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 20;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String TIPO;

				public String getTIPO () {
					return this.TIPO;
				}

				public Boolean TIPOIsNullable(){
				    return false;
				}
				public Boolean TIPOIsKey(){
				    return false;
				}
				public Integer TIPOLength(){
				    return 50;
				}
				public Integer TIPOPrecision(){
				    return 0;
				}
				public String TIPODefault(){
				
					return null;
				
				}
				public String TIPOComment(){
				
				    return "";
				
				}
				public String TIPOPattern(){
				
					return "";
				
				}
				public String TIPOOriginalDbColumnName(){
				
					return "TIPO";
				
				}

				
			    public String SIGLA_SALUDSIS;

				public String getSIGLA_SALUDSIS () {
					return this.SIGLA_SALUDSIS;
				}

				public Boolean SIGLA_SALUDSISIsNullable(){
				    return false;
				}
				public Boolean SIGLA_SALUDSISIsKey(){
				    return false;
				}
				public Integer SIGLA_SALUDSISLength(){
				    return 20;
				}
				public Integer SIGLA_SALUDSISPrecision(){
				    return 0;
				}
				public String SIGLA_SALUDSISDefault(){
				
					return null;
				
				}
				public String SIGLA_SALUDSISComment(){
				
				    return "";
				
				}
				public String SIGLA_SALUDSISPattern(){
				
					return "";
				
				}
				public String SIGLA_SALUDSISOriginalDbColumnName(){
				
					return "SIGLA_SALUDSIS";
				
				}

				
			    public Integer ID_SALUDSIS;

				public Integer getID_SALUDSIS () {
					return this.ID_SALUDSIS;
				}

				public Boolean ID_SALUDSISIsNullable(){
				    return true;
				}
				public Boolean ID_SALUDSISIsKey(){
				    return false;
				}
				public Integer ID_SALUDSISLength(){
				    return null;
				}
				public Integer ID_SALUDSISPrecision(){
				    return null;
				}
				public String ID_SALUDSISDefault(){
				
					return null;
				
				}
				public String ID_SALUDSISComment(){
				
				    return "";
				
				}
				public String ID_SALUDSISPattern(){
				
					return "";
				
				}
				public String ID_SALUDSISOriginalDbColumnName(){
				
					return "ID_SALUDSIS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row121Struct other = (row121Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row121Struct other) {

		other.SIGLA = this.SIGLA;
	            other.TIPO = this.TIPO;
	            other.SIGLA_SALUDSIS = this.SIGLA_SALUDSIS;
	            other.ID_SALUDSIS = this.ID_SALUDSIS;
	            
	}

	public void copyKeysDataTo(row121Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length) {
				if(length < 1024 && commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV.length == 0) {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[1024];
				} else {
   					commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length);
			strReturn = new String(commonByteArray_AFI_CARGUE_SIATH_CargueSiathMSV, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_CARGUE_SIATH_CargueSiathMSV) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.TIPO = readString(dis,ois);
					
						this.SIGLA_SALUDSIS = readString(dis,ois);
					
						this.ID_SALUDSIS = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.TIPO = readString(dis,objectIn);
					
						this.SIGLA_SALUDSIS = readString(dis,objectIn);
					
						this.ID_SALUDSIS = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.TIPO, dos, oos);
					
						writeString(this.SIGLA_SALUDSIS, dos, oos);
					
					writeInteger(this.ID_SALUDSIS, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.TIPO, dos, objectOut);
					
						writeString(this.SIGLA_SALUDSIS, dos, objectOut);
					
					writeInteger(this.ID_SALUDSIS, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SIGLA="+SIGLA);
		sb.append(",TIPO="+TIPO);
		sb.append(",SIGLA_SALUDSIS="+SIGLA_SALUDSIS);
		sb.append(",ID_SALUDSIS="+String.valueOf(ID_SALUDSIS));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row121Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row121Struct row121 = new row121Struct();




	
	/**
	 * [tAdvancedHash_row121 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row121", false);
		start_Hash.put("tAdvancedHash_row121", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row121";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row121");
					}
				
		int tos_count_tAdvancedHash_row121 = 0;
		

			   		// connection name:row121
			   		// source node:tHashInput_24 - inputs:(after_tREST_1) outputs:(row121,row121) | target node:tAdvancedHash_row121 - inputs:(row121) outputs:()
			   		// linked node: tMap_9 - inputs:(row126,row121) outputs:(TST_ARCHIVO)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row121 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row121Struct> tHash_Lookup_row121 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row121Struct>getLookup(matchingModeEnum_row121);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row121", tHash_Lookup_row121);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row121 begin ] stop
 */



	
	/**
	 * [tHashInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_24", false);
		start_Hash.put("tHashInput_24", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_24";
	
	
		int tos_count_tHashInput_24 = 0;
		


int nb_line_tHashInput_24 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_24=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_24 = mf_tHashInput_24.getAdvancedMemoryHashFile("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_24==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_24 = tHashFile_tHashInput_24.iterator();
while (iterator_tHashInput_24.hasNext()) {
    row14Struct next_tHashInput_24 = iterator_tHashInput_24.next();

	row121.SIGLA = next_tHashInput_24.SIGLA;
	row121.TIPO = next_tHashInput_24.TIPO;
	row121.SIGLA_SALUDSIS = next_tHashInput_24.SIGLA_SALUDSIS;
	row121.ID_SALUDSIS = next_tHashInput_24.ID_SALUDSIS;

 



/**
 * [tHashInput_24 begin ] stop
 */
	
	/**
	 * [tHashInput_24 main ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 


	tos_count_tHashInput_24++;

/**
 * [tHashInput_24 main ] stop
 */
	
	/**
	 * [tHashInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row121 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row121";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row121"
						
						);
					}
					


			   
			   

					row121Struct row121_HashRow = new row121Struct();
		   	   	   
				
				row121_HashRow.SIGLA = row121.SIGLA;
				
				row121_HashRow.TIPO = row121.TIPO;
				
				row121_HashRow.SIGLA_SALUDSIS = row121.SIGLA_SALUDSIS;
				
				row121_HashRow.ID_SALUDSIS = row121.ID_SALUDSIS;
				
			tHash_Lookup_row121.put(row121_HashRow);
			
            




 


	tos_count_tAdvancedHash_row121++;

/**
 * [tAdvancedHash_row121 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row121 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row121";
	
	

 



/**
 * [tAdvancedHash_row121 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row121 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row121";
	
	

 



/**
 * [tAdvancedHash_row121 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_24 end ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	
    

		
			nb_line_tHashInput_24++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargueSiathMSV_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_24_NB_LINE", nb_line_tHashInput_24);       

 

ok_Hash.put("tHashInput_24", true);
end_Hash.put("tHashInput_24", System.currentTimeMillis());




/**
 * [tHashInput_24 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row121 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row121";
	
	

tHash_Lookup_row121.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row121");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row121", true);
end_Hash.put("tAdvancedHash_row121", System.currentTimeMillis());




/**
 * [tAdvancedHash_row121 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_24 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row121 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row121";
	
	

 



/**
 * [tAdvancedHash_row121 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_24_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final CargueSiathMSV CargueSiathMSVClass = new CargueSiathMSV();

        int exitCode = CargueSiathMSVClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = (String[][])globalBuffer.toArray(new String[globalBuffer.size()][]);

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        		hastBufferOutput = true;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = CargueSiathMSV.class.getClassLoader().getResourceAsStream("afi_cargue_siath/carguesiathmsv_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = CargueSiathMSV.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("db_origen_Password", "id_Password");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            String pwd_db_origen_Password_value = context.getProperty("db_origen_Password");
                            context.db_origen_Password = null;
                            if(pwd_db_origen_Password_value!=null) {
                                if(context_param.containsKey("db_origen_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_origen_Password = pwd_db_origen_Password_value;
                                } else if (!pwd_db_origen_Password_value.isEmpty()) {
                                    try {
                                        context.db_origen_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_origen_Password_value);
                                        context.put("db_origen_Password",context.db_origen_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_destino_ServiceName", "id_String");
                        if(context.getStringValue("db_destino_ServiceName") == null) {
                            context.db_destino_ServiceName = null;
                        } else {
                            context.db_destino_ServiceName=(String) context.getProperty("db_destino_ServiceName");
                        }
                        context.setContextType("db_destino_AdditionalParams", "id_String");
                        if(context.getStringValue("db_destino_AdditionalParams") == null) {
                            context.db_destino_AdditionalParams = null;
                        } else {
                            context.db_destino_AdditionalParams=(String) context.getProperty("db_destino_AdditionalParams");
                        }
                        context.setContextType("db_destino_Login", "id_String");
                        if(context.getStringValue("db_destino_Login") == null) {
                            context.db_destino_Login = null;
                        } else {
                            context.db_destino_Login=(String) context.getProperty("db_destino_Login");
                        }
                        context.setContextType("db_destino_Port", "id_String");
                        if(context.getStringValue("db_destino_Port") == null) {
                            context.db_destino_Port = null;
                        } else {
                            context.db_destino_Port=(String) context.getProperty("db_destino_Port");
                        }
                        context.setContextType("db_destino_Schema", "id_String");
                        if(context.getStringValue("db_destino_Schema") == null) {
                            context.db_destino_Schema = null;
                        } else {
                            context.db_destino_Schema=(String) context.getProperty("db_destino_Schema");
                        }
                        context.setContextType("db_destino_Server", "id_String");
                        if(context.getStringValue("db_destino_Server") == null) {
                            context.db_destino_Server = null;
                        } else {
                            context.db_destino_Server=(String) context.getProperty("db_destino_Server");
                        }
                        context.setContextType("db_destino_Password", "id_Password");
                        if(context.getStringValue("db_destino_Password") == null) {
                            context.db_destino_Password = null;
                        } else {
                            String pwd_db_destino_Password_value = context.getProperty("db_destino_Password");
                            context.db_destino_Password = null;
                            if(pwd_db_destino_Password_value!=null) {
                                if(context_param.containsKey("db_destino_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_destino_Password = pwd_db_destino_Password_value;
                                } else if (!pwd_db_destino_Password_value.isEmpty()) {
                                    try {
                                        context.db_destino_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_destino_Password_value);
                                        context.put("db_destino_Password",context.db_destino_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("Project", "id_String");
                        if(context.getStringValue("Project") == null) {
                            context.Project = null;
                        } else {
                            context.Project=(String) context.getProperty("Project");
                        }
                        context.setContextType("server_destino", "id_String");
                        if(context.getStringValue("server_destino") == null) {
                            context.server_destino = null;
                        } else {
                            context.server_destino=(String) context.getProperty("server_destino");
                        }
                        context.setContextType("user_origen", "id_String");
                        if(context.getStringValue("user_origen") == null) {
                            context.user_origen = null;
                        } else {
                            context.user_origen=(String) context.getProperty("user_origen");
                        }
                        context.setContextType("user_destino", "id_String");
                        if(context.getStringValue("user_destino") == null) {
                            context.user_destino = null;
                        } else {
                            context.user_destino=(String) context.getProperty("user_destino");
                        }
                        context.setContextType("context", "id_String");
                        if(context.getStringValue("context") == null) {
                            context.context = null;
                        } else {
                            context.context=(String) context.getProperty("context");
                        }
                        context.setContextType("origen", "id_String");
                        if(context.getStringValue("origen") == null) {
                            context.origen = null;
                        } else {
                            context.origen=(String) context.getProperty("origen");
                        }
                        context.setContextType("service_name_origen", "id_String");
                        if(context.getStringValue("service_name_origen") == null) {
                            context.service_name_origen = null;
                        } else {
                            context.service_name_origen=(String) context.getProperty("service_name_origen");
                        }
                        context.setContextType("job", "id_String");
                        if(context.getStringValue("job") == null) {
                            context.job = null;
                        } else {
                            context.job=(String) context.getProperty("job");
                        }
                        context.setContextType("message", "id_String");
                        if(context.getStringValue("message") == null) {
                            context.message = null;
                        } else {
                            context.message=(String) context.getProperty("message");
                        }
                        context.setContextType("server_origen", "id_String");
                        if(context.getStringValue("server_origen") == null) {
                            context.server_origen = null;
                        } else {
                            context.server_origen=(String) context.getProperty("server_origen");
                        }
                        context.setContextType("moment", "id_String");
                        if(context.getStringValue("moment") == null) {
                            context.moment = null;
                        } else {
                            context.moment=(String) context.getProperty("moment");
                        }
                        context.setContextType("service_name_destino", "id_String");
                        if(context.getStringValue("service_name_destino") == null) {
                            context.service_name_destino = null;
                        } else {
                            context.service_name_destino=(String) context.getProperty("service_name_destino");
                        }
                        context.setContextType("BODEGA", "id_String");
                        if(context.getStringValue("BODEGA") == null) {
                            context.BODEGA = null;
                        } else {
                            context.BODEGA=(String) context.getProperty("BODEGA");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("JOB", "id_String");
                        if(context.getStringValue("JOB") == null) {
                            context.JOB = null;
                        } else {
                            context.JOB=(String) context.getProperty("JOB");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("mail_SenderName", "id_String");
                        if(context.getStringValue("mail_SenderName") == null) {
                            context.mail_SenderName = null;
                        } else {
                            context.mail_SenderName=(String) context.getProperty("mail_SenderName");
                        }
                        context.setContextType("mail_User", "id_String");
                        if(context.getStringValue("mail_User") == null) {
                            context.mail_User = null;
                        } else {
                            context.mail_User=(String) context.getProperty("mail_User");
                        }
                        context.setContextType("mail_Message", "id_String");
                        if(context.getStringValue("mail_Message") == null) {
                            context.mail_Message = null;
                        } else {
                            context.mail_Message=(String) context.getProperty("mail_Message");
                        }
                        context.setContextType("mail_To", "id_String");
                        if(context.getStringValue("mail_To") == null) {
                            context.mail_To = null;
                        } else {
                            context.mail_To=(String) context.getProperty("mail_To");
                        }
                        context.setContextType("mail_SMTP_Port", "id_String");
                        if(context.getStringValue("mail_SMTP_Port") == null) {
                            context.mail_SMTP_Port = null;
                        } else {
                            context.mail_SMTP_Port=(String) context.getProperty("mail_SMTP_Port");
                        }
                        context.setContextType("mail_Password", "id_String");
                        if(context.getStringValue("mail_Password") == null) {
                            context.mail_Password = null;
                        } else {
                            context.mail_Password=(String) context.getProperty("mail_Password");
                        }
                        context.setContextType("mail_SMTP_Host", "id_String");
                        if(context.getStringValue("mail_SMTP_Host") == null) {
                            context.mail_SMTP_Host = null;
                        } else {
                            context.mail_SMTP_Host=(String) context.getProperty("mail_SMTP_Host");
                        }
                        context.setContextType("mail_Subject", "id_String");
                        if(context.getStringValue("mail_Subject") == null) {
                            context.mail_Subject = null;
                        } else {
                            context.mail_Subject=(String) context.getProperty("mail_Subject");
                        }
                        context.setContextType("UrlEndPointToken", "id_String");
                        if(context.getStringValue("UrlEndPointToken") == null) {
                            context.UrlEndPointToken = null;
                        } else {
                            context.UrlEndPointToken=(String) context.getProperty("UrlEndPointToken");
                        }
                        context.setContextType("UrlActionSoapToken", "id_String");
                        if(context.getStringValue("UrlActionSoapToken") == null) {
                            context.UrlActionSoapToken = null;
                        } else {
                            context.UrlActionSoapToken=(String) context.getProperty("UrlActionSoapToken");
                        }
                        context.setContextType("token", "id_String");
                        if(context.getStringValue("token") == null) {
                            context.token = null;
                        } else {
                            context.token=(String) context.getProperty("token");
                        }
                        context.setContextType("UrlEndPointMasivo", "id_String");
                        if(context.getStringValue("UrlEndPointMasivo") == null) {
                            context.UrlEndPointMasivo = null;
                        } else {
                            context.UrlEndPointMasivo=(String) context.getProperty("UrlEndPointMasivo");
                        }
                        context.setContextType("UrlActionSoapMasivo", "id_String");
                        if(context.getStringValue("UrlActionSoapMasivo") == null) {
                            context.UrlActionSoapMasivo = null;
                        } else {
                            context.UrlActionSoapMasivo=(String) context.getProperty("UrlActionSoapMasivo");
                        }
                        context.setContextType("vafiarchivos_id", "id_Integer");
                        if(context.getStringValue("vafiarchivos_id") == null) {
                            context.vafiarchivos_id = null;
                        } else {
                            try{
                                context.vafiarchivos_id=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vafiarchivos_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vafiarchivos_id", e.getMessage()));
                                context.vafiarchivos_id=null;
                            }
                        }
                        context.setContextType("vprocesos_id", "id_Integer");
                        if(context.getStringValue("vprocesos_id") == null) {
                            context.vprocesos_id = null;
                        } else {
                            try{
                                context.vprocesos_id=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vprocesos_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vprocesos_id", e.getMessage()));
                                context.vprocesos_id=null;
                            }
                        }
                        context.setContextType("vusuarios_id", "id_Integer");
                        if(context.getStringValue("vusuarios_id") == null) {
                            context.vusuarios_id = null;
                        } else {
                            try{
                                context.vusuarios_id=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vusuarios_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vusuarios_id", e.getMessage()));
                                context.vusuarios_id=null;
                            }
                        }
                        context.setContextType("vcount_registros", "id_Integer");
                        if(context.getStringValue("vcount_registros") == null) {
                            context.vcount_registros = null;
                        } else {
                            try{
                                context.vcount_registros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vcount_registros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vcount_registros", e.getMessage()));
                                context.vcount_registros=null;
                            }
                        }
                        context.setContextType("vfinicio", "id_Date");
                        if(context.getStringValue("vfinicio") == null) {
                            context.vfinicio = null;
                        } else {
                            String context_vfinicio_value = context.getProperty("vfinicio");
                            try{
                                if (context_vfinicio_value == null){
                                    context_vfinicio_value = "";
                                }
                                int context_vfinicio_pos = context_vfinicio_value.indexOf(";");
                                String context_vfinicio_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_vfinicio_pos > -1){
                                    context_vfinicio_pattern = context_vfinicio_value.substring(0, context_vfinicio_pos);
                                    context_vfinicio_value = context_vfinicio_value.substring(context_vfinicio_pos + 1);
                                }

                                context.vfinicio=(java.util.Date)(new java.text.SimpleDateFormat(context_vfinicio_pattern).parse(context_vfinicio_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_vfinicio_longValue = Long.valueOf(context_vfinicio_value);
                                    context.vfinicio = new java.util.Date(context_vfinicio_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "vfinicio", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.vfinicio=null;
                                }
                            }
                        }
                        context.setContextType("vtarchivo_id", "id_Integer");
                        if(context.getStringValue("vtarchivo_id") == null) {
                            context.vtarchivo_id = null;
                        } else {
                            try{
                                context.vtarchivo_id=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vtarchivo_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vtarchivo_id", e.getMessage()));
                                context.vtarchivo_id=null;
                            }
                        }
                        context.setContextType("mensaje", "id_String");
                        if(context.getStringValue("mensaje") == null) {
                            context.mensaje = null;
                        } else {
                            context.mensaje=(String) context.getProperty("mensaje");
                        }
                        context.setContextType("verror_datos", "id_Integer");
                        if(context.getStringValue("verror_datos") == null) {
                            context.verror_datos = null;
                        } else {
                            try{
                                context.verror_datos=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_datos"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_datos", e.getMessage()));
                                context.verror_datos=null;
                            }
                        }
                        context.setContextType("verror_estructura", "id_Integer");
                        if(context.getStringValue("verror_estructura") == null) {
                            context.verror_estructura = null;
                        } else {
                            try{
                                context.verror_estructura=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_estructura"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_estructura", e.getMessage()));
                                context.verror_estructura=null;
                            }
                        }
                        context.setContextType("verror_nombres_fnac_arc", "id_Integer");
                        if(context.getStringValue("verror_nombres_fnac_arc") == null) {
                            context.verror_nombres_fnac_arc = null;
                        } else {
                            try{
                                context.verror_nombres_fnac_arc=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_nombres_fnac_arc"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_nombres_fnac_arc", e.getMessage()));
                                context.verror_nombres_fnac_arc=null;
                            }
                        }
                        context.setContextType("vtotal_registros", "id_Integer");
                        if(context.getStringValue("vtotal_registros") == null) {
                            context.vtotal_registros = null;
                        } else {
                            try{
                                context.vtotal_registros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vtotal_registros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vtotal_registros", e.getMessage()));
                                context.vtotal_registros=null;
                            }
                        }
                        context.setContextType("verror_td_doc_arc", "id_Integer");
                        if(context.getStringValue("verror_td_doc_arc") == null) {
                            context.verror_td_doc_arc = null;
                        } else {
                            try{
                                context.verror_td_doc_arc=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_td_doc_arc"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_td_doc_arc", e.getMessage()));
                                context.verror_td_doc_arc=null;
                            }
                        }
                        context.setContextType("verror_nombres_fnac_sis", "id_Integer");
                        if(context.getStringValue("verror_nombres_fnac_sis") == null) {
                            context.verror_nombres_fnac_sis = null;
                        } else {
                            try{
                                context.verror_nombres_fnac_sis=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_nombres_fnac_sis"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_nombres_fnac_sis", e.getMessage()));
                                context.verror_nombres_fnac_sis=null;
                            }
                        }
                        context.setContextType("verror_pn_pa_doc_sis", "id_Integer");
                        if(context.getStringValue("verror_pn_pa_doc_sis") == null) {
                            context.verror_pn_pa_doc_sis = null;
                        } else {
                            try{
                                context.verror_pn_pa_doc_sis=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_pn_pa_doc_sis"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_pn_pa_doc_sis", e.getMessage()));
                                context.verror_pn_pa_doc_sis=null;
                            }
                        }
                        context.setContextType("verror_td_doc_sis", "id_Integer");
                        if(context.getStringValue("verror_td_doc_sis") == null) {
                            context.verror_td_doc_sis = null;
                        } else {
                            try{
                                context.verror_td_doc_sis=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_td_doc_sis"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_td_doc_sis", e.getMessage()));
                                context.verror_td_doc_sis=null;
                            }
                        }
                        context.setContextType("vtotal_registrados", "id_Integer");
                        if(context.getStringValue("vtotal_registrados") == null) {
                            context.vtotal_registrados = null;
                        } else {
                            try{
                                context.vtotal_registrados=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vtotal_registrados"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vtotal_registrados", e.getMessage()));
                                context.vtotal_registrados=null;
                            }
                        }
                        context.setContextType("vtotal_errores", "id_Integer");
                        if(context.getStringValue("vtotal_errores") == null) {
                            context.vtotal_errores = null;
                        } else {
                            try{
                                context.vtotal_errores=routines.system.ParserUtils.parseTo_Integer (context.getProperty("vtotal_errores"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "vtotal_errores", e.getMessage()));
                                context.vtotal_errores=null;
                            }
                        }
                        context.setContextType("verror_pn_pa_doc_arc", "id_Integer");
                        if(context.getStringValue("verror_pn_pa_doc_arc") == null) {
                            context.verror_pn_pa_doc_arc = null;
                        } else {
                            try{
                                context.verror_pn_pa_doc_arc=routines.system.ParserUtils.parseTo_Integer (context.getProperty("verror_pn_pa_doc_arc"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "verror_pn_pa_doc_arc", e.getMessage()));
                                context.verror_pn_pa_doc_arc=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (java.lang.String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_destino_ServiceName")) {
                context.db_destino_ServiceName = (String) parentContextMap.get("db_destino_ServiceName");
            }if (parentContextMap.containsKey("db_destino_AdditionalParams")) {
                context.db_destino_AdditionalParams = (String) parentContextMap.get("db_destino_AdditionalParams");
            }if (parentContextMap.containsKey("db_destino_Login")) {
                context.db_destino_Login = (String) parentContextMap.get("db_destino_Login");
            }if (parentContextMap.containsKey("db_destino_Port")) {
                context.db_destino_Port = (String) parentContextMap.get("db_destino_Port");
            }if (parentContextMap.containsKey("db_destino_Schema")) {
                context.db_destino_Schema = (String) parentContextMap.get("db_destino_Schema");
            }if (parentContextMap.containsKey("db_destino_Server")) {
                context.db_destino_Server = (String) parentContextMap.get("db_destino_Server");
            }if (parentContextMap.containsKey("db_destino_Password")) {
                context.db_destino_Password = (java.lang.String) parentContextMap.get("db_destino_Password");
            }if (parentContextMap.containsKey("Project")) {
                context.Project = (String) parentContextMap.get("Project");
            }if (parentContextMap.containsKey("server_destino")) {
                context.server_destino = (String) parentContextMap.get("server_destino");
            }if (parentContextMap.containsKey("user_origen")) {
                context.user_origen = (String) parentContextMap.get("user_origen");
            }if (parentContextMap.containsKey("user_destino")) {
                context.user_destino = (String) parentContextMap.get("user_destino");
            }if (parentContextMap.containsKey("context")) {
                context.context = (String) parentContextMap.get("context");
            }if (parentContextMap.containsKey("origen")) {
                context.origen = (String) parentContextMap.get("origen");
            }if (parentContextMap.containsKey("service_name_origen")) {
                context.service_name_origen = (String) parentContextMap.get("service_name_origen");
            }if (parentContextMap.containsKey("job")) {
                context.job = (String) parentContextMap.get("job");
            }if (parentContextMap.containsKey("message")) {
                context.message = (String) parentContextMap.get("message");
            }if (parentContextMap.containsKey("server_origen")) {
                context.server_origen = (String) parentContextMap.get("server_origen");
            }if (parentContextMap.containsKey("moment")) {
                context.moment = (String) parentContextMap.get("moment");
            }if (parentContextMap.containsKey("service_name_destino")) {
                context.service_name_destino = (String) parentContextMap.get("service_name_destino");
            }if (parentContextMap.containsKey("BODEGA")) {
                context.BODEGA = (String) parentContextMap.get("BODEGA");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("JOB")) {
                context.JOB = (String) parentContextMap.get("JOB");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("mail_SenderName")) {
                context.mail_SenderName = (String) parentContextMap.get("mail_SenderName");
            }if (parentContextMap.containsKey("mail_User")) {
                context.mail_User = (String) parentContextMap.get("mail_User");
            }if (parentContextMap.containsKey("mail_Message")) {
                context.mail_Message = (String) parentContextMap.get("mail_Message");
            }if (parentContextMap.containsKey("mail_To")) {
                context.mail_To = (String) parentContextMap.get("mail_To");
            }if (parentContextMap.containsKey("mail_SMTP_Port")) {
                context.mail_SMTP_Port = (String) parentContextMap.get("mail_SMTP_Port");
            }if (parentContextMap.containsKey("mail_Password")) {
                context.mail_Password = (String) parentContextMap.get("mail_Password");
            }if (parentContextMap.containsKey("mail_SMTP_Host")) {
                context.mail_SMTP_Host = (String) parentContextMap.get("mail_SMTP_Host");
            }if (parentContextMap.containsKey("mail_Subject")) {
                context.mail_Subject = (String) parentContextMap.get("mail_Subject");
            }if (parentContextMap.containsKey("UrlEndPointToken")) {
                context.UrlEndPointToken = (String) parentContextMap.get("UrlEndPointToken");
            }if (parentContextMap.containsKey("UrlActionSoapToken")) {
                context.UrlActionSoapToken = (String) parentContextMap.get("UrlActionSoapToken");
            }if (parentContextMap.containsKey("token")) {
                context.token = (String) parentContextMap.get("token");
            }if (parentContextMap.containsKey("UrlEndPointMasivo")) {
                context.UrlEndPointMasivo = (String) parentContextMap.get("UrlEndPointMasivo");
            }if (parentContextMap.containsKey("UrlActionSoapMasivo")) {
                context.UrlActionSoapMasivo = (String) parentContextMap.get("UrlActionSoapMasivo");
            }if (parentContextMap.containsKey("vafiarchivos_id")) {
                context.vafiarchivos_id = (Integer) parentContextMap.get("vafiarchivos_id");
            }if (parentContextMap.containsKey("vprocesos_id")) {
                context.vprocesos_id = (Integer) parentContextMap.get("vprocesos_id");
            }if (parentContextMap.containsKey("vusuarios_id")) {
                context.vusuarios_id = (Integer) parentContextMap.get("vusuarios_id");
            }if (parentContextMap.containsKey("vcount_registros")) {
                context.vcount_registros = (Integer) parentContextMap.get("vcount_registros");
            }if (parentContextMap.containsKey("vfinicio")) {
                context.vfinicio = (java.util.Date) parentContextMap.get("vfinicio");
            }if (parentContextMap.containsKey("vtarchivo_id")) {
                context.vtarchivo_id = (Integer) parentContextMap.get("vtarchivo_id");
            }if (parentContextMap.containsKey("mensaje")) {
                context.mensaje = (String) parentContextMap.get("mensaje");
            }if (parentContextMap.containsKey("verror_datos")) {
                context.verror_datos = (Integer) parentContextMap.get("verror_datos");
            }if (parentContextMap.containsKey("verror_estructura")) {
                context.verror_estructura = (Integer) parentContextMap.get("verror_estructura");
            }if (parentContextMap.containsKey("verror_nombres_fnac_arc")) {
                context.verror_nombres_fnac_arc = (Integer) parentContextMap.get("verror_nombres_fnac_arc");
            }if (parentContextMap.containsKey("vtotal_registros")) {
                context.vtotal_registros = (Integer) parentContextMap.get("vtotal_registros");
            }if (parentContextMap.containsKey("verror_td_doc_arc")) {
                context.verror_td_doc_arc = (Integer) parentContextMap.get("verror_td_doc_arc");
            }if (parentContextMap.containsKey("verror_nombres_fnac_sis")) {
                context.verror_nombres_fnac_sis = (Integer) parentContextMap.get("verror_nombres_fnac_sis");
            }if (parentContextMap.containsKey("verror_pn_pa_doc_sis")) {
                context.verror_pn_pa_doc_sis = (Integer) parentContextMap.get("verror_pn_pa_doc_sis");
            }if (parentContextMap.containsKey("verror_td_doc_sis")) {
                context.verror_td_doc_sis = (Integer) parentContextMap.get("verror_td_doc_sis");
            }if (parentContextMap.containsKey("vtotal_registrados")) {
                context.vtotal_registrados = (Integer) parentContextMap.get("vtotal_registrados");
            }if (parentContextMap.containsKey("vtotal_errores")) {
                context.vtotal_errores = (Integer) parentContextMap.get("vtotal_errores");
            }if (parentContextMap.containsKey("verror_pn_pa_doc_arc")) {
                context.verror_pn_pa_doc_arc = (Integer) parentContextMap.get("verror_pn_pa_doc_arc");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("db_origen_Password");
			parametersToEncrypt.add("db_destino_Password");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tREST_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tREST_1) {
globalMap.put("tREST_1_SUBPROCESS_STATE", -1);

e_tREST_1.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : CargueSiathMSV");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     3500666 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 11:13:11 AM COT
 ************************************************************************************************/